{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction LoginComponent_div_21_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_21_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" username must be at least 5 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_21_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" username must not exceed 20 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtemplate(1, LoginComponent_div_21_div_1_Template, 2, 0, \"div\", 31);\n    i0.ɵɵtemplate(2, LoginComponent_div_21_div_2_Template, 2, 0, \"div\", 31);\n    i0.ɵɵtemplate(3, LoginComponent_div_21_div_3_Template, 2, 0, \"div\", 31);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"username\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"username\"].errors[\"minlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"username\"].errors[\"maxlength\"]);\n  }\n}\nfunction LoginComponent_i_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 32);\n  }\n}\nfunction LoginComponent_div_32_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_32_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Password must be at least 6 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_32_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Username must not exceed 40 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtemplate(1, LoginComponent_div_32_div_1_Template, 2, 0, \"div\", 31);\n    i0.ɵɵtemplate(2, LoginComponent_div_32_div_2_Template, 2, 0, \"div\", 31);\n    i0.ɵɵtemplate(3, LoginComponent_div_32_div_3_Template, 2, 0, \"div\", 31);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f[\"password\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f[\"password\"].errors[\"minlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f[\"password\"].errors[\"maxlength\"]);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class LoginComponent {\n  constructor(router, formBuilder) {\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.submitted = false;\n    this.password = \"\";\n    this.loginForm = this.formBuilder.group({\n      username: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(20)]],\n      password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(40)]]\n    });\n  }\n  ngOnInit() {\n    this.password = 'password';\n  }\n  login() {\n    this.submitted = true;\n    if (this.loginForm.invalid) {\n      console.log('hee');\n      console.log(this.loginForm.invalid);\n    } else {\n      this.router.navigateByUrl('/admin/dashboard');\n    }\n  }\n  onSubmit() {\n    console.log(JSON.stringify(this.loginForm.value, null, 2));\n  }\n  get f() {\n    return this.loginForm.controls;\n  }\n  // <!-- Switching method -->\n  showhide() {\n    if (this.password === 'password') {\n      this.password = 'text';\n      this.show = true;\n    } else {\n      this.password = 'password';\n      this.show = false;\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 39,\n  vars: 7,\n  consts: [[1, \"container-fluid\", \"p-0\"], [1, \"logindiv\", \"px-2\"], [1, \"row\"], [1, \"col-sm-6\", \"emptyleft\"], [1, \"col-sm-6\", \"loginright\"], [1, \"col-sm-12\", \"col-lg-2\", \"col-md-1\"], [1, \"col-sm-12\", \"col-lg-8\", \"col-md-10\"], [1, \"card\", \"text-center\"], [1, \"text-center\", \"mb-3\"], [\"src\", \"assets\\\\images\\\\logo_sealed.png\", \"alt\", \"logo_sealed\", 1, \"logo\"], [1, \"card-body\", \"logincard\"], [1, \"d-block\", 2, \"padding\", \"1rem\"], [1, \"row\", \"px-3\"], [3, \"formGroup\", \"ngsubmit\"], [1, \"text-center\"], [1, \"col-sm-12\"], [1, \"input-group\", \"user\"], [1, \"loginicon\"], [1, \"fa\", \"fa-user\", \"fa-lg\"], [\"type\", \"text\", \"formControlName\", \"username\", \"placeholder\", \"UserName\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback ml-2\", 4, \"ngIf\"], [1, \"input-group\"], [1, \"fa\", \"fa-lock\", \"fa-lg\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Password\", 1, \"form-control\"], [1, \"loginicon\", \"input-group-append\", 2, \"border-radius\", \"0px 8px 8px 0px\"], [2, \"border\", \"none\", \"color\", \"#B3B2B2\", \"font-size\", \"12px\", \"background\", \"#ebf0f6\"], [\"class\", \"fa fa-eye\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"false\", 1, \"fa\", \"fa-eye-slash\"], [1, \"mt-2\"], [1, \"login\", 3, \"click\"], [1, \"invalid-feedback\", \"ml-2\"], [4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-eye\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"div\", 3);\n      i0.ɵɵelementStart(4, \"div\", 4);\n      i0.ɵɵelement(5, \"div\", 5);\n      i0.ɵɵelementStart(6, \"div\", 6)(7, \"div\", 7)(8, \"div\", 8);\n      i0.ɵɵelement(9, \"img\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 10);\n      i0.ɵɵelement(11, \"div\", 11);\n      i0.ɵɵelementStart(12, \"div\", 12)(13, \"form\", 13);\n      i0.ɵɵlistener(\"ngsubmit\", function LoginComponent_Template_form_ngsubmit_13_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(14, \"div\", 14)(15, \"div\", 15)(16, \"div\", 16)(17, \"span\", 17);\n      i0.ɵɵelement(18, \"i\", 18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"br\");\n      i0.ɵɵtemplate(21, LoginComponent_div_21_Template, 4, 3, \"div\", 20);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 15)(23, \"div\", 21)(24, \"span\", 17);\n      i0.ɵɵelement(25, \"i\", 22);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"input\", 23);\n      i0.ɵɵelementStart(27, \"div\", 24)(28, \"button\", 25);\n      i0.ɵɵtemplate(29, LoginComponent_i_29_Template, 1, 0, \"i\", 26);\n      i0.ɵɵelement(30, \"i\", 27);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(31, \"br\");\n      i0.ɵɵtemplate(32, LoginComponent_div_32_Template, 4, 3, \"div\", 20);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"div\", 15)(34, \"div\", 14)(35, \"div\", 28)(36, \"button\", 29);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_36_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵtext(37, \" LOGIN\");\n      i0.ɵɵelementEnd()()()()()()()()()();\n      i0.ɵɵelement(38, \"div\", 5);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ctx.submitted && ctx.f[\"username\"].errors));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"username\"].errors);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ctx.show);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"password\"].errors);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 805:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/sass-loader/dist/cjs.js):\\\\nSassError: expected more input.\\\\n    \\u2577\\\\n116 \\u2502         }\\\\r\\\\n    \\u2502          ^\\\\n    \\u2575\\\\n  src\\\\\\\\app\\\\\\\\login\\\\\\\\login.component.scss 116:10  root stylesheet\\\");\\n\\n })\\n\\n \\t})[_ngcontent-%COMP%];\\n\\n \\t\\n \\t//[_ngcontent-%COMP%]   startup[_ngcontent-%COMP%]   //[_ngcontent-%COMP%]   Load[_ngcontent-%COMP%]   entry[_ngcontent-%COMP%]   module[_ngcontent-%COMP%]   and[_ngcontent-%COMP%]   return[_ngcontent-%COMP%]   exports[_ngcontent-%COMP%]   //[_ngcontent-%COMP%]   This[_ngcontent-%COMP%]   entry[_ngcontent-%COMP%]   module[_ngcontent-%COMP%]   doesn't[_ngcontent-%COMP%]   tell[_ngcontent-%COMP%]   about[_ngcontent-%COMP%]   it's[_ngcontent-%COMP%]   top-level[_ngcontent-%COMP%]   declarations[_ngcontent-%COMP%]   so[_ngcontent-%COMP%]   it[_ngcontent-%COMP%]   can't[_ngcontent-%COMP%]   be[_ngcontent-%COMP%]   inlined[_ngcontent-%COMP%]   var[_ngcontent-%COMP%]   __webpack_exports__[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] {};\\n \\t__webpack_modules__[805]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","LoginComponent","constructor","router","formBuilder","loginForm","group","username","required","minLength","maxLength","password","ngOnInit","login","submitted","invalid","console","log","navigateByUrl","onSubmit","JSON","stringify","value","f","controls","showhide","show","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Ani\\Documents\\GitHub\\github\\sealed_dashboard\\sealed-admin\\src\\app\\login\\login.component.ts","C:\\Users\\Ani\\Documents\\GitHub\\github\\sealed_dashboard\\sealed-admin\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, AbstractControl,Validators, FormBuilder }  from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit{\n\n  loginForm:any;\n  submitted = false;\n \n  password: string=\"\";\n \n  show: any;\n\n \n\nconstructor(private router:Router,private formBuilder:FormBuilder){\n\n\n  this.loginForm = this.formBuilder.group({\n    username: ['',[Validators.required,Validators.minLength(5),Validators.maxLength(20)]],\n\n   password: ['',[Validators.required,Validators.minLength(6),Validators.maxLength(40)]]\n    });\n}\n\n\n  ngOnInit(){\nthis.password ='password'\n  }\n\n\n  login(){\n   this.submitted= true;\n\n    if (this.loginForm.invalid){\n      console.log('hee');\n      console.log(this.loginForm.invalid);\n\n    }\n    else{\n      this.router.navigateByUrl('/admin/dashboard');\n      \n    }\n  }\n\n  onSubmit(){\nconsole.log(JSON.stringify(this.loginForm.value, null ,2));\n  }\n\n  get f() {\n    return this.loginForm.controls;\n  }\n// <!-- Switching method -->\n showhide() {\n    if (this.password === 'password') {\n      this.password = 'text';\n      this.show = true;\n    } else {\n      this.password = 'password';\n      this.show = false;\n    }\n  }\n\n}\n","<div class=\"container-fluid  p-0\">\n    <div class=\"logindiv px-2\">\n        <div class=\"row\">\n\n\n\n\n            <div class=\"col-sm-6 emptyleft \">\n\n            </div>\n            <div class=\"col-sm-6 loginright \">\n                <div class=\"col-sm-12 col-lg-2 col-md-1\"></div>\n                <div class=\"col-sm-12 col-lg-8 col-md-10\">\n                    <div class=\"card text-center\">\n                        <div class=\"text-center mb-3\">\n                            <img class=\"logo\" src=\"assets\\images\\logo_sealed.png\" alt=\"logo_sealed\">\n                        </div>\n                        \n                        <div class=\"card-body logincard \">\n                            \n                            <div class=\"d-block\"style=\"padding:1rem;\"></div>\n                            <div class=\"row px-3\">\n                                <form [formGroup]=\"loginForm\" (ngsubmit)=\"onSubmit()\">\n                                <div class=\"text-center\">\n\n\n                                <div class=\"col-sm-12\">\n                                    <div class=\"input-group user\">\n                                        <span class=\"loginicon\"> <i class=\"fa fa-user fa-lg\"></i></span>\n                                        <input type=\"text\" formControlName='username' class=\"form-control\" placeholder=\"UserName\"\n                                        [ngClass]=\"{'is-invalid':submitted && f['username'].errors}\">\n                                        \n                                    </div>\n                                    <br>\n                                    <div *ngIf=\"submitted && f['username'].errors\" class=\"invalid-feedback ml-2\">\n                                        <div *ngIf=\"f['username'].errors['required']\"> username is required</div>\n                                        <div *ngIf=\"f['username'].errors['minlength']\">\n                                            username must be at least 5 characters\n                                        </div>\n                                        <div *ngIf=\"f['username'].errors['maxlength']\">\n                                            username must not exceed 20 characters\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"col-sm-12\">\n                                    <div class=\"input-group\">\n                                        <span class=\"loginicon\"> <i class=\"fa fa-lock fa-lg\"></i></span>\n                                        <input type=\"password\" formControlName='password' class=\"form-control\"\n                                            placeholder=\"Password\">\n\n                                        <div class=\"loginicon input-group-append\"\n                                            style=\"border-radius: 0px 8px 8px 0px;\">\n                                            <button\n                                                style=\"border: none;color: #B3B2B2;font-size: 12px;background: #ebf0f6;\">\n                                                <i class=\"fa fa-eye\" aria-hidden=\"true\" *ngIf=\"show\"></i>\n                                                <i class=\"fa fa-eye-slash\" aria-hidden=\"false\" ></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <br>\n                                    <div *ngIf=\"submitted && f['password'].errors\" class=\"invalid-feedback ml-2\">\n                                        <div *ngIf=\"f['password'].errors['required']\">Password is required</div>\n                                        <div *ngIf=\"f['password'].errors['minlength']\">\n                                            Password must be at least 6 characters\n                                        </div>\n                                        <div *ngIf=\"f['password'].errors['maxlength']\">\n                                            Username must not exceed 40 characters\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"col-sm-12\">\n                                    <div class=\"text-center\">\n                                        <div class=\" mt-2\">\n\n                                            <button class=\"login\" (click)=\"login()\">\n                                                LOGIN</button>\n\n\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                            </form>\n                            </div>\n\n                        \n\n\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-sm-12 col-lg-2 col-md-1\"></div>\n\n            </div>\n        </div>\n    </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}