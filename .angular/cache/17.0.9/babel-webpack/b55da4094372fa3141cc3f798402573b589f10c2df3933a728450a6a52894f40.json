{"ast":null,"code":"/**\r\n * Bullet module\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Bullet } from \"./Bullet\";\nimport { Label } from \"../../core/elements/Label\";\nimport { registry } from \"../../core/Registry\";\nimport { color } from \"../../core/utils/Color\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Creates a bullet with a textual label.\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\nvar LabelBullet = /** @class */function (_super) {\n  __extends(LabelBullet, _super);\n  /**\r\n   * Constructor\r\n   */\n  function LabelBullet() {\n    var _this = _super.call(this) || this;\n    _this.className = \"LabelBullet\";\n    var label = _this.createChild(Label);\n    label.shouldClone = false;\n    label.verticalCenter = \"middle\";\n    label.horizontalCenter = \"middle\";\n    label.truncate = true;\n    label.hideOversized = false;\n    label.maxWidth = 500;\n    label.maxHeight = 500;\n    label.stroke = color();\n    label.strokeOpacity = 0;\n    label.fill = new InterfaceColorSet().getFor(\"text\");\n    _this.events.on(\"maxsizechanged\", _this.handleMaxSize, _this, false);\n    _this.label = label;\n    // not good, as lineSeries will have labels somewhere in the middle.\n    //this.locationX = 0.5;\n    //this.locationY = 0.5;\n    _this.applyTheme();\n    return _this;\n  }\n  LabelBullet.prototype.handleMaxSize = function () {\n    this.label.maxWidth = this.maxWidth;\n    this.label.maxHeight = this.maxHeight;\n  };\n  /**\r\n   * Copies all proprities and related stuff from another instance of\r\n   * [[LabelBullet]].\r\n   *\r\n   * @param source  Source element\r\n   */\n  LabelBullet.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n    this.label.copyFrom(source.label);\n  };\n  return LabelBullet;\n}(Bullet);\nexport { LabelBullet };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"LabelBullet\"] = LabelBullet;","map":{"version":3,"names":["__extends","Bullet","Label","registry","color","InterfaceColorSet","LabelBullet","_super","_this","call","className","label","createChild","shouldClone","verticalCenter","horizontalCenter","truncate","hideOversized","maxWidth","maxHeight","stroke","strokeOpacity","fill","getFor","events","on","handleMaxSize","applyTheme","prototype","copyFrom","source","registeredClasses"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/charts/elements/LabelBullet.js"],"sourcesContent":["/**\r\n * Bullet module\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Bullet } from \"./Bullet\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a bullet with a textual label.\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nvar LabelBullet = /** @class */ (function (_super) {\r\n    __extends(LabelBullet, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function LabelBullet() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"LabelBullet\";\r\n        var label = _this.createChild(Label);\r\n        label.shouldClone = false;\r\n        label.verticalCenter = \"middle\";\r\n        label.horizontalCenter = \"middle\";\r\n        label.truncate = true;\r\n        label.hideOversized = false;\r\n        label.maxWidth = 500;\r\n        label.maxHeight = 500;\r\n        label.stroke = color();\r\n        label.strokeOpacity = 0;\r\n        label.fill = new InterfaceColorSet().getFor(\"text\");\r\n        _this.events.on(\"maxsizechanged\", _this.handleMaxSize, _this, false);\r\n        _this.label = label;\r\n        // not good, as lineSeries will have labels somewhere in the middle.\r\n        //this.locationX = 0.5;\r\n        //this.locationY = 0.5;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    LabelBullet.prototype.handleMaxSize = function () {\r\n        this.label.maxWidth = this.maxWidth;\r\n        this.label.maxHeight = this.maxHeight;\r\n    };\r\n    /**\r\n     * Copies all proprities and related stuff from another instance of\r\n     * [[LabelBullet]].\r\n     *\r\n     * @param source  Source element\r\n     */\r\n    LabelBullet.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.label.copyFrom(source.label);\r\n    };\r\n    return LabelBullet;\r\n}(Bullet));\r\nexport { LabelBullet };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"LabelBullet\"] = LabelBullet;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,KAAK,QAAQ,2BAA2B;AACjD,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,SAASC,KAAK,QAAQ,wBAAwB;AAC9C,SAASC,iBAAiB,QAAQ,oCAAoC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,WAAW,GAAG,aAAe,UAAUC,MAAM,EAAE;EAC/CP,SAAS,CAACM,WAAW,EAAEC,MAAM,CAAC;EAC9B;AACJ;AACA;EACI,SAASD,WAAWA,CAAA,EAAG;IACnB,IAAIE,KAAK,GAAGD,MAAM,CAACE,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI;IACrCD,KAAK,CAACE,SAAS,GAAG,aAAa;IAC/B,IAAIC,KAAK,GAAGH,KAAK,CAACI,WAAW,CAACV,KAAK,CAAC;IACpCS,KAAK,CAACE,WAAW,GAAG,KAAK;IACzBF,KAAK,CAACG,cAAc,GAAG,QAAQ;IAC/BH,KAAK,CAACI,gBAAgB,GAAG,QAAQ;IACjCJ,KAAK,CAACK,QAAQ,GAAG,IAAI;IACrBL,KAAK,CAACM,aAAa,GAAG,KAAK;IAC3BN,KAAK,CAACO,QAAQ,GAAG,GAAG;IACpBP,KAAK,CAACQ,SAAS,GAAG,GAAG;IACrBR,KAAK,CAACS,MAAM,GAAGhB,KAAK,CAAC,CAAC;IACtBO,KAAK,CAACU,aAAa,GAAG,CAAC;IACvBV,KAAK,CAACW,IAAI,GAAG,IAAIjB,iBAAiB,CAAC,CAAC,CAACkB,MAAM,CAAC,MAAM,CAAC;IACnDf,KAAK,CAACgB,MAAM,CAACC,EAAE,CAAC,gBAAgB,EAAEjB,KAAK,CAACkB,aAAa,EAAElB,KAAK,EAAE,KAAK,CAAC;IACpEA,KAAK,CAACG,KAAK,GAAGA,KAAK;IACnB;IACA;IACA;IACAH,KAAK,CAACmB,UAAU,CAAC,CAAC;IAClB,OAAOnB,KAAK;EAChB;EACAF,WAAW,CAACsB,SAAS,CAACF,aAAa,GAAG,YAAY;IAC9C,IAAI,CAACf,KAAK,CAACO,QAAQ,GAAG,IAAI,CAACA,QAAQ;IACnC,IAAI,CAACP,KAAK,CAACQ,SAAS,GAAG,IAAI,CAACA,SAAS;EACzC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIb,WAAW,CAACsB,SAAS,CAACC,QAAQ,GAAG,UAAUC,MAAM,EAAE;IAC/CvB,MAAM,CAACqB,SAAS,CAACC,QAAQ,CAACpB,IAAI,CAAC,IAAI,EAAEqB,MAAM,CAAC;IAC5C,IAAI,CAACnB,KAAK,CAACkB,QAAQ,CAACC,MAAM,CAACnB,KAAK,CAAC;EACrC,CAAC;EACD,OAAOL,WAAW;AACtB,CAAC,CAACL,MAAM,CAAE;AACV,SAASK,WAAW;AACpB;AACA;AACA;AACA;AACA;AACA;AACAH,QAAQ,CAAC4B,iBAAiB,CAAC,aAAa,CAAC,GAAGzB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}