{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, InjectionToken, Directive, Input, HostListener, Component, Pipe, Inject, Optional, EventEmitter, ViewChild, Output, ChangeDetectionStrategy, ContentChild, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { BehaviorSubject, Subject, merge } from 'rxjs';\nimport { shareReplay, tap, debounceTime, distinctUntilChanged, filter, takeUntil, map } from 'rxjs/operators';\nimport { trigger, transition, style, animate, sequence } from '@angular/animations';\nimport { DateTime, Info } from 'luxon';\nimport * as i4 from '@angular/forms';\nimport { FormControl, NG_VALUE_ACCESSOR, FormsModule, ReactiveFormsModule } from '@angular/forms';\nfunction NgxMaterialTimepickerContentComponent_div_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction NgxMaterialTimepickerContentComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtemplate(1, NgxMaterialTimepickerContentComponent_div_0_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    const _r4 = i0.ɵɵreference(4);\n    i0.ɵɵproperty(\"ngxAppendToInput\", ctx_r0.inputElement);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r4);\n  }\n}\nfunction NgxMaterialTimepickerContentComponent_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction NgxMaterialTimepickerContentComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NgxMaterialTimepickerContentComponent_ng_template_1_ng_container_0_Template, 1, 0, \"ng-container\", 4);\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r4 = i0.ɵɵreference(4);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r4);\n  }\n}\nfunction NgxMaterialTimepickerContentComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nconst _c0 = [\"*\"];\nconst _c1 = [\"editableTimeTmpl\"];\nconst _c2 = a0 => ({\n  \"timepicker-dial__item_active\": a0\n});\nfunction NgxMaterialTimepickerDialControlComponent_input_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 2);\n    i0.ɵɵlistener(\"ngModelChange\", function NgxMaterialTimepickerDialControlComponent_input_0_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.time = $event);\n    })(\"input\", function NgxMaterialTimepickerDialControlComponent_input_0_Template_input_input_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.updateTime());\n    })(\"focus\", function NgxMaterialTimepickerDialControlComponent_input_0_Template_input_focus_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.saveTimeAndChangeTimeUnit($event, ctx_r6.timeUnit));\n    });\n    i0.ɵɵpipe(1, \"timeLocalizer\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c2, ctx_r0.isActive))(\"ngModel\", i0.ɵɵpipeBind2(1, 4, ctx_r0.time, ctx_r0.timeUnit))(\"disabled\", ctx_r0.disabled)(\"timepickerAutofocus\", ctx_r0.isActive);\n  }\n}\nfunction NgxMaterialTimepickerDialControlComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 3, 4);\n    i0.ɵɵlistener(\"focus\", function NgxMaterialTimepickerDialControlComponent_ng_template_1_Template_input_focus_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.saveTimeAndChangeTimeUnit($event, ctx_r8.timeUnit));\n    })(\"keydown\", function NgxMaterialTimepickerDialControlComponent_ng_template_1_Template_input_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onKeydown($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formControl\", ctx_r1.timeControl)(\"ngClass\", i0.ɵɵpureFunction1(3, _c2, ctx_r1.isActive))(\"timepickerAutofocus\", ctx_r1.isActive);\n  }\n}\nfunction NgxMaterialTimepickerPeriodComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵlistener(\"@scaleInOut.done\", function NgxMaterialTimepickerPeriodComponent_div_5_Template_div_animation_scaleInOut_done_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.animationDone());\n    });\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2, \"Current time would be invalid in this period.\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"@scaleInOut\", undefined);\n  }\n}\nfunction NgxMaterialTimepickerDialComponent_div_8_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction NgxMaterialTimepickerDialComponent_div_8_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 10);\n    i0.ɵɵtext(1, \" * use arrows (\");\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3, \"\\u21C5\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \") to change the time\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c3 = a0 => ({\n  \"timepicker-dial__hint-container--hidden\": a0\n});\nfunction NgxMaterialTimepickerDialComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtemplate(1, NgxMaterialTimepickerDialComponent_div_8_ng_container_1_Template, 1, 0, \"ng-container\", 8)(2, NgxMaterialTimepickerDialComponent_div_8_ng_template_2_Template, 5, 0, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r3 = i0.ɵɵreference(3);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c3, !ctx_r0.isHintVisible));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.editableHintTmpl ? ctx_r0.editableHintTmpl : _r3);\n  }\n}\nconst _c4 = a0 => ({\n  \"timepicker-dial__period--hidden\": a0\n});\nconst _c5 = [\"clockFace\"];\nconst _c6 = [\"clockHand\"];\nconst _c7 = a0 => ({\n  \"transform\": a0\n});\nconst _c8 = (a0, a1) => ({\n  \"active\": a0,\n  \"disabled\": a1\n});\nfunction NgxMaterialTimepickerFaceComponent_div_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"span\", 10);\n    i0.ɵɵpipe(2, \"activeHour\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"timeLocalizer\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const time_r7 = ctx.$implicit;\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(11, _c7, \"rotateZ(\" + time_r7.angle + \"deg) translateX(-50%)\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(13, _c7, \"rotateZ(-\" + time_r7.angle + \"deg)\"))(\"ngClass\", i0.ɵɵpureFunction2(15, _c8, i0.ɵɵpipeBind3(2, 4, time_r7.time, ctx_r5.selectedTime.time, ctx_r5.isClockFaceDisabled), time_r7.disabled));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(4, 8, time_r7.time, ctx_r5.timeUnit.HOUR), \" \");\n  }\n}\nfunction NgxMaterialTimepickerFaceComponent_div_2_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"span\", 10);\n    i0.ɵɵpipe(2, \"activeHour\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"timeLocalizer\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const time_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(3);\n    i0.ɵɵstyleProp(\"height\", ctx_r8.innerClockFaceSize, \"px\");\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(13, _c7, \"rotateZ(\" + time_r9.angle + \"deg) translateX(-50%)\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(15, _c7, \"rotateZ(-\" + time_r9.angle + \"deg)\"))(\"ngClass\", i0.ɵɵpureFunction2(17, _c8, i0.ɵɵpipeBind3(2, 6, time_r9.time, ctx_r8.selectedTime == null ? null : ctx_r8.selectedTime.time, ctx_r8.isClockFaceDisabled), time_r9.disabled));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(4, 10, time_r9.time, ctx_r8.timeUnit.HOUR), \"\");\n  }\n}\nfunction NgxMaterialTimepickerFaceComponent_div_2_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, NgxMaterialTimepickerFaceComponent_div_2_div_3_div_1_Template, 5, 20, \"div\", 12);\n    i0.ɵɵpipe(2, \"slice\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"top\", \"calc(50% - \" + ctx_r6.innerClockFaceSize + \"px)\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(2, 4, ctx_r6.faceTime, 12, 24))(\"ngForTrackBy\", ctx_r6.trackByTime);\n  }\n}\nfunction NgxMaterialTimepickerFaceComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtemplate(1, NgxMaterialTimepickerFaceComponent_div_2_div_1_Template, 5, 18, \"div\", 7);\n    i0.ɵɵpipe(2, \"slice\");\n    i0.ɵɵtemplate(3, NgxMaterialTimepickerFaceComponent_div_2_div_3_Template, 3, 8, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(2, 3, ctx_r1.faceTime, 0, 12))(\"ngForTrackBy\", ctx_r1.trackByTime);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.faceTime.length > 12);\n  }\n}\nfunction NgxMaterialTimepickerFaceComponent_ng_template_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"span\", 10);\n    i0.ɵɵpipe(2, \"activeMinute\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"timeLocalizer\");\n    i0.ɵɵpipe(5, \"minutesFormatter\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const time_r11 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(15, _c7, \"rotateZ(\" + time_r11.angle + \"deg) translateX(-50%)\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(17, _c7, \"rotateZ(-\" + time_r11.angle + \"deg)\"))(\"ngClass\", i0.ɵɵpureFunction2(19, _c8, i0.ɵɵpipeBind4(2, 4, time_r11.time, ctx_r10.selectedTime == null ? null : ctx_r10.selectedTime.time, ctx_r10.minutesGap, ctx_r10.isClockFaceDisabled), time_r11.disabled));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(4, 9, i0.ɵɵpipeBind2(5, 12, time_r11.time, ctx_r10.minutesGap), ctx_r10.timeUnit.MINUTE), \"\");\n  }\n}\nfunction NgxMaterialTimepickerFaceComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtemplate(1, NgxMaterialTimepickerFaceComponent_ng_template_5_div_1_Template, 6, 22, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.faceTime)(\"ngForTrackBy\", ctx_r3.trackByTime);\n  }\n}\nconst _c9 = a0 => ({\n  \"clock-face__clock-hand_minute\": a0\n});\nfunction NgxMaterialTimepickerContainerComponent_div_11_ngx_material_timepicker_24_hours_face_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ngx-material-timepicker-24-hours-face\", 17);\n    i0.ɵɵlistener(\"hourChange\", function NgxMaterialTimepickerContainerComponent_div_11_ngx_material_timepicker_24_hours_face_1_Template_ngx_material_timepicker_24_hours_face_hourChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.onHourChange($event));\n    })(\"hourSelected\", function NgxMaterialTimepickerContainerComponent_div_11_ngx_material_timepicker_24_hours_face_1_Template_ngx_material_timepicker_24_hours_face_hourSelected_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onHourSelected($event));\n    });\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"selectedHour\", i0.ɵɵpipeBind1(1, 4, ctx_r8.selectedHour))(\"minTime\", ctx_r8.minTime)(\"maxTime\", ctx_r8.maxTime)(\"format\", ctx_r8.format);\n  }\n}\nfunction NgxMaterialTimepickerContainerComponent_div_11_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ngx-material-timepicker-12-hours-face\", 18);\n    i0.ɵɵlistener(\"hourChange\", function NgxMaterialTimepickerContainerComponent_div_11_ng_template_2_Template_ngx_material_timepicker_12_hours_face_hourChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onHourChange($event));\n    })(\"hourSelected\", function NgxMaterialTimepickerContainerComponent_div_11_ng_template_2_Template_ngx_material_timepicker_12_hours_face_hourSelected_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.onHourSelected($event));\n    });\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"selectedHour\", i0.ɵɵpipeBind1(1, 4, ctx_r9.selectedHour))(\"period\", i0.ɵɵpipeBind1(2, 6, ctx_r9.selectedPeriod))(\"minTime\", ctx_r9.minTime)(\"maxTime\", ctx_r9.maxTime);\n  }\n}\nfunction NgxMaterialTimepickerContainerComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, NgxMaterialTimepickerContainerComponent_div_11_ngx_material_timepicker_24_hours_face_1_Template, 2, 6, \"ngx-material-timepicker-24-hours-face\", 15)(2, NgxMaterialTimepickerContainerComponent_div_11_ng_template_2_Template, 3, 8, \"ng-template\", null, 16, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r10 = i0.ɵɵreference(3);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.format === 24)(\"ngIfElse\", _r10);\n  }\n}\nfunction NgxMaterialTimepickerContainerComponent_ngx_material_timepicker_minutes_face_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ngx-material-timepicker-minutes-face\", 19);\n    i0.ɵɵlistener(\"minuteChange\", function NgxMaterialTimepickerContainerComponent_ngx_material_timepicker_minutes_face_12_Template_ngx_material_timepicker_minutes_face_minuteChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.onMinuteChange($event));\n    });\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵpipe(3, \"async\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    i0.ɵɵproperty(\"selectedMinute\", i0.ɵɵpipeBind1(1, 7, ctx_r1.selectedMinute))(\"selectedHour\", (tmp_1_0 = i0.ɵɵpipeBind1(2, 9, ctx_r1.selectedHour)) == null ? null : tmp_1_0.time)(\"minTime\", ctx_r1.minTime)(\"maxTime\", ctx_r1.maxTime)(\"format\", ctx_r1.format)(\"period\", i0.ɵɵpipeBind1(3, 11, ctx_r1.selectedPeriod))(\"minutesGap\", ctx_r1.minutesGap);\n  }\n}\nfunction NgxMaterialTimepickerContainerComponent_ng_container_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction NgxMaterialTimepickerContainerComponent_ng_container_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction NgxMaterialTimepickerContainerComponent_ng_template_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ngx-material-timepicker-button\");\n    i0.ɵɵtext(1, \"Cancel\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NgxMaterialTimepickerContainerComponent_ng_template_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ngx-material-timepicker-button\");\n    i0.ɵɵtext(1, \"Ok\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c10 = a0 => ({\n  \"timepicker-backdrop-overlay--transparent\": a0\n});\nfunction NgxMaterialTimepickerToggleComponent__svg_svg_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 2);\n    i0.ɵɵelement(1, \"path\", 3);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c11 = [[[\"\", \"ngxMaterialTimepickerToggleIcon\", \"\"]]];\nconst _c12 = [\"[ngxMaterialTimepickerToggleIcon]\"];\nconst _c13 = a0 => ({\n  \"ngx-timepicker-control--active\": a0\n});\nconst _c14 = a0 => ({\n  \"period-selector__button--active\": a0\n});\nfunction NgxTimepickerPeriodSelectorComponent_ul_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ul\", 6)(1, \"li\")(2, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function NgxTimepickerPeriodSelectorComponent_ul_7_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.select(ctx_r2.period.AM));\n    });\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"li\")(5, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function NgxTimepickerPeriodSelectorComponent_ul_7_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.select(ctx_r4.period.PM));\n    });\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@scaleInOut\", undefined)(\"timepickerAutofocus\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c14, ctx_r0.localizedPeriod === ctx_r0.meridiems[0]));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.meridiems[0]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c14, ctx_r0.localizedPeriod === ctx_r0.meridiems[1]));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.meridiems[1]);\n  }\n}\nfunction NgxTimepickerPeriodSelectorComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵlistener(\"click\", function NgxTimepickerPeriodSelectorComponent_div_8_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.backdropClick());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c15 = a0 => ({\n  \"period-control__button--disabled\": a0\n});\nfunction NgxTimepickerFieldComponent_ngx_timepicker_period_selector_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ngx-timepicker-period-selector\", 9);\n    i0.ɵɵlistener(\"periodSelected\", function NgxTimepickerFieldComponent_ngx_timepicker_period_selector_7_Template_ngx_timepicker_period_selector_periodSelected_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.changePeriod($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"selectedPeriod\", ctx_r0.period)(\"disabled\", ctx_r0.disabled || ctx_r0.isChangePeriodDisabled);\n  }\n}\nfunction NgxTimepickerFieldComponent_ngx_material_timepicker_toggle_8_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c16 = a0 => ({\n  \"ngx-timepicker__toggle--left\": a0\n});\nfunction NgxTimepickerFieldComponent_ngx_material_timepicker_toggle_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ngx-material-timepicker-toggle\", 10)(1, \"span\", 11);\n    i0.ɵɵtemplate(2, NgxTimepickerFieldComponent_ngx_material_timepicker_toggle_8_ng_container_2_Template, 1, 0, \"ng-container\", 12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    const _r2 = i0.ɵɵreference(10);\n    const _r4 = i0.ɵɵreference(12);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c16, ctx_r1.buttonAlign === \"left\"))(\"for\", _r2)(\"disabled\", ctx_r1.disabled);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.toggleIcon || _r4);\n  }\n}\nfunction NgxTimepickerFieldComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 13);\n    i0.ɵɵelement(1, \"path\", 14);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c17 = a0 => ({\n  \"ngx-timepicker--disabled\": a0\n});\nvar TimeUnit;\n(function (TimeUnit) {\n  TimeUnit[TimeUnit[\"HOUR\"] = 0] = \"HOUR\";\n  TimeUnit[TimeUnit[\"MINUTE\"] = 1] = \"MINUTE\";\n})(TimeUnit || (TimeUnit = {}));\nvar TimePeriod;\n(function (TimePeriod) {\n  TimePeriod[\"AM\"] = \"AM\";\n  TimePeriod[\"PM\"] = \"PM\";\n})(TimePeriod || (TimePeriod = {}));\nvar TimeFormat;\n(function (TimeFormat) {\n  TimeFormat[\"TWELVE\"] = \"hh:mm a\";\n  TimeFormat[\"TWELVE_SHORT\"] = \"h:m a\";\n  TimeFormat[\"TWENTY_FOUR\"] = \"HH:mm\";\n  TimeFormat[\"TWENTY_FOUR_SHORT\"] = \"H:m\";\n})(TimeFormat || (TimeFormat = {}));\nfunction isSameOrAfter(time, compareWith, unit = 'minutes') {\n  if (unit === 'hours') {\n    return time.hour >= compareWith.hour;\n  }\n  if (unit === 'minutes') {\n    return time.hasSame(compareWith, unit) || time.valueOf() > compareWith.valueOf();\n  }\n}\nfunction isSameOrBefore(time, compareWith, unit = 'minutes') {\n  if (unit === 'hours') {\n    return time.hour <= compareWith.hour;\n  }\n  if (unit === 'minutes') {\n    return time.hasSame(compareWith, unit) || time.valueOf() <= compareWith.valueOf();\n  }\n}\nfunction isBetween(time, before, after, unit = 'minutes') {\n  if (unit === 'hours') {\n    return isSameOrBefore(time, after, unit) && isSameOrAfter(time, before, unit);\n  }\n  if (unit === 'minutes') {\n    return isSameOrBefore(time, after) && isSameOrAfter(time, before);\n  }\n}\nfunction isDigit(e) {\n  // Allow: backspace, delete, tab, escape, enter\n  if ([46, 8, 9, 27, 13].some(n => n === e.keyCode) ||\n  // Allow: Ctrl/cmd+A\n  e.keyCode == 65 && (e.ctrlKey === true || e.metaKey === true) ||\n  // Allow: Ctrl/cmd+C\n  e.keyCode == 67 && (e.ctrlKey === true || e.metaKey === true) ||\n  // Allow: Ctrl/cmd+X\n  e.keyCode == 88 && (e.ctrlKey === true || e.metaKey === true) ||\n  // Allow: home, end, left, right, up, down\n  e.keyCode >= 35 && e.keyCode <= 40) {\n    return true;\n  }\n  return !((e.keyCode < 48 || e.keyCode > 57) && (e.keyCode < 96 || e.keyCode > 105));\n}\n\n// @dynamic\nclass TimeAdapter {\n  static parseTime(time, opts) {\n    const {\n      numberingSystem,\n      locale\n    } = TimeAdapter.getLocaleOptionsByTime(time, opts);\n    const isPeriodExist = time.split(' ').length === 2;\n    const timeMask = isPeriodExist ? TimeFormat.TWELVE_SHORT : TimeFormat.TWENTY_FOUR_SHORT;\n    return DateTime.fromFormat(time, timeMask, {\n      numberingSystem,\n      locale\n    });\n  }\n  static formatTime(time, opts) {\n    if (!time) {\n      return 'Invalid Time';\n    }\n    const {\n      format\n    } = opts;\n    const parsedTime = TimeAdapter.parseTime(time, opts).setLocale(TimeAdapter.DEFAULT_LOCALE);\n    if (!parsedTime.isValid) {\n      return null;\n    }\n    if (format !== 24) {\n      return parsedTime.toLocaleString(Object.assign(Object.assign({}, DateTime.TIME_SIMPLE), {\n        hour12: format !== 24,\n        numberingSystem: TimeAdapter.DEFAULT_NUMBERING_SYSTEM\n      })).replace(/\\u200E/g, '').replace(/\\u202F/g, ' ');\n    }\n    return parsedTime.toISOTime({\n      includeOffset: false,\n      suppressMilliseconds: true,\n      suppressSeconds: true\n    }).replace(/\\u200E/g, '').replace(/\\u202F/g, ' ');\n  }\n  static toLocaleTimeString(time, opts = {}) {\n    const {\n      format = TimeAdapter.DEFAULT_FORMAT,\n      locale = TimeAdapter.DEFAULT_LOCALE\n    } = opts;\n    const hourCycle = format === 24 ? 'h23' : 'h12';\n    const timeFormat = Object.assign(Object.assign({}, DateTime.TIME_SIMPLE), {\n      hourCycle\n    });\n    const timeMask = format === 24 ? TimeFormat.TWENTY_FOUR_SHORT : TimeFormat.TWELVE_SHORT;\n    const localOpts = Object.assign({\n      locale: opts.locale,\n      numberingSystem: opts.numberingSystem\n    }, timeFormat);\n    return DateTime.fromFormat(time, timeMask).setLocale(locale).toLocaleString(localOpts).replace(/\\u202F/g, ' ');\n  }\n  static isTimeAvailable(time, min, max, granularity, minutesGap, format) {\n    if (!time) {\n      return;\n    }\n    const convertedTime = this.parseTime(time, {\n      format\n    });\n    const minutes = convertedTime.minute;\n    if (minutesGap && minutes === minutes && minutes % minutesGap !== 0) {\n      throw new Error(`Your minutes - ${minutes} doesn\\'t match your minutesGap - ${minutesGap}`);\n    }\n    const isAfter = min && !max && isSameOrAfter(convertedTime, min, granularity);\n    const isBefore = max && !min && isSameOrBefore(convertedTime, max, granularity);\n    const between = min && max && isBetween(convertedTime, min, max, granularity);\n    const isAvailable = !min && !max;\n    return isAfter || isBefore || between || isAvailable;\n  }\n  /***\n   *  Format hour according to time format (12 or 24)\n   */\n  static formatHour(currentHour, format, period) {\n    if (format === 24) {\n      return currentHour;\n    }\n    const hour = period === TimePeriod.AM ? currentHour : currentHour + 12;\n    if (period === TimePeriod.AM && hour === 12) {\n      return 0;\n    } else if (period === TimePeriod.PM && hour === 24) {\n      return 12;\n    }\n    return hour;\n  }\n  static fromDateTimeToString(time, format) {\n    const timeFormat = format === 24 ? TimeFormat.TWENTY_FOUR : TimeFormat.TWELVE;\n    return time.reconfigure({\n      numberingSystem: TimeAdapter.DEFAULT_NUMBERING_SYSTEM,\n      locale: TimeAdapter.DEFAULT_LOCALE\n    }).toFormat(timeFormat).replace(/\\u202F/g, ' ');\n  }\n  static getLocaleOptionsByTime(time, opts) {\n    const localeConfig = {\n      numberingSystem: opts.numberingSystem,\n      locale: opts.locale\n    };\n    const defaultConfig = {\n      numberingSystem: TimeAdapter.DEFAULT_NUMBERING_SYSTEM,\n      locale: TimeAdapter.DEFAULT_LOCALE\n    };\n    return isNaN(parseInt(time, 10)) ? localeConfig : defaultConfig;\n  }\n}\nTimeAdapter.DEFAULT_FORMAT = 12;\nTimeAdapter.DEFAULT_LOCALE = 'en-US';\nTimeAdapter.DEFAULT_NUMBERING_SYSTEM = 'latn';\nconst DEFAULT_HOUR = {\n  time: 12,\n  angle: 360\n};\nconst DEFAULT_MINUTE = {\n  time: 0,\n  angle: 360\n};\nclass NgxMaterialTimepickerService {\n  constructor() {\n    this.hourSubject = new BehaviorSubject(DEFAULT_HOUR);\n    this.minuteSubject = new BehaviorSubject(DEFAULT_MINUTE);\n    this.periodSubject = new BehaviorSubject(TimePeriod.AM);\n  }\n  set hour(hour) {\n    this.hourSubject.next(hour);\n  }\n  get selectedHour() {\n    return this.hourSubject.asObservable();\n  }\n  set minute(minute) {\n    this.minuteSubject.next(minute);\n  }\n  get selectedMinute() {\n    return this.minuteSubject.asObservable();\n  }\n  set period(period) {\n    const isPeriodValid = period === TimePeriod.AM || period === TimePeriod.PM;\n    if (isPeriodValid) {\n      this.periodSubject.next(period);\n    }\n  }\n  get selectedPeriod() {\n    return this.periodSubject.asObservable();\n  }\n  setDefaultTimeIfAvailable(time, min, max, format, minutesGap) {\n    /* Workaround to double error message*/\n    try {\n      if (TimeAdapter.isTimeAvailable(time, min, max, 'minutes', minutesGap)) {\n        this.setDefaultTime(time, format);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  getFullTime(format) {\n    const selectedHour = this.hourSubject.getValue().time;\n    const selectedMinute = this.minuteSubject.getValue().time;\n    const hour = selectedHour != null ? selectedHour : DEFAULT_HOUR.time;\n    const minute = selectedMinute != null ? selectedMinute : DEFAULT_MINUTE.time;\n    const period = format === 12 ? this.periodSubject.getValue() : '';\n    const time = `${hour}:${minute} ${period}`.trim();\n    return TimeAdapter.formatTime(time, {\n      format\n    });\n  }\n  setDefaultTime(time, format) {\n    const defaultTime = TimeAdapter.parseTime(time, {\n      format\n    }).toJSDate();\n    if (DateTime.fromJSDate(defaultTime).isValid) {\n      const period = time.substr(time.length - 2).toUpperCase();\n      const hour = defaultTime.getHours();\n      this.hour = Object.assign(Object.assign({}, DEFAULT_HOUR), {\n        time: formatHourByPeriod(hour, period)\n      });\n      this.minute = Object.assign(Object.assign({}, DEFAULT_MINUTE), {\n        time: defaultTime.getMinutes()\n      });\n      this.period = period;\n    } else {\n      this.resetTime();\n    }\n  }\n  resetTime() {\n    this.hour = Object.assign({}, DEFAULT_HOUR);\n    this.minute = Object.assign({}, DEFAULT_MINUTE);\n    this.period = TimePeriod.AM;\n  }\n}\nNgxMaterialTimepickerService.ɵfac = function NgxMaterialTimepickerService_Factory(t) {\n  return new (t || NgxMaterialTimepickerService)();\n};\nNgxMaterialTimepickerService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgxMaterialTimepickerService,\n  factory: NgxMaterialTimepickerService.ɵfac,\n  providedIn: 'root'\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxMaterialTimepickerService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/***\n *  Format hour in 24hours format to meridian (AM or PM) format\n */\nfunction formatHourByPeriod(hour, period) {\n  switch (period) {\n    case TimePeriod.AM:\n      return hour === 0 ? 12 : hour;\n    case TimePeriod.PM:\n      return hour === 12 ? 12 : hour - 12;\n    default:\n      return hour;\n  }\n}\nconst TIME_LOCALE = new InjectionToken('TimeLocale', {\n  providedIn: 'root',\n  factory: () => TimeAdapter.DEFAULT_LOCALE\n});\nconst NUMBERING_SYSTEM = new InjectionToken('NumberingSystem', {\n  providedIn: 'root',\n  factory: () => TimeAdapter.DEFAULT_NUMBERING_SYSTEM\n});\nclass NgxMaterialTimepickerEventService {\n  constructor() {\n    this.backdropClickSubject = new Subject();\n    this.keydownEventSubject = new Subject();\n  }\n  get backdropClick() {\n    return this.backdropClickSubject.asObservable().pipe(shareReplay({\n      bufferSize: 1,\n      refCount: true\n    }));\n  }\n  get keydownEvent() {\n    return this.keydownEventSubject.asObservable().pipe(shareReplay({\n      bufferSize: 1,\n      refCount: true\n    }));\n  }\n  dispatchEvent(event) {\n    switch (event.type) {\n      case 'click':\n        this.backdropClickSubject.next(event);\n        break;\n      case 'keydown':\n        this.keydownEventSubject.next(event);\n        break;\n      default:\n        throw new Error('no such event type');\n    }\n  }\n}\nNgxMaterialTimepickerEventService.ɵfac = function NgxMaterialTimepickerEventService_Factory(t) {\n  return new (t || NgxMaterialTimepickerEventService)();\n};\nNgxMaterialTimepickerEventService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgxMaterialTimepickerEventService,\n  factory: NgxMaterialTimepickerEventService.ɵfac,\n  providedIn: 'root'\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxMaterialTimepickerEventService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass AppendToInputDirective {\n  constructor(elementRef, renderer) {\n    this.renderer = renderer;\n    this.element = elementRef.nativeElement;\n  }\n  get inputCords() {\n    return this.inputElement.getBoundingClientRect();\n  }\n  get direction() {\n    const height = this.element.offsetHeight;\n    const {\n      bottom,\n      top\n    } = this._inputCords;\n    const isElementFit = (window && window.innerHeight) - bottom < height;\n    const isTop = isElementFit && top > height;\n    const isCenter = isElementFit && top < height;\n    if (isTop) {\n      return 'top';\n    } else if (isCenter) {\n      return 'center';\n    }\n    return 'bottom';\n  }\n  ngAfterViewInit() {\n    this._inputCords = this.inputCords;\n    this._direction = this.direction;\n    this.append();\n  }\n  changePosition() {\n    const {\n      bottom,\n      top\n    } = this.inputCords;\n    const y = this.defineElementYByDirection(top, bottom);\n    this.setStyle('top', `${y}px`);\n  }\n  append() {\n    const {\n      left,\n      bottom,\n      top\n    } = this._inputCords;\n    const y = this.defineElementYByDirection(top, bottom);\n    this.setStyle('position', 'fixed');\n    this.setStyle('left', `${left}px`);\n    this.setStyle('top', `${y}px`);\n  }\n  setStyle(style, value) {\n    this.renderer.setStyle(this.element, style, value);\n  }\n  defineElementYByDirection(inputTop, inputBottom) {\n    if (this._direction === 'top') {\n      return inputTop - this.element.offsetHeight;\n    } else if (this._direction === 'center') {\n      return inputTop - this.element.offsetHeight / 2;\n    }\n    return inputBottom;\n  }\n}\nAppendToInputDirective.ɵfac = function AppendToInputDirective_Factory(t) {\n  return new (t || AppendToInputDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\nAppendToInputDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: AppendToInputDirective,\n  selectors: [[\"\", \"ngxAppendToInput\", \"\"]],\n  hostBindings: function AppendToInputDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"scroll\", function AppendToInputDirective_scroll_HostBindingHandler() {\n        return ctx.changePosition();\n      }, false, i0.ɵɵresolveWindow);\n    }\n  },\n  inputs: {\n    inputElement: [\"ngxAppendToInput\", \"inputElement\"]\n  }\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AppendToInputDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngxAppendToInput]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    inputElement: [{\n      type: Input,\n      args: ['ngxAppendToInput']\n    }],\n    changePosition: [{\n      type: HostListener,\n      args: ['window:scroll']\n    }]\n  });\n})();\nclass NgxMaterialTimepickerContentComponent {}\nNgxMaterialTimepickerContentComponent.ɵfac = function NgxMaterialTimepickerContentComponent_Factory(t) {\n  return new (t || NgxMaterialTimepickerContentComponent)();\n};\nNgxMaterialTimepickerContentComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgxMaterialTimepickerContentComponent,\n  selectors: [[\"ngx-material-timepicker-content\"]],\n  inputs: {\n    appendToInput: \"appendToInput\",\n    inputElement: \"inputElement\"\n  },\n  ngContentSelectors: _c0,\n  decls: 5,\n  vars: 2,\n  consts: [[3, \"ngxAppendToInput\", 4, \"ngIf\", \"ngIfElse\"], [\"timepickerModal\", \"\"], [\"timepickerOutlet\", \"\"], [3, \"ngxAppendToInput\"], [4, \"ngTemplateOutlet\"]],\n  template: function NgxMaterialTimepickerContentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, NgxMaterialTimepickerContentComponent_div_0_Template, 2, 2, \"div\", 0)(1, NgxMaterialTimepickerContentComponent_ng_template_1_Template, 1, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor)(3, NgxMaterialTimepickerContentComponent_ng_template_3_Template, 1, 0, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      const _r2 = i0.ɵɵreference(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.appendToInput)(\"ngIfElse\", _r2);\n    }\n  },\n  dependencies: [i1.NgIf, AppendToInputDirective, i1.NgTemplateOutlet],\n  encapsulation: 2\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxMaterialTimepickerContentComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-material-timepicker-content',\n      templateUrl: './ngx-material-timepicker-content.component.html'\n    }]\n  }], null, {\n    appendToInput: [{\n      type: Input\n    }],\n    inputElement: [{\n      type: Input\n    }]\n  });\n})();\n\n// @dynamic\nclass TimepickerTimeUtils {\n  static getHours(format) {\n    return Array(format).fill(1).map((v, i) => {\n      const angleStep = 30;\n      const time = v + i;\n      const angle = angleStep * time;\n      return {\n        time: time === 24 ? 0 : time,\n        angle\n      };\n    });\n  }\n  static disableHours(hours, config) {\n    if (config.min || config.max) {\n      return hours.map(value => {\n        const hour = config.format === 24 ? value.time : TimeAdapter.formatHour(value.time, config.format, config.period);\n        const currentTime = DateTime.fromObject({\n          hour\n        }).toFormat(TimeFormat.TWELVE);\n        return Object.assign(Object.assign({}, value), {\n          disabled: !TimeAdapter.isTimeAvailable(currentTime, config.min, config.max, 'hours')\n        });\n      });\n    }\n    return hours;\n  }\n  static getMinutes(gap = 1) {\n    const minutesCount = 60;\n    const angleStep = 360 / minutesCount;\n    const minutes = [];\n    for (let i = 0; i < minutesCount; i++) {\n      const angle = angleStep * i;\n      if (i % gap === 0) {\n        minutes.push({\n          time: i,\n          angle: angle !== 0 ? angle : 360\n        });\n      }\n    }\n    return minutes;\n  }\n  static disableMinutes(minutes, selectedHour, config) {\n    if (config.min || config.max) {\n      const hour = TimeAdapter.formatHour(selectedHour, config.format, config.period);\n      return minutes.map(value => {\n        const currentTime = DateTime.fromObject({\n          hour,\n          minute: value.time\n        }).toFormat(TimeFormat.TWELVE);\n        return Object.assign(Object.assign({}, value), {\n          disabled: !TimeAdapter.isTimeAvailable(currentTime, config.min, config.max, 'minutes')\n        });\n      });\n    }\n    return minutes;\n  }\n}\nclass TimeLocalizerPipe {\n  constructor(locale) {\n    this.locale = locale;\n  }\n  transform(time, timeUnit, isKeyboardEnabled = false) {\n    if (time == null || time === '') {\n      return '';\n    }\n    switch (timeUnit) {\n      case TimeUnit.HOUR:\n        {\n          const format = time === 0 || isKeyboardEnabled ? 'HH' : 'H';\n          return this.formatTime('hour', time, format);\n        }\n      case TimeUnit.MINUTE:\n        return this.formatTime('minute', time, 'mm');\n      default:\n        throw new Error(`There is no Time Unit with type ${timeUnit}`);\n    }\n  }\n  formatTime(timeMeasure, time, format) {\n    try {\n      return DateTime.fromObject({\n        [timeMeasure]: +time\n      }).setLocale(this.locale).toFormat(format);\n    } catch (_a) {\n      throw new Error(`Cannot format provided time - ${time} to locale - ${this.locale}`);\n    }\n  }\n}\nTimeLocalizerPipe.ɵfac = function TimeLocalizerPipe_Factory(t) {\n  return new (t || TimeLocalizerPipe)(i0.ɵɵdirectiveInject(TIME_LOCALE, 16));\n};\nTimeLocalizerPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"timeLocalizer\",\n  type: TimeLocalizerPipe,\n  pure: true\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimeLocalizerPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'timeLocalizer'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TIME_LOCALE]\n      }]\n    }];\n  }, null);\n})();\nclass TimeParserPipe {\n  constructor(locale, numberingSystem) {\n    this.locale = locale;\n    this.numberingSystem = numberingSystem;\n  }\n  transform(time, timeUnit = TimeUnit.HOUR) {\n    if (time == null || time === '') {\n      return '';\n    }\n    if (!isNaN(+time)) {\n      return time;\n    }\n    if (timeUnit === TimeUnit.MINUTE) {\n      return this.parseTime(time, 'm', 'minute');\n    }\n    return this.parseTime(time, 'H', 'hour');\n  }\n  parseTime(time, format, timeMeasure) {\n    const parsedTime = DateTime.fromFormat(String(time), format, {\n      numberingSystem: this.numberingSystem,\n      locale: this.locale\n    })[timeMeasure];\n    if (!isNaN(parsedTime)) {\n      return parsedTime;\n    }\n    throw new Error(`Cannot parse time - ${time}`);\n  }\n}\nTimeParserPipe.ɵfac = function TimeParserPipe_Factory(t) {\n  return new (t || TimeParserPipe)(i0.ɵɵdirectiveInject(TIME_LOCALE, 16), i0.ɵɵdirectiveInject(NUMBERING_SYSTEM, 16));\n};\nTimeParserPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"timeParser\",\n  type: TimeParserPipe,\n  pure: true\n});\nTimeParserPipe.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TimeParserPipe,\n  factory: TimeParserPipe.ɵfac\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimeParserPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'timeParser'\n    }]\n  }, {\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TIME_LOCALE]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NUMBERING_SYSTEM]\n      }]\n    }];\n  }, null);\n})();\nclass AutofocusDirective {\n  constructor(element, document) {\n    this.element = element;\n    this.document = document;\n    this.activeElement = this.document.activeElement;\n  }\n  ngOnChanges() {\n    if (this.isFocusActive) {\n      // To avoid ExpressionChangedAfterItHasBeenCheckedError;\n      setTimeout(() => this.element.nativeElement.focus({\n        preventScroll: true\n      }));\n    }\n  }\n  ngOnDestroy() {\n    // To avoid ExpressionChangedAfterItHasBeenCheckedError;\n    setTimeout(() => this.activeElement.focus({\n      preventScroll: true\n    }));\n  }\n}\nAutofocusDirective.ɵfac = function AutofocusDirective_Factory(t) {\n  return new (t || AutofocusDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(DOCUMENT, 8));\n};\nAutofocusDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: AutofocusDirective,\n  selectors: [[\"\", \"timepickerAutofocus\", \"\"]],\n  inputs: {\n    isFocusActive: [\"timepickerAutofocus\", \"isFocusActive\"]\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AutofocusDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[timepickerAutofocus]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, {\n    isFocusActive: [{\n      type: Input,\n      args: ['timepickerAutofocus']\n    }]\n  });\n})();\n\n/* tslint:disable:triple-equals */\nclass NgxMaterialTimepickerDialControlComponent {\n  constructor(timeParserPipe, timeLocalizerPipe) {\n    this.timeParserPipe = timeParserPipe;\n    this.timeLocalizerPipe = timeLocalizerPipe;\n    this.timeUnitChanged = new EventEmitter();\n    this.timeChanged = new EventEmitter();\n    this.focused = new EventEmitter();\n    this.unfocused = new EventEmitter();\n  }\n  get selectedTime() {\n    if (!!this.time) {\n      return this.timeList.find(t => t.time === +this.time);\n    }\n  }\n  ngOnInit() {\n    if (this.isEditable) {\n      this.timeControl = new FormControl({\n        value: this.formatTimeForUI(this.time),\n        disabled: this.disabled\n      });\n      this.timeControl.valueChanges.pipe(tap(value => {\n        if (value.length > 2) {\n          this.updateInputValue(value.slice(-1));\n        }\n      }), debounceTime(500), distinctUntilChanged(), filter(value => !isTimeDisabledToChange(this.time, value, this.timeList)), tap(value => this.time = this.timeParserPipe.transform(value, this.timeUnit).toString())).subscribe(() => this.updateTime());\n    }\n  }\n  saveTimeAndChangeTimeUnit(event, unit) {\n    event.preventDefault();\n    this.previousTime = this.time;\n    this.timeUnitChanged.next(unit);\n    this.focused.next();\n  }\n  updateTime() {\n    const time = this.selectedTime;\n    if (time) {\n      this.timeChanged.next(time);\n      this.previousTime = time.time;\n      if (this.isEditable) {\n        this.updateInputValue(this.formatTimeForUI(time.time));\n      }\n    }\n  }\n  onKeydown(e) {\n    if (!isDigit(e)) {\n      e.preventDefault();\n    } else {\n      this.changeTimeByArrow(e.keyCode);\n    }\n  }\n  changeTimeByArrow(keyCode) {\n    const ARROW_UP = 38;\n    const ARROW_DOWN = 40;\n    let time;\n    if (keyCode === ARROW_UP) {\n      time = String(+this.time + (this.minutesGap || 1));\n    } else if (keyCode === ARROW_DOWN) {\n      time = String(+this.time - (this.minutesGap || 1));\n    }\n    if (!isTimeUnavailable(time, this.timeList)) {\n      this.time = time;\n      this.updateTime();\n    }\n  }\n  formatTimeForUI(value) {\n    const parsedTime = this.timeParserPipe.transform(value, this.timeUnit).toString();\n    return this.timeLocalizerPipe.transform(parsedTime, this.timeUnit, true);\n  }\n  updateInputValue(value) {\n    this.editableTimeTmpl.nativeElement.value = value;\n  }\n}\nNgxMaterialTimepickerDialControlComponent.ɵfac = function NgxMaterialTimepickerDialControlComponent_Factory(t) {\n  return new (t || NgxMaterialTimepickerDialControlComponent)(i0.ɵɵdirectiveInject(TimeParserPipe), i0.ɵɵdirectiveInject(TimeLocalizerPipe));\n};\nNgxMaterialTimepickerDialControlComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgxMaterialTimepickerDialControlComponent,\n  selectors: [[\"ngx-material-timepicker-dial-control\"]],\n  viewQuery: function NgxMaterialTimepickerDialControlComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editableTimeTmpl = _t.first);\n    }\n  },\n  inputs: {\n    timeList: \"timeList\",\n    timeUnit: \"timeUnit\",\n    time: \"time\",\n    isActive: \"isActive\",\n    isEditable: \"isEditable\",\n    minutesGap: \"minutesGap\",\n    disabled: \"disabled\"\n  },\n  outputs: {\n    timeUnitChanged: \"timeUnitChanged\",\n    timeChanged: \"timeChanged\",\n    focused: \"focused\",\n    unfocused: \"unfocused\"\n  },\n  features: [i0.ɵɵProvidersFeature([TimeParserPipe, TimeLocalizerPipe])],\n  decls: 3,\n  vars: 2,\n  consts: [[\"class\", \"timepicker-dial__control timepicker-dial__item\", \"readonly\", \"\", 3, \"ngClass\", \"ngModel\", \"disabled\", \"timepickerAutofocus\", \"ngModelChange\", \"input\", \"focus\", 4, \"ngIf\", \"ngIfElse\"], [\"editableTemplate\", \"\"], [\"readonly\", \"\", 1, \"timepicker-dial__control\", \"timepicker-dial__item\", 3, \"ngClass\", \"ngModel\", \"disabled\", \"timepickerAutofocus\", \"ngModelChange\", \"input\", \"focus\"], [1, \"timepicker-dial__control\", \"timepicker-dial__item\", \"timepicker-dial__control_editable\", 3, \"formControl\", \"ngClass\", \"timepickerAutofocus\", \"focus\", \"keydown\"], [\"editableTimeTmpl\", \"\"]],\n  template: function NgxMaterialTimepickerDialControlComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NgxMaterialTimepickerDialControlComponent_input_0_Template, 2, 9, \"input\", 0)(1, NgxMaterialTimepickerDialControlComponent_ng_template_1_Template, 2, 5, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      const _r2 = i0.ɵɵreference(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isEditable)(\"ngIfElse\", _r2);\n    }\n  },\n  dependencies: [i1.NgIf, i4.DefaultValueAccessor, i1.NgClass, i4.NgControlStatus, i4.NgModel, AutofocusDirective, i4.FormControlDirective, TimeLocalizerPipe],\n  styles: [\".timepicker-dial__item[_ngcontent-%COMP%]{cursor:pointer;color:#ffffff80;font-family:\\\"Roboto\\\",sans-serif}@supports (font-family: var(--primary-font-family)){.timepicker-dial__item[_ngcontent-%COMP%]{font-family:var(--primary-font-family);color:var(--dial-inactive-color)}}.timepicker-dial__item_active[_ngcontent-%COMP%]{color:#fff}@supports (color: var(--dial-active-color)){.timepicker-dial__item_active[_ngcontent-%COMP%]{color:var(--dial-active-color)}}.timepicker-dial__control[_ngcontent-%COMP%]{border:none;background-color:transparent;font-size:50px;width:60px;padding:0;border-radius:3px;text-align:right}.timepicker-dial__control_editable[_ngcontent-%COMP%]:focus{color:#00bfff;background-color:#fff;outline:deepskyblue}@supports (color: var(--dial-editable-active-color)){.timepicker-dial__control_editable[_ngcontent-%COMP%]:focus{color:var(--dial-editable-active-color)}}@supports (background-color: var(--dial-editable-background-color)){.timepicker-dial__control_editable[_ngcontent-%COMP%]:focus{background-color:var(--dial-editable-background-color)}}@supports (outline: var(--dial-editable-active-color)){.timepicker-dial__control_editable[_ngcontent-%COMP%]:focus{outline:var(--dial-editable-active-color)}}.timepicker-dial__control[_ngcontent-%COMP%]:disabled{cursor:default}.timepicker-dial__control[_ngcontent-%COMP%]:focus-visible{outline:none}\"]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxMaterialTimepickerDialControlComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-material-timepicker-dial-control',\n      templateUrl: 'ngx-material-timepicker-dial-control.component.html',\n      styleUrls: ['ngx-material-timepicker-dial-control.component.scss'],\n      providers: [TimeParserPipe, TimeLocalizerPipe]\n    }]\n  }], function () {\n    return [{\n      type: TimeParserPipe\n    }, {\n      type: TimeLocalizerPipe\n    }];\n  }, {\n    timeList: [{\n      type: Input\n    }],\n    timeUnit: [{\n      type: Input\n    }],\n    time: [{\n      type: Input\n    }],\n    isActive: [{\n      type: Input\n    }],\n    isEditable: [{\n      type: Input\n    }],\n    minutesGap: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    editableTimeTmpl: [{\n      type: ViewChild,\n      args: ['editableTimeTmpl']\n    }],\n    timeUnitChanged: [{\n      type: Output\n    }],\n    timeChanged: [{\n      type: Output\n    }],\n    focused: [{\n      type: Output\n    }],\n    unfocused: [{\n      type: Output\n    }]\n  });\n})();\nfunction isTimeDisabledToChange(currentTime, nextTime, timeList) {\n  const isNumber = /\\d/.test(nextTime);\n  if (isNumber) {\n    return isTimeUnavailable(nextTime, timeList);\n  }\n}\nfunction isTimeUnavailable(time, timeList) {\n  const selectedTime = timeList.find(value => value.time === +time);\n  return !selectedTime || selectedTime && selectedTime.disabled;\n}\nclass NgxMaterialTimepickerPeriodComponent {\n  constructor() {\n    this.timePeriod = TimePeriod;\n    this.isPeriodAvailable = true;\n    this.periodChanged = new EventEmitter();\n  }\n  changePeriod(period) {\n    this.isPeriodAvailable = this.isSwitchPeriodAvailable(period);\n    if (this.isPeriodAvailable) {\n      this.periodChanged.next(period);\n    }\n  }\n  animationDone() {\n    this.isPeriodAvailable = true;\n  }\n  isSwitchPeriodAvailable(period) {\n    const time = this.getDisabledTimeByPeriod(period);\n    return !time.every(t => t.disabled);\n  }\n  getDisabledTimeByPeriod(period) {\n    switch (this.activeTimeUnit) {\n      case TimeUnit.HOUR:\n        return TimepickerTimeUtils.disableHours(this.hours, {\n          min: this.minTime,\n          max: this.maxTime,\n          format: this.format,\n          period\n        });\n      case TimeUnit.MINUTE:\n        return TimepickerTimeUtils.disableMinutes(this.minutes, +this.selectedHour, {\n          min: this.minTime,\n          max: this.maxTime,\n          format: this.format,\n          period\n        });\n      default:\n        throw new Error('no such TimeUnit');\n    }\n  }\n}\nNgxMaterialTimepickerPeriodComponent.ɵfac = function NgxMaterialTimepickerPeriodComponent_Factory(t) {\n  return new (t || NgxMaterialTimepickerPeriodComponent)();\n};\nNgxMaterialTimepickerPeriodComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgxMaterialTimepickerPeriodComponent,\n  selectors: [[\"ngx-material-timepicker-period\"]],\n  inputs: {\n    selectedPeriod: \"selectedPeriod\",\n    format: \"format\",\n    activeTimeUnit: \"activeTimeUnit\",\n    hours: \"hours\",\n    minutes: \"minutes\",\n    minTime: \"minTime\",\n    maxTime: \"maxTime\",\n    selectedHour: \"selectedHour\",\n    meridiems: \"meridiems\"\n  },\n  outputs: {\n    periodChanged: \"periodChanged\"\n  },\n  decls: 6,\n  vars: 9,\n  consts: [[1, \"timepicker-period\"], [\"type\", \"button\", 1, \"timepicker-dial__item\", \"timepicker-period__btn\", 3, \"ngClass\", \"click\"], [\"class\", \"timepicker-period__warning\", 4, \"ngIf\"], [1, \"timepicker-period__warning\"]],\n  template: function NgxMaterialTimepickerPeriodComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function NgxMaterialTimepickerPeriodComponent_Template_button_click_1_listener() {\n        return ctx.changePeriod(ctx.timePeriod.AM);\n      });\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function NgxMaterialTimepickerPeriodComponent_Template_button_click_3_listener() {\n        return ctx.changePeriod(ctx.timePeriod.PM);\n      });\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, NgxMaterialTimepickerPeriodComponent_div_5_Template, 3, 1, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c2, ctx.selectedPeriod === ctx.timePeriod.AM));\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.meridiems[0]);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c2, ctx.selectedPeriod === ctx.timePeriod.PM));\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.meridiems[1]);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isPeriodAvailable);\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgIf],\n  styles: [\".timepicker-dial__item[_ngcontent-%COMP%]{cursor:pointer;color:#ffffff80;font-family:\\\"Roboto\\\",sans-serif}@supports (font-family: var(--primary-font-family)){.timepicker-dial__item[_ngcontent-%COMP%]{font-family:var(--primary-font-family);color:var(--dial-inactive-color)}}.timepicker-dial__item_active[_ngcontent-%COMP%]{color:#fff}@supports (color: var(--dial-active-color)){.timepicker-dial__item_active[_ngcontent-%COMP%]{color:var(--dial-active-color)}}.timepicker-period[_ngcontent-%COMP%]{display:flex;flex-direction:column;position:relative}.timepicker-period__btn[_ngcontent-%COMP%]{padding:1px 3px;border:0;background-color:transparent;font-size:18px;font-weight:500;-webkit-user-select:none;-moz-user-select:none;user-select:none;outline:none;border-radius:3px;transition:background-color .5s;font-family:\\\"Roboto\\\",sans-serif}@supports (font-family: var(--primary-font-family)){.timepicker-period__btn[_ngcontent-%COMP%]{font-family:var(--primary-font-family)}}.timepicker-period__btn[_ngcontent-%COMP%]:focus{background-color:#00000012}.timepicker-period__warning[_ngcontent-%COMP%]{padding:5px 10px;border-radius:3px;background-color:#0000008c;color:#fff;position:absolute;width:200px;left:-20px;top:40px}.timepicker-period__warning[_ngcontent-%COMP%] > p[_ngcontent-%COMP%]{margin:0;font-size:12px;font-family:\\\"Roboto\\\",sans-serif}@supports (font-family: var(--primary-font-family)){.timepicker-period__warning[_ngcontent-%COMP%] > p[_ngcontent-%COMP%]{font-family:var(--primary-font-family)}}\"],\n  data: {\n    animation: [trigger('scaleInOut', [transition(':enter', [style({\n      transform: 'scale(0)'\n    }), animate('.2s', style({\n      transform: 'scale(1)'\n    })), sequence([animate('3s', style({\n      opacity: 1\n    })), animate('.3s', style({\n      opacity: 0\n    }))])])])]\n  }\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxMaterialTimepickerPeriodComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-material-timepicker-period',\n      templateUrl: 'ngx-material-timepicker-period.component.html',\n      styleUrls: ['ngx-material-timepicker-period.component.scss'],\n      animations: [trigger('scaleInOut', [transition(':enter', [style({\n        transform: 'scale(0)'\n      }), animate('.2s', style({\n        transform: 'scale(1)'\n      })), sequence([animate('3s', style({\n        opacity: 1\n      })), animate('.3s', style({\n        opacity: 0\n      }))])])])]\n    }]\n  }], null, {\n    selectedPeriod: [{\n      type: Input\n    }],\n    format: [{\n      type: Input\n    }],\n    activeTimeUnit: [{\n      type: Input\n    }],\n    hours: [{\n      type: Input\n    }],\n    minutes: [{\n      type: Input\n    }],\n    minTime: [{\n      type: Input\n    }],\n    maxTime: [{\n      type: Input\n    }],\n    selectedHour: [{\n      type: Input\n    }],\n    meridiems: [{\n      type: Input\n    }],\n    periodChanged: [{\n      type: Output\n    }]\n  });\n})();\nclass NgxMaterialTimepickerDialComponent {\n  constructor(locale) {\n    this.locale = locale;\n    this.timeUnit = TimeUnit;\n    this.meridiems = Info.meridiems({\n      locale: this.locale\n    });\n    this.periodChanged = new EventEmitter();\n    this.timeUnitChanged = new EventEmitter();\n    this.hourChanged = new EventEmitter();\n    this.minuteChanged = new EventEmitter();\n  }\n  ngOnChanges(changes) {\n    if (changes['period'] && changes['period'].currentValue || changes['format'] && changes['format'].currentValue) {\n      const hours = TimepickerTimeUtils.getHours(this.format);\n      this.hours = TimepickerTimeUtils.disableHours(hours, {\n        min: this.minTime,\n        max: this.maxTime,\n        format: this.format,\n        period: this.period\n      });\n    }\n    if (changes['period'] && changes['period'].currentValue || changes['hour'] && changes['hour'].currentValue) {\n      const minutes = TimepickerTimeUtils.getMinutes(this.minutesGap);\n      this.minutes = TimepickerTimeUtils.disableMinutes(minutes, +this.hour, {\n        min: this.minTime,\n        max: this.maxTime,\n        format: this.format,\n        period: this.period\n      });\n    }\n  }\n  changeTimeUnit(unit) {\n    this.timeUnitChanged.next(unit);\n  }\n  changePeriod(period) {\n    this.periodChanged.next(period);\n  }\n  changeHour(hour) {\n    this.hourChanged.next(hour);\n    if (this.isEditable) {\n      this.changeTimeUnit(TimeUnit.MINUTE);\n    }\n  }\n  changeMinute(minute) {\n    this.minuteChanged.next(minute);\n  }\n  showHint() {\n    this.isHintVisible = true;\n  }\n  hideHint() {\n    this.isHintVisible = false;\n  }\n}\nNgxMaterialTimepickerDialComponent.ɵfac = function NgxMaterialTimepickerDialComponent_Factory(t) {\n  return new (t || NgxMaterialTimepickerDialComponent)(i0.ɵɵdirectiveInject(TIME_LOCALE));\n};\nNgxMaterialTimepickerDialComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgxMaterialTimepickerDialComponent,\n  selectors: [[\"ngx-material-timepicker-dial\"]],\n  inputs: {\n    editableHintTmpl: \"editableHintTmpl\",\n    hour: \"hour\",\n    minute: \"minute\",\n    format: \"format\",\n    period: \"period\",\n    activeTimeUnit: \"activeTimeUnit\",\n    minTime: \"minTime\",\n    maxTime: \"maxTime\",\n    isEditable: \"isEditable\",\n    minutesGap: \"minutesGap\",\n    hoursOnly: \"hoursOnly\"\n  },\n  outputs: {\n    periodChanged: \"periodChanged\",\n    timeUnitChanged: \"timeUnitChanged\",\n    hourChanged: \"hourChanged\",\n    minuteChanged: \"minuteChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 9,\n  vars: 25,\n  consts: [[1, \"timepicker-dial\"], [1, \"timepicker-dial__container\"], [1, \"timepicker-dial__time\"], [3, \"timeList\", \"time\", \"timeUnit\", \"isActive\", \"isEditable\", \"timeUnitChanged\", \"timeChanged\", \"focused\", \"unfocused\"], [3, \"timeList\", \"time\", \"timeUnit\", \"isActive\", \"isEditable\", \"minutesGap\", \"disabled\", \"timeUnitChanged\", \"timeChanged\", \"focused\", \"unfocused\"], [1, \"timepicker-dial__period\", 3, \"ngClass\", \"selectedPeriod\", \"activeTimeUnit\", \"maxTime\", \"minTime\", \"format\", \"hours\", \"minutes\", \"selectedHour\", \"meridiems\", \"periodChanged\"], [3, \"ngClass\", 4, \"ngIf\"], [3, \"ngClass\"], [4, \"ngTemplateOutlet\"], [\"editableHintDefault\", \"\"], [1, \"timepicker-dial__hint\"]],\n  template: function NgxMaterialTimepickerDialComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"ngx-material-timepicker-dial-control\", 3);\n      i0.ɵɵlistener(\"timeUnitChanged\", function NgxMaterialTimepickerDialComponent_Template_ngx_material_timepicker_dial_control_timeUnitChanged_3_listener($event) {\n        return ctx.changeTimeUnit($event);\n      })(\"timeChanged\", function NgxMaterialTimepickerDialComponent_Template_ngx_material_timepicker_dial_control_timeChanged_3_listener($event) {\n        return ctx.changeHour($event);\n      })(\"focused\", function NgxMaterialTimepickerDialComponent_Template_ngx_material_timepicker_dial_control_focused_3_listener() {\n        return ctx.showHint();\n      })(\"unfocused\", function NgxMaterialTimepickerDialComponent_Template_ngx_material_timepicker_dial_control_unfocused_3_listener() {\n        return ctx.hideHint();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"span\");\n      i0.ɵɵtext(5, \":\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"ngx-material-timepicker-dial-control\", 4);\n      i0.ɵɵlistener(\"timeUnitChanged\", function NgxMaterialTimepickerDialComponent_Template_ngx_material_timepicker_dial_control_timeUnitChanged_6_listener($event) {\n        return ctx.changeTimeUnit($event);\n      })(\"timeChanged\", function NgxMaterialTimepickerDialComponent_Template_ngx_material_timepicker_dial_control_timeChanged_6_listener($event) {\n        return ctx.changeMinute($event);\n      })(\"focused\", function NgxMaterialTimepickerDialComponent_Template_ngx_material_timepicker_dial_control_focused_6_listener() {\n        return ctx.showHint();\n      })(\"unfocused\", function NgxMaterialTimepickerDialComponent_Template_ngx_material_timepicker_dial_control_unfocused_6_listener() {\n        return ctx.hideHint();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"ngx-material-timepicker-period\", 5);\n      i0.ɵɵlistener(\"periodChanged\", function NgxMaterialTimepickerDialComponent_Template_ngx_material_timepicker_period_periodChanged_7_listener($event) {\n        return ctx.changePeriod($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(8, NgxMaterialTimepickerDialComponent_div_8_Template, 4, 4, \"div\", 6);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"timeList\", ctx.hours)(\"time\", ctx.hour)(\"timeUnit\", ctx.timeUnit.HOUR)(\"isActive\", ctx.activeTimeUnit === ctx.timeUnit.HOUR)(\"isEditable\", ctx.isEditable);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"timeList\", ctx.minutes)(\"time\", ctx.minute)(\"timeUnit\", ctx.timeUnit.MINUTE)(\"isActive\", ctx.activeTimeUnit === ctx.timeUnit.MINUTE)(\"isEditable\", ctx.isEditable)(\"minutesGap\", ctx.minutesGap)(\"disabled\", ctx.hoursOnly);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(23, _c4, ctx.format === 24))(\"selectedPeriod\", ctx.period)(\"activeTimeUnit\", ctx.activeTimeUnit)(\"maxTime\", ctx.maxTime)(\"minTime\", ctx.minTime)(\"format\", ctx.format)(\"hours\", ctx.hours)(\"minutes\", ctx.minutes)(\"selectedHour\", ctx.hour)(\"meridiems\", ctx.meridiems);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isEditable || ctx.editableHintTmpl);\n    }\n  },\n  dependencies: [NgxMaterialTimepickerDialControlComponent, NgxMaterialTimepickerPeriodComponent, i1.NgClass, i1.NgIf, i1.NgTemplateOutlet],\n  styles: [\".timepicker-dial[_ngcontent-%COMP%]{text-align:right}.timepicker-dial__container[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:flex-end;-webkit-tap-highlight-color:rgba(0,0,0,0)}.timepicker-dial__time[_ngcontent-%COMP%]{display:flex;align-items:baseline;line-height:normal;font-size:50px;color:#ffffff80;font-family:\\\"Roboto\\\",sans-serif}@supports (font-family: var(--primary-font-family)){.timepicker-dial__time[_ngcontent-%COMP%]{font-family:var(--primary-font-family);color:var(--dial-inactive-color)}}.timepicker-dial__period[_ngcontent-%COMP%]{display:block;margin-left:10px}.timepicker-dial__period--hidden[_ngcontent-%COMP%]{visibility:hidden}.timepicker-dial__hint-container--hidden[_ngcontent-%COMP%]{visibility:hidden}.timepicker-dial__hint[_ngcontent-%COMP%]{display:inline-block;font-size:10px;color:#fff}@supports (color: var(--dial-active-color)){.timepicker-dial__hint[_ngcontent-%COMP%]{color:var(--dial-active-color)}}.timepicker-dial__hint[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:14px}@media (max-device-width: 1023px) and (orientation: landscape){.timepicker-dial__container[_ngcontent-%COMP%]{flex-direction:column}.timepicker-dial__period[_ngcontent-%COMP%]{margin-left:0}}\"],\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxMaterialTimepickerDialComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-material-timepicker-dial',\n      templateUrl: 'ngx-material-timepicker-dial.component.html',\n      styleUrls: ['ngx-material-timepicker-dial.component.scss'],\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TIME_LOCALE]\n      }]\n    }];\n  }, {\n    editableHintTmpl: [{\n      type: Input\n    }],\n    hour: [{\n      type: Input\n    }],\n    minute: [{\n      type: Input\n    }],\n    format: [{\n      type: Input\n    }],\n    period: [{\n      type: Input\n    }],\n    activeTimeUnit: [{\n      type: Input\n    }],\n    minTime: [{\n      type: Input\n    }],\n    maxTime: [{\n      type: Input\n    }],\n    isEditable: [{\n      type: Input\n    }],\n    minutesGap: [{\n      type: Input\n    }],\n    hoursOnly: [{\n      type: Input\n    }],\n    periodChanged: [{\n      type: Output\n    }],\n    timeUnitChanged: [{\n      type: Output\n    }],\n    hourChanged: [{\n      type: Output\n    }],\n    minuteChanged: [{\n      type: Output\n    }]\n  });\n})();\nclass NgxMaterialTimepickerHoursFace {\n  constructor(format) {\n    this.hourChange = new EventEmitter();\n    this.hourSelected = new EventEmitter();\n    this.hoursList = [];\n    this.hoursList = TimepickerTimeUtils.getHours(format);\n  }\n  onTimeSelected(time) {\n    this.hourSelected.next(time);\n  }\n}\nNgxMaterialTimepickerHoursFace.ɵfac = function NgxMaterialTimepickerHoursFace_Factory(t) {\n  i0.ɵɵinvalidFactory();\n};\nNgxMaterialTimepickerHoursFace.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgxMaterialTimepickerHoursFace,\n  inputs: {\n    selectedHour: \"selectedHour\",\n    minTime: \"minTime\",\n    maxTime: \"maxTime\",\n    format: \"format\"\n  },\n  outputs: {\n    hourChange: \"hourChange\",\n    hourSelected: \"hourSelected\"\n  }\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxMaterialTimepickerHoursFace, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: undefined\n    }];\n  }, {\n    selectedHour: [{\n      type: Input\n    }],\n    minTime: [{\n      type: Input\n    }],\n    maxTime: [{\n      type: Input\n    }],\n    format: [{\n      type: Input\n    }],\n    hourChange: [{\n      type: Output\n    }],\n    hourSelected: [{\n      type: Output\n    }]\n  });\n})();\nclass ActiveHourPipe {\n  transform(hour, currentHour, isClockFaceDisabled) {\n    if (hour == null || isClockFaceDisabled) {\n      return false;\n    }\n    return hour === currentHour;\n  }\n}\nActiveHourPipe.ɵfac = function ActiveHourPipe_Factory(t) {\n  return new (t || ActiveHourPipe)();\n};\nActiveHourPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"activeHour\",\n  type: ActiveHourPipe,\n  pure: true\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActiveHourPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'activeHour'\n    }]\n  }], null, null);\n})();\nclass ActiveMinutePipe {\n  transform(minute, currentMinute, gap, isClockFaceDisabled) {\n    if (minute == null || isClockFaceDisabled) {\n      return false;\n    }\n    const defaultGap = 5;\n    return currentMinute === minute && minute % (gap || defaultGap) === 0;\n  }\n}\nActiveMinutePipe.ɵfac = function ActiveMinutePipe_Factory(t) {\n  return new (t || ActiveMinutePipe)();\n};\nActiveMinutePipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"activeMinute\",\n  type: ActiveMinutePipe,\n  pure: true\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActiveMinutePipe, [{\n    type: Pipe,\n    args: [{\n      name: 'activeMinute'\n    }]\n  }], null, null);\n})();\nclass MinutesFormatterPipe {\n  transform(minute, gap = 5) {\n    if (!minute) {\n      return minute;\n    }\n    return minute % gap === 0 ? minute : '';\n  }\n}\nMinutesFormatterPipe.ɵfac = function MinutesFormatterPipe_Factory(t) {\n  return new (t || MinutesFormatterPipe)();\n};\nMinutesFormatterPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"minutesFormatter\",\n  type: MinutesFormatterPipe,\n  pure: true\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MinutesFormatterPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'minutesFormatter'\n    }]\n  }], null, null);\n})();\nconst CLOCK_HAND_STYLES = {\n  small: {\n    height: '75px',\n    top: 'calc(50% - 75px)'\n  },\n  large: {\n    height: '103px',\n    top: 'calc(50% - 103px)'\n  }\n};\nclass NgxMaterialTimepickerFaceComponent {\n  constructor() {\n    this.timeUnit = TimeUnit;\n    this.innerClockFaceSize = 85;\n    this.timeChange = new EventEmitter();\n    this.timeSelected = new EventEmitter();\n  }\n  ngAfterViewInit() {\n    this.setClockHandPosition();\n    this.addTouchEvents();\n  }\n  ngOnChanges(changes) {\n    const faceTimeChanges = changes['faceTime'];\n    const selectedTimeChanges = changes['selectedTime'];\n    if (faceTimeChanges && faceTimeChanges.currentValue && selectedTimeChanges && selectedTimeChanges.currentValue) {\n      /* Set time according to passed an input value */\n      this.selectedTime = this.faceTime.find(time => time.time === this.selectedTime.time);\n    }\n    if (selectedTimeChanges && selectedTimeChanges.currentValue) {\n      this.setClockHandPosition();\n    }\n    if (faceTimeChanges && faceTimeChanges.currentValue) {\n      // To avoid an error ExpressionChangedAfterItHasBeenCheckedError\n      setTimeout(() => this.selectAvailableTime());\n    }\n  }\n  trackByTime(_, time) {\n    return time.time;\n  }\n  onMousedown(e) {\n    e.preventDefault();\n    this.isStarted = true;\n  }\n  selectTime(e) {\n    if (!this.isStarted && e instanceof MouseEvent && e.type !== 'click') {\n      return;\n    }\n    const clockFaceCords = this.clockFace.nativeElement.getBoundingClientRect();\n    /* Get x0 and y0 of the circle */\n    const centerX = clockFaceCords.left + clockFaceCords.width / 2;\n    const centerY = clockFaceCords.top + clockFaceCords.height / 2;\n    /* Counting the arctangent and convert it to from radian to deg */\n    const arctangent = Math.atan(Math.abs(e.clientX - centerX) / Math.abs(e.clientY - centerY)) * 180 / Math.PI;\n    /* Get angle according to quadrant */\n    const circleAngle = countAngleByCords(centerX, centerY, e.clientX, e.clientY, arctangent);\n    /* Check if selected time from the inner clock face (24 hours format only) */\n    const isInnerClockChosen = this.format && this.isInnerClockFace(centerX, centerY, e.clientX, e.clientY);\n    /* Round angle according to angle step */\n    const angleStep = this.unit === TimeUnit.MINUTE ? 6 * (this.minutesGap || 1) : 30;\n    const roundedAngle = roundAngle(circleAngle, angleStep);\n    const angle = (roundedAngle || 360) + (isInnerClockChosen ? 360 : 0);\n    const selectedTime = this.faceTime.find(val => val.angle === angle);\n    if (selectedTime && !selectedTime.disabled) {\n      this.timeChange.next(selectedTime);\n      /* To let know whether user ended interaction with clock face */\n      if (!this.isStarted) {\n        this.timeSelected.next(selectedTime.time);\n      }\n    }\n  }\n  onMouseup(e) {\n    e.preventDefault();\n    this.isStarted = false;\n  }\n  ngOnDestroy() {\n    this.removeTouchEvents();\n  }\n  addTouchEvents() {\n    this.touchStartHandler = this.onMousedown.bind(this);\n    this.touchEndHandler = this.onMouseup.bind(this);\n    this.clockFace.nativeElement.addEventListener('touchstart', this.touchStartHandler);\n    this.clockFace.nativeElement.addEventListener('touchend', this.touchEndHandler);\n  }\n  removeTouchEvents() {\n    this.clockFace.nativeElement.removeEventListener('touchstart', this.touchStartHandler);\n    this.clockFace.nativeElement.removeEventListener('touchend', this.touchEndHandler);\n  }\n  setClockHandPosition() {\n    if (this.format === 24) {\n      if (this.selectedTime.time > 12 || this.selectedTime.time === 0) {\n        this.decreaseClockHand();\n      } else {\n        this.increaseClockHand();\n      }\n    }\n    this.clockHand.nativeElement.style.transform = `rotate(${this.selectedTime.angle}deg)`;\n  }\n  selectAvailableTime() {\n    const currentTime = this.faceTime.find(time => this.selectedTime.time === time.time);\n    this.isClockFaceDisabled = this.faceTime.every(time => time.disabled);\n    if (currentTime && currentTime.disabled && !this.isClockFaceDisabled) {\n      const availableTime = this.faceTime.find(time => !time.disabled);\n      this.timeChange.next(availableTime);\n    }\n  }\n  isInnerClockFace(x0, y0, x, y) {\n    /* Detect whether time from the inner clock face or not (24 format only) */\n    return Math.sqrt(Math.pow(x - x0, 2) + Math.pow(y - y0, 2)) < this.innerClockFaceSize;\n  }\n  decreaseClockHand() {\n    this.clockHand.nativeElement.style.height = CLOCK_HAND_STYLES.small.height;\n    this.clockHand.nativeElement.style.top = CLOCK_HAND_STYLES.small.top;\n  }\n  increaseClockHand() {\n    this.clockHand.nativeElement.style.height = CLOCK_HAND_STYLES.large.height;\n    this.clockHand.nativeElement.style.top = CLOCK_HAND_STYLES.large.top;\n  }\n}\nNgxMaterialTimepickerFaceComponent.ɵfac = function NgxMaterialTimepickerFaceComponent_Factory(t) {\n  return new (t || NgxMaterialTimepickerFaceComponent)();\n};\nNgxMaterialTimepickerFaceComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgxMaterialTimepickerFaceComponent,\n  selectors: [[\"ngx-material-timepicker-face\"]],\n  viewQuery: function NgxMaterialTimepickerFaceComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c5, 7);\n      i0.ɵɵviewQuery(_c6, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.clockFace = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.clockHand = _t.first);\n    }\n  },\n  hostBindings: function NgxMaterialTimepickerFaceComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mousedown\", function NgxMaterialTimepickerFaceComponent_mousedown_HostBindingHandler($event) {\n        return ctx.onMousedown($event);\n      })(\"click\", function NgxMaterialTimepickerFaceComponent_click_HostBindingHandler($event) {\n        return ctx.selectTime($event);\n      })(\"touchmove\", function NgxMaterialTimepickerFaceComponent_touchmove_HostBindingHandler($event) {\n        return ctx.selectTime($event.changedTouches[0]);\n      })(\"touchend\", function NgxMaterialTimepickerFaceComponent_touchend_HostBindingHandler($event) {\n        return ctx.selectTime($event.changedTouches[0]);\n      })(\"mousemove\", function NgxMaterialTimepickerFaceComponent_mousemove_HostBindingHandler($event) {\n        return ctx.selectTime($event);\n      })(\"mouseup\", function NgxMaterialTimepickerFaceComponent_mouseup_HostBindingHandler($event) {\n        return ctx.onMouseup($event);\n      });\n    }\n  },\n  inputs: {\n    faceTime: \"faceTime\",\n    selectedTime: \"selectedTime\",\n    unit: \"unit\",\n    format: \"format\",\n    minutesGap: \"minutesGap\"\n  },\n  outputs: {\n    timeChange: \"timeChange\",\n    timeSelected: \"timeSelected\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 7,\n  vars: 6,\n  consts: [[1, \"clock-face\"], [\"clockFace\", \"\"], [\"class\", \"clock-face__container\", 4, \"ngIf\", \"ngIfElse\"], [1, \"clock-face__clock-hand\", 3, \"ngClass\", \"hidden\"], [\"clockHand\", \"\"], [\"minutesFace\", \"\"], [1, \"clock-face__container\"], [\"class\", \"clock-face__number clock-face__number--outer\", 3, \"ngStyle\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"class\", \"clock-face__inner\", 3, \"top\", 4, \"ngIf\"], [1, \"clock-face__number\", \"clock-face__number--outer\", 3, \"ngStyle\"], [3, \"ngStyle\", \"ngClass\"], [1, \"clock-face__inner\"], [\"class\", \"clock-face__number clock-face__number--inner\", 3, \"ngStyle\", \"height\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"clock-face__number\", \"clock-face__number--inner\", 3, \"ngStyle\"]],\n  template: function NgxMaterialTimepickerFaceComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, NgxMaterialTimepickerFaceComponent_div_2_Template, 4, 7, \"div\", 2);\n      i0.ɵɵelement(3, \"span\", 3, 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, NgxMaterialTimepickerFaceComponent_ng_template_5_Template, 2, 2, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      const _r4 = i0.ɵɵreference(6);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.unit !== ctx.timeUnit.MINUTE)(\"ngIfElse\", _r4);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c9, ctx.unit === ctx.timeUnit.MINUTE))(\"hidden\", ctx.isClockFaceDisabled);\n    }\n  },\n  dependencies: [i1.NgIf, i1.NgForOf, i1.NgStyle, i1.NgClass, i1.SlicePipe, ActiveHourPipe, TimeLocalizerPipe, ActiveMinutePipe, MinutesFormatterPipe],\n  styles: [\".clock-face[_ngcontent-%COMP%]{width:290px;height:290px;border-radius:50%;position:relative;display:flex;justify-content:center;padding:20px;box-sizing:border-box;background-color:#f0f0f0}@supports (background-color: var(--clock-face-background-color)){.clock-face[_ngcontent-%COMP%]{background-color:var(--clock-face-background-color)}}.clock-face__inner[_ngcontent-%COMP%]{position:absolute}.clock-face__container[_ngcontent-%COMP%]{margin-left:-2px}.clock-face__number[_ngcontent-%COMP%]{position:absolute;transform-origin:0 100%;width:50px;text-align:center;z-index:2}.clock-face__number--outer[_ngcontent-%COMP%]{height:calc(290px / 2 - 20px)}.clock-face__number--outer[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{font-size:16px;color:#6c6c6c}@supports (color: var(--clock-face-time-inactive-color)){.clock-face__number--outer[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{color:var(--clock-face-time-inactive-color)}}.clock-face__number--inner[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{font-size:14px;color:#929292}@supports (color: var(--clock-face-inner-time-inactive-color)){.clock-face__number--inner[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{color:var(--clock-face-inner-time-inactive-color)}}.clock-face__number[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{-webkit-user-select:none;-moz-user-select:none;user-select:none;width:30px;height:30px;display:flex;justify-content:center;align-items:center;margin:auto;border-radius:50%;font-weight:500;font-family:\\\"Roboto\\\",sans-serif}@supports (font-family: var(--primary-font-family)){.clock-face__number[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{font-family:var(--primary-font-family)}}.clock-face__number[_ngcontent-%COMP%] > span.active[_ngcontent-%COMP%]{background-color:#00bfff;color:#fff}@supports (background-color: var(--clock-hand-color)){.clock-face__number[_ngcontent-%COMP%] > span.active[_ngcontent-%COMP%]{background-color:var(--clock-hand-color);color:var(--clock-face-time-active-color)}}.clock-face__number[_ngcontent-%COMP%] > span.disabled[_ngcontent-%COMP%]{color:#c5c5c5}@supports (color: var(--clock-face-time-disabled-color)){.clock-face__number[_ngcontent-%COMP%] > span.disabled[_ngcontent-%COMP%]{color:var(--clock-face-time-disabled-color)}}.clock-face__clock-hand[_ngcontent-%COMP%]{height:103px;width:2px;transform-origin:0 100%;position:absolute;top:calc(50% - 103px);z-index:1;background-color:#00bfff}@supports (background-color: var(--clock-hand-color)){.clock-face__clock-hand[_ngcontent-%COMP%]{background-color:var(--clock-hand-color)}}.clock-face__clock-hand[_ngcontent-%COMP%]:after{content:\\\"\\\";width:7px;height:7px;border-radius:50%;background-color:inherit;position:absolute;bottom:-3px;left:-3.5px}.clock-face__clock-hand_minute[_ngcontent-%COMP%]:before{content:\\\"\\\";width:7px;height:7px;background-color:#fff;border-radius:50%;position:absolute;top:-8px;left:calc(50% - 8px);box-sizing:content-box;border-width:4px;border-style:solid;border-color:#00bfff}@supports (border-color: var(--clock-hand-color)){.clock-face__clock-hand_minute[_ngcontent-%COMP%]:before{border-color:var(--clock-hand-color)}}@media (max-device-width: 1023px) and (orientation: landscape){.clock-face[_ngcontent-%COMP%]{width:225px;height:225px;padding:5px}.clock-face__number--outer[_ngcontent-%COMP%]{height:calc(225px / 2 - 5px)}.clock-face__clock-hand_minute[_ngcontent-%COMP%]:before{top:0}}\"],\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxMaterialTimepickerFaceComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-material-timepicker-face',\n      templateUrl: './ngx-material-timepicker-face.component.html',\n      styleUrls: ['./ngx-material-timepicker-face.component.scss'],\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    faceTime: [{\n      type: Input\n    }],\n    selectedTime: [{\n      type: Input\n    }],\n    unit: [{\n      type: Input\n    }],\n    format: [{\n      type: Input\n    }],\n    minutesGap: [{\n      type: Input\n    }],\n    timeChange: [{\n      type: Output\n    }],\n    timeSelected: [{\n      type: Output\n    }],\n    clockFace: [{\n      type: ViewChild,\n      args: ['clockFace', {\n        static: true\n      }]\n    }],\n    clockHand: [{\n      type: ViewChild,\n      args: ['clockHand', {\n        static: true\n      }]\n    }],\n    onMousedown: [{\n      type: HostListener,\n      args: ['mousedown', ['$event']]\n    }],\n    selectTime: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }, {\n      type: HostListener,\n      args: ['touchmove', ['$event.changedTouches[0]']]\n    }, {\n      type: HostListener,\n      args: ['touchend', ['$event.changedTouches[0]']]\n    }, {\n      type: HostListener,\n      args: ['mousemove', ['$event']]\n    }],\n    onMouseup: [{\n      type: HostListener,\n      args: ['mouseup', ['$event']]\n    }]\n  });\n})();\nfunction roundAngle(angle, step) {\n  return Math.round(angle / step) * step;\n}\nfunction countAngleByCords(x0, y0, x, y, currentAngle) {\n  if (y > y0 && x >= x0) {\n    // II quarter\n    return 180 - currentAngle;\n  } else if (y > y0 && x < x0) {\n    // III quarter\n    return 180 + currentAngle;\n  } else if (y < y0 && x < x0) {\n    // IV quarter\n    return 360 - currentAngle;\n  } else {\n    // I quarter\n    return currentAngle;\n  }\n}\nclass NgxMaterialTimepicker24HoursFaceComponent extends NgxMaterialTimepickerHoursFace {\n  constructor() {\n    super(24);\n  }\n  ngAfterContentInit() {\n    this.hoursList = TimepickerTimeUtils.disableHours(this.hoursList, {\n      min: this.minTime,\n      max: this.maxTime,\n      format: this.format\n    });\n  }\n}\nNgxMaterialTimepicker24HoursFaceComponent.ɵfac = function NgxMaterialTimepicker24HoursFaceComponent_Factory(t) {\n  return new (t || NgxMaterialTimepicker24HoursFaceComponent)();\n};\nNgxMaterialTimepicker24HoursFaceComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgxMaterialTimepicker24HoursFaceComponent,\n  selectors: [[\"ngx-material-timepicker-24-hours-face\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 3,\n  consts: [[3, \"selectedTime\", \"faceTime\", \"format\", \"timeChange\", \"timeSelected\"]],\n  template: function NgxMaterialTimepicker24HoursFaceComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-material-timepicker-face\", 0);\n      i0.ɵɵlistener(\"timeChange\", function NgxMaterialTimepicker24HoursFaceComponent_Template_ngx_material_timepicker_face_timeChange_0_listener($event) {\n        return ctx.hourChange.next($event);\n      })(\"timeSelected\", function NgxMaterialTimepicker24HoursFaceComponent_Template_ngx_material_timepicker_face_timeSelected_0_listener($event) {\n        return ctx.onTimeSelected($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"selectedTime\", ctx.selectedHour)(\"faceTime\", ctx.hoursList)(\"format\", ctx.format);\n    }\n  },\n  dependencies: [NgxMaterialTimepickerFaceComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxMaterialTimepicker24HoursFaceComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-material-timepicker-24-hours-face',\n      templateUrl: 'ngx-material-timepicker-24-hours-face.component.html',\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\nclass NgxMaterialTimepicker12HoursFaceComponent extends NgxMaterialTimepickerHoursFace {\n  constructor() {\n    super(12);\n  }\n  ngOnChanges(changes) {\n    if (changes['period'] && changes['period'].currentValue) {\n      this.hoursList = TimepickerTimeUtils.disableHours(this.hoursList, {\n        min: this.minTime,\n        max: this.maxTime,\n        format: this.format,\n        period: this.period\n      });\n    }\n  }\n}\nNgxMaterialTimepicker12HoursFaceComponent.ɵfac = function NgxMaterialTimepicker12HoursFaceComponent_Factory(t) {\n  return new (t || NgxMaterialTimepicker12HoursFaceComponent)();\n};\nNgxMaterialTimepicker12HoursFaceComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgxMaterialTimepicker12HoursFaceComponent,\n  selectors: [[\"ngx-material-timepicker-12-hours-face\"]],\n  inputs: {\n    period: \"period\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 2,\n  consts: [[3, \"selectedTime\", \"faceTime\", \"timeChange\", \"timeSelected\"]],\n  template: function NgxMaterialTimepicker12HoursFaceComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-material-timepicker-face\", 0);\n      i0.ɵɵlistener(\"timeChange\", function NgxMaterialTimepicker12HoursFaceComponent_Template_ngx_material_timepicker_face_timeChange_0_listener($event) {\n        return ctx.hourChange.next($event);\n      })(\"timeSelected\", function NgxMaterialTimepicker12HoursFaceComponent_Template_ngx_material_timepicker_face_timeSelected_0_listener($event) {\n        return ctx.onTimeSelected($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"selectedTime\", ctx.selectedHour)(\"faceTime\", ctx.hoursList);\n    }\n  },\n  dependencies: [NgxMaterialTimepickerFaceComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxMaterialTimepicker12HoursFaceComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-material-timepicker-12-hours-face',\n      templateUrl: 'ngx-material-timepicker-12-hours-face.component.html',\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [];\n  }, {\n    period: [{\n      type: Input\n    }]\n  });\n})();\nclass NgxMaterialTimepickerMinutesFaceComponent {\n  constructor() {\n    this.minutesList = [];\n    this.timeUnit = TimeUnit;\n    this.minuteChange = new EventEmitter();\n  }\n  ngOnChanges(changes) {\n    if (changes['period'] && changes['period'].currentValue) {\n      const minutes = TimepickerTimeUtils.getMinutes(this.minutesGap);\n      this.minutesList = TimepickerTimeUtils.disableMinutes(minutes, this.selectedHour, {\n        min: this.minTime,\n        max: this.maxTime,\n        format: this.format,\n        period: this.period\n      });\n    }\n  }\n}\nNgxMaterialTimepickerMinutesFaceComponent.ɵfac = function NgxMaterialTimepickerMinutesFaceComponent_Factory(t) {\n  return new (t || NgxMaterialTimepickerMinutesFaceComponent)();\n};\nNgxMaterialTimepickerMinutesFaceComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgxMaterialTimepickerMinutesFaceComponent,\n  selectors: [[\"ngx-material-timepicker-minutes-face\"]],\n  inputs: {\n    selectedMinute: \"selectedMinute\",\n    selectedHour: \"selectedHour\",\n    period: \"period\",\n    minTime: \"minTime\",\n    maxTime: \"maxTime\",\n    format: \"format\",\n    minutesGap: \"minutesGap\"\n  },\n  outputs: {\n    minuteChange: \"minuteChange\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 4,\n  consts: [[3, \"faceTime\", \"selectedTime\", \"minutesGap\", \"unit\", \"timeChange\"]],\n  template: function NgxMaterialTimepickerMinutesFaceComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-material-timepicker-face\", 0);\n      i0.ɵɵlistener(\"timeChange\", function NgxMaterialTimepickerMinutesFaceComponent_Template_ngx_material_timepicker_face_timeChange_0_listener($event) {\n        return ctx.minuteChange.next($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"faceTime\", ctx.minutesList)(\"selectedTime\", ctx.selectedMinute)(\"minutesGap\", ctx.minutesGap)(\"unit\", ctx.timeUnit.MINUTE);\n    }\n  },\n  dependencies: [NgxMaterialTimepickerFaceComponent],\n  encapsulation: 2\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxMaterialTimepickerMinutesFaceComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-material-timepicker-minutes-face',\n      templateUrl: './ngx-material-timepicker-minutes-face.component.html'\n    }]\n  }], null, {\n    selectedMinute: [{\n      type: Input\n    }],\n    selectedHour: [{\n      type: Input\n    }],\n    period: [{\n      type: Input\n    }],\n    minTime: [{\n      type: Input\n    }],\n    maxTime: [{\n      type: Input\n    }],\n    format: [{\n      type: Input\n    }],\n    minutesGap: [{\n      type: Input\n    }],\n    minuteChange: [{\n      type: Output\n    }]\n  });\n})();\nclass NgxMaterialTimepickerButtonComponent {}\nNgxMaterialTimepickerButtonComponent.ɵfac = function NgxMaterialTimepickerButtonComponent_Factory(t) {\n  return new (t || NgxMaterialTimepickerButtonComponent)();\n};\nNgxMaterialTimepickerButtonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgxMaterialTimepickerButtonComponent,\n  selectors: [[\"ngx-material-timepicker-button\"]],\n  ngContentSelectors: _c0,\n  decls: 3,\n  vars: 0,\n  consts: [[\"type\", \"button\", 1, \"timepicker-button\"]],\n  template: function NgxMaterialTimepickerButtonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"button\", 0)(1, \"span\");\n      i0.ɵɵprojection(2);\n      i0.ɵɵelementEnd()();\n    }\n  },\n  styles: [\".timepicker-button[_ngcontent-%COMP%]{display:inline-block;height:36px;min-width:88px;line-height:36px;border:12px;border-radius:2px;background-color:transparent;text-align:center;transition:all .45s cubic-bezier(.23,1,.32,1);overflow:hidden;-webkit-user-select:none;-moz-user-select:none;user-select:none;position:relative;cursor:pointer;outline:none;color:#00bfff}@supports (color: var(--button-color)){.timepicker-button[_ngcontent-%COMP%]{color:var(--button-color)}}.timepicker-button[_ngcontent-%COMP%]:hover, .timepicker-button[_ngcontent-%COMP%]:focus{background-color:#9993}.timepicker-button[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{font-size:14px;text-transform:uppercase;font-weight:600;padding-left:16px;padding-right:16px;font-family:\\\"Roboto\\\",sans-serif}@supports (font-family: var(--primary-font-family)){.timepicker-button[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{font-family:var(--primary-font-family)}}\"]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxMaterialTimepickerButtonComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-material-timepicker-button',\n      templateUrl: './ngx-material-timepicker-button.component.html',\n      styleUrls: ['./ngx-material-timepicker-button.component.scss']\n    }]\n  }], null, null);\n})();\nclass OverlayDirective {\n  constructor(eventService) {\n    this.eventService = eventService;\n  }\n  onClick(e) {\n    if (!this.preventClick) {\n      this.eventService.dispatchEvent(e);\n    }\n    e.preventDefault();\n  }\n}\nOverlayDirective.ɵfac = function OverlayDirective_Factory(t) {\n  return new (t || OverlayDirective)(i0.ɵɵdirectiveInject(NgxMaterialTimepickerEventService));\n};\nOverlayDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: OverlayDirective,\n  selectors: [[\"\", \"overlay\", \"\"]],\n  hostBindings: function OverlayDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function OverlayDirective_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n  },\n  inputs: {\n    preventClick: [\"overlay\", \"preventClick\"]\n  }\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OverlayDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[overlay]'\n    }]\n  }], function () {\n    return [{\n      type: NgxMaterialTimepickerEventService\n    }];\n  }, {\n    preventClick: [{\n      type: Input,\n      args: ['overlay']\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\nclass NgxMaterialTimepickerThemeDirective {\n  constructor(elementRef) {\n    this.element = elementRef.nativeElement;\n  }\n  ngAfterViewInit() {\n    if (this.theme) {\n      this.setTheme(this.theme);\n    }\n  }\n  setTheme(theme) {\n    for (const val in theme) {\n      if (theme.hasOwnProperty(val)) {\n        if (typeof theme[val] === 'string') {\n          for (const prop in theme) {\n            if (theme.hasOwnProperty(prop)) {\n              this.element.style.setProperty(`--${camelCaseToDash(prop)}`, theme[prop]);\n            }\n          }\n          return;\n        }\n        this.setTheme(theme[val]);\n      }\n    }\n  }\n}\nNgxMaterialTimepickerThemeDirective.ɵfac = function NgxMaterialTimepickerThemeDirective_Factory(t) {\n  return new (t || NgxMaterialTimepickerThemeDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nNgxMaterialTimepickerThemeDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgxMaterialTimepickerThemeDirective,\n  selectors: [[\"\", \"ngxMaterialTimepickerTheme\", \"\"]],\n  inputs: {\n    theme: [\"ngxMaterialTimepickerTheme\", \"theme\"]\n  }\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxMaterialTimepickerThemeDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngxMaterialTimepickerTheme]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    theme: [{\n      type: Input,\n      args: ['ngxMaterialTimepickerTheme']\n    }]\n  });\n})();\nfunction camelCaseToDash(myStr) {\n  return myStr.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\nvar AnimationState;\n(function (AnimationState) {\n  AnimationState[\"ENTER\"] = \"enter\";\n  AnimationState[\"LEAVE\"] = \"leave\";\n})(AnimationState || (AnimationState = {}));\nclass NgxMaterialTimepickerContainerComponent {\n  constructor(timepickerService, eventService, locale) {\n    this.timepickerService = timepickerService;\n    this.eventService = eventService;\n    this.locale = locale;\n    this.timeUnit = TimeUnit;\n    this.activeTimeUnit = TimeUnit.HOUR;\n    this.unsubscribe = new Subject();\n  }\n  set defaultTime(time) {\n    this._defaultTime = time;\n    this.setDefaultTime(time);\n  }\n  get defaultTime() {\n    return this._defaultTime;\n  }\n  onKeydown(e) {\n    this.eventService.dispatchEvent(e);\n    e.stopPropagation();\n  }\n  ngOnInit() {\n    this.animationState = !this.disableAnimation && AnimationState.ENTER;\n    this.defineTime();\n    this.selectedHour = this.timepickerService.selectedHour.pipe(shareReplay({\n      bufferSize: 1,\n      refCount: true\n    }));\n    this.selectedMinute = this.timepickerService.selectedMinute.pipe(shareReplay({\n      bufferSize: 1,\n      refCount: true\n    }));\n    this.selectedPeriod = this.timepickerService.selectedPeriod.pipe(shareReplay({\n      bufferSize: 1,\n      refCount: true\n    }));\n    this.timepickerBaseRef.timeUpdated.pipe(takeUntil(this.unsubscribe)).subscribe(this.setDefaultTime.bind(this));\n  }\n  onHourChange(hour) {\n    this.timepickerService.hour = hour;\n    this.onTimeChange();\n  }\n  onHourSelected(hour) {\n    if (!this.hoursOnly) {\n      this.changeTimeUnit(TimeUnit.MINUTE);\n    }\n    this.timepickerBaseRef.hourSelected.next(hour);\n  }\n  onMinuteChange(minute) {\n    this.timepickerService.minute = minute;\n    this.onTimeChange();\n  }\n  changePeriod(period) {\n    this.timepickerService.period = period;\n    this.onTimeChange();\n  }\n  changeTimeUnit(unit) {\n    this.activeTimeUnit = unit;\n  }\n  setTime() {\n    this.timepickerBaseRef.timeSet.next(this.timepickerService.getFullTime(this.format));\n    this.close();\n  }\n  close() {\n    if (this.disableAnimation) {\n      this.timepickerBaseRef.close();\n      return;\n    }\n    this.animationState = AnimationState.LEAVE;\n  }\n  animationDone(event) {\n    if (event.phaseName === 'done' && event.toState === AnimationState.LEAVE) {\n      this.timepickerBaseRef.close();\n    }\n  }\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n  setDefaultTime(time) {\n    this.timepickerService.setDefaultTimeIfAvailable(time, this.minTime, this.maxTime, this.format, this.minutesGap);\n  }\n  defineTime() {\n    const minTime = this.minTime;\n    if (minTime && !this.time && !this.defaultTime) {\n      const time = TimeAdapter.fromDateTimeToString(minTime, this.format);\n      this.setDefaultTime(time);\n    }\n  }\n  onTimeChange() {\n    const time = TimeAdapter.toLocaleTimeString(this.timepickerService.getFullTime(this.format), {\n      locale: this.locale,\n      format: this.format\n    });\n    this.timepickerBaseRef.timeChanged.emit(time);\n  }\n}\nNgxMaterialTimepickerContainerComponent.ɵfac = function NgxMaterialTimepickerContainerComponent_Factory(t) {\n  return new (t || NgxMaterialTimepickerContainerComponent)(i0.ɵɵdirectiveInject(NgxMaterialTimepickerService), i0.ɵɵdirectiveInject(NgxMaterialTimepickerEventService), i0.ɵɵdirectiveInject(TIME_LOCALE));\n};\nNgxMaterialTimepickerContainerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgxMaterialTimepickerContainerComponent,\n  selectors: [[\"ngx-material-timepicker-container\"]],\n  hostBindings: function NgxMaterialTimepickerContainerComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown\", function NgxMaterialTimepickerContainerComponent_keydown_HostBindingHandler($event) {\n        return ctx.onKeydown($event);\n      });\n    }\n  },\n  inputs: {\n    defaultTime: \"defaultTime\"\n  },\n  features: [i0.ɵɵProvidersFeature([NgxMaterialTimepickerService])],\n  decls: 22,\n  vars: 31,\n  consts: [[1, \"timepicker-backdrop-overlay\", 3, \"overlay\", \"ngClass\"], [1, \"timepicker-overlay\"], [3, \"appendToInput\", \"inputElement\", \"ngxMaterialTimepickerTheme\"], [1, \"timepicker\", 3, \"ngClass\"], [1, \"timepicker__header\"], [3, \"format\", \"hour\", \"minute\", \"period\", \"activeTimeUnit\", \"minTime\", \"maxTime\", \"isEditable\", \"editableHintTmpl\", \"minutesGap\", \"hoursOnly\", \"periodChanged\", \"timeUnitChanged\", \"hourChanged\", \"minuteChanged\"], [1, \"timepicker__main-content\"], [1, \"timepicker__body\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [3, \"selectedMinute\", \"selectedHour\", \"minTime\", \"maxTime\", \"format\", \"period\", \"minutesGap\", \"minuteChange\", 4, \"ngSwitchCase\"], [1, \"timepicker__actions\"], [3, \"click\"], [4, \"ngTemplateOutlet\"], [\"cancelBtnDefault\", \"\"], [\"confirmBtnDefault\", \"\"], [3, \"selectedHour\", \"minTime\", \"maxTime\", \"format\", \"hourChange\", \"hourSelected\", 4, \"ngIf\", \"ngIfElse\"], [\"ampmHours\", \"\"], [3, \"selectedHour\", \"minTime\", \"maxTime\", \"format\", \"hourChange\", \"hourSelected\"], [3, \"selectedHour\", \"period\", \"minTime\", \"maxTime\", \"hourChange\", \"hourSelected\"], [3, \"selectedMinute\", \"selectedHour\", \"minTime\", \"maxTime\", \"format\", \"period\", \"minutesGap\", \"minuteChange\"]],\n  template: function NgxMaterialTimepickerContainerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"ngx-material-timepicker-content\", 2)(3, \"div\", 3);\n      i0.ɵɵlistener(\"@timepicker.done\", function NgxMaterialTimepickerContainerComponent_Template_div_animation_timepicker_done_3_listener($event) {\n        return ctx.animationDone($event);\n      });\n      i0.ɵɵelementStart(4, \"header\", 4)(5, \"ngx-material-timepicker-dial\", 5);\n      i0.ɵɵlistener(\"periodChanged\", function NgxMaterialTimepickerContainerComponent_Template_ngx_material_timepicker_dial_periodChanged_5_listener($event) {\n        return ctx.changePeriod($event);\n      })(\"timeUnitChanged\", function NgxMaterialTimepickerContainerComponent_Template_ngx_material_timepicker_dial_timeUnitChanged_5_listener($event) {\n        return ctx.changeTimeUnit($event);\n      })(\"hourChanged\", function NgxMaterialTimepickerContainerComponent_Template_ngx_material_timepicker_dial_hourChanged_5_listener($event) {\n        return ctx.onHourChange($event);\n      })(\"minuteChanged\", function NgxMaterialTimepickerContainerComponent_Template_ngx_material_timepicker_dial_minuteChanged_5_listener($event) {\n        return ctx.onMinuteChange($event);\n      });\n      i0.ɵɵpipe(6, \"async\");\n      i0.ɵɵpipe(7, \"async\");\n      i0.ɵɵpipe(8, \"async\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 6)(10, \"div\", 7);\n      i0.ɵɵtemplate(11, NgxMaterialTimepickerContainerComponent_div_11_Template, 4, 2, \"div\", 8)(12, NgxMaterialTimepickerContainerComponent_ngx_material_timepicker_minutes_face_12_Template, 4, 13, \"ngx-material-timepicker-minutes-face\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 10)(14, \"div\", 11);\n      i0.ɵɵlistener(\"click\", function NgxMaterialTimepickerContainerComponent_Template_div_click_14_listener() {\n        return ctx.close();\n      });\n      i0.ɵɵtemplate(15, NgxMaterialTimepickerContainerComponent_ng_container_15_Template, 1, 0, \"ng-container\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 11);\n      i0.ɵɵlistener(\"click\", function NgxMaterialTimepickerContainerComponent_Template_div_click_16_listener() {\n        return ctx.setTime();\n      });\n      i0.ɵɵtemplate(17, NgxMaterialTimepickerContainerComponent_ng_container_17_Template, 1, 0, \"ng-container\", 12);\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵtemplate(18, NgxMaterialTimepickerContainerComponent_ng_template_18_Template, 2, 0, \"ng-template\", null, 13, i0.ɵɵtemplateRefExtractor)(20, NgxMaterialTimepickerContainerComponent_ng_template_20_Template, 2, 0, \"ng-template\", null, 14, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      const _r5 = i0.ɵɵreference(19);\n      const _r7 = i0.ɵɵreference(21);\n      let tmp_8_0;\n      let tmp_9_0;\n      i0.ɵɵproperty(\"overlay\", ctx.preventOverlayClick)(\"ngClass\", i0.ɵɵpureFunction1(29, _c10, ctx.appendToInput));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"appendToInput\", ctx.appendToInput)(\"inputElement\", ctx.inputElement)(\"ngxMaterialTimepickerTheme\", ctx.theme);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"@timepicker\", ctx.animationState)(\"ngClass\", ctx.timepickerClass);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"format\", ctx.format)(\"hour\", (tmp_8_0 = i0.ɵɵpipeBind1(6, 23, ctx.selectedHour)) == null ? null : tmp_8_0.time)(\"minute\", (tmp_9_0 = i0.ɵɵpipeBind1(7, 25, ctx.selectedMinute)) == null ? null : tmp_9_0.time)(\"period\", i0.ɵɵpipeBind1(8, 27, ctx.selectedPeriod))(\"activeTimeUnit\", ctx.activeTimeUnit)(\"minTime\", ctx.minTime)(\"maxTime\", ctx.maxTime)(\"isEditable\", ctx.enableKeyboardInput)(\"editableHintTmpl\", ctx.editableHintTmpl)(\"minutesGap\", ctx.minutesGap)(\"hoursOnly\", ctx.hoursOnly);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngSwitch\", ctx.activeTimeUnit);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", ctx.timeUnit.HOUR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", ctx.timeUnit.MINUTE);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.cancelBtnTmpl ? ctx.cancelBtnTmpl : _r5);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.confirmBtnTmpl ? ctx.confirmBtnTmpl : _r7);\n    }\n  },\n  dependencies: [NgxMaterialTimepickerContentComponent, NgxMaterialTimepickerDialComponent, NgxMaterialTimepicker24HoursFaceComponent, NgxMaterialTimepicker12HoursFaceComponent, NgxMaterialTimepickerMinutesFaceComponent, NgxMaterialTimepickerButtonComponent, OverlayDirective, i1.NgClass, NgxMaterialTimepickerThemeDirective, i1.NgSwitch, i1.NgSwitchCase, i1.NgIf, i1.NgTemplateOutlet, i1.AsyncPipe],\n  styles: [\"[_nghost-%COMP%]{--body-background-color: #fff;--primary-font-family: \\\"Roboto\\\", sans-serif;--button-color: deepskyblue;--dial-active-color: #fff;--dial-inactive-color: rgba(255, 255, 255, .5);--dial-background-color: deepskyblue;--dial-editable-active-color: deepskyblue;--dial-editable-background-color: #fff;--clock-face-time-active-color: #fff;--clock-face-time-inactive-color: #6c6c6c;--clock-face-inner-time-inactive-color: #929292;--clock-face-time-disabled-color: #c5c5c5;--clock-face-background-color: #f0f0f0;--clock-hand-color: deepskyblue}.timepicker-backdrop-overlay[_ngcontent-%COMP%]{position:fixed;top:0;bottom:0;right:0;left:0;background-color:#0000004d;z-index:999;pointer-events:auto}.timepicker-backdrop-overlay--transparent[_ngcontent-%COMP%]{background-color:transparent}.timepicker-overlay[_ngcontent-%COMP%]{position:fixed;top:0;left:0;width:100%;height:100%;display:flex;justify-content:center;align-items:center;z-index:999;pointer-events:none}.timepicker[_ngcontent-%COMP%]{width:300px;border-radius:2px;box-shadow:#00000040 0 14px 45px,#00000038 0 10px 18px;outline:none;position:static;z-index:999;pointer-events:auto}.timepicker__header[_ngcontent-%COMP%]{padding:15px 30px;background-color:#00bfff}@supports (background-color: var(--dial-background-color)){.timepicker__header[_ngcontent-%COMP%]{background-color:var(--dial-background-color)}}.timepicker__body[_ngcontent-%COMP%]{padding:15px 5px;display:flex;justify-content:center;align-items:center;background-color:#fff}@supports (background-color: var(--body-background-color)){.timepicker__body[_ngcontent-%COMP%]{background-color:var(--body-background-color)}}.timepicker__actions[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;padding:15px;background-color:#fff}@supports (background-color: var(--body-background-color)){.timepicker__actions[_ngcontent-%COMP%]{background-color:var(--body-background-color)}}@media (max-device-width: 1023px) and (orientation: landscape){.timepicker[_ngcontent-%COMP%]{display:flex;width:515px}.timepicker__header[_ngcontent-%COMP%]{display:flex;align-items:center}.timepicker__main-content[_ngcontent-%COMP%]{display:flex;flex-direction:column;width:100%}.timepicker__actions[_ngcontent-%COMP%]{padding:5px;margin-top:-1px}}\"],\n  data: {\n    animation: [trigger('timepicker', [transition(`* => ${AnimationState.ENTER}`, [style({\n      transform: 'translateY(-30%)'\n    }), animate('0.2s ease-out', style({\n      transform: 'translateY(0)'\n    }))]), transition(`${AnimationState.ENTER} => ${AnimationState.LEAVE}`, [style({\n      transform: 'translateY(0)',\n      opacity: 1\n    }), animate('0.2s ease-out', style({\n      transform: 'translateY(-30%)',\n      opacity: 0\n    }))])])]\n  }\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxMaterialTimepickerContainerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-material-timepicker-container',\n      templateUrl: './ngx-material-timepicker-container.component.html',\n      styleUrls: ['./ngx-material-timepicker-container.component.scss'],\n      animations: [trigger('timepicker', [transition(`* => ${AnimationState.ENTER}`, [style({\n        transform: 'translateY(-30%)'\n      }), animate('0.2s ease-out', style({\n        transform: 'translateY(0)'\n      }))]), transition(`${AnimationState.ENTER} => ${AnimationState.LEAVE}`, [style({\n        transform: 'translateY(0)',\n        opacity: 1\n      }), animate('0.2s ease-out', style({\n        transform: 'translateY(-30%)',\n        opacity: 0\n      }))])])],\n      providers: [NgxMaterialTimepickerService]\n    }]\n  }], function () {\n    return [{\n      type: NgxMaterialTimepickerService\n    }, {\n      type: NgxMaterialTimepickerEventService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TIME_LOCALE]\n      }]\n    }];\n  }, {\n    defaultTime: [{\n      type: Input\n    }],\n    onKeydown: [{\n      type: HostListener,\n      args: ['keydown', ['$event']]\n    }]\n  });\n})();\nclass DomService {\n  constructor(cfr, appRef, injector, document) {\n    this.cfr = cfr;\n    this.appRef = appRef;\n    this.injector = injector;\n    this.document = document;\n  }\n  appendTimepickerToBody(timepicker, config) {\n    this.componentRef = this.cfr.resolveComponentFactory(timepicker).create(this.injector);\n    Object.keys(config).forEach(key => this.componentRef.instance[key] = config[key]);\n    this.appRef.attachView(this.componentRef.hostView);\n    const domElement = this.componentRef.hostView.rootNodes[0];\n    this.document.body.appendChild(domElement);\n  }\n  destroyTimepicker() {\n    this.componentRef.destroy();\n    this.appRef.detachView(this.componentRef.hostView);\n  }\n}\nDomService.ɵfac = function DomService_Factory(t) {\n  return new (t || DomService)(i0.ɵɵinject(i0.ComponentFactoryResolver), i0.ɵɵinject(i0.ApplicationRef), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(DOCUMENT, 8));\n};\nDomService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DomService,\n  factory: DomService.ɵfac,\n  providedIn: 'root'\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DomService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.ComponentFactoryResolver\n    }, {\n      type: i0.ApplicationRef\n    }, {\n      type: i0.Injector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\nconst ESCAPE = 27;\nclass NgxMaterialTimepickerComponent {\n  constructor(eventService, domService) {\n    this.eventService = eventService;\n    this.domService = domService;\n    this.timeUpdated = new Subject();\n    this.isEsc = true;\n    this.hoursOnly = false;\n    this.timeSet = new EventEmitter();\n    this.opened = new EventEmitter();\n    this.closed = new EventEmitter();\n    this.hourSelected = new EventEmitter();\n    this.timeChanged = new EventEmitter();\n    this.unsubscribe = new Subject();\n  }\n  /**\n   * @deprecated Since version 5.1.1. Will be deleted on version 6.0.0. Use @Input() theme instead\n   */\n  set ngxMaterialTimepickerTheme(theme) {\n    console.warn(`'ngxMaterialTimepickerTheme' is deprecated. Use 'theme' instead`);\n    this._ngxMaterialTimepickerTheme = theme;\n  }\n  set format(value) {\n    this._format = value === 24 ? 24 : 12;\n  }\n  get format() {\n    return this.timepickerInput ? this.timepickerInput.format : this._format;\n  }\n  set minutesGap(gap) {\n    if (gap == null) {\n      return;\n    }\n    gap = Math.floor(gap);\n    this._minutesGap = gap <= 59 ? gap : 1;\n  }\n  get minutesGap() {\n    return this._minutesGap;\n  }\n  get minTime() {\n    return this.timepickerInput ? this.timepickerInput.min : this.min;\n  }\n  get maxTime() {\n    return this.timepickerInput ? this.timepickerInput.max : this.max;\n  }\n  get disabled() {\n    return this.timepickerInput && this.timepickerInput.disabled;\n  }\n  get time() {\n    return this.timepickerInput && this.timepickerInput.value;\n  }\n  get inputElement() {\n    return this.timepickerInput && this.timepickerInput.element;\n  }\n  /***\n   * Register an input with this timepicker.\n   * input - The timepicker input to register with this timepicker\n   */\n  registerInput(input) {\n    if (this.timepickerInput) {\n      throw Error('A Timepicker can only be associated with a single input.');\n    }\n    this.timepickerInput = input;\n  }\n  open() {\n    this.domService.appendTimepickerToBody(NgxMaterialTimepickerContainerComponent, {\n      timepickerBaseRef: this,\n      time: this.time,\n      defaultTime: this.defaultTime,\n      maxTime: this.maxTime,\n      minTime: this.minTime,\n      format: this.format,\n      minutesGap: this.minutesGap,\n      disableAnimation: this.disableAnimation,\n      cancelBtnTmpl: this.cancelBtnTmpl,\n      confirmBtnTmpl: this.confirmBtnTmpl,\n      editableHintTmpl: this.editableHintTmpl,\n      disabled: this.disabled,\n      enableKeyboardInput: this.enableKeyboardInput,\n      preventOverlayClick: this.preventOverlayClick,\n      appendToInput: this.appendToInput,\n      hoursOnly: this.hoursOnly,\n      theme: this.theme || this._ngxMaterialTimepickerTheme,\n      timepickerClass: this.timepickerClass,\n      inputElement: this.inputElement\n    });\n    this.opened.next();\n    this.subscribeToEvents();\n  }\n  close() {\n    this.domService.destroyTimepicker();\n    this.closed.next();\n    this.unsubscribeFromEvents();\n  }\n  updateTime(time) {\n    this.timeUpdated.next(time);\n  }\n  subscribeToEvents() {\n    merge(this.eventService.backdropClick, this.eventService.keydownEvent.pipe(filter(e => e.keyCode === ESCAPE && this.isEsc))).pipe(takeUntil(this.unsubscribe)).subscribe(() => this.close());\n  }\n  unsubscribeFromEvents() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n}\nNgxMaterialTimepickerComponent.ɵfac = function NgxMaterialTimepickerComponent_Factory(t) {\n  return new (t || NgxMaterialTimepickerComponent)(i0.ɵɵdirectiveInject(NgxMaterialTimepickerEventService), i0.ɵɵdirectiveInject(DomService));\n};\nNgxMaterialTimepickerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgxMaterialTimepickerComponent,\n  selectors: [[\"ngx-material-timepicker\"]],\n  inputs: {\n    cancelBtnTmpl: \"cancelBtnTmpl\",\n    editableHintTmpl: \"editableHintTmpl\",\n    confirmBtnTmpl: \"confirmBtnTmpl\",\n    isEsc: [\"ESC\", \"isEsc\"],\n    enableKeyboardInput: \"enableKeyboardInput\",\n    preventOverlayClick: \"preventOverlayClick\",\n    disableAnimation: \"disableAnimation\",\n    appendToInput: \"appendToInput\",\n    hoursOnly: \"hoursOnly\",\n    defaultTime: \"defaultTime\",\n    timepickerClass: \"timepickerClass\",\n    theme: \"theme\",\n    min: \"min\",\n    max: \"max\",\n    ngxMaterialTimepickerTheme: \"ngxMaterialTimepickerTheme\",\n    format: \"format\",\n    minutesGap: \"minutesGap\"\n  },\n  outputs: {\n    timeSet: \"timeSet\",\n    opened: \"opened\",\n    closed: \"closed\",\n    hourSelected: \"hourSelected\",\n    timeChanged: \"timeChanged\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function NgxMaterialTimepickerComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxMaterialTimepickerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-material-timepicker',\n      template: ''\n    }]\n  }], function () {\n    return [{\n      type: NgxMaterialTimepickerEventService\n    }, {\n      type: DomService\n    }];\n  }, {\n    cancelBtnTmpl: [{\n      type: Input\n    }],\n    editableHintTmpl: [{\n      type: Input\n    }],\n    confirmBtnTmpl: [{\n      type: Input\n    }],\n    isEsc: [{\n      type: Input,\n      args: ['ESC']\n    }],\n    enableKeyboardInput: [{\n      type: Input\n    }],\n    preventOverlayClick: [{\n      type: Input\n    }],\n    disableAnimation: [{\n      type: Input\n    }],\n    appendToInput: [{\n      type: Input\n    }],\n    hoursOnly: [{\n      type: Input\n    }],\n    defaultTime: [{\n      type: Input\n    }],\n    timepickerClass: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    ngxMaterialTimepickerTheme: [{\n      type: Input\n    }],\n    format: [{\n      type: Input\n    }],\n    minutesGap: [{\n      type: Input\n    }],\n    timeSet: [{\n      type: Output\n    }],\n    opened: [{\n      type: Output\n    }],\n    closed: [{\n      type: Output\n    }],\n    hourSelected: [{\n      type: Output\n    }],\n    timeChanged: [{\n      type: Output\n    }]\n  });\n})();\n\n/* To override a default toggle icon */\nclass NgxMaterialTimepickerToggleIconDirective {}\nNgxMaterialTimepickerToggleIconDirective.ɵfac = function NgxMaterialTimepickerToggleIconDirective_Factory(t) {\n  return new (t || NgxMaterialTimepickerToggleIconDirective)();\n};\nNgxMaterialTimepickerToggleIconDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgxMaterialTimepickerToggleIconDirective,\n  selectors: [[\"\", \"ngxMaterialTimepickerToggleIcon\", \"\"]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxMaterialTimepickerToggleIconDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngxMaterialTimepickerToggleIcon]'\n    }]\n  }], null, null);\n})();\nclass NgxMaterialTimepickerToggleComponent {\n  get disabled() {\n    return this._disabled === undefined ? this.timepicker.disabled : this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n  }\n  open(event) {\n    if (this.timepicker) {\n      this.timepicker.open();\n      event.stopPropagation();\n    }\n  }\n}\nNgxMaterialTimepickerToggleComponent.ɵfac = function NgxMaterialTimepickerToggleComponent_Factory(t) {\n  return new (t || NgxMaterialTimepickerToggleComponent)();\n};\nNgxMaterialTimepickerToggleComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgxMaterialTimepickerToggleComponent,\n  selectors: [[\"ngx-material-timepicker-toggle\"]],\n  contentQueries: function NgxMaterialTimepickerToggleComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgxMaterialTimepickerToggleIconDirective, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.customIcon = _t.first);\n    }\n  },\n  inputs: {\n    timepicker: [\"for\", \"timepicker\"],\n    disabled: \"disabled\"\n  },\n  ngContentSelectors: _c12,\n  decls: 3,\n  vars: 2,\n  consts: [[\"type\", \"button\", 1, \"ngx-material-timepicker-toggle\", 3, \"disabled\", \"click\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", 4, \"ngIf\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\"], [\"d\", \"M 12 2 C 6.4889971 2 2 6.4889971 2 12 C 2 17.511003                   6.4889971 22 12 22 C 17.511003 22 22 17.511003 22 12 C 22 6.4889971 17.511003 2 12 2 z M 12 4 C 16.430123 4 20 7.5698774 20 12 C 20 16.430123 16.430123 20 12 20 C 7.5698774 20 4 16.430123 4 12 C 4 7.5698774 7.5698774 4 12 4 z M 11 6 L 11 12.414062 L 15.292969 16.707031 L 16.707031 15.292969 L 13 11.585938 L 13 6 L 11 6 z\"]],\n  template: function NgxMaterialTimepickerToggleComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c11);\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function NgxMaterialTimepickerToggleComponent_Template_button_click_0_listener($event) {\n        return ctx.open($event);\n      });\n      i0.ɵɵtemplate(1, NgxMaterialTimepickerToggleComponent__svg_svg_1_Template, 2, 0, \"svg\", 1);\n      i0.ɵɵprojection(2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"disabled\", ctx.disabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.customIcon);\n    }\n  },\n  dependencies: [i1.NgIf],\n  styles: [\".ngx-material-timepicker-toggle[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;padding:4px;background-color:transparent;border-radius:50%;text-align:center;border:none;outline:none;-webkit-user-select:none;-moz-user-select:none;user-select:none;transition:background-color .3s;cursor:pointer}.ngx-material-timepicker-toggle[_ngcontent-%COMP%]:focus{background-color:#00000012}\"]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxMaterialTimepickerToggleComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-material-timepicker-toggle',\n      templateUrl: 'ngx-material-timepicker-toggle.component.html',\n      styleUrls: ['ngx-material-timepicker-toggle.component.scss']\n    }]\n  }], null, {\n    timepicker: [{\n      type: Input,\n      args: ['for']\n    }],\n    disabled: [{\n      type: Input\n    }],\n    customIcon: [{\n      type: ContentChild,\n      args: [NgxMaterialTimepickerToggleIconDirective, {\n        static: true\n      }]\n    }]\n  });\n})();\nclass TimepickerDirective {\n  constructor(elementRef, locale) {\n    this.elementRef = elementRef;\n    this.locale = locale;\n    this._format = 12;\n    this._value = '';\n    this.timepickerSubscriptions = [];\n    this.onTouched = () => {};\n    this.onChange = () => {};\n  }\n  set format(value) {\n    this._format = value === 24 ? 24 : 12;\n    const isDynamicallyChanged = value && this.previousFormat && this.previousFormat !== this._format;\n    if (isDynamicallyChanged) {\n      this.value = this._value;\n      this._timepicker.updateTime(this._value);\n    }\n    this.previousFormat = this._format;\n  }\n  get format() {\n    return this._format;\n  }\n  set min(value) {\n    console.log(value);\n    if (typeof value === 'string') {\n      this._min = TimeAdapter.parseTime(value, {\n        locale: this.locale,\n        format: this.format\n      });\n      return;\n    }\n    this._min = value;\n  }\n  get min() {\n    return this._min;\n  }\n  set max(value) {\n    if (typeof value === 'string') {\n      this._max = TimeAdapter.parseTime(value, {\n        locale: this.locale,\n        format: this.format\n      });\n      return;\n    }\n    this._max = value;\n  }\n  get max() {\n    return this._max;\n  }\n  set timepicker(picker) {\n    this.registerTimepicker(picker);\n  }\n  set value(value) {\n    if (!value) {\n      this._value = '';\n      this.updateInputValue();\n      return;\n    }\n    this.setTimeIfAvailable(value);\n  }\n  get value() {\n    if (!this._value) {\n      return '';\n    }\n    return TimeAdapter.toLocaleTimeString(this._value, {\n      format: this.format,\n      locale: this.locale\n    });\n  }\n  get element() {\n    return this.elementRef && this.elementRef.nativeElement;\n  }\n  set defaultTime(time) {\n    this._timepicker.defaultTime = TimeAdapter.formatTime(time, {\n      locale: this.locale,\n      format: this.format\n    });\n  }\n  updateValue(value) {\n    this.value = value;\n    this.onChange(value);\n  }\n  ngOnChanges(changes) {\n    var _a;\n    const value = (_a = changes === null || changes === void 0 ? void 0 : changes.value) === null || _a === void 0 ? void 0 : _a.currentValue;\n    if (value) {\n      // Call setTimeIfAvailable after @Input setters\n      this.setTimeIfAvailable(value);\n      this.defaultTime = value;\n    }\n  }\n  onClick(event) {\n    if (!this.disableClick) {\n      this._timepicker.open();\n      event.stopPropagation();\n    }\n  }\n  writeValue(value) {\n    this.value = value;\n    if (value) {\n      this.defaultTime = value;\n    }\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  ngOnDestroy() {\n    this.timepickerSubscriptions.forEach(s => s.unsubscribe());\n  }\n  registerTimepicker(picker) {\n    if (picker) {\n      this._timepicker = picker;\n      this._timepicker.registerInput(this);\n      this.timepickerSubscriptions.push(this._timepicker.timeSet.subscribe(time => {\n        this.value = time;\n        this.onChange(this.value);\n        this.onTouched();\n        this.defaultTime = this._value;\n      }));\n    } else {\n      throw new Error('NgxMaterialTimepickerComponent is not defined.' + ' Please make sure you passed the timepicker to ngxTimepicker directive');\n    }\n  }\n  updateInputValue() {\n    this.elementRef.nativeElement.value = this.value;\n  }\n  setTimeIfAvailable(value) {\n    var _a;\n    const time = TimeAdapter.formatTime(value, {\n      locale: this.locale,\n      format: this.format\n    });\n    const isAvailable = TimeAdapter.isTimeAvailable(time, this._min, this._max, 'minutes', (_a = this._timepicker) === null || _a === void 0 ? void 0 : _a.minutesGap, this._format);\n    if (isAvailable) {\n      this._value = time;\n      this.updateInputValue();\n    } else {\n      this.value = null;\n      console.warn('Selected time doesn\\'t match min or max value');\n    }\n  }\n}\nTimepickerDirective.ɵfac = function TimepickerDirective_Factory(t) {\n  return new (t || TimepickerDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(TIME_LOCALE));\n};\nTimepickerDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TimepickerDirective,\n  selectors: [[\"\", \"ngxTimepicker\", \"\"]],\n  hostVars: 1,\n  hostBindings: function TimepickerDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"change\", function TimepickerDirective_change_HostBindingHandler($event) {\n        return ctx.updateValue($event.target.value);\n      })(\"blur\", function TimepickerDirective_blur_HostBindingHandler() {\n        return ctx.onTouched();\n      })(\"click\", function TimepickerDirective_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    format: \"format\",\n    min: \"min\",\n    max: \"max\",\n    timepicker: [\"ngxTimepicker\", \"timepicker\"],\n    value: \"value\",\n    disabled: \"disabled\",\n    disableClick: \"disableClick\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: TimepickerDirective,\n    multi: true\n  }]), i0.ɵɵNgOnChangesFeature]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimepickerDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngxTimepicker]',\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: TimepickerDirective,\n        multi: true\n      }],\n      host: {\n        '[disabled]': 'disabled',\n        '(change)': 'updateValue($event.target.value)',\n        '(blur)': 'onTouched()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TIME_LOCALE]\n      }]\n    }];\n  }, {\n    format: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    timepicker: [{\n      type: Input,\n      args: ['ngxTimepicker']\n    }],\n    value: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    disableClick: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\nclass TimeFormatterPipe {\n  transform(time, timeUnit) {\n    if (time == null || time === '') {\n      return time;\n    }\n    switch (timeUnit) {\n      case TimeUnit.HOUR:\n        return DateTime.fromObject({\n          hour: +time\n        }).toFormat('HH');\n      case TimeUnit.MINUTE:\n        return DateTime.fromObject({\n          minute: +time\n        }).toFormat('mm');\n      default:\n        throw new Error('no such time unit');\n    }\n  }\n}\nTimeFormatterPipe.ɵfac = function TimeFormatterPipe_Factory(t) {\n  return new (t || TimeFormatterPipe)();\n};\nTimeFormatterPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"timeFormatter\",\n  type: TimeFormatterPipe,\n  pure: true\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimeFormatterPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'timeFormatter'\n    }]\n  }], null, null);\n})();\nclass NgxTimepickerTimeControlComponent {\n  constructor(timeParser) {\n    this.timeParser = timeParser;\n    this.timeChanged = new EventEmitter();\n  }\n  ngOnChanges(changes) {\n    if (changes.timeList && this.time != null) {\n      if (this.isSelectedTimeDisabled(this.time)) {\n        this.setAvailableTime();\n      }\n    }\n  }\n  changeTime(event) {\n    event.stopPropagation();\n    const char = String.fromCharCode(event.keyCode);\n    const time = concatTime(String(this.time), char);\n    this.changeTimeIfValid(time);\n  }\n  onKeydown(event) {\n    event.stopPropagation();\n    if (!isDigit(event)) {\n      event.preventDefault();\n    }\n    switch (event.key) {\n      case 'ArrowUp':\n        this.increase();\n        break;\n      case 'ArrowDown':\n        this.decrease();\n        break;\n    }\n    if (this.preventTyping && event.key !== 'Tab') {\n      event.preventDefault();\n    }\n  }\n  increase() {\n    if (!this.disabled) {\n      let nextTime = +this.time + (this.minutesGap || 1);\n      if (nextTime > this.max) {\n        nextTime = this.min;\n      }\n      if (this.isSelectedTimeDisabled(nextTime)) {\n        nextTime = this.getAvailableTime(nextTime, this.getNextAvailableTime.bind(this));\n      }\n      if (nextTime !== this.time) {\n        this.timeChanged.emit(nextTime);\n      }\n    }\n  }\n  decrease() {\n    if (!this.disabled) {\n      let previousTime = +this.time - (this.minutesGap || 1);\n      if (previousTime < this.min) {\n        previousTime = this.minutesGap ? this.max - (this.minutesGap - 1) : this.max;\n      }\n      if (this.isSelectedTimeDisabled(previousTime)) {\n        previousTime = this.getAvailableTime(previousTime, this.getPrevAvailableTime.bind(this));\n      }\n      if (previousTime !== this.time) {\n        this.timeChanged.emit(previousTime);\n      }\n    }\n  }\n  onFocus() {\n    this.isFocused = true;\n    this.previousTime = this.time;\n  }\n  onBlur() {\n    this.isFocused = false;\n    if (this.previousTime !== this.time) {\n      this.changeTimeIfValid(+this.time);\n    }\n  }\n  onModelChange(value) {\n    this.time = +this.timeParser.transform(value, this.timeUnit);\n  }\n  changeTimeIfValid(value) {\n    if (!isNaN(value)) {\n      this.time = value;\n      if (this.time > this.max) {\n        const timeString = String(value);\n        this.time = +timeString[timeString.length - 1];\n      }\n      if (this.time < this.min) {\n        this.time = this.min;\n      }\n      this.timeChanged.emit(this.time);\n    }\n  }\n  isSelectedTimeDisabled(time) {\n    return this.timeList.find(faceTime => faceTime.time === time).disabled;\n  }\n  getNextAvailableTime(index) {\n    const timeCollection = this.timeList;\n    const maxValue = timeCollection.length;\n    for (let i = index + 1; i < maxValue; i++) {\n      const time = timeCollection[i];\n      if (!time.disabled) {\n        return time.time;\n      }\n    }\n  }\n  getPrevAvailableTime(index) {\n    for (let i = index; i >= 0; i--) {\n      const time = this.timeList[i];\n      if (!time.disabled) {\n        return time.time;\n      }\n    }\n  }\n  getAvailableTime(currentTime, fn) {\n    const currentTimeIndex = this.timeList.findIndex(time => time.time === currentTime);\n    const availableTime = fn(currentTimeIndex);\n    return availableTime != null ? availableTime : this.time;\n  }\n  setAvailableTime() {\n    const availableTime = this.timeList.find(t => !t.disabled);\n    if (availableTime != null) {\n      this.time = availableTime.time;\n      this.timeChanged.emit(this.time);\n    }\n  }\n}\nNgxTimepickerTimeControlComponent.ɵfac = function NgxTimepickerTimeControlComponent_Factory(t) {\n  return new (t || NgxTimepickerTimeControlComponent)(i0.ɵɵdirectiveInject(TimeParserPipe));\n};\nNgxTimepickerTimeControlComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgxTimepickerTimeControlComponent,\n  selectors: [[\"ngx-timepicker-time-control\"]],\n  inputs: {\n    time: \"time\",\n    min: \"min\",\n    max: \"max\",\n    placeholder: \"placeholder\",\n    timeUnit: \"timeUnit\",\n    disabled: \"disabled\",\n    timeList: \"timeList\",\n    preventTyping: \"preventTyping\",\n    minutesGap: \"minutesGap\"\n  },\n  outputs: {\n    timeChanged: \"timeChanged\"\n  },\n  features: [i0.ɵɵProvidersFeature([TimeParserPipe]), i0.ɵɵNgOnChangesFeature],\n  decls: 9,\n  vars: 13,\n  consts: [[1, \"ngx-timepicker-control\", 3, \"ngClass\"], [\"maxlength\", \"2\", 1, \"ngx-timepicker-control__input\", 3, \"ngModel\", \"placeholder\", \"disabled\", \"ngModelChange\", \"keydown\", \"keypress\", \"focus\", \"blur\"], [1, \"ngx-timepicker-control__arrows\"], [\"role\", \"button\", 1, \"ngx-timepicker-control__arrow\", 3, \"click\"]],\n  template: function NgxTimepickerTimeControlComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function NgxTimepickerTimeControlComponent_Template_input_ngModelChange_1_listener($event) {\n        return ctx.onModelChange($event);\n      })(\"keydown\", function NgxTimepickerTimeControlComponent_Template_input_keydown_1_listener($event) {\n        return ctx.onKeydown($event);\n      })(\"keypress\", function NgxTimepickerTimeControlComponent_Template_input_keypress_1_listener($event) {\n        return ctx.changeTime($event);\n      })(\"focus\", function NgxTimepickerTimeControlComponent_Template_input_focus_1_listener() {\n        return ctx.onFocus();\n      })(\"blur\", function NgxTimepickerTimeControlComponent_Template_input_blur_1_listener() {\n        return ctx.onBlur();\n      });\n      i0.ɵɵpipe(2, \"timeLocalizer\");\n      i0.ɵɵpipe(3, \"timeParser\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"span\", 3);\n      i0.ɵɵlistener(\"click\", function NgxTimepickerTimeControlComponent_Template_span_click_5_listener() {\n        return ctx.increase();\n      });\n      i0.ɵɵtext(6, \" \\u25B2 \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"span\", 3);\n      i0.ɵɵlistener(\"click\", function NgxTimepickerTimeControlComponent_Template_span_click_7_listener() {\n        return ctx.decrease();\n      });\n      i0.ɵɵtext(8, \" \\u25BC \");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c13, ctx.isFocused));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", i0.ɵɵpipeBind3(2, 4, i0.ɵɵpipeBind2(3, 8, ctx.time, ctx.timeUnit), ctx.timeUnit, true))(\"placeholder\", ctx.placeholder)(\"disabled\", ctx.disabled);\n    }\n  },\n  dependencies: [i1.NgClass, i4.DefaultValueAccessor, i4.MaxLengthValidator, i4.NgControlStatus, i4.NgModel, TimeLocalizerPipe, TimeParserPipe],\n  styles: [\".ngx-timepicker-control[_ngcontent-%COMP%]{position:relative;display:flex;width:60px;height:30px;padding:0 5px;box-sizing:border-box}.ngx-timepicker-control--active[_ngcontent-%COMP%]:after{content:\\\"\\\";position:absolute;bottom:-2px;left:0;width:100%;height:1px;background-color:#00bfff}.ngx-timepicker-control__input[_ngcontent-%COMP%]{width:100%;height:100%;padding:0 5px 0 0;border:0;font-size:1rem;color:inherit;outline:none;text-align:center}.ngx-timepicker-control__input[_ngcontent-%COMP%]:disabled{background-color:transparent}.ngx-timepicker-control__arrows[_ngcontent-%COMP%]{position:absolute;right:2px;top:0;display:flex;flex-direction:column}.ngx-timepicker-control__arrow[_ngcontent-%COMP%]{font-size:11px;color:#0006;cursor:pointer;transition:color .2s;-webkit-user-select:none;-moz-user-select:none;user-select:none}.ngx-timepicker-control__arrow[_ngcontent-%COMP%]:hover{color:#000000e6}\"],\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxTimepickerTimeControlComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-timepicker-time-control',\n      templateUrl: './ngx-timepicker-time-control.component.html',\n      styleUrls: ['./ngx-timepicker-time-control.component.scss'],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [TimeParserPipe]\n    }]\n  }], function () {\n    return [{\n      type: TimeParserPipe\n    }];\n  }, {\n    time: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    timeUnit: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    timeList: [{\n      type: Input\n    }],\n    preventTyping: [{\n      type: Input\n    }],\n    minutesGap: [{\n      type: Input\n    }],\n    timeChanged: [{\n      type: Output\n    }]\n  });\n})();\nfunction concatTime(currentTime, nextTime) {\n  const isNumber = /\\d/.test(nextTime);\n  if (isNumber) {\n    const time = currentTime + nextTime;\n    return +time;\n  }\n}\nclass NgxTimepickerPeriodSelectorComponent {\n  constructor(locale) {\n    this.locale = locale;\n    this.periodSelected = new EventEmitter();\n    this.period = TimePeriod;\n    this.meridiems = Info.meridiems({\n      locale: this.locale\n    });\n  }\n  set selectedPeriod(period) {\n    if (period) {\n      const periods = [TimePeriod.AM, TimePeriod.PM];\n      this.localizedPeriod = this.meridiems[periods.indexOf(period)];\n    }\n  }\n  open() {\n    if (!this.disabled) {\n      this.isOpened = true;\n    }\n  }\n  select(period) {\n    this.periodSelected.next(period);\n    this.isOpened = false;\n  }\n  backdropClick() {\n    this.isOpened = false;\n  }\n}\nNgxTimepickerPeriodSelectorComponent.ɵfac = function NgxTimepickerPeriodSelectorComponent_Factory(t) {\n  return new (t || NgxTimepickerPeriodSelectorComponent)(i0.ɵɵdirectiveInject(TIME_LOCALE));\n};\nNgxTimepickerPeriodSelectorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgxTimepickerPeriodSelectorComponent,\n  selectors: [[\"ngx-timepicker-period-selector\"]],\n  inputs: {\n    isOpened: \"isOpened\",\n    disabled: \"disabled\",\n    selectedPeriod: \"selectedPeriod\"\n  },\n  outputs: {\n    periodSelected: \"periodSelected\"\n  },\n  decls: 9,\n  vars: 6,\n  consts: [[1, \"period\"], [1, \"period-control\"], [\"type\", \"button\", 1, \"period-control__button\", \"period__btn--default\", 3, \"ngClass\", \"click\"], [1, \"period-control__arrow\"], [\"class\", \"period-selector\", 3, \"timepickerAutofocus\", 4, \"ngIf\"], [\"class\", \"overlay\", 3, \"click\", 4, \"ngIf\"], [1, \"period-selector\", 3, \"timepickerAutofocus\"], [\"type\", \"button\", 1, \"period-selector__button\", \"period__btn--default\", 3, \"ngClass\", \"click\"], [1, \"overlay\", 3, \"click\"]],\n  template: function NgxTimepickerPeriodSelectorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function NgxTimepickerPeriodSelectorComponent_Template_button_click_2_listener() {\n        return ctx.open();\n      });\n      i0.ɵɵelementStart(3, \"span\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"span\", 3);\n      i0.ɵɵtext(6, \"\\u25BC\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(7, NgxTimepickerPeriodSelectorComponent_ul_7_Template, 7, 10, \"ul\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, NgxTimepickerPeriodSelectorComponent_div_8_Template, 1, 0, \"div\", 5);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c15, ctx.disabled));\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.localizedPeriod);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.isOpened);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isOpened);\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgIf, AutofocusDirective],\n  styles: [\".period[_ngcontent-%COMP%]{position:relative}.period__btn--default[_ngcontent-%COMP%]{padding:0;border:none;background-color:transparent;cursor:pointer;text-align:left;-webkit-user-select:none;-moz-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;outline:none}.period-control[_ngcontent-%COMP%]{position:relative}.period-control__button[_ngcontent-%COMP%]{position:relative;width:60px;font-size:1rem;color:inherit;text-align:center}.period-control__button[_ngcontent-%COMP%]:not(.period-control__button--disabled):focus:after{content:\\\"\\\";position:absolute;bottom:-8px;left:0;width:100%;height:1px;background-color:#00bfff}.period-control__arrow[_ngcontent-%COMP%]{margin-left:10px;font-size:12px;color:#0006}.period-selector[_ngcontent-%COMP%]{position:absolute;top:calc(50% - 50px);right:calc(-50% + -50px);max-width:135px;width:150px;padding:6px 0;margin:0;list-style:none;background-color:#f5f5f5;box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;z-index:201}.period-selector__button[_ngcontent-%COMP%]{width:100%;height:48px;padding:0 16px;line-height:48px}.period-selector__button--active[_ngcontent-%COMP%]{color:#00bfff}.period-selector__button[_ngcontent-%COMP%]:focus{background-color:#eee}.overlay[_ngcontent-%COMP%]{position:fixed;width:100%;height:100%;top:0;left:0;background-color:transparent;z-index:200}\"],\n  data: {\n    animation: [trigger('scaleInOut', [transition(':enter', [style({\n      transform: 'scale(0)',\n      opacity: 0\n    }), animate(200, style({\n      transform: 'scale(1)',\n      opacity: 1\n    }))]), transition(':leave', [animate(200, style({\n      transform: 'scale(0)',\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxTimepickerPeriodSelectorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-timepicker-period-selector',\n      templateUrl: 'ngx-timepicker-period-selector.component.html',\n      styleUrls: ['./ngx-timepicker-period-selector.component.scss'],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('scaleInOut', [transition(':enter', [style({\n        transform: 'scale(0)',\n        opacity: 0\n      }), animate(200, style({\n        transform: 'scale(1)',\n        opacity: 1\n      }))]), transition(':leave', [animate(200, style({\n        transform: 'scale(0)',\n        opacity: 0\n      }))])])]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TIME_LOCALE]\n      }]\n    }];\n  }, {\n    isOpened: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    selectedPeriod: [{\n      type: Input\n    }],\n    periodSelected: [{\n      type: Output\n    }]\n  });\n})();\nclass NgxTimepickerFieldComponent {\n  constructor(timepickerService, locale) {\n    this.timepickerService = timepickerService;\n    this.locale = locale;\n    this.minHour = 1;\n    this.maxHour = 12;\n    this.timeUnit = TimeUnit;\n    this.buttonAlign = 'right';\n    this.timeChanged = new EventEmitter();\n    this._format = 12;\n    this.unsubscribe$ = new Subject();\n    this.isFirstTimeChange = true;\n    this.onChange = () => {};\n  }\n  set format(value) {\n    this._format = value === 24 ? 24 : 12;\n    this.minHour = this._format === 12 ? 1 : 0;\n    this.maxHour = this._format === 12 ? 12 : 23;\n    this.hoursList = TimepickerTimeUtils.getHours(this._format);\n    const isDynamicallyChanged = value && this.previousFormat && this.previousFormat !== this._format;\n    if (isDynamicallyChanged) {\n      this.updateTime(this.timepickerTime);\n    }\n    this.previousFormat = this._format;\n  }\n  get format() {\n    return this._format;\n  }\n  set min(value) {\n    if (typeof value === 'string') {\n      this._min = TimeAdapter.parseTime(value, {\n        locale: this.locale,\n        format: this.format\n      });\n      return;\n    }\n    this._min = value;\n  }\n  get min() {\n    return this._min;\n  }\n  set max(value) {\n    if (typeof value === 'string') {\n      this._max = TimeAdapter.parseTime(value, {\n        locale: this.locale,\n        format: this.format\n      });\n      return;\n    }\n    this._max = value;\n  }\n  get max() {\n    return this._max;\n  }\n  set defaultTime(val) {\n    this._defaultTime = val;\n    this.isDefaultTime = !!val;\n  }\n  get defaultTime() {\n    return this._defaultTime;\n  }\n  set minutesGap(gap) {\n    if (gap == null) {\n      return;\n    }\n    gap = Math.floor(gap);\n    this._minutesGap = gap <= 59 ? gap : 1;\n  }\n  get minutesGap() {\n    return this._minutesGap;\n  }\n  ngOnInit() {\n    this.initTime(this.defaultTime);\n    this.hoursList = TimepickerTimeUtils.getHours(this._format);\n    this.minutesList = TimepickerTimeUtils.getMinutes();\n    this.isTimeRangeSet = !!(this.min || this.max);\n    this.hour$ = this.timepickerService.selectedHour.pipe(tap(clockTime => this.selectedHour = clockTime.time), map(this.changeDefaultTimeValue.bind(this)), tap(() => this.isTimeRangeSet && this.updateAvailableMinutes()));\n    this.minute$ = this.timepickerService.selectedMinute.pipe(map(this.changeDefaultTimeValue.bind(this)), tap(() => this.isFirstTimeChange = false));\n    if (this.format === 12) {\n      this.timepickerService.selectedPeriod.pipe(distinctUntilChanged(), tap(period => this.period = period), tap(period => this.isChangePeriodDisabled = this.isPeriodDisabled(period)), takeUntil(this.unsubscribe$)).subscribe(() => this.isTimeRangeSet && this.updateAvailableTime());\n    } else if (this.isTimeRangeSet) {\n      this.updateAvailableTime();\n    }\n  }\n  writeValue(val) {\n    if (val) {\n      this.initTime(val);\n    } else {\n      this.resetTime();\n    }\n  }\n  registerOnTouched(fn) {}\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  changeHour(hour) {\n    this.timepickerService.hour = this.hoursList.find(h => h.time === hour);\n    this.changeTime();\n  }\n  changeMinute(minute) {\n    this.timepickerService.minute = this.minutesList.find(m => m.time === minute);\n    this.changeTime();\n  }\n  changePeriod(period) {\n    this.timepickerService.period = period;\n    this.changeTime();\n  }\n  onTimeSet(time) {\n    this.updateTime(time);\n    this.emitLocalTimeChange(time);\n  }\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n  changeTime() {\n    const time = this.timepickerService.getFullTime(this.format);\n    this.timepickerTime = time;\n    this.emitLocalTimeChange(time);\n  }\n  resetTime() {\n    this.timepickerService.hour = {\n      angle: 0,\n      time: null\n    };\n    this.timepickerService.minute = {\n      angle: 0,\n      time: null\n    };\n  }\n  emitLocalTimeChange(time) {\n    const localTime = TimeAdapter.toLocaleTimeString(time, {\n      format: this.format,\n      locale: this.locale\n    });\n    this.onChange(localTime);\n    this.timeChanged.emit(localTime);\n  }\n  changeDefaultTimeValue(clockFaceTime) {\n    if (!this.isDefaultTime && this.isFirstTimeChange) {\n      return Object.assign(Object.assign({}, clockFaceTime), {\n        time: null\n      });\n    }\n    return clockFaceTime;\n  }\n  updateAvailableHours() {\n    this.hoursList = TimepickerTimeUtils.disableHours(this.hoursList, {\n      min: this.min,\n      max: this.max,\n      format: this.format,\n      period: this.period\n    });\n  }\n  updateAvailableMinutes() {\n    this.minutesList = TimepickerTimeUtils.disableMinutes(this.minutesList, this.selectedHour, {\n      min: this.min,\n      max: this.max,\n      format: this.format,\n      period: this.period\n    });\n  }\n  updateAvailableTime() {\n    this.updateAvailableHours();\n    if (this.selectedHour) {\n      this.updateAvailableMinutes();\n    }\n  }\n  updateTime(time) {\n    if (time) {\n      const formattedTime = TimeAdapter.formatTime(time, {\n        locale: this.locale,\n        format: this.format\n      });\n      this.timepickerService.setDefaultTimeIfAvailable(formattedTime, this.min, this.max, this.format);\n      this.timepickerTime = formattedTime;\n    }\n  }\n  initTime(time) {\n    const isDefaultTimeAvailable = TimeAdapter.isTimeAvailable(time, this.min, this.max, 'minutes', null, this.format);\n    if (!isDefaultTimeAvailable) {\n      if (this.min) {\n        this.updateTime(TimeAdapter.fromDateTimeToString(this.min, this.format));\n        return;\n      }\n      if (this.max) {\n        this.updateTime(TimeAdapter.fromDateTimeToString(this.max, this.format));\n        return;\n      }\n    }\n    this.updateTime(time);\n  }\n  isPeriodDisabled(period) {\n    return TimepickerTimeUtils.disableHours(TimepickerTimeUtils.getHours(12), {\n      min: this.min,\n      max: this.max,\n      format: 12,\n      period: period === TimePeriod.AM ? TimePeriod.PM : TimePeriod.AM\n    }).every(time => time.disabled);\n  }\n}\nNgxTimepickerFieldComponent.ɵfac = function NgxTimepickerFieldComponent_Factory(t) {\n  return new (t || NgxTimepickerFieldComponent)(i0.ɵɵdirectiveInject(NgxMaterialTimepickerService), i0.ɵɵdirectiveInject(TIME_LOCALE));\n};\nNgxTimepickerFieldComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgxTimepickerFieldComponent,\n  selectors: [[\"ngx-timepicker-field\"]],\n  inputs: {\n    disabled: \"disabled\",\n    toggleIcon: \"toggleIcon\",\n    buttonAlign: \"buttonAlign\",\n    clockTheme: \"clockTheme\",\n    controlOnly: \"controlOnly\",\n    cancelBtnTmpl: \"cancelBtnTmpl\",\n    confirmBtnTmpl: \"confirmBtnTmpl\",\n    format: \"format\",\n    min: \"min\",\n    max: \"max\",\n    defaultTime: \"defaultTime\",\n    minutesGap: \"minutesGap\"\n  },\n  outputs: {\n    timeChanged: \"timeChanged\"\n  },\n  features: [i0.ɵɵProvidersFeature([NgxMaterialTimepickerService, {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: NgxTimepickerFieldComponent,\n    multi: true\n  }])],\n  decls: 13,\n  vars: 34,\n  consts: [[1, \"ngx-timepicker\", 3, \"ngClass\"], [1, \"ngx-timepicker__control--first\", 3, \"placeholder\", \"time\", \"min\", \"max\", \"timeUnit\", \"disabled\", \"timeList\", \"preventTyping\", \"timeChanged\"], [1, \"ngx-timepicker__time-colon\", \"ngx-timepicker__control--second\"], [1, \"ngx-timepicker__control--third\", 3, \"placeholder\", \"time\", \"min\", \"max\", \"timeUnit\", \"disabled\", \"timeList\", \"preventTyping\", \"minutesGap\", \"timeChanged\"], [\"class\", \"ngx-timepicker__control--forth\", 3, \"selectedPeriod\", \"disabled\", \"periodSelected\", 4, \"ngIf\"], [\"class\", \"ngx-timepicker__toggle\", 3, \"ngClass\", \"for\", \"disabled\", 4, \"ngIf\"], [3, \"min\", \"max\", \"theme\", \"defaultTime\", \"format\", \"cancelBtnTmpl\", \"confirmBtnTmpl\", \"minutesGap\", \"timeSet\"], [\"timepicker\", \"\"], [\"defaultIcon\", \"\"], [1, \"ngx-timepicker__control--forth\", 3, \"selectedPeriod\", \"disabled\", \"periodSelected\"], [1, \"ngx-timepicker__toggle\", 3, \"ngClass\", \"for\", \"disabled\"], [\"ngxMaterialTimepickerToggleIcon\", \"\"], [4, \"ngTemplateOutlet\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\"], [\"d\", \"M 12 2 C 6.4889971 2 2 6.4889971 2 12 C 2 17.511003                   6.4889971 22 12 22 C 17.511003 22 22 17.511003 22 12 C 22 6.4889971 17.511003 2 12 2 z M 12 4 C 16.430123 4 20 7.5698774 20 12 C 20 16.430123 16.430123 20 12 20 C 7.5698774 20 4 16.430123 4 12 C 4 7.5698774 7.5698774 4 12 4 z M 11 6 L 11 12.414062 L 15.292969 16.707031 L 16.707031 15.292969 L 13 11.585938 L 13 6 L 11 6 z\"]],\n  template: function NgxTimepickerFieldComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"ngx-timepicker-time-control\", 1);\n      i0.ɵɵlistener(\"timeChanged\", function NgxTimepickerFieldComponent_Template_ngx_timepicker_time_control_timeChanged_1_listener($event) {\n        return ctx.changeHour($event);\n      });\n      i0.ɵɵpipe(2, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"span\", 2);\n      i0.ɵɵtext(4, \":\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ngx-timepicker-time-control\", 3);\n      i0.ɵɵlistener(\"timeChanged\", function NgxTimepickerFieldComponent_Template_ngx_timepicker_time_control_timeChanged_5_listener($event) {\n        return ctx.changeMinute($event);\n      });\n      i0.ɵɵpipe(6, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(7, NgxTimepickerFieldComponent_ngx_timepicker_period_selector_7_Template, 1, 2, \"ngx-timepicker-period-selector\", 4)(8, NgxTimepickerFieldComponent_ngx_material_timepicker_toggle_8_Template, 3, 6, \"ngx-material-timepicker-toggle\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"ngx-material-timepicker\", 6, 7);\n      i0.ɵɵlistener(\"timeSet\", function NgxTimepickerFieldComponent_Template_ngx_material_timepicker_timeSet_9_listener($event) {\n        return ctx.onTimeSet($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, NgxTimepickerFieldComponent_ng_template_11_Template, 2, 0, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      let tmp_2_0;\n      let tmp_10_0;\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(32, _c17, ctx.disabled));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"placeholder\", \"HH\")(\"time\", (tmp_2_0 = i0.ɵɵpipeBind1(2, 28, ctx.hour$)) == null ? null : tmp_2_0.time)(\"min\", ctx.minHour)(\"max\", ctx.maxHour)(\"timeUnit\", ctx.timeUnit.HOUR)(\"disabled\", ctx.disabled)(\"timeList\", ctx.hoursList)(\"preventTyping\", ctx.isTimeRangeSet);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"placeholder\", \"MM\")(\"time\", (tmp_10_0 = i0.ɵɵpipeBind1(6, 30, ctx.minute$)) == null ? null : tmp_10_0.time)(\"min\", 0)(\"max\", 59)(\"timeUnit\", ctx.timeUnit.MINUTE)(\"disabled\", ctx.disabled)(\"timeList\", ctx.minutesList)(\"preventTyping\", ctx.isTimeRangeSet)(\"minutesGap\", ctx.minutesGap);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.format !== 24);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.controlOnly);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"min\", ctx.min)(\"max\", ctx.max)(\"theme\", ctx.clockTheme)(\"defaultTime\", ctx.timepickerTime)(\"format\", ctx.format)(\"cancelBtnTmpl\", ctx.cancelBtnTmpl)(\"confirmBtnTmpl\", ctx.confirmBtnTmpl)(\"minutesGap\", ctx.minutesGap);\n    }\n  },\n  dependencies: [NgxTimepickerTimeControlComponent, NgxTimepickerPeriodSelectorComponent, NgxMaterialTimepickerToggleComponent, NgxMaterialTimepickerComponent, i1.NgClass, i1.NgIf, NgxMaterialTimepickerToggleIconDirective, i1.NgTemplateOutlet, i1.AsyncPipe],\n  styles: [\".ngx-timepicker[_ngcontent-%COMP%]{display:flex;align-items:center;height:100%;border-bottom:1px solid rgba(0,0,0,.12)}.ngx-timepicker--disabled[_ngcontent-%COMP%]{background:rgba(0,0,0,.07);pointer-events:none}.ngx-timepicker__time-colon[_ngcontent-%COMP%]{margin-left:10px}.ngx-timepicker__control--first[_ngcontent-%COMP%]{order:1}.ngx-timepicker__control--second[_ngcontent-%COMP%]{order:2}.ngx-timepicker__control--third[_ngcontent-%COMP%]{order:3}.ngx-timepicker__control--forth[_ngcontent-%COMP%]{order:4}.ngx-timepicker__toggle[_ngcontent-%COMP%]{order:4}.ngx-timepicker__toggle--left[_ngcontent-%COMP%]{order:0}\"],\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxTimepickerFieldComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-timepicker-field',\n      templateUrl: './ngx-timepicker-field.component.html',\n      styleUrls: ['./ngx-timepicker-field.component.scss'],\n      providers: [NgxMaterialTimepickerService, {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: NgxTimepickerFieldComponent,\n        multi: true\n      }],\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: NgxMaterialTimepickerService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TIME_LOCALE]\n      }]\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    toggleIcon: [{\n      type: Input\n    }],\n    buttonAlign: [{\n      type: Input\n    }],\n    clockTheme: [{\n      type: Input\n    }],\n    controlOnly: [{\n      type: Input\n    }],\n    cancelBtnTmpl: [{\n      type: Input\n    }],\n    confirmBtnTmpl: [{\n      type: Input\n    }],\n    format: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    defaultTime: [{\n      type: Input\n    }],\n    minutesGap: [{\n      type: Input\n    }],\n    timeChanged: [{\n      type: Output\n    }]\n  });\n})();\nclass NgxMaterialTimepickerModule {\n  // tslint:disable-next-line:max-line-length\n  static setOpts(locale, numberingSystem = TimeAdapter.DEFAULT_NUMBERING_SYSTEM) {\n    return {\n      ngModule: NgxMaterialTimepickerModule,\n      providers: [{\n        provide: TIME_LOCALE,\n        useValue: locale\n      }, {\n        provide: NUMBERING_SYSTEM,\n        useValue: numberingSystem\n      }]\n    };\n  }\n}\nNgxMaterialTimepickerModule.ɵfac = function NgxMaterialTimepickerModule_Factory(t) {\n  return new (t || NgxMaterialTimepickerModule)();\n};\nNgxMaterialTimepickerModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgxMaterialTimepickerModule\n});\nNgxMaterialTimepickerModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, FormsModule, ReactiveFormsModule]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxMaterialTimepickerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule, ReactiveFormsModule],\n      exports: [NgxMaterialTimepickerComponent, NgxMaterialTimepickerToggleComponent, NgxTimepickerFieldComponent, TimepickerDirective, NgxMaterialTimepickerToggleIconDirective, NgxMaterialTimepickerThemeDirective],\n      declarations: [NgxMaterialTimepickerComponent, NgxMaterialTimepicker24HoursFaceComponent, NgxMaterialTimepicker12HoursFaceComponent, NgxMaterialTimepickerMinutesFaceComponent, NgxMaterialTimepickerFaceComponent, NgxMaterialTimepickerToggleComponent, NgxMaterialTimepickerButtonComponent, NgxMaterialTimepickerDialComponent, NgxMaterialTimepickerDialControlComponent, NgxMaterialTimepickerPeriodComponent, TimeFormatterPipe, TimepickerDirective, OverlayDirective, NgxMaterialTimepickerToggleIconDirective, AutofocusDirective, MinutesFormatterPipe, NgxMaterialTimepickerThemeDirective, NgxTimepickerFieldComponent, NgxTimepickerTimeControlComponent, NgxTimepickerPeriodSelectorComponent, TimeLocalizerPipe, TimeParserPipe, ActiveHourPipe, ActiveMinutePipe, NgxMaterialTimepickerContainerComponent, NgxMaterialTimepickerContentComponent, AppendToInputDirective]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NUMBERING_SYSTEM, NgxMaterialTimepickerComponent, NgxMaterialTimepickerModule, NgxMaterialTimepickerThemeDirective, NgxMaterialTimepickerToggleComponent, NgxMaterialTimepickerToggleIconDirective, NgxTimepickerFieldComponent, TIME_LOCALE, TimepickerDirective };","map":{"version":3,"names":["i0","Injectable","InjectionToken","Directive","Input","HostListener","Component","Pipe","Inject","Optional","EventEmitter","ViewChild","Output","ChangeDetectionStrategy","ContentChild","NgModule","i1","DOCUMENT","CommonModule","BehaviorSubject","Subject","merge","shareReplay","tap","debounceTime","distinctUntilChanged","filter","takeUntil","map","trigger","transition","style","animate","sequence","DateTime","Info","i4","FormControl","NG_VALUE_ACCESSOR","FormsModule","ReactiveFormsModule","NgxMaterialTimepickerContentComponent_div_0_ng_container_1_Template","rf","ctx","ɵɵelementContainer","NgxMaterialTimepickerContentComponent_div_0_Template","ɵɵelementStart","ɵɵtemplate","ɵɵelementEnd","ctx_r0","ɵɵnextContext","_r4","ɵɵreference","ɵɵproperty","inputElement","ɵɵadvance","NgxMaterialTimepickerContentComponent_ng_template_1_ng_container_0_Template","NgxMaterialTimepickerContentComponent_ng_template_1_Template","NgxMaterialTimepickerContentComponent_ng_template_3_Template","ɵɵprojection","_c0","_c1","_c2","a0","NgxMaterialTimepickerDialControlComponent_input_0_Template","ɵɵgetCurrentView","ɵɵlistener","NgxMaterialTimepickerDialControlComponent_input_0_Template_input_ngModelChange_0_listener","$event","ɵɵrestoreView","ctx_r3","ɵɵresetView","time","NgxMaterialTimepickerDialControlComponent_input_0_Template_input_input_0_listener","ctx_r5","updateTime","NgxMaterialTimepickerDialControlComponent_input_0_Template_input_focus_0_listener","ctx_r6","saveTimeAndChangeTimeUnit","timeUnit","ɵɵpipe","ɵɵpureFunction1","isActive","ɵɵpipeBind2","disabled","NgxMaterialTimepickerDialControlComponent_ng_template_1_Template","_r9","NgxMaterialTimepickerDialControlComponent_ng_template_1_Template_input_focus_0_listener","ctx_r8","NgxMaterialTimepickerDialControlComponent_ng_template_1_Template_input_keydown_0_listener","ctx_r10","onKeydown","ctx_r1","timeControl","NgxMaterialTimepickerPeriodComponent_div_5_Template","_r2","NgxMaterialTimepickerPeriodComponent_div_5_Template_div_animation_scaleInOut_done_0_listener","animationDone","ɵɵtext","undefined","NgxMaterialTimepickerDialComponent_div_8_ng_container_1_Template","NgxMaterialTimepickerDialComponent_div_8_ng_template_2_Template","_c3","NgxMaterialTimepickerDialComponent_div_8_Template","ɵɵtemplateRefExtractor","_r3","isHintVisible","editableHintTmpl","_c4","_c5","_c6","_c7","_c8","a1","NgxMaterialTimepickerFaceComponent_div_2_div_1_Template","time_r7","$implicit","angle","ɵɵpureFunction2","ɵɵpipeBind3","selectedTime","isClockFaceDisabled","ɵɵtextInterpolate1","HOUR","NgxMaterialTimepickerFaceComponent_div_2_div_3_div_1_Template","time_r9","ɵɵstyleProp","innerClockFaceSize","NgxMaterialTimepickerFaceComponent_div_2_div_3_Template","faceTime","trackByTime","NgxMaterialTimepickerFaceComponent_div_2_Template","length","NgxMaterialTimepickerFaceComponent_ng_template_5_div_1_Template","time_r11","ɵɵpipeBind4","minutesGap","MINUTE","NgxMaterialTimepickerFaceComponent_ng_template_5_Template","_c9","NgxMaterialTimepickerContainerComponent_div_11_ngx_material_timepicker_24_hours_face_1_Template","_r12","NgxMaterialTimepickerContainerComponent_div_11_ngx_material_timepicker_24_hours_face_1_Template_ngx_material_timepicker_24_hours_face_hourChange_0_listener","ctx_r11","onHourChange","NgxMaterialTimepickerContainerComponent_div_11_ngx_material_timepicker_24_hours_face_1_Template_ngx_material_timepicker_24_hours_face_hourSelected_0_listener","ctx_r13","onHourSelected","ɵɵpipeBind1","selectedHour","minTime","maxTime","format","NgxMaterialTimepickerContainerComponent_div_11_ng_template_2_Template","_r15","NgxMaterialTimepickerContainerComponent_div_11_ng_template_2_Template_ngx_material_timepicker_12_hours_face_hourChange_0_listener","ctx_r14","NgxMaterialTimepickerContainerComponent_div_11_ng_template_2_Template_ngx_material_timepicker_12_hours_face_hourSelected_0_listener","ctx_r16","ctx_r9","selectedPeriod","NgxMaterialTimepickerContainerComponent_div_11_Template","_r10","NgxMaterialTimepickerContainerComponent_ngx_material_timepicker_minutes_face_12_Template","_r18","NgxMaterialTimepickerContainerComponent_ngx_material_timepicker_minutes_face_12_Template_ngx_material_timepicker_minutes_face_minuteChange_0_listener","ctx_r17","onMinuteChange","tmp_1_0","selectedMinute","NgxMaterialTimepickerContainerComponent_ng_container_15_Template","NgxMaterialTimepickerContainerComponent_ng_container_17_Template","NgxMaterialTimepickerContainerComponent_ng_template_18_Template","NgxMaterialTimepickerContainerComponent_ng_template_20_Template","_c10","NgxMaterialTimepickerToggleComponent__svg_svg_1_Template","ɵɵnamespaceSVG","ɵɵelement","_c11","_c12","_c13","_c14","NgxTimepickerPeriodSelectorComponent_ul_7_Template","NgxTimepickerPeriodSelectorComponent_ul_7_Template_button_click_2_listener","ctx_r2","select","period","AM","NgxTimepickerPeriodSelectorComponent_ul_7_Template_button_click_5_listener","ctx_r4","PM","localizedPeriod","meridiems","ɵɵtextInterpolate","NgxTimepickerPeriodSelectorComponent_div_8_Template","_r6","NgxTimepickerPeriodSelectorComponent_div_8_Template_div_click_0_listener","backdropClick","_c15","NgxTimepickerFieldComponent_ngx_timepicker_period_selector_7_Template","NgxTimepickerFieldComponent_ngx_timepicker_period_selector_7_Template_ngx_timepicker_period_selector_periodSelected_0_listener","changePeriod","isChangePeriodDisabled","NgxTimepickerFieldComponent_ngx_material_timepicker_toggle_8_ng_container_2_Template","_c16","NgxTimepickerFieldComponent_ngx_material_timepicker_toggle_8_Template","buttonAlign","toggleIcon","NgxTimepickerFieldComponent_ng_template_11_Template","_c17","TimeUnit","TimePeriod","TimeFormat","isSameOrAfter","compareWith","unit","hour","hasSame","valueOf","isSameOrBefore","isBetween","before","after","isDigit","e","some","n","keyCode","ctrlKey","metaKey","TimeAdapter","parseTime","opts","numberingSystem","locale","getLocaleOptionsByTime","isPeriodExist","split","timeMask","TWELVE_SHORT","TWENTY_FOUR_SHORT","fromFormat","formatTime","parsedTime","setLocale","DEFAULT_LOCALE","isValid","toLocaleString","Object","assign","TIME_SIMPLE","hour12","DEFAULT_NUMBERING_SYSTEM","replace","toISOTime","includeOffset","suppressMilliseconds","suppressSeconds","toLocaleTimeString","DEFAULT_FORMAT","hourCycle","timeFormat","localOpts","isTimeAvailable","min","max","granularity","convertedTime","minutes","minute","Error","isAfter","isBefore","between","isAvailable","formatHour","currentHour","fromDateTimeToString","TWENTY_FOUR","TWELVE","reconfigure","toFormat","localeConfig","defaultConfig","isNaN","parseInt","DEFAULT_HOUR","DEFAULT_MINUTE","NgxMaterialTimepickerService","constructor","hourSubject","minuteSubject","periodSubject","next","asObservable","isPeriodValid","setDefaultTimeIfAvailable","setDefaultTime","console","error","getFullTime","getValue","trim","defaultTime","toJSDate","fromJSDate","substr","toUpperCase","getHours","formatHourByPeriod","getMinutes","resetTime","ɵfac","NgxMaterialTimepickerService_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","type","args","TIME_LOCALE","NUMBERING_SYSTEM","NgxMaterialTimepickerEventService","backdropClickSubject","keydownEventSubject","pipe","bufferSize","refCount","keydownEvent","dispatchEvent","event","NgxMaterialTimepickerEventService_Factory","AppendToInputDirective","elementRef","renderer","element","nativeElement","inputCords","getBoundingClientRect","direction","height","offsetHeight","bottom","top","_inputCords","isElementFit","window","innerHeight","isTop","isCenter","ngAfterViewInit","_direction","append","changePosition","y","defineElementYByDirection","setStyle","left","value","inputTop","inputBottom","AppendToInputDirective_Factory","ɵɵdirectiveInject","ElementRef","Renderer2","ɵdir","ɵɵdefineDirective","selectors","hostBindings","AppendToInputDirective_HostBindings","AppendToInputDirective_scroll_HostBindingHandler","ɵɵresolveWindow","inputs","selector","NgxMaterialTimepickerContentComponent","NgxMaterialTimepickerContentComponent_Factory","ɵcmp","ɵɵdefineComponent","appendToInput","ngContentSelectors","decls","vars","consts","template","NgxMaterialTimepickerContentComponent_Template","ɵɵprojectionDef","dependencies","NgIf","NgTemplateOutlet","encapsulation","templateUrl","TimepickerTimeUtils","Array","fill","v","i","angleStep","disableHours","hours","config","currentTime","fromObject","gap","minutesCount","push","disableMinutes","TimeLocalizerPipe","transform","isKeyboardEnabled","timeMeasure","_a","TimeLocalizerPipe_Factory","ɵpipe","ɵɵdefinePipe","name","pure","decorators","TimeParserPipe","String","TimeParserPipe_Factory","AutofocusDirective","document","activeElement","ngOnChanges","isFocusActive","setTimeout","focus","preventScroll","ngOnDestroy","AutofocusDirective_Factory","features","ɵɵNgOnChangesFeature","NgxMaterialTimepickerDialControlComponent","timeParserPipe","timeLocalizerPipe","timeUnitChanged","timeChanged","focused","unfocused","timeList","find","ngOnInit","isEditable","formatTimeForUI","valueChanges","updateInputValue","slice","isTimeDisabledToChange","toString","subscribe","preventDefault","previousTime","changeTimeByArrow","ARROW_UP","ARROW_DOWN","isTimeUnavailable","editableTimeTmpl","NgxMaterialTimepickerDialControlComponent_Factory","viewQuery","NgxMaterialTimepickerDialControlComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","outputs","ɵɵProvidersFeature","NgxMaterialTimepickerDialControlComponent_Template","DefaultValueAccessor","NgClass","NgControlStatus","NgModel","FormControlDirective","styles","styleUrls","providers","nextTime","isNumber","test","NgxMaterialTimepickerPeriodComponent","timePeriod","isPeriodAvailable","periodChanged","isSwitchPeriodAvailable","getDisabledTimeByPeriod","every","activeTimeUnit","NgxMaterialTimepickerPeriodComponent_Factory","NgxMaterialTimepickerPeriodComponent_Template","NgxMaterialTimepickerPeriodComponent_Template_button_click_1_listener","NgxMaterialTimepickerPeriodComponent_Template_button_click_3_listener","data","animation","opacity","animations","NgxMaterialTimepickerDialComponent","hourChanged","minuteChanged","changes","currentValue","changeTimeUnit","changeHour","changeMinute","showHint","hideHint","NgxMaterialTimepickerDialComponent_Factory","hoursOnly","NgxMaterialTimepickerDialComponent_Template","NgxMaterialTimepickerDialComponent_Template_ngx_material_timepicker_dial_control_timeUnitChanged_3_listener","NgxMaterialTimepickerDialComponent_Template_ngx_material_timepicker_dial_control_timeChanged_3_listener","NgxMaterialTimepickerDialComponent_Template_ngx_material_timepicker_dial_control_focused_3_listener","NgxMaterialTimepickerDialComponent_Template_ngx_material_timepicker_dial_control_unfocused_3_listener","NgxMaterialTimepickerDialComponent_Template_ngx_material_timepicker_dial_control_timeUnitChanged_6_listener","NgxMaterialTimepickerDialComponent_Template_ngx_material_timepicker_dial_control_timeChanged_6_listener","NgxMaterialTimepickerDialComponent_Template_ngx_material_timepicker_dial_control_focused_6_listener","NgxMaterialTimepickerDialComponent_Template_ngx_material_timepicker_dial_control_unfocused_6_listener","NgxMaterialTimepickerDialComponent_Template_ngx_material_timepicker_period_periodChanged_7_listener","changeDetection","OnPush","NgxMaterialTimepickerHoursFace","hourChange","hourSelected","hoursList","onTimeSelected","NgxMaterialTimepickerHoursFace_Factory","ɵɵinvalidFactory","ActiveHourPipe","ActiveHourPipe_Factory","ActiveMinutePipe","currentMinute","defaultGap","ActiveMinutePipe_Factory","MinutesFormatterPipe","MinutesFormatterPipe_Factory","CLOCK_HAND_STYLES","small","large","NgxMaterialTimepickerFaceComponent","timeChange","timeSelected","setClockHandPosition","addTouchEvents","faceTimeChanges","selectedTimeChanges","selectAvailableTime","_","onMousedown","isStarted","selectTime","MouseEvent","clockFaceCords","clockFace","centerX","width","centerY","arctangent","Math","atan","abs","clientX","clientY","PI","circleAngle","countAngleByCords","isInnerClockChosen","isInnerClockFace","roundedAngle","roundAngle","val","onMouseup","removeTouchEvents","touchStartHandler","bind","touchEndHandler","addEventListener","removeEventListener","decreaseClockHand","increaseClockHand","clockHand","availableTime","x0","y0","x","sqrt","pow","NgxMaterialTimepickerFaceComponent_Factory","NgxMaterialTimepickerFaceComponent_Query","NgxMaterialTimepickerFaceComponent_HostBindings","NgxMaterialTimepickerFaceComponent_mousedown_HostBindingHandler","NgxMaterialTimepickerFaceComponent_click_HostBindingHandler","NgxMaterialTimepickerFaceComponent_touchmove_HostBindingHandler","changedTouches","NgxMaterialTimepickerFaceComponent_touchend_HostBindingHandler","NgxMaterialTimepickerFaceComponent_mousemove_HostBindingHandler","NgxMaterialTimepickerFaceComponent_mouseup_HostBindingHandler","NgxMaterialTimepickerFaceComponent_Template","NgForOf","NgStyle","SlicePipe","static","step","round","currentAngle","NgxMaterialTimepicker24HoursFaceComponent","ngAfterContentInit","NgxMaterialTimepicker24HoursFaceComponent_Factory","ɵɵInheritDefinitionFeature","NgxMaterialTimepicker24HoursFaceComponent_Template","NgxMaterialTimepicker24HoursFaceComponent_Template_ngx_material_timepicker_face_timeChange_0_listener","NgxMaterialTimepicker24HoursFaceComponent_Template_ngx_material_timepicker_face_timeSelected_0_listener","NgxMaterialTimepicker12HoursFaceComponent","NgxMaterialTimepicker12HoursFaceComponent_Factory","NgxMaterialTimepicker12HoursFaceComponent_Template","NgxMaterialTimepicker12HoursFaceComponent_Template_ngx_material_timepicker_face_timeChange_0_listener","NgxMaterialTimepicker12HoursFaceComponent_Template_ngx_material_timepicker_face_timeSelected_0_listener","NgxMaterialTimepickerMinutesFaceComponent","minutesList","minuteChange","NgxMaterialTimepickerMinutesFaceComponent_Factory","NgxMaterialTimepickerMinutesFaceComponent_Template","NgxMaterialTimepickerMinutesFaceComponent_Template_ngx_material_timepicker_face_timeChange_0_listener","NgxMaterialTimepickerButtonComponent","NgxMaterialTimepickerButtonComponent_Factory","NgxMaterialTimepickerButtonComponent_Template","OverlayDirective","eventService","onClick","preventClick","OverlayDirective_Factory","OverlayDirective_HostBindings","OverlayDirective_click_HostBindingHandler","NgxMaterialTimepickerThemeDirective","theme","setTheme","hasOwnProperty","prop","setProperty","camelCaseToDash","NgxMaterialTimepickerThemeDirective_Factory","myStr","toLowerCase","AnimationState","NgxMaterialTimepickerContainerComponent","timepickerService","unsubscribe","_defaultTime","stopPropagation","animationState","disableAnimation","ENTER","defineTime","timepickerBaseRef","timeUpdated","onTimeChange","setTime","timeSet","close","LEAVE","phaseName","toState","complete","emit","NgxMaterialTimepickerContainerComponent_Factory","NgxMaterialTimepickerContainerComponent_HostBindings","NgxMaterialTimepickerContainerComponent_keydown_HostBindingHandler","NgxMaterialTimepickerContainerComponent_Template","NgxMaterialTimepickerContainerComponent_Template_div_animation_timepicker_done_3_listener","NgxMaterialTimepickerContainerComponent_Template_ngx_material_timepicker_dial_periodChanged_5_listener","NgxMaterialTimepickerContainerComponent_Template_ngx_material_timepicker_dial_timeUnitChanged_5_listener","NgxMaterialTimepickerContainerComponent_Template_ngx_material_timepicker_dial_hourChanged_5_listener","NgxMaterialTimepickerContainerComponent_Template_ngx_material_timepicker_dial_minuteChanged_5_listener","NgxMaterialTimepickerContainerComponent_Template_div_click_14_listener","NgxMaterialTimepickerContainerComponent_Template_div_click_16_listener","_r5","_r7","tmp_8_0","tmp_9_0","preventOverlayClick","timepickerClass","enableKeyboardInput","cancelBtnTmpl","confirmBtnTmpl","NgSwitch","NgSwitchCase","AsyncPipe","DomService","cfr","appRef","injector","appendTimepickerToBody","timepicker","componentRef","resolveComponentFactory","create","keys","forEach","key","instance","attachView","hostView","domElement","rootNodes","body","appendChild","destroyTimepicker","destroy","detachView","DomService_Factory","ɵɵinject","ComponentFactoryResolver","ApplicationRef","Injector","ESCAPE","NgxMaterialTimepickerComponent","domService","isEsc","opened","closed","ngxMaterialTimepickerTheme","warn","_ngxMaterialTimepickerTheme","_format","timepickerInput","floor","_minutesGap","registerInput","input","open","subscribeToEvents","unsubscribeFromEvents","NgxMaterialTimepickerComponent_Factory","NgxMaterialTimepickerComponent_Template","NgxMaterialTimepickerToggleIconDirective","NgxMaterialTimepickerToggleIconDirective_Factory","NgxMaterialTimepickerToggleComponent","_disabled","NgxMaterialTimepickerToggleComponent_Factory","contentQueries","NgxMaterialTimepickerToggleComponent_ContentQueries","dirIndex","ɵɵcontentQuery","customIcon","NgxMaterialTimepickerToggleComponent_Template","NgxMaterialTimepickerToggleComponent_Template_button_click_0_listener","TimepickerDirective","_value","timepickerSubscriptions","onTouched","onChange","isDynamicallyChanged","previousFormat","_timepicker","log","_min","_max","picker","registerTimepicker","setTimeIfAvailable","updateValue","disableClick","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","s","TimepickerDirective_Factory","hostVars","TimepickerDirective_HostBindings","TimepickerDirective_change_HostBindingHandler","target","TimepickerDirective_blur_HostBindingHandler","TimepickerDirective_click_HostBindingHandler","ɵɵhostProperty","provide","useExisting","multi","host","TimeFormatterPipe","TimeFormatterPipe_Factory","NgxTimepickerTimeControlComponent","timeParser","isSelectedTimeDisabled","setAvailableTime","changeTime","char","fromCharCode","concatTime","changeTimeIfValid","increase","decrease","preventTyping","getAvailableTime","getNextAvailableTime","getPrevAvailableTime","onFocus","isFocused","onBlur","onModelChange","timeString","index","timeCollection","maxValue","currentTimeIndex","findIndex","NgxTimepickerTimeControlComponent_Factory","placeholder","NgxTimepickerTimeControlComponent_Template","NgxTimepickerTimeControlComponent_Template_input_ngModelChange_1_listener","NgxTimepickerTimeControlComponent_Template_input_keydown_1_listener","NgxTimepickerTimeControlComponent_Template_input_keypress_1_listener","NgxTimepickerTimeControlComponent_Template_input_focus_1_listener","NgxTimepickerTimeControlComponent_Template_input_blur_1_listener","NgxTimepickerTimeControlComponent_Template_span_click_5_listener","NgxTimepickerTimeControlComponent_Template_span_click_7_listener","MaxLengthValidator","NgxTimepickerPeriodSelectorComponent","periodSelected","periods","indexOf","isOpened","NgxTimepickerPeriodSelectorComponent_Factory","NgxTimepickerPeriodSelectorComponent_Template","NgxTimepickerPeriodSelectorComponent_Template_button_click_2_listener","NgxTimepickerFieldComponent","minHour","maxHour","unsubscribe$","isFirstTimeChange","timepickerTime","isDefaultTime","initTime","isTimeRangeSet","hour$","clockTime","changeDefaultTimeValue","updateAvailableMinutes","minute$","isPeriodDisabled","updateAvailableTime","h","m","onTimeSet","emitLocalTimeChange","localTime","clockFaceTime","updateAvailableHours","formattedTime","isDefaultTimeAvailable","NgxTimepickerFieldComponent_Factory","clockTheme","controlOnly","NgxTimepickerFieldComponent_Template","NgxTimepickerFieldComponent_Template_ngx_timepicker_time_control_timeChanged_1_listener","NgxTimepickerFieldComponent_Template_ngx_timepicker_time_control_timeChanged_5_listener","NgxTimepickerFieldComponent_Template_ngx_material_timepicker_timeSet_9_listener","tmp_2_0","tmp_10_0","NgxMaterialTimepickerModule","setOpts","ngModule","useValue","NgxMaterialTimepickerModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations"],"sources":["D:/alodelivery test/node_modules/ngx-material-timepicker/fesm2015/ngx-material-timepicker.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, InjectionToken, Directive, Input, HostListener, Component, Pipe, Inject, Optional, EventEmitter, ViewChild, Output, ChangeDetectionStrategy, ContentChild, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { BehaviorSubject, Subject, merge } from 'rxjs';\nimport { shareReplay, tap, debounceTime, distinctUntilChanged, filter, takeUntil, map } from 'rxjs/operators';\nimport { trigger, transition, style, animate, sequence } from '@angular/animations';\nimport { DateTime, Info } from 'luxon';\nimport * as i4 from '@angular/forms';\nimport { FormControl, NG_VALUE_ACCESSOR, FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nvar TimeUnit;\n(function (TimeUnit) {\n    TimeUnit[TimeUnit[\"HOUR\"] = 0] = \"HOUR\";\n    TimeUnit[TimeUnit[\"MINUTE\"] = 1] = \"MINUTE\";\n})(TimeUnit || (TimeUnit = {}));\n\nvar TimePeriod;\n(function (TimePeriod) {\n    TimePeriod[\"AM\"] = \"AM\";\n    TimePeriod[\"PM\"] = \"PM\";\n})(TimePeriod || (TimePeriod = {}));\n\nvar TimeFormat;\n(function (TimeFormat) {\n    TimeFormat[\"TWELVE\"] = \"hh:mm a\";\n    TimeFormat[\"TWELVE_SHORT\"] = \"h:m a\";\n    TimeFormat[\"TWENTY_FOUR\"] = \"HH:mm\";\n    TimeFormat[\"TWENTY_FOUR_SHORT\"] = \"H:m\";\n})(TimeFormat || (TimeFormat = {}));\n\nfunction isSameOrAfter(time, compareWith, unit = 'minutes') {\n    if (unit === 'hours') {\n        return time.hour >= compareWith.hour;\n    }\n    if (unit === 'minutes') {\n        return time.hasSame(compareWith, unit) || time.valueOf() > compareWith.valueOf();\n    }\n}\nfunction isSameOrBefore(time, compareWith, unit = 'minutes') {\n    if (unit === 'hours') {\n        return time.hour <= compareWith.hour;\n    }\n    if (unit === 'minutes') {\n        return time.hasSame(compareWith, unit) || time.valueOf() <= compareWith.valueOf();\n    }\n}\nfunction isBetween(time, before, after, unit = 'minutes') {\n    if (unit === 'hours') {\n        return isSameOrBefore(time, after, unit) && isSameOrAfter(time, before, unit);\n    }\n    if (unit === 'minutes') {\n        return isSameOrBefore(time, after) && isSameOrAfter(time, before);\n    }\n}\nfunction isDigit(e) {\n    // Allow: backspace, delete, tab, escape, enter\n    if ([46, 8, 9, 27, 13].some(n => n === e.keyCode) ||\n        // Allow: Ctrl/cmd+A\n        (e.keyCode == 65 && (e.ctrlKey === true || e.metaKey === true)) ||\n        // Allow: Ctrl/cmd+C\n        (e.keyCode == 67 && (e.ctrlKey === true || e.metaKey === true)) ||\n        // Allow: Ctrl/cmd+X\n        (e.keyCode == 88 && (e.ctrlKey === true || e.metaKey === true)) ||\n        // Allow: home, end, left, right, up, down\n        (e.keyCode >= 35 && e.keyCode <= 40)) {\n        return true;\n    }\n    return !((e.keyCode < 48 || e.keyCode > 57) && (e.keyCode < 96 || e.keyCode > 105));\n}\n\n// @dynamic\nclass TimeAdapter {\n    static parseTime(time, opts) {\n        const { numberingSystem, locale } = TimeAdapter.getLocaleOptionsByTime(time, opts);\n        const isPeriodExist = time.split(' ').length === 2;\n        const timeMask = isPeriodExist ? TimeFormat.TWELVE_SHORT : TimeFormat.TWENTY_FOUR_SHORT;\n        return DateTime.fromFormat(time, timeMask, { numberingSystem, locale });\n    }\n    static formatTime(time, opts) {\n        if (!time) {\n            return 'Invalid Time';\n        }\n        const { format } = opts;\n        const parsedTime = TimeAdapter.parseTime(time, opts).setLocale(TimeAdapter.DEFAULT_LOCALE);\n        if (!parsedTime.isValid) {\n            return null;\n        }\n        if (format !== 24) {\n            return parsedTime.toLocaleString(Object.assign(Object.assign({}, DateTime.TIME_SIMPLE), { hour12: format !== 24, numberingSystem: TimeAdapter.DEFAULT_NUMBERING_SYSTEM })).replace(/\\u200E/g, '').replace(/\\u202F/g, ' ');\n        }\n        return parsedTime.toISOTime({\n            includeOffset: false,\n            suppressMilliseconds: true,\n            suppressSeconds: true\n        }).replace(/\\u200E/g, '').replace(/\\u202F/g, ' ');\n    }\n    static toLocaleTimeString(time, opts = {}) {\n        const { format = TimeAdapter.DEFAULT_FORMAT, locale = TimeAdapter.DEFAULT_LOCALE } = opts;\n        const hourCycle = format === 24 ? 'h23' : 'h12';\n        const timeFormat = Object.assign(Object.assign({}, DateTime.TIME_SIMPLE), { hourCycle });\n        const timeMask = (format === 24) ? TimeFormat.TWENTY_FOUR_SHORT : TimeFormat.TWELVE_SHORT;\n        const localOpts = Object.assign({ locale: opts.locale, numberingSystem: opts.numberingSystem }, timeFormat);\n        return DateTime.fromFormat(time, timeMask).setLocale(locale).toLocaleString(localOpts).replace(/\\u202F/g, ' ');\n    }\n    static isTimeAvailable(time, min, max, granularity, minutesGap, format) {\n        if (!time) {\n            return;\n        }\n        const convertedTime = this.parseTime(time, { format });\n        const minutes = convertedTime.minute;\n        if (minutesGap && minutes === minutes && minutes % minutesGap !== 0) {\n            throw new Error(`Your minutes - ${minutes} doesn\\'t match your minutesGap - ${minutesGap}`);\n        }\n        const isAfter = (min && !max)\n            && isSameOrAfter(convertedTime, min, granularity);\n        const isBefore = (max && !min)\n            && isSameOrBefore(convertedTime, max, granularity);\n        const between = (min && max)\n            && isBetween(convertedTime, min, max, granularity);\n        const isAvailable = !min && !max;\n        return isAfter || isBefore || between || isAvailable;\n    }\n    /***\n     *  Format hour according to time format (12 or 24)\n     */\n    static formatHour(currentHour, format, period) {\n        if (format === 24) {\n            return currentHour;\n        }\n        const hour = period === TimePeriod.AM ? currentHour : currentHour + 12;\n        if (period === TimePeriod.AM && hour === 12) {\n            return 0;\n        }\n        else if (period === TimePeriod.PM && hour === 24) {\n            return 12;\n        }\n        return hour;\n    }\n    static fromDateTimeToString(time, format) {\n        const timeFormat = format === 24 ? TimeFormat.TWENTY_FOUR : TimeFormat.TWELVE;\n        return time.reconfigure({\n            numberingSystem: TimeAdapter.DEFAULT_NUMBERING_SYSTEM,\n            locale: TimeAdapter.DEFAULT_LOCALE\n        }).toFormat(timeFormat).replace(/\\u202F/g, ' ');\n    }\n    static getLocaleOptionsByTime(time, opts) {\n        const localeConfig = { numberingSystem: opts.numberingSystem, locale: opts.locale };\n        const defaultConfig = { numberingSystem: TimeAdapter.DEFAULT_NUMBERING_SYSTEM, locale: TimeAdapter.DEFAULT_LOCALE };\n        return isNaN(parseInt(time, 10)) ? localeConfig : defaultConfig;\n    }\n}\nTimeAdapter.DEFAULT_FORMAT = 12;\nTimeAdapter.DEFAULT_LOCALE = 'en-US';\nTimeAdapter.DEFAULT_NUMBERING_SYSTEM = 'latn';\n\nconst DEFAULT_HOUR = {\n    time: 12,\n    angle: 360\n};\nconst DEFAULT_MINUTE = {\n    time: 0,\n    angle: 360\n};\nclass NgxMaterialTimepickerService {\n    constructor() {\n        this.hourSubject = new BehaviorSubject(DEFAULT_HOUR);\n        this.minuteSubject = new BehaviorSubject(DEFAULT_MINUTE);\n        this.periodSubject = new BehaviorSubject(TimePeriod.AM);\n    }\n    set hour(hour) {\n        this.hourSubject.next(hour);\n    }\n    get selectedHour() {\n        return this.hourSubject.asObservable();\n    }\n    set minute(minute) {\n        this.minuteSubject.next(minute);\n    }\n    get selectedMinute() {\n        return this.minuteSubject.asObservable();\n    }\n    set period(period) {\n        const isPeriodValid = (period === TimePeriod.AM) || (period === TimePeriod.PM);\n        if (isPeriodValid) {\n            this.periodSubject.next(period);\n        }\n    }\n    get selectedPeriod() {\n        return this.periodSubject.asObservable();\n    }\n    setDefaultTimeIfAvailable(time, min, max, format, minutesGap) {\n        /* Workaround to double error message*/\n        try {\n            if (TimeAdapter.isTimeAvailable(time, min, max, 'minutes', minutesGap)) {\n                this.setDefaultTime(time, format);\n            }\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n    getFullTime(format) {\n        const selectedHour = this.hourSubject.getValue().time;\n        const selectedMinute = this.minuteSubject.getValue().time;\n        const hour = selectedHour != null ? selectedHour : DEFAULT_HOUR.time;\n        const minute = selectedMinute != null ? selectedMinute : DEFAULT_MINUTE.time;\n        const period = format === 12 ? this.periodSubject.getValue() : '';\n        const time = `${hour}:${minute} ${period}`.trim();\n        return TimeAdapter.formatTime(time, { format });\n    }\n    setDefaultTime(time, format) {\n        const defaultTime = TimeAdapter.parseTime(time, { format }).toJSDate();\n        if (DateTime.fromJSDate(defaultTime).isValid) {\n            const period = time.substr(time.length - 2).toUpperCase();\n            const hour = defaultTime.getHours();\n            this.hour = Object.assign(Object.assign({}, DEFAULT_HOUR), { time: formatHourByPeriod(hour, period) });\n            this.minute = Object.assign(Object.assign({}, DEFAULT_MINUTE), { time: defaultTime.getMinutes() });\n            this.period = period;\n        }\n        else {\n            this.resetTime();\n        }\n    }\n    resetTime() {\n        this.hour = Object.assign({}, DEFAULT_HOUR);\n        this.minute = Object.assign({}, DEFAULT_MINUTE);\n        this.period = TimePeriod.AM;\n    }\n}\nNgxMaterialTimepickerService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNgxMaterialTimepickerService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n/***\n *  Format hour in 24hours format to meridian (AM or PM) format\n */\nfunction formatHourByPeriod(hour, period) {\n    switch (period) {\n        case TimePeriod.AM:\n            return hour === 0 ? 12 : hour;\n        case TimePeriod.PM:\n            return hour === 12 ? 12 : hour - 12;\n        default:\n            return hour;\n    }\n}\n\nconst TIME_LOCALE = new InjectionToken('TimeLocale', {\n    providedIn: 'root',\n    factory: () => TimeAdapter.DEFAULT_LOCALE\n});\nconst NUMBERING_SYSTEM = new InjectionToken('NumberingSystem', {\n    providedIn: 'root',\n    factory: () => TimeAdapter.DEFAULT_NUMBERING_SYSTEM\n});\n\nclass NgxMaterialTimepickerEventService {\n    constructor() {\n        this.backdropClickSubject = new Subject();\n        this.keydownEventSubject = new Subject();\n    }\n    get backdropClick() {\n        return this.backdropClickSubject.asObservable().pipe(shareReplay({ bufferSize: 1, refCount: true }));\n    }\n    get keydownEvent() {\n        return this.keydownEventSubject.asObservable().pipe(shareReplay({ bufferSize: 1, refCount: true }));\n    }\n    dispatchEvent(event) {\n        switch (event.type) {\n            case 'click':\n                this.backdropClickSubject.next(event);\n                break;\n            case 'keydown':\n                this.keydownEventSubject.next(event);\n                break;\n            default:\n                throw new Error('no such event type');\n        }\n    }\n}\nNgxMaterialTimepickerEventService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerEventService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNgxMaterialTimepickerEventService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerEventService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerEventService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nclass AppendToInputDirective {\n    constructor(elementRef, renderer) {\n        this.renderer = renderer;\n        this.element = elementRef.nativeElement;\n    }\n    get inputCords() {\n        return this.inputElement.getBoundingClientRect();\n    }\n    get direction() {\n        const height = this.element.offsetHeight;\n        const { bottom, top } = this._inputCords;\n        const isElementFit = (window && window.innerHeight) - bottom < height;\n        const isTop = isElementFit && top > height;\n        const isCenter = isElementFit && top < height;\n        if (isTop) {\n            return 'top';\n        }\n        else if (isCenter) {\n            return 'center';\n        }\n        return 'bottom';\n    }\n    ngAfterViewInit() {\n        this._inputCords = this.inputCords;\n        this._direction = this.direction;\n        this.append();\n    }\n    changePosition() {\n        const { bottom, top } = this.inputCords;\n        const y = this.defineElementYByDirection(top, bottom);\n        this.setStyle('top', `${y}px`);\n    }\n    append() {\n        const { left, bottom, top } = this._inputCords;\n        const y = this.defineElementYByDirection(top, bottom);\n        this.setStyle('position', 'fixed');\n        this.setStyle('left', `${left}px`);\n        this.setStyle('top', `${y}px`);\n    }\n    setStyle(style, value) {\n        this.renderer.setStyle(this.element, style, value);\n    }\n    defineElementYByDirection(inputTop, inputBottom) {\n        if (this._direction === 'top') {\n            return inputTop - this.element.offsetHeight;\n        }\n        else if (this._direction === 'center') {\n            return inputTop - (this.element.offsetHeight / 2);\n        }\n        return inputBottom;\n    }\n}\nAppendToInputDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AppendToInputDirective, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\nAppendToInputDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: AppendToInputDirective, selector: \"[ngxAppendToInput]\", inputs: { inputElement: [\"ngxAppendToInput\", \"inputElement\"] }, host: { listeners: { \"window:scroll\": \"changePosition()\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AppendToInputDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngxAppendToInput]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { inputElement: [{\n                type: Input,\n                args: ['ngxAppendToInput']\n            }], changePosition: [{\n                type: HostListener,\n                args: ['window:scroll']\n            }] } });\n\nclass NgxMaterialTimepickerContentComponent {\n}\nNgxMaterialTimepickerContentComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerContentComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNgxMaterialTimepickerContentComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: NgxMaterialTimepickerContentComponent, selector: \"ngx-material-timepicker-content\", inputs: { appendToInput: \"appendToInput\", inputElement: \"inputElement\" }, ngImport: i0, template: \"<div [ngxAppendToInput]=\\\"inputElement\\\" *ngIf=\\\"appendToInput;else timepickerModal\\\">\\n    <!--suppress HtmlUnknownAttribute -->\\n    <ng-container *ngTemplateOutlet=\\\"timepickerOutlet\\\"></ng-container>\\n</div>\\n\\n<ng-template #timepickerModal>\\n    <!--suppress HtmlUnknownAttribute -->\\n    <ng-container *ngTemplateOutlet=\\\"timepickerOutlet\\\"></ng-container>\\n</ng-template>\\n\\n<ng-template #timepickerOutlet>\\n    <ng-content></ng-content>\\n</ng-template>\\n\", directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: AppendToInputDirective, selector: \"[ngxAppendToInput]\", inputs: [\"ngxAppendToInput\"] }, { type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerContentComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-material-timepicker-content',\n                    templateUrl: './ngx-material-timepicker-content.component.html',\n                }]\n        }], propDecorators: { appendToInput: [{\n                type: Input\n            }], inputElement: [{\n                type: Input\n            }] } });\n\n// @dynamic\nclass TimepickerTimeUtils {\n    static getHours(format) {\n        return Array(format).fill(1).map((v, i) => {\n            const angleStep = 30;\n            const time = v + i;\n            const angle = angleStep * time;\n            return { time: time === 24 ? 0 : time, angle };\n        });\n    }\n    static disableHours(hours, config) {\n        if (config.min || config.max) {\n            return hours.map(value => {\n                const hour = config.format === 24 ? value.time : TimeAdapter.formatHour(value.time, config.format, config.period);\n                const currentTime = DateTime.fromObject({ hour }).toFormat(TimeFormat.TWELVE);\n                return Object.assign(Object.assign({}, value), { disabled: !TimeAdapter.isTimeAvailable(currentTime, config.min, config.max, 'hours') });\n            });\n        }\n        return hours;\n    }\n    static getMinutes(gap = 1) {\n        const minutesCount = 60;\n        const angleStep = 360 / minutesCount;\n        const minutes = [];\n        for (let i = 0; i < minutesCount; i++) {\n            const angle = angleStep * i;\n            if (i % gap === 0) {\n                minutes.push({ time: i, angle: angle !== 0 ? angle : 360 });\n            }\n        }\n        return minutes;\n    }\n    static disableMinutes(minutes, selectedHour, config) {\n        if (config.min || config.max) {\n            const hour = TimeAdapter.formatHour(selectedHour, config.format, config.period);\n            return minutes.map(value => {\n                const currentTime = DateTime.fromObject({ hour, minute: value.time }).toFormat(TimeFormat.TWELVE);\n                return Object.assign(Object.assign({}, value), { disabled: !TimeAdapter.isTimeAvailable(currentTime, config.min, config.max, 'minutes') });\n            });\n        }\n        return minutes;\n    }\n}\n\nclass TimeLocalizerPipe {\n    constructor(locale) {\n        this.locale = locale;\n    }\n    transform(time, timeUnit, isKeyboardEnabled = false) {\n        if (time == null || time === '') {\n            return '';\n        }\n        switch (timeUnit) {\n            case TimeUnit.HOUR: {\n                const format = (time === 0 || isKeyboardEnabled) ? 'HH' : 'H';\n                return this.formatTime('hour', time, format);\n            }\n            case TimeUnit.MINUTE:\n                return this.formatTime('minute', time, 'mm');\n            default:\n                throw new Error(`There is no Time Unit with type ${timeUnit}`);\n        }\n    }\n    formatTime(timeMeasure, time, format) {\n        try {\n            return DateTime.fromObject({ [timeMeasure]: +time }).setLocale(this.locale).toFormat(format);\n        }\n        catch (_a) {\n            throw new Error(`Cannot format provided time - ${time} to locale - ${this.locale}`);\n        }\n    }\n}\nTimeLocalizerPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TimeLocalizerPipe, deps: [{ token: TIME_LOCALE }], target: i0.ɵɵFactoryTarget.Pipe });\nTimeLocalizerPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TimeLocalizerPipe, name: \"timeLocalizer\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TimeLocalizerPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'timeLocalizer'\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TIME_LOCALE]\n                }] }]; } });\n\nclass TimeParserPipe {\n    constructor(locale, numberingSystem) {\n        this.locale = locale;\n        this.numberingSystem = numberingSystem;\n    }\n    transform(time, timeUnit = TimeUnit.HOUR) {\n        if (time == null || time === '') {\n            return '';\n        }\n        if (!isNaN(+time)) {\n            return time;\n        }\n        if (timeUnit === TimeUnit.MINUTE) {\n            return this.parseTime(time, 'm', 'minute');\n        }\n        return this.parseTime(time, 'H', 'hour');\n    }\n    parseTime(time, format, timeMeasure) {\n        const parsedTime = DateTime.fromFormat(String(time), format, {\n            numberingSystem: this.numberingSystem,\n            locale: this.locale\n        })[timeMeasure];\n        if (!isNaN(parsedTime)) {\n            return parsedTime;\n        }\n        throw new Error(`Cannot parse time - ${time}`);\n    }\n}\nTimeParserPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TimeParserPipe, deps: [{ token: TIME_LOCALE }, { token: NUMBERING_SYSTEM }], target: i0.ɵɵFactoryTarget.Pipe });\nTimeParserPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TimeParserPipe, name: \"timeParser\" });\nTimeParserPipe.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TimeParserPipe });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TimeParserPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'timeParser'\n                }]\n        }, {\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TIME_LOCALE]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NUMBERING_SYSTEM]\n                }] }]; } });\n\nclass AutofocusDirective {\n    constructor(element, document) {\n        this.element = element;\n        this.document = document;\n        this.activeElement = this.document.activeElement;\n    }\n    ngOnChanges() {\n        if (this.isFocusActive) {\n            // To avoid ExpressionChangedAfterItHasBeenCheckedError;\n            setTimeout(() => this.element.nativeElement.focus({ preventScroll: true }));\n        }\n    }\n    ngOnDestroy() {\n        // To avoid ExpressionChangedAfterItHasBeenCheckedError;\n        setTimeout(() => this.activeElement.focus({ preventScroll: true }));\n    }\n}\nAutofocusDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AutofocusDirective, deps: [{ token: i0.ElementRef }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nAutofocusDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: AutofocusDirective, selector: \"[timepickerAutofocus]\", inputs: { isFocusActive: [\"timepickerAutofocus\", \"isFocusActive\"] }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AutofocusDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[timepickerAutofocus]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { isFocusActive: [{\n                type: Input,\n                args: ['timepickerAutofocus']\n            }] } });\n\n/* tslint:disable:triple-equals */\nclass NgxMaterialTimepickerDialControlComponent {\n    constructor(timeParserPipe, timeLocalizerPipe) {\n        this.timeParserPipe = timeParserPipe;\n        this.timeLocalizerPipe = timeLocalizerPipe;\n        this.timeUnitChanged = new EventEmitter();\n        this.timeChanged = new EventEmitter();\n        this.focused = new EventEmitter();\n        this.unfocused = new EventEmitter();\n    }\n    get selectedTime() {\n        if (!!this.time) {\n            return this.timeList.find(t => t.time === +this.time);\n        }\n    }\n    ngOnInit() {\n        if (this.isEditable) {\n            this.timeControl = new FormControl({ value: this.formatTimeForUI(this.time), disabled: this.disabled });\n            this.timeControl.valueChanges.pipe(tap((value) => {\n                if (value.length > 2) {\n                    this.updateInputValue(value.slice(-1));\n                }\n            }), debounceTime(500), distinctUntilChanged(), filter((value) => !isTimeDisabledToChange(this.time, value, this.timeList)), tap((value) => this.time = this.timeParserPipe.transform(value, this.timeUnit).toString())).subscribe(() => this.updateTime());\n        }\n    }\n    saveTimeAndChangeTimeUnit(event, unit) {\n        event.preventDefault();\n        this.previousTime = this.time;\n        this.timeUnitChanged.next(unit);\n        this.focused.next();\n    }\n    updateTime() {\n        const time = this.selectedTime;\n        if (time) {\n            this.timeChanged.next(time);\n            this.previousTime = time.time;\n            if (this.isEditable) {\n                this.updateInputValue(this.formatTimeForUI(time.time));\n            }\n        }\n    }\n    onKeydown(e) {\n        if (!isDigit(e)) {\n            e.preventDefault();\n        }\n        else {\n            this.changeTimeByArrow(e.keyCode);\n        }\n    }\n    changeTimeByArrow(keyCode) {\n        const ARROW_UP = 38;\n        const ARROW_DOWN = 40;\n        let time;\n        if (keyCode === ARROW_UP) {\n            time = String(+this.time + (this.minutesGap || 1));\n        }\n        else if (keyCode === ARROW_DOWN) {\n            time = String(+this.time - (this.minutesGap || 1));\n        }\n        if (!isTimeUnavailable(time, this.timeList)) {\n            this.time = time;\n            this.updateTime();\n        }\n    }\n    formatTimeForUI(value) {\n        const parsedTime = this.timeParserPipe.transform(value, this.timeUnit).toString();\n        return this.timeLocalizerPipe.transform(parsedTime, this.timeUnit, true);\n    }\n    updateInputValue(value) {\n        this.editableTimeTmpl.nativeElement.value = value;\n    }\n}\nNgxMaterialTimepickerDialControlComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerDialControlComponent, deps: [{ token: TimeParserPipe }, { token: TimeLocalizerPipe }], target: i0.ɵɵFactoryTarget.Component });\nNgxMaterialTimepickerDialControlComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: NgxMaterialTimepickerDialControlComponent, selector: \"ngx-material-timepicker-dial-control\", inputs: { timeList: \"timeList\", timeUnit: \"timeUnit\", time: \"time\", isActive: \"isActive\", isEditable: \"isEditable\", minutesGap: \"minutesGap\", disabled: \"disabled\" }, outputs: { timeUnitChanged: \"timeUnitChanged\", timeChanged: \"timeChanged\", focused: \"focused\", unfocused: \"unfocused\" }, providers: [TimeParserPipe, TimeLocalizerPipe], viewQueries: [{ propertyName: \"editableTimeTmpl\", first: true, predicate: [\"editableTimeTmpl\"], descendants: true }], ngImport: i0, template: \"<!--suppress HtmlFormInputWithoutLabel, HtmlUnknownAttribute -->\\n<input class=\\\"timepicker-dial__control timepicker-dial__item\\\"\\n       [ngClass]=\\\"{'timepicker-dial__item_active': isActive}\\\"\\n       [ngModel]=\\\"time | timeLocalizer: timeUnit\\\"\\n       (ngModelChange)=\\\"time = $event\\\"\\n       [disabled]=\\\"disabled\\\"\\n       (input)=\\\"updateTime()\\\" (focus)=\\\"saveTimeAndChangeTimeUnit($event, timeUnit)\\\"\\n       readonly [timepickerAutofocus]=\\\"isActive\\\"\\n       *ngIf=\\\"!isEditable;else editableTemplate\\\">\\n\\n<ng-template #editableTemplate>\\n    <!--suppress HtmlFormInputWithoutLabel, HtmlUnknownAttribute -->\\n    <input class=\\\"timepicker-dial__control timepicker-dial__item timepicker-dial__control_editable\\\"\\n           #editableTimeTmpl\\n           [formControl]=\\\"timeControl\\\"\\n           [ngClass]=\\\"{'timepicker-dial__item_active': isActive}\\\"\\n           [timepickerAutofocus]=\\\"isActive\\\"\\n           (focus)=\\\"saveTimeAndChangeTimeUnit($event, timeUnit)\\\"\\n           (keydown)=\\\"onKeydown($event)\\\">\\n</ng-template>\\n\", styles: [\".timepicker-dial__item{cursor:pointer;color:#ffffff80;font-family:\\\"Roboto\\\",sans-serif}@supports (font-family: var(--primary-font-family)){.timepicker-dial__item{font-family:var(--primary-font-family);color:var(--dial-inactive-color)}}.timepicker-dial__item_active{color:#fff}@supports (color: var(--dial-active-color)){.timepicker-dial__item_active{color:var(--dial-active-color)}}.timepicker-dial__control{border:none;background-color:transparent;font-size:50px;width:60px;padding:0;border-radius:3px;text-align:right}.timepicker-dial__control_editable:focus{color:#00bfff;background-color:#fff;outline:deepskyblue}@supports (color: var(--dial-editable-active-color)){.timepicker-dial__control_editable:focus{color:var(--dial-editable-active-color)}}@supports (background-color: var(--dial-editable-background-color)){.timepicker-dial__control_editable:focus{background-color:var(--dial-editable-background-color)}}@supports (outline: var(--dial-editable-active-color)){.timepicker-dial__control_editable:focus{outline:var(--dial-editable-active-color)}}.timepicker-dial__control:disabled{cursor:default}.timepicker-dial__control:focus-visible{outline:none}\\n\"], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i4.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i4.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: AutofocusDirective, selector: \"[timepickerAutofocus]\", inputs: [\"timepickerAutofocus\"] }, { type: i4.FormControlDirective, selector: \"[formControl]\", inputs: [\"disabled\", \"formControl\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }], pipes: { \"timeLocalizer\": TimeLocalizerPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerDialControlComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-material-timepicker-dial-control',\n                    templateUrl: 'ngx-material-timepicker-dial-control.component.html',\n                    styleUrls: ['ngx-material-timepicker-dial-control.component.scss'],\n                    providers: [TimeParserPipe, TimeLocalizerPipe],\n                }]\n        }], ctorParameters: function () { return [{ type: TimeParserPipe }, { type: TimeLocalizerPipe }]; }, propDecorators: { timeList: [{\n                type: Input\n            }], timeUnit: [{\n                type: Input\n            }], time: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], isEditable: [{\n                type: Input\n            }], minutesGap: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], editableTimeTmpl: [{\n                type: ViewChild,\n                args: ['editableTimeTmpl']\n            }], timeUnitChanged: [{\n                type: Output\n            }], timeChanged: [{\n                type: Output\n            }], focused: [{\n                type: Output\n            }], unfocused: [{\n                type: Output\n            }] } });\nfunction isTimeDisabledToChange(currentTime, nextTime, timeList) {\n    const isNumber = /\\d/.test(nextTime);\n    if (isNumber) {\n        return isTimeUnavailable(nextTime, timeList);\n    }\n}\nfunction isTimeUnavailable(time, timeList) {\n    const selectedTime = timeList.find(value => value.time === +time);\n    return !selectedTime || (selectedTime && selectedTime.disabled);\n}\n\nclass NgxMaterialTimepickerPeriodComponent {\n    constructor() {\n        this.timePeriod = TimePeriod;\n        this.isPeriodAvailable = true;\n        this.periodChanged = new EventEmitter();\n    }\n    changePeriod(period) {\n        this.isPeriodAvailable = this.isSwitchPeriodAvailable(period);\n        if (this.isPeriodAvailable) {\n            this.periodChanged.next(period);\n        }\n    }\n    animationDone() {\n        this.isPeriodAvailable = true;\n    }\n    isSwitchPeriodAvailable(period) {\n        const time = this.getDisabledTimeByPeriod(period);\n        return !time.every(t => t.disabled);\n    }\n    getDisabledTimeByPeriod(period) {\n        switch (this.activeTimeUnit) {\n            case TimeUnit.HOUR:\n                return TimepickerTimeUtils.disableHours(this.hours, {\n                    min: this.minTime,\n                    max: this.maxTime,\n                    format: this.format,\n                    period\n                });\n            case TimeUnit.MINUTE:\n                return TimepickerTimeUtils.disableMinutes(this.minutes, +this.selectedHour, {\n                    min: this.minTime,\n                    max: this.maxTime,\n                    format: this.format,\n                    period\n                });\n            default:\n                throw new Error('no such TimeUnit');\n        }\n    }\n}\nNgxMaterialTimepickerPeriodComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerPeriodComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNgxMaterialTimepickerPeriodComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: NgxMaterialTimepickerPeriodComponent, selector: \"ngx-material-timepicker-period\", inputs: { selectedPeriod: \"selectedPeriod\", format: \"format\", activeTimeUnit: \"activeTimeUnit\", hours: \"hours\", minutes: \"minutes\", minTime: \"minTime\", maxTime: \"maxTime\", selectedHour: \"selectedHour\", meridiems: \"meridiems\" }, outputs: { periodChanged: \"periodChanged\" }, ngImport: i0, template: \"<div class=\\\"timepicker-period\\\">\\n\\t\\t\\t<button class=\\\"timepicker-dial__item timepicker-period__btn\\\"\\n                  [ngClass]=\\\"{'timepicker-dial__item_active': selectedPeriod === timePeriod.AM}\\\"\\n                  (click)=\\\"changePeriod(timePeriod.AM)\\\"\\n                  type=\\\"button\\\">{{meridiems[0]}}</button>\\n    <button class=\\\"timepicker-dial__item timepicker-period__btn\\\"\\n          [ngClass]=\\\"{'timepicker-dial__item_active': selectedPeriod === timePeriod.PM}\\\"\\n          (click)=\\\"changePeriod(timePeriod.PM)\\\"\\n          type=\\\"button\\\">{{meridiems[1]}}</button>\\n    <div class=\\\"timepicker-period__warning\\\" [@scaleInOut] (@scaleInOut.done)=\\\"animationDone()\\\" *ngIf=\\\"!isPeriodAvailable\\\">\\n        <p>Current time would be invalid in this period.</p>\\n    </div>\\n</div>\\n\", styles: [\".timepicker-dial__item{cursor:pointer;color:#ffffff80;font-family:\\\"Roboto\\\",sans-serif}@supports (font-family: var(--primary-font-family)){.timepicker-dial__item{font-family:var(--primary-font-family);color:var(--dial-inactive-color)}}.timepicker-dial__item_active{color:#fff}@supports (color: var(--dial-active-color)){.timepicker-dial__item_active{color:var(--dial-active-color)}}.timepicker-period{display:flex;flex-direction:column;position:relative}.timepicker-period__btn{padding:1px 3px;border:0;background-color:transparent;font-size:18px;font-weight:500;-webkit-user-select:none;-moz-user-select:none;user-select:none;outline:none;border-radius:3px;transition:background-color .5s;font-family:\\\"Roboto\\\",sans-serif}@supports (font-family: var(--primary-font-family)){.timepicker-period__btn{font-family:var(--primary-font-family)}}.timepicker-period__btn:focus{background-color:#00000012}.timepicker-period__warning{padding:5px 10px;border-radius:3px;background-color:#0000008c;color:#fff;position:absolute;width:200px;left:-20px;top:40px}.timepicker-period__warning>p{margin:0;font-size:12px;font-family:\\\"Roboto\\\",sans-serif}@supports (font-family: var(--primary-font-family)){.timepicker-period__warning>p{font-family:var(--primary-font-family)}}\\n\"], directives: [{ type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [\n        trigger('scaleInOut', [\n            transition(':enter', [\n                style({ transform: 'scale(0)' }),\n                animate('.2s', style({ transform: 'scale(1)' })),\n                sequence([\n                    animate('3s', style({ opacity: 1 })),\n                    animate('.3s', style({ opacity: 0 }))\n                ])\n            ])\n        ])\n    ] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerPeriodComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-material-timepicker-period',\n                    templateUrl: 'ngx-material-timepicker-period.component.html',\n                    styleUrls: ['ngx-material-timepicker-period.component.scss'],\n                    animations: [\n                        trigger('scaleInOut', [\n                            transition(':enter', [\n                                style({ transform: 'scale(0)' }),\n                                animate('.2s', style({ transform: 'scale(1)' })),\n                                sequence([\n                                    animate('3s', style({ opacity: 1 })),\n                                    animate('.3s', style({ opacity: 0 }))\n                                ])\n                            ])\n                        ])\n                    ]\n                }]\n        }], propDecorators: { selectedPeriod: [{\n                type: Input\n            }], format: [{\n                type: Input\n            }], activeTimeUnit: [{\n                type: Input\n            }], hours: [{\n                type: Input\n            }], minutes: [{\n                type: Input\n            }], minTime: [{\n                type: Input\n            }], maxTime: [{\n                type: Input\n            }], selectedHour: [{\n                type: Input\n            }], meridiems: [{\n                type: Input\n            }], periodChanged: [{\n                type: Output\n            }] } });\n\nclass NgxMaterialTimepickerDialComponent {\n    constructor(locale) {\n        this.locale = locale;\n        this.timeUnit = TimeUnit;\n        this.meridiems = Info.meridiems({ locale: this.locale });\n        this.periodChanged = new EventEmitter();\n        this.timeUnitChanged = new EventEmitter();\n        this.hourChanged = new EventEmitter();\n        this.minuteChanged = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        if (changes['period'] && changes['period'].currentValue\n            || changes['format'] && changes['format'].currentValue) {\n            const hours = TimepickerTimeUtils.getHours(this.format);\n            this.hours = TimepickerTimeUtils.disableHours(hours, {\n                min: this.minTime,\n                max: this.maxTime,\n                format: this.format,\n                period: this.period,\n            });\n        }\n        if (changes['period'] && changes['period'].currentValue\n            || changes['hour'] && changes['hour'].currentValue) {\n            const minutes = TimepickerTimeUtils.getMinutes(this.minutesGap);\n            this.minutes = TimepickerTimeUtils.disableMinutes(minutes, +this.hour, {\n                min: this.minTime,\n                max: this.maxTime,\n                format: this.format,\n                period: this.period,\n            });\n        }\n    }\n    changeTimeUnit(unit) {\n        this.timeUnitChanged.next(unit);\n    }\n    changePeriod(period) {\n        this.periodChanged.next(period);\n    }\n    changeHour(hour) {\n        this.hourChanged.next(hour);\n        if (this.isEditable) {\n            this.changeTimeUnit(TimeUnit.MINUTE);\n        }\n    }\n    changeMinute(minute) {\n        this.minuteChanged.next(minute);\n    }\n    showHint() {\n        this.isHintVisible = true;\n    }\n    hideHint() {\n        this.isHintVisible = false;\n    }\n}\nNgxMaterialTimepickerDialComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerDialComponent, deps: [{ token: TIME_LOCALE }], target: i0.ɵɵFactoryTarget.Component });\nNgxMaterialTimepickerDialComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: NgxMaterialTimepickerDialComponent, selector: \"ngx-material-timepicker-dial\", inputs: { editableHintTmpl: \"editableHintTmpl\", hour: \"hour\", minute: \"minute\", format: \"format\", period: \"period\", activeTimeUnit: \"activeTimeUnit\", minTime: \"minTime\", maxTime: \"maxTime\", isEditable: \"isEditable\", minutesGap: \"minutesGap\", hoursOnly: \"hoursOnly\" }, outputs: { periodChanged: \"periodChanged\", timeUnitChanged: \"timeUnitChanged\", hourChanged: \"hourChanged\", minuteChanged: \"minuteChanged\" }, usesOnChanges: true, ngImport: i0, template: \"<div class=\\\"timepicker-dial\\\">\\n    <div class=\\\"timepicker-dial__container\\\">\\n        <div class=\\\"timepicker-dial__time\\\">\\n            <ngx-material-timepicker-dial-control [timeList]=\\\"hours\\\" [time]=\\\"hour\\\" [timeUnit]=\\\"timeUnit.HOUR\\\"\\n                                                  [isActive]=\\\"activeTimeUnit === timeUnit.HOUR\\\"\\n                                                  [isEditable]=\\\"isEditable\\\"\\n                                                  (timeUnitChanged)=\\\"changeTimeUnit($event)\\\"\\n                                                  (timeChanged)=\\\"changeHour($event)\\\"\\n                                                  (focused)=\\\"showHint()\\\"\\n                                                  (unfocused)=\\\"hideHint()\\\">\\n\\n            </ngx-material-timepicker-dial-control>\\n            <span>:</span>\\n            <ngx-material-timepicker-dial-control [timeList]=\\\"minutes\\\" [time]=\\\"minute\\\" [timeUnit]=\\\"timeUnit.MINUTE\\\"\\n                                                  [isActive]=\\\"activeTimeUnit === timeUnit.MINUTE\\\"\\n                                                  [isEditable]=\\\"isEditable\\\"\\n                                                  [minutesGap]=\\\"minutesGap\\\"\\n                                                  [disabled]=\\\"hoursOnly\\\"\\n                                                  (timeUnitChanged)=\\\"changeTimeUnit($event)\\\"\\n                                                  (timeChanged)=\\\"changeMinute($event)\\\"\\n                                                  (focused)=\\\"showHint()\\\"\\n                                                  (unfocused)=\\\"hideHint()\\\">\\n\\n            </ngx-material-timepicker-dial-control>\\n        </div>\\n        <ngx-material-timepicker-period class=\\\"timepicker-dial__period\\\"\\n                                        [ngClass]=\\\"{'timepicker-dial__period--hidden': format === 24}\\\"\\n                                        [selectedPeriod]=\\\"period\\\" [activeTimeUnit]=\\\"activeTimeUnit\\\"\\n                                        [maxTime]=\\\"maxTime\\\" [minTime]=\\\"minTime\\\" [format]=\\\"format\\\"\\n                                        [hours]=\\\"hours\\\" [minutes]=\\\"minutes\\\" [selectedHour]=\\\"hour\\\"\\n                                        [meridiems]=\\\"meridiems\\\"\\n                                        (periodChanged)=\\\"changePeriod($event)\\\"></ngx-material-timepicker-period>\\n    </div>\\n    <div *ngIf=\\\"isEditable || editableHintTmpl\\\" [ngClass]=\\\"{'timepicker-dial__hint-container--hidden': !isHintVisible}\\\">\\n        <!--suppress HtmlUnknownAttribute -->\\n        <ng-container *ngTemplateOutlet=\\\"editableHintTmpl ? editableHintTmpl : editableHintDefault\\\"></ng-container>\\n        <ng-template #editableHintDefault>\\n            <small class=\\\"timepicker-dial__hint\\\"> * use arrows (<span>&#8645;</span>) to change the time</small>\\n        </ng-template>\\n    </div>\\n</div>\\n\", styles: [\".timepicker-dial{text-align:right}.timepicker-dial__container{display:flex;align-items:center;justify-content:flex-end;-webkit-tap-highlight-color:rgba(0,0,0,0)}.timepicker-dial__time{display:flex;align-items:baseline;line-height:normal;font-size:50px;color:#ffffff80;font-family:\\\"Roboto\\\",sans-serif}@supports (font-family: var(--primary-font-family)){.timepicker-dial__time{font-family:var(--primary-font-family);color:var(--dial-inactive-color)}}.timepicker-dial__period{display:block;margin-left:10px}.timepicker-dial__period--hidden{visibility:hidden}.timepicker-dial__hint-container--hidden{visibility:hidden}.timepicker-dial__hint{display:inline-block;font-size:10px;color:#fff}@supports (color: var(--dial-active-color)){.timepicker-dial__hint{color:var(--dial-active-color)}}.timepicker-dial__hint span{font-size:14px}@media (max-device-width: 1023px) and (orientation: landscape){.timepicker-dial__container{flex-direction:column}.timepicker-dial__period{margin-left:0}}\\n\"], components: [{ type: NgxMaterialTimepickerDialControlComponent, selector: \"ngx-material-timepicker-dial-control\", inputs: [\"timeList\", \"timeUnit\", \"time\", \"isActive\", \"isEditable\", \"minutesGap\", \"disabled\"], outputs: [\"timeUnitChanged\", \"timeChanged\", \"focused\", \"unfocused\"] }, { type: NgxMaterialTimepickerPeriodComponent, selector: \"ngx-material-timepicker-period\", inputs: [\"selectedPeriod\", \"format\", \"activeTimeUnit\", \"hours\", \"minutes\", \"minTime\", \"maxTime\", \"selectedHour\", \"meridiems\"], outputs: [\"periodChanged\"] }], directives: [{ type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerDialComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-material-timepicker-dial',\n                    templateUrl: 'ngx-material-timepicker-dial.component.html',\n                    styleUrls: ['ngx-material-timepicker-dial.component.scss'],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TIME_LOCALE]\n                }] }]; }, propDecorators: { editableHintTmpl: [{\n                type: Input\n            }], hour: [{\n                type: Input\n            }], minute: [{\n                type: Input\n            }], format: [{\n                type: Input\n            }], period: [{\n                type: Input\n            }], activeTimeUnit: [{\n                type: Input\n            }], minTime: [{\n                type: Input\n            }], maxTime: [{\n                type: Input\n            }], isEditable: [{\n                type: Input\n            }], minutesGap: [{\n                type: Input\n            }], hoursOnly: [{\n                type: Input\n            }], periodChanged: [{\n                type: Output\n            }], timeUnitChanged: [{\n                type: Output\n            }], hourChanged: [{\n                type: Output\n            }], minuteChanged: [{\n                type: Output\n            }] } });\n\nclass NgxMaterialTimepickerHoursFace {\n    constructor(format) {\n        this.hourChange = new EventEmitter();\n        this.hourSelected = new EventEmitter();\n        this.hoursList = [];\n        this.hoursList = TimepickerTimeUtils.getHours(format);\n    }\n    onTimeSelected(time) {\n        this.hourSelected.next(time);\n    }\n}\nNgxMaterialTimepickerHoursFace.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerHoursFace, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive });\nNgxMaterialTimepickerHoursFace.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: NgxMaterialTimepickerHoursFace, inputs: { selectedHour: \"selectedHour\", minTime: \"minTime\", maxTime: \"maxTime\", format: \"format\" }, outputs: { hourChange: \"hourChange\", hourSelected: \"hourSelected\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerHoursFace, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: undefined }]; }, propDecorators: { selectedHour: [{\n                type: Input\n            }], minTime: [{\n                type: Input\n            }], maxTime: [{\n                type: Input\n            }], format: [{\n                type: Input\n            }], hourChange: [{\n                type: Output\n            }], hourSelected: [{\n                type: Output\n            }] } });\n\nclass ActiveHourPipe {\n    transform(hour, currentHour, isClockFaceDisabled) {\n        if (hour == null || isClockFaceDisabled) {\n            return false;\n        }\n        return hour === currentHour;\n    }\n}\nActiveHourPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ActiveHourPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nActiveHourPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ActiveHourPipe, name: \"activeHour\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ActiveHourPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'activeHour'\n                }]\n        }] });\n\nclass ActiveMinutePipe {\n    transform(minute, currentMinute, gap, isClockFaceDisabled) {\n        if (minute == null || isClockFaceDisabled) {\n            return false;\n        }\n        const defaultGap = 5;\n        return ((currentMinute === minute) && (minute % (gap || defaultGap) === 0));\n    }\n}\nActiveMinutePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ActiveMinutePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nActiveMinutePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ActiveMinutePipe, name: \"activeMinute\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ActiveMinutePipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'activeMinute'\n                }]\n        }] });\n\nclass MinutesFormatterPipe {\n    transform(minute, gap = 5) {\n        if (!minute) {\n            return minute;\n        }\n        return minute % gap === 0 ? minute : '';\n    }\n}\nMinutesFormatterPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: MinutesFormatterPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nMinutesFormatterPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: MinutesFormatterPipe, name: \"minutesFormatter\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: MinutesFormatterPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'minutesFormatter'\n                }]\n        }] });\n\nconst CLOCK_HAND_STYLES = {\n    small: {\n        height: '75px',\n        top: 'calc(50% - 75px)'\n    },\n    large: {\n        height: '103px',\n        top: 'calc(50% - 103px)'\n    }\n};\nclass NgxMaterialTimepickerFaceComponent {\n    constructor() {\n        this.timeUnit = TimeUnit;\n        this.innerClockFaceSize = 85;\n        this.timeChange = new EventEmitter();\n        this.timeSelected = new EventEmitter();\n    }\n    ngAfterViewInit() {\n        this.setClockHandPosition();\n        this.addTouchEvents();\n    }\n    ngOnChanges(changes) {\n        const faceTimeChanges = changes['faceTime'];\n        const selectedTimeChanges = changes['selectedTime'];\n        if ((faceTimeChanges && faceTimeChanges.currentValue)\n            && (selectedTimeChanges && selectedTimeChanges.currentValue)) {\n            /* Set time according to passed an input value */\n            this.selectedTime = this.faceTime.find(time => time.time === this.selectedTime.time);\n        }\n        if (selectedTimeChanges && selectedTimeChanges.currentValue) {\n            this.setClockHandPosition();\n        }\n        if (faceTimeChanges && faceTimeChanges.currentValue) {\n            // To avoid an error ExpressionChangedAfterItHasBeenCheckedError\n            setTimeout(() => this.selectAvailableTime());\n        }\n    }\n    trackByTime(_, time) {\n        return time.time;\n    }\n    onMousedown(e) {\n        e.preventDefault();\n        this.isStarted = true;\n    }\n    selectTime(e) {\n        if (!this.isStarted && (e instanceof MouseEvent && e.type !== 'click')) {\n            return;\n        }\n        const clockFaceCords = this.clockFace.nativeElement.getBoundingClientRect();\n        /* Get x0 and y0 of the circle */\n        const centerX = clockFaceCords.left + clockFaceCords.width / 2;\n        const centerY = clockFaceCords.top + clockFaceCords.height / 2;\n        /* Counting the arctangent and convert it to from radian to deg */\n        const arctangent = Math.atan(Math.abs(e.clientX - centerX) / Math.abs(e.clientY - centerY)) * 180 / Math.PI;\n        /* Get angle according to quadrant */\n        const circleAngle = countAngleByCords(centerX, centerY, e.clientX, e.clientY, arctangent);\n        /* Check if selected time from the inner clock face (24 hours format only) */\n        const isInnerClockChosen = this.format && this.isInnerClockFace(centerX, centerY, e.clientX, e.clientY);\n        /* Round angle according to angle step */\n        const angleStep = this.unit === TimeUnit.MINUTE ? (6 * (this.minutesGap || 1)) : 30;\n        const roundedAngle = roundAngle(circleAngle, angleStep);\n        const angle = (roundedAngle || 360) + (isInnerClockChosen ? 360 : 0);\n        const selectedTime = this.faceTime.find(val => val.angle === angle);\n        if (selectedTime && !selectedTime.disabled) {\n            this.timeChange.next(selectedTime);\n            /* To let know whether user ended interaction with clock face */\n            if (!this.isStarted) {\n                this.timeSelected.next(selectedTime.time);\n            }\n        }\n    }\n    onMouseup(e) {\n        e.preventDefault();\n        this.isStarted = false;\n    }\n    ngOnDestroy() {\n        this.removeTouchEvents();\n    }\n    addTouchEvents() {\n        this.touchStartHandler = this.onMousedown.bind(this);\n        this.touchEndHandler = this.onMouseup.bind(this);\n        this.clockFace.nativeElement.addEventListener('touchstart', this.touchStartHandler);\n        this.clockFace.nativeElement.addEventListener('touchend', this.touchEndHandler);\n    }\n    removeTouchEvents() {\n        this.clockFace.nativeElement.removeEventListener('touchstart', this.touchStartHandler);\n        this.clockFace.nativeElement.removeEventListener('touchend', this.touchEndHandler);\n    }\n    setClockHandPosition() {\n        if (this.format === 24) {\n            if (this.selectedTime.time > 12 || this.selectedTime.time === 0) {\n                this.decreaseClockHand();\n            }\n            else {\n                this.increaseClockHand();\n            }\n        }\n        this.clockHand.nativeElement.style.transform = `rotate(${this.selectedTime.angle}deg)`;\n    }\n    selectAvailableTime() {\n        const currentTime = this.faceTime.find(time => this.selectedTime.time === time.time);\n        this.isClockFaceDisabled = this.faceTime.every(time => time.disabled);\n        if ((currentTime && currentTime.disabled) && !this.isClockFaceDisabled) {\n            const availableTime = this.faceTime.find(time => !time.disabled);\n            this.timeChange.next(availableTime);\n        }\n    }\n    isInnerClockFace(x0, y0, x, y) {\n        /* Detect whether time from the inner clock face or not (24 format only) */\n        return Math.sqrt(Math.pow(x - x0, 2) + Math.pow(y - y0, 2)) < this.innerClockFaceSize;\n    }\n    decreaseClockHand() {\n        this.clockHand.nativeElement.style.height = CLOCK_HAND_STYLES.small.height;\n        this.clockHand.nativeElement.style.top = CLOCK_HAND_STYLES.small.top;\n    }\n    increaseClockHand() {\n        this.clockHand.nativeElement.style.height = CLOCK_HAND_STYLES.large.height;\n        this.clockHand.nativeElement.style.top = CLOCK_HAND_STYLES.large.top;\n    }\n}\nNgxMaterialTimepickerFaceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerFaceComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNgxMaterialTimepickerFaceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: NgxMaterialTimepickerFaceComponent, selector: \"ngx-material-timepicker-face\", inputs: { faceTime: \"faceTime\", selectedTime: \"selectedTime\", unit: \"unit\", format: \"format\", minutesGap: \"minutesGap\" }, outputs: { timeChange: \"timeChange\", timeSelected: \"timeSelected\" }, host: { listeners: { \"mousedown\": \"onMousedown($event)\", \"click\": \"selectTime($event)\", \"touchmove\": \"selectTime($event.changedTouches[0])\", \"touchend\": \"selectTime($event.changedTouches[0])\", \"mousemove\": \"selectTime($event)\", \"mouseup\": \"onMouseup($event)\" } }, viewQueries: [{ propertyName: \"clockFace\", first: true, predicate: [\"clockFace\"], descendants: true, static: true }, { propertyName: \"clockHand\", first: true, predicate: [\"clockHand\"], descendants: true, static: true }], usesOnChanges: true, ngImport: i0, template: \"<div class=\\\"clock-face\\\" #clockFace>\\n    <div *ngIf=\\\"unit !== timeUnit.MINUTE;else minutesFace\\\" class=\\\"clock-face__container\\\">\\n        <div class=\\\"clock-face__number clock-face__number--outer\\\"\\n             [ngStyle]=\\\"{'transform': 'rotateZ('+ time.angle +'deg) translateX(-50%)'}\\\"\\n             *ngFor=\\\"let time of faceTime | slice: 0 : 12; trackBy: trackByTime\\\">\\n\\t\\t\\t<span [ngStyle]=\\\"{'transform': 'rotateZ(-'+ time.angle +'deg)'}\\\"\\n                  [ngClass]=\\\"{'active': time.time | activeHour: selectedTime.time : isClockFaceDisabled,\\n                   'disabled': time.disabled}\\\">\\n                {{time.time | timeLocalizer: timeUnit.HOUR}}\\n            </span>\\n        </div>\\n        <div class=\\\"clock-face__inner\\\" *ngIf=\\\"faceTime.length > 12\\\"\\n             [style.top]=\\\"'calc(50% - ' + innerClockFaceSize + 'px)'\\\">\\n            <div class=\\\"clock-face__number clock-face__number--inner\\\"\\n                 [ngStyle]=\\\"{'transform': 'rotateZ('+ time.angle +'deg) translateX(-50%)'}\\\"\\n                 [style.height.px]=\\\"innerClockFaceSize\\\"\\n                 *ngFor=\\\"let time of faceTime | slice: 12 : 24; trackBy: trackByTime\\\">\\n\\t\\t\\t<span [ngStyle]=\\\"{'transform': 'rotateZ(-'+ time.angle +'deg)'}\\\"\\n                  [ngClass]=\\\"{'active': time.time | activeHour: selectedTime?.time : isClockFaceDisabled,\\n                   'disabled': time.disabled}\\\">\\n                {{time.time | timeLocalizer: timeUnit.HOUR}}</span>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <span class=\\\"clock-face__clock-hand\\\" [ngClass]=\\\"{'clock-face__clock-hand_minute': unit === timeUnit.MINUTE}\\\"\\n          #clockHand [hidden]=\\\"isClockFaceDisabled\\\"></span>\\n</div>\\n<ng-template #minutesFace>\\n    <div class=\\\"clock-face__container\\\">\\n        <div class=\\\"clock-face__number clock-face__number--outer\\\"\\n             [ngStyle]=\\\"{'transform': 'rotateZ('+ time.angle +'deg) translateX(-50%)'}\\\"\\n             *ngFor=\\\"let time of faceTime; trackBy: trackByTime\\\">\\n\\t<span [ngStyle]=\\\"{'transform': 'rotateZ(-'+ time.angle +'deg)'}\\\"\\n          [ngClass]=\\\"{'active': time.time | activeMinute: selectedTime?.time:minutesGap:isClockFaceDisabled,\\n           'disabled': time.disabled}\\\">\\n\\t{{time.time | minutesFormatter: minutesGap | timeLocalizer: timeUnit.MINUTE}}</span>\\n        </div>\\n    </div>\\n</ng-template>\\n\", styles: [\".clock-face{width:290px;height:290px;border-radius:50%;position:relative;display:flex;justify-content:center;padding:20px;box-sizing:border-box;background-color:#f0f0f0}@supports (background-color: var(--clock-face-background-color)){.clock-face{background-color:var(--clock-face-background-color)}}.clock-face__inner{position:absolute}.clock-face__container{margin-left:-2px}.clock-face__number{position:absolute;transform-origin:0 100%;width:50px;text-align:center;z-index:2}.clock-face__number--outer{height:calc(290px / 2 - 20px)}.clock-face__number--outer>span{font-size:16px;color:#6c6c6c}@supports (color: var(--clock-face-time-inactive-color)){.clock-face__number--outer>span{color:var(--clock-face-time-inactive-color)}}.clock-face__number--inner>span{font-size:14px;color:#929292}@supports (color: var(--clock-face-inner-time-inactive-color)){.clock-face__number--inner>span{color:var(--clock-face-inner-time-inactive-color)}}.clock-face__number>span{-webkit-user-select:none;-moz-user-select:none;user-select:none;width:30px;height:30px;display:flex;justify-content:center;align-items:center;margin:auto;border-radius:50%;font-weight:500;font-family:\\\"Roboto\\\",sans-serif}@supports (font-family: var(--primary-font-family)){.clock-face__number>span{font-family:var(--primary-font-family)}}.clock-face__number>span.active{background-color:#00bfff;color:#fff}@supports (background-color: var(--clock-hand-color)){.clock-face__number>span.active{background-color:var(--clock-hand-color);color:var(--clock-face-time-active-color)}}.clock-face__number>span.disabled{color:#c5c5c5}@supports (color: var(--clock-face-time-disabled-color)){.clock-face__number>span.disabled{color:var(--clock-face-time-disabled-color)}}.clock-face__clock-hand{height:103px;width:2px;transform-origin:0 100%;position:absolute;top:calc(50% - 103px);z-index:1;background-color:#00bfff}@supports (background-color: var(--clock-hand-color)){.clock-face__clock-hand{background-color:var(--clock-hand-color)}}.clock-face__clock-hand:after{content:\\\"\\\";width:7px;height:7px;border-radius:50%;background-color:inherit;position:absolute;bottom:-3px;left:-3.5px}.clock-face__clock-hand_minute:before{content:\\\"\\\";width:7px;height:7px;background-color:#fff;border-radius:50%;position:absolute;top:-8px;left:calc(50% - 8px);box-sizing:content-box;border-width:4px;border-style:solid;border-color:#00bfff}@supports (border-color: var(--clock-hand-color)){.clock-face__clock-hand_minute:before{border-color:var(--clock-hand-color)}}@media (max-device-width: 1023px) and (orientation: landscape){.clock-face{width:225px;height:225px;padding:5px}.clock-face__number--outer{height:calc(225px / 2 - 5px)}.clock-face__clock-hand_minute:before{top:0}}\\n\"], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], pipes: { \"slice\": i1.SlicePipe, \"activeHour\": ActiveHourPipe, \"timeLocalizer\": TimeLocalizerPipe, \"activeMinute\": ActiveMinutePipe, \"minutesFormatter\": MinutesFormatterPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerFaceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-material-timepicker-face',\n                    templateUrl: './ngx-material-timepicker-face.component.html',\n                    styleUrls: ['./ngx-material-timepicker-face.component.scss'],\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { faceTime: [{\n                type: Input\n            }], selectedTime: [{\n                type: Input\n            }], unit: [{\n                type: Input\n            }], format: [{\n                type: Input\n            }], minutesGap: [{\n                type: Input\n            }], timeChange: [{\n                type: Output\n            }], timeSelected: [{\n                type: Output\n            }], clockFace: [{\n                type: ViewChild,\n                args: ['clockFace', { static: true }]\n            }], clockHand: [{\n                type: ViewChild,\n                args: ['clockHand', { static: true }]\n            }], onMousedown: [{\n                type: HostListener,\n                args: ['mousedown', ['$event']]\n            }], selectTime: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }, {\n                type: HostListener,\n                args: ['touchmove', ['$event.changedTouches[0]']]\n            }, {\n                type: HostListener,\n                args: ['touchend', ['$event.changedTouches[0]']]\n            }, {\n                type: HostListener,\n                args: ['mousemove', ['$event']]\n            }], onMouseup: [{\n                type: HostListener,\n                args: ['mouseup', ['$event']]\n            }] } });\nfunction roundAngle(angle, step) {\n    return Math.round(angle / step) * step;\n}\nfunction countAngleByCords(x0, y0, x, y, currentAngle) {\n    if (y > y0 && x >= x0) { // II quarter\n        return 180 - currentAngle;\n    }\n    else if (y > y0 && x < x0) { // III quarter\n        return 180 + currentAngle;\n    }\n    else if (y < y0 && x < x0) { // IV quarter\n        return 360 - currentAngle;\n    }\n    else { // I quarter\n        return currentAngle;\n    }\n}\n\nclass NgxMaterialTimepicker24HoursFaceComponent extends NgxMaterialTimepickerHoursFace {\n    constructor() {\n        super(24);\n    }\n    ngAfterContentInit() {\n        this.hoursList = TimepickerTimeUtils.disableHours(this.hoursList, {\n            min: this.minTime,\n            max: this.maxTime,\n            format: this.format\n        });\n    }\n}\nNgxMaterialTimepicker24HoursFaceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepicker24HoursFaceComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNgxMaterialTimepicker24HoursFaceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: NgxMaterialTimepicker24HoursFaceComponent, selector: \"ngx-material-timepicker-24-hours-face\", usesInheritance: true, ngImport: i0, template: \"<ngx-material-timepicker-face [selectedTime]=\\\"selectedHour\\\" [faceTime]=\\\"hoursList\\\" [format]=\\\"format\\\"\\n                              (timeChange)=\\\"hourChange.next($event)\\\"\\n                              (timeSelected)=\\\"onTimeSelected($event)\\\"></ngx-material-timepicker-face>\\n\", components: [{ type: NgxMaterialTimepickerFaceComponent, selector: \"ngx-material-timepicker-face\", inputs: [\"faceTime\", \"selectedTime\", \"unit\", \"format\", \"minutesGap\"], outputs: [\"timeChange\", \"timeSelected\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepicker24HoursFaceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-material-timepicker-24-hours-face',\n                    templateUrl: 'ngx-material-timepicker-24-hours-face.component.html',\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass NgxMaterialTimepicker12HoursFaceComponent extends NgxMaterialTimepickerHoursFace {\n    constructor() {\n        super(12);\n    }\n    ngOnChanges(changes) {\n        if (changes['period'] && changes['period'].currentValue) {\n            this.hoursList = TimepickerTimeUtils.disableHours(this.hoursList, {\n                min: this.minTime,\n                max: this.maxTime,\n                format: this.format,\n                period: this.period\n            });\n        }\n    }\n}\nNgxMaterialTimepicker12HoursFaceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepicker12HoursFaceComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNgxMaterialTimepicker12HoursFaceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: NgxMaterialTimepicker12HoursFaceComponent, selector: \"ngx-material-timepicker-12-hours-face\", inputs: { period: \"period\" }, usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<ngx-material-timepicker-face [selectedTime]=\\\"selectedHour\\\" [faceTime]=\\\"hoursList\\\"\\n                              (timeChange)=\\\"hourChange.next($event)\\\" (timeSelected)=\\\"onTimeSelected($event)\\\"></ngx-material-timepicker-face>\\n\", components: [{ type: NgxMaterialTimepickerFaceComponent, selector: \"ngx-material-timepicker-face\", inputs: [\"faceTime\", \"selectedTime\", \"unit\", \"format\", \"minutesGap\"], outputs: [\"timeChange\", \"timeSelected\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepicker12HoursFaceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-material-timepicker-12-hours-face',\n                    templateUrl: 'ngx-material-timepicker-12-hours-face.component.html',\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { period: [{\n                type: Input\n            }] } });\n\nclass NgxMaterialTimepickerMinutesFaceComponent {\n    constructor() {\n        this.minutesList = [];\n        this.timeUnit = TimeUnit;\n        this.minuteChange = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        if (changes['period'] && changes['period'].currentValue) {\n            const minutes = TimepickerTimeUtils.getMinutes(this.minutesGap);\n            this.minutesList = TimepickerTimeUtils.disableMinutes(minutes, this.selectedHour, {\n                min: this.minTime,\n                max: this.maxTime,\n                format: this.format,\n                period: this.period\n            });\n        }\n    }\n}\nNgxMaterialTimepickerMinutesFaceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerMinutesFaceComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNgxMaterialTimepickerMinutesFaceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: NgxMaterialTimepickerMinutesFaceComponent, selector: \"ngx-material-timepicker-minutes-face\", inputs: { selectedMinute: \"selectedMinute\", selectedHour: \"selectedHour\", period: \"period\", minTime: \"minTime\", maxTime: \"maxTime\", format: \"format\", minutesGap: \"minutesGap\" }, outputs: { minuteChange: \"minuteChange\" }, usesOnChanges: true, ngImport: i0, template: \"<ngx-material-timepicker-face [faceTime]=\\\"minutesList\\\" [selectedTime]=\\\"selectedMinute\\\"\\n                              [minutesGap]=\\\"minutesGap\\\"\\n                              (timeChange)=\\\"minuteChange.next($event)\\\" [unit]=\\\"timeUnit.MINUTE\\\"></ngx-material-timepicker-face>\\n\", components: [{ type: NgxMaterialTimepickerFaceComponent, selector: \"ngx-material-timepicker-face\", inputs: [\"faceTime\", \"selectedTime\", \"unit\", \"format\", \"minutesGap\"], outputs: [\"timeChange\", \"timeSelected\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerMinutesFaceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-material-timepicker-minutes-face',\n                    templateUrl: './ngx-material-timepicker-minutes-face.component.html'\n                }]\n        }], propDecorators: { selectedMinute: [{\n                type: Input\n            }], selectedHour: [{\n                type: Input\n            }], period: [{\n                type: Input\n            }], minTime: [{\n                type: Input\n            }], maxTime: [{\n                type: Input\n            }], format: [{\n                type: Input\n            }], minutesGap: [{\n                type: Input\n            }], minuteChange: [{\n                type: Output\n            }] } });\n\nclass NgxMaterialTimepickerButtonComponent {\n}\nNgxMaterialTimepickerButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerButtonComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNgxMaterialTimepickerButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: NgxMaterialTimepickerButtonComponent, selector: \"ngx-material-timepicker-button\", ngImport: i0, template: \"<button class=\\\"timepicker-button\\\" type=\\\"button\\\">\\n  <span><ng-content></ng-content></span>\\n</button>\\n\", styles: [\".timepicker-button{display:inline-block;height:36px;min-width:88px;line-height:36px;border:12px;border-radius:2px;background-color:transparent;text-align:center;transition:all .45s cubic-bezier(.23,1,.32,1);overflow:hidden;-webkit-user-select:none;-moz-user-select:none;user-select:none;position:relative;cursor:pointer;outline:none;color:#00bfff}@supports (color: var(--button-color)){.timepicker-button{color:var(--button-color)}}.timepicker-button:hover,.timepicker-button:focus{background-color:#9993}.timepicker-button>span{font-size:14px;text-transform:uppercase;font-weight:600;padding-left:16px;padding-right:16px;font-family:\\\"Roboto\\\",sans-serif}@supports (font-family: var(--primary-font-family)){.timepicker-button>span{font-family:var(--primary-font-family)}}\\n\"] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerButtonComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-material-timepicker-button',\n                    templateUrl: './ngx-material-timepicker-button.component.html',\n                    styleUrls: ['./ngx-material-timepicker-button.component.scss']\n                }]\n        }] });\n\nclass OverlayDirective {\n    constructor(eventService) {\n        this.eventService = eventService;\n    }\n    onClick(e) {\n        if (!this.preventClick) {\n            this.eventService.dispatchEvent(e);\n        }\n        e.preventDefault();\n    }\n}\nOverlayDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: OverlayDirective, deps: [{ token: NgxMaterialTimepickerEventService }], target: i0.ɵɵFactoryTarget.Directive });\nOverlayDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: OverlayDirective, selector: \"[overlay]\", inputs: { preventClick: [\"overlay\", \"preventClick\"] }, host: { listeners: { \"click\": \"onClick($event)\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: OverlayDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[overlay]'\n                }]\n        }], ctorParameters: function () { return [{ type: NgxMaterialTimepickerEventService }]; }, propDecorators: { preventClick: [{\n                type: Input,\n                args: ['overlay']\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }] } });\n\nclass NgxMaterialTimepickerThemeDirective {\n    constructor(elementRef) {\n        this.element = elementRef.nativeElement;\n    }\n    ngAfterViewInit() {\n        if (this.theme) {\n            this.setTheme(this.theme);\n        }\n    }\n    setTheme(theme) {\n        for (const val in theme) {\n            if (theme.hasOwnProperty(val)) {\n                if (typeof theme[val] === 'string') {\n                    for (const prop in theme) {\n                        if (theme.hasOwnProperty(prop)) {\n                            this.element.style.setProperty(`--${camelCaseToDash(prop)}`, theme[prop]);\n                        }\n                    }\n                    return;\n                }\n                this.setTheme(theme[val]);\n            }\n        }\n    }\n}\nNgxMaterialTimepickerThemeDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerThemeDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgxMaterialTimepickerThemeDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: NgxMaterialTimepickerThemeDirective, selector: \"[ngxMaterialTimepickerTheme]\", inputs: { theme: [\"ngxMaterialTimepickerTheme\", \"theme\"] }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerThemeDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngxMaterialTimepickerTheme]' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { theme: [{\n                type: Input,\n                args: ['ngxMaterialTimepickerTheme']\n            }] } });\nfunction camelCaseToDash(myStr) {\n    return myStr.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n\nvar AnimationState;\n(function (AnimationState) {\n    AnimationState[\"ENTER\"] = \"enter\";\n    AnimationState[\"LEAVE\"] = \"leave\";\n})(AnimationState || (AnimationState = {}));\nclass NgxMaterialTimepickerContainerComponent {\n    constructor(timepickerService, eventService, locale) {\n        this.timepickerService = timepickerService;\n        this.eventService = eventService;\n        this.locale = locale;\n        this.timeUnit = TimeUnit;\n        this.activeTimeUnit = TimeUnit.HOUR;\n        this.unsubscribe = new Subject();\n    }\n    set defaultTime(time) {\n        this._defaultTime = time;\n        this.setDefaultTime(time);\n    }\n    get defaultTime() {\n        return this._defaultTime;\n    }\n    onKeydown(e) {\n        this.eventService.dispatchEvent(e);\n        e.stopPropagation();\n    }\n    ngOnInit() {\n        this.animationState = !this.disableAnimation && AnimationState.ENTER;\n        this.defineTime();\n        this.selectedHour = this.timepickerService.selectedHour\n            .pipe(shareReplay({ bufferSize: 1, refCount: true }));\n        this.selectedMinute = this.timepickerService.selectedMinute\n            .pipe(shareReplay({ bufferSize: 1, refCount: true }));\n        this.selectedPeriod = this.timepickerService.selectedPeriod\n            .pipe(shareReplay({ bufferSize: 1, refCount: true }));\n        this.timepickerBaseRef.timeUpdated.pipe(takeUntil(this.unsubscribe))\n            .subscribe(this.setDefaultTime.bind(this));\n    }\n    onHourChange(hour) {\n        this.timepickerService.hour = hour;\n        this.onTimeChange();\n    }\n    onHourSelected(hour) {\n        if (!this.hoursOnly) {\n            this.changeTimeUnit(TimeUnit.MINUTE);\n        }\n        this.timepickerBaseRef.hourSelected.next(hour);\n    }\n    onMinuteChange(minute) {\n        this.timepickerService.minute = minute;\n        this.onTimeChange();\n    }\n    changePeriod(period) {\n        this.timepickerService.period = period;\n        this.onTimeChange();\n    }\n    changeTimeUnit(unit) {\n        this.activeTimeUnit = unit;\n    }\n    setTime() {\n        this.timepickerBaseRef.timeSet.next(this.timepickerService.getFullTime(this.format));\n        this.close();\n    }\n    close() {\n        if (this.disableAnimation) {\n            this.timepickerBaseRef.close();\n            return;\n        }\n        this.animationState = AnimationState.LEAVE;\n    }\n    animationDone(event) {\n        if (event.phaseName === 'done' && event.toState === AnimationState.LEAVE) {\n            this.timepickerBaseRef.close();\n        }\n    }\n    ngOnDestroy() {\n        this.unsubscribe.next();\n        this.unsubscribe.complete();\n    }\n    setDefaultTime(time) {\n        this.timepickerService.setDefaultTimeIfAvailable(time, this.minTime, this.maxTime, this.format, this.minutesGap);\n    }\n    defineTime() {\n        const minTime = this.minTime;\n        if (minTime && (!this.time && !this.defaultTime)) {\n            const time = TimeAdapter.fromDateTimeToString(minTime, this.format);\n            this.setDefaultTime(time);\n        }\n    }\n    onTimeChange() {\n        const time = TimeAdapter.toLocaleTimeString(this.timepickerService.getFullTime(this.format), {\n            locale: this.locale,\n            format: this.format\n        });\n        this.timepickerBaseRef.timeChanged.emit(time);\n    }\n}\nNgxMaterialTimepickerContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerContainerComponent, deps: [{ token: NgxMaterialTimepickerService }, { token: NgxMaterialTimepickerEventService }, { token: TIME_LOCALE }], target: i0.ɵɵFactoryTarget.Component });\nNgxMaterialTimepickerContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: NgxMaterialTimepickerContainerComponent, selector: \"ngx-material-timepicker-container\", inputs: { defaultTime: \"defaultTime\" }, host: { listeners: { \"keydown\": \"onKeydown($event)\" } }, providers: [NgxMaterialTimepickerService], ngImport: i0, template: \"<div class=\\\"timepicker-backdrop-overlay\\\" [overlay]=\\\"preventOverlayClick\\\"\\n     [ngClass]=\\\"{'timepicker-backdrop-overlay--transparent': appendToInput}\\\"></div>\\n<div class=\\\"timepicker-overlay\\\">\\n    <ngx-material-timepicker-content [appendToInput]=\\\"appendToInput\\\"\\n                                     [inputElement]=\\\"inputElement\\\"\\n                                     [ngxMaterialTimepickerTheme]=\\\"theme\\\">\\n        <div class=\\\"timepicker\\\"\\n             [@timepicker]=\\\"animationState\\\"\\n             (@timepicker.done)=\\\"animationDone($event)\\\"\\n             [ngClass]=\\\"timepickerClass\\\">\\n            <header class=\\\"timepicker__header\\\">\\n                <ngx-material-timepicker-dial [format]=\\\"format\\\" [hour]=\\\"(selectedHour | async)?.time\\\"\\n                                              [minute]=\\\"(selectedMinute | async)?.time\\\"\\n                                              [period]=\\\"selectedPeriod | async\\\"\\n                                              [activeTimeUnit]=\\\"activeTimeUnit\\\"\\n                                              [minTime]=\\\"minTime\\\"\\n                                              [maxTime]=\\\"maxTime\\\"\\n                                              [isEditable]=\\\"enableKeyboardInput\\\"\\n                                              [editableHintTmpl]=\\\"editableHintTmpl\\\"\\n                                              [minutesGap]=\\\"minutesGap\\\"\\n                                              [hoursOnly]=\\\"hoursOnly\\\"\\n                                              (periodChanged)=\\\"changePeriod($event)\\\"\\n                                              (timeUnitChanged)=\\\"changeTimeUnit($event)\\\"\\n                                              (hourChanged)=\\\"onHourChange($event)\\\"\\n                                              (minuteChanged)=\\\"onMinuteChange($event)\\\"\\n                ></ngx-material-timepicker-dial>\\n            </header>\\n            <div class=\\\"timepicker__main-content\\\">\\n                <div class=\\\"timepicker__body\\\" [ngSwitch]=\\\"activeTimeUnit\\\">\\n                    <div *ngSwitchCase=\\\"timeUnit.HOUR\\\">\\n                        <ngx-material-timepicker-24-hours-face *ngIf=\\\"format === 24;else ampmHours\\\"\\n                                                               (hourChange)=\\\"onHourChange($event)\\\"\\n                                                               [selectedHour]=\\\"selectedHour | async\\\"\\n                                                               [minTime]=\\\"minTime\\\"\\n                                                               [maxTime]=\\\"maxTime\\\"\\n                                                               [format]=\\\"format\\\"\\n                                                               (hourSelected)=\\\"onHourSelected($event)\\\"></ngx-material-timepicker-24-hours-face>\\n                        <ng-template #ampmHours>\\n                            <ngx-material-timepicker-12-hours-face\\n                                (hourChange)=\\\"onHourChange($event)\\\"\\n                                [selectedHour]=\\\"selectedHour | async\\\"\\n                                [period]=\\\"selectedPeriod | async\\\"\\n                                [minTime]=\\\"minTime\\\"\\n                                [maxTime]=\\\"maxTime\\\"\\n                                (hourSelected)=\\\"onHourSelected($event)\\\"></ngx-material-timepicker-12-hours-face>\\n                        </ng-template>\\n                    </div>\\n                    <ngx-material-timepicker-minutes-face *ngSwitchCase=\\\"timeUnit.MINUTE\\\"\\n                                                          [selectedMinute]=\\\"selectedMinute | async\\\"\\n                                                          [selectedHour]=\\\"(selectedHour | async)?.time\\\"\\n                                                          [minTime]=\\\"minTime\\\"\\n                                                          [maxTime]=\\\"maxTime\\\"\\n                                                          [format]=\\\"format\\\"\\n                                                          [period]=\\\"selectedPeriod | async\\\"\\n                                                          [minutesGap]=\\\"minutesGap\\\"\\n                                                          (minuteChange)=\\\"onMinuteChange($event)\\\"></ngx-material-timepicker-minutes-face>\\n                </div>\\n                <div class=\\\"timepicker__actions\\\">\\n                    <div (click)=\\\"close()\\\">\\n                        <!--suppress HtmlUnknownAttribute -->\\n                        <ng-container\\n                            *ngTemplateOutlet=\\\"cancelBtnTmpl ? cancelBtnTmpl : cancelBtnDefault\\\"></ng-container>\\n                    </div>\\n                    <div (click)=\\\"setTime()\\\">\\n                        <!--suppress HtmlUnknownAttribute -->\\n                        <ng-container\\n                            *ngTemplateOutlet=\\\"confirmBtnTmpl ? confirmBtnTmpl : confirmBtnDefault\\\"></ng-container>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </ngx-material-timepicker-content>\\n</div>\\n<ng-template #cancelBtnDefault>\\n    <ngx-material-timepicker-button>Cancel</ngx-material-timepicker-button>\\n</ng-template>\\n<ng-template #confirmBtnDefault>\\n    <ngx-material-timepicker-button>Ok</ngx-material-timepicker-button>\\n</ng-template>\\n\", styles: [\":host{--body-background-color: #fff;--primary-font-family: \\\"Roboto\\\", sans-serif;--button-color: deepskyblue;--dial-active-color: #fff;--dial-inactive-color: rgba(255, 255, 255, .5);--dial-background-color: deepskyblue;--dial-editable-active-color: deepskyblue;--dial-editable-background-color: #fff;--clock-face-time-active-color: #fff;--clock-face-time-inactive-color: #6c6c6c;--clock-face-inner-time-inactive-color: #929292;--clock-face-time-disabled-color: #c5c5c5;--clock-face-background-color: #f0f0f0;--clock-hand-color: deepskyblue}.timepicker-backdrop-overlay{position:fixed;top:0;bottom:0;right:0;left:0;background-color:#0000004d;z-index:999;pointer-events:auto}.timepicker-backdrop-overlay--transparent{background-color:transparent}.timepicker-overlay{position:fixed;top:0;left:0;width:100%;height:100%;display:flex;justify-content:center;align-items:center;z-index:999;pointer-events:none}.timepicker{width:300px;border-radius:2px;box-shadow:#00000040 0 14px 45px,#00000038 0 10px 18px;outline:none;position:static;z-index:999;pointer-events:auto}.timepicker__header{padding:15px 30px;background-color:#00bfff}@supports (background-color: var(--dial-background-color)){.timepicker__header{background-color:var(--dial-background-color)}}.timepicker__body{padding:15px 5px;display:flex;justify-content:center;align-items:center;background-color:#fff}@supports (background-color: var(--body-background-color)){.timepicker__body{background-color:var(--body-background-color)}}.timepicker__actions{display:flex;justify-content:flex-end;padding:15px;background-color:#fff}@supports (background-color: var(--body-background-color)){.timepicker__actions{background-color:var(--body-background-color)}}@media (max-device-width: 1023px) and (orientation: landscape){.timepicker{display:flex;width:515px}.timepicker__header{display:flex;align-items:center}.timepicker__main-content{display:flex;flex-direction:column;width:100%}.timepicker__actions{padding:5px;margin-top:-1px}}\\n\"], components: [{ type: NgxMaterialTimepickerContentComponent, selector: \"ngx-material-timepicker-content\", inputs: [\"appendToInput\", \"inputElement\"] }, { type: NgxMaterialTimepickerDialComponent, selector: \"ngx-material-timepicker-dial\", inputs: [\"editableHintTmpl\", \"hour\", \"minute\", \"format\", \"period\", \"activeTimeUnit\", \"minTime\", \"maxTime\", \"isEditable\", \"minutesGap\", \"hoursOnly\"], outputs: [\"periodChanged\", \"timeUnitChanged\", \"hourChanged\", \"minuteChanged\"] }, { type: NgxMaterialTimepicker24HoursFaceComponent, selector: \"ngx-material-timepicker-24-hours-face\" }, { type: NgxMaterialTimepicker12HoursFaceComponent, selector: \"ngx-material-timepicker-12-hours-face\", inputs: [\"period\"] }, { type: NgxMaterialTimepickerMinutesFaceComponent, selector: \"ngx-material-timepicker-minutes-face\", inputs: [\"selectedMinute\", \"selectedHour\", \"period\", \"minTime\", \"maxTime\", \"format\", \"minutesGap\"], outputs: [\"minuteChange\"] }, { type: NgxMaterialTimepickerButtonComponent, selector: \"ngx-material-timepicker-button\" }], directives: [{ type: OverlayDirective, selector: \"[overlay]\", inputs: [\"overlay\"] }, { type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: NgxMaterialTimepickerThemeDirective, selector: \"[ngxMaterialTimepickerTheme]\", inputs: [\"ngxMaterialTimepickerTheme\"] }, { type: i1.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i1.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], pipes: { \"async\": i1.AsyncPipe }, animations: [\n        trigger('timepicker', [\n            transition(`* => ${AnimationState.ENTER}`, [\n                style({ transform: 'translateY(-30%)' }),\n                animate('0.2s ease-out', style({ transform: 'translateY(0)' }))\n            ]),\n            transition(`${AnimationState.ENTER} => ${AnimationState.LEAVE}`, [\n                style({ transform: 'translateY(0)', opacity: 1 }),\n                animate('0.2s ease-out', style({ transform: 'translateY(-30%)', opacity: 0 }))\n            ])\n        ])\n    ] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerContainerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-material-timepicker-container',\n                    templateUrl: './ngx-material-timepicker-container.component.html',\n                    styleUrls: ['./ngx-material-timepicker-container.component.scss'],\n                    animations: [\n                        trigger('timepicker', [\n                            transition(`* => ${AnimationState.ENTER}`, [\n                                style({ transform: 'translateY(-30%)' }),\n                                animate('0.2s ease-out', style({ transform: 'translateY(0)' }))\n                            ]),\n                            transition(`${AnimationState.ENTER} => ${AnimationState.LEAVE}`, [\n                                style({ transform: 'translateY(0)', opacity: 1 }),\n                                animate('0.2s ease-out', style({ transform: 'translateY(-30%)', opacity: 0 }))\n                            ])\n                        ])\n                    ],\n                    providers: [NgxMaterialTimepickerService]\n                }]\n        }], ctorParameters: function () { return [{ type: NgxMaterialTimepickerService }, { type: NgxMaterialTimepickerEventService }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TIME_LOCALE]\n                }] }]; }, propDecorators: { defaultTime: [{\n                type: Input\n            }], onKeydown: [{\n                type: HostListener,\n                args: ['keydown', ['$event']]\n            }] } });\n\nclass DomService {\n    constructor(cfr, appRef, injector, document) {\n        this.cfr = cfr;\n        this.appRef = appRef;\n        this.injector = injector;\n        this.document = document;\n    }\n    appendTimepickerToBody(timepicker, config) {\n        this.componentRef = this.cfr.resolveComponentFactory(timepicker).create(this.injector);\n        Object.keys(config).forEach(key => this.componentRef.instance[key] = config[key]);\n        this.appRef.attachView(this.componentRef.hostView);\n        const domElement = this.componentRef.hostView\n            .rootNodes[0];\n        this.document.body.appendChild(domElement);\n    }\n    destroyTimepicker() {\n        this.componentRef.destroy();\n        this.appRef.detachView(this.componentRef.hostView);\n    }\n}\nDomService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: DomService, deps: [{ token: i0.ComponentFactoryResolver }, { token: i0.ApplicationRef }, { token: i0.Injector }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nDomService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: DomService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: DomService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ComponentFactoryResolver }, { type: i0.ApplicationRef }, { type: i0.Injector }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\nconst ESCAPE = 27;\nclass NgxMaterialTimepickerComponent {\n    constructor(eventService, domService) {\n        this.eventService = eventService;\n        this.domService = domService;\n        this.timeUpdated = new Subject();\n        this.isEsc = true;\n        this.hoursOnly = false;\n        this.timeSet = new EventEmitter();\n        this.opened = new EventEmitter();\n        this.closed = new EventEmitter();\n        this.hourSelected = new EventEmitter();\n        this.timeChanged = new EventEmitter();\n        this.unsubscribe = new Subject();\n    }\n    /**\n     * @deprecated Since version 5.1.1. Will be deleted on version 6.0.0. Use @Input() theme instead\n     */\n    set ngxMaterialTimepickerTheme(theme) {\n        console.warn(`'ngxMaterialTimepickerTheme' is deprecated. Use 'theme' instead`);\n        this._ngxMaterialTimepickerTheme = theme;\n    }\n    set format(value) {\n        this._format = value === 24 ? 24 : 12;\n    }\n    get format() {\n        return this.timepickerInput ? this.timepickerInput.format : this._format;\n    }\n    set minutesGap(gap) {\n        if (gap == null) {\n            return;\n        }\n        gap = Math.floor(gap);\n        this._minutesGap = gap <= 59 ? gap : 1;\n    }\n    get minutesGap() {\n        return this._minutesGap;\n    }\n    get minTime() {\n        return this.timepickerInput ? this.timepickerInput.min : this.min;\n    }\n    get maxTime() {\n        return this.timepickerInput ? this.timepickerInput.max : this.max;\n    }\n    get disabled() {\n        return this.timepickerInput && this.timepickerInput.disabled;\n    }\n    get time() {\n        return this.timepickerInput && this.timepickerInput.value;\n    }\n    get inputElement() {\n        return this.timepickerInput && this.timepickerInput.element;\n    }\n    /***\n     * Register an input with this timepicker.\n     * input - The timepicker input to register with this timepicker\n     */\n    registerInput(input) {\n        if (this.timepickerInput) {\n            throw Error('A Timepicker can only be associated with a single input.');\n        }\n        this.timepickerInput = input;\n    }\n    open() {\n        this.domService.appendTimepickerToBody(NgxMaterialTimepickerContainerComponent, {\n            timepickerBaseRef: this,\n            time: this.time,\n            defaultTime: this.defaultTime,\n            maxTime: this.maxTime,\n            minTime: this.minTime,\n            format: this.format,\n            minutesGap: this.minutesGap,\n            disableAnimation: this.disableAnimation,\n            cancelBtnTmpl: this.cancelBtnTmpl,\n            confirmBtnTmpl: this.confirmBtnTmpl,\n            editableHintTmpl: this.editableHintTmpl,\n            disabled: this.disabled,\n            enableKeyboardInput: this.enableKeyboardInput,\n            preventOverlayClick: this.preventOverlayClick,\n            appendToInput: this.appendToInput,\n            hoursOnly: this.hoursOnly,\n            theme: this.theme || this._ngxMaterialTimepickerTheme,\n            timepickerClass: this.timepickerClass,\n            inputElement: this.inputElement\n        });\n        this.opened.next();\n        this.subscribeToEvents();\n    }\n    close() {\n        this.domService.destroyTimepicker();\n        this.closed.next();\n        this.unsubscribeFromEvents();\n    }\n    updateTime(time) {\n        this.timeUpdated.next(time);\n    }\n    subscribeToEvents() {\n        merge(this.eventService.backdropClick, this.eventService.keydownEvent.pipe(filter(e => e.keyCode === ESCAPE && this.isEsc)))\n            .pipe(takeUntil(this.unsubscribe))\n            .subscribe(() => this.close());\n    }\n    unsubscribeFromEvents() {\n        this.unsubscribe.next();\n        this.unsubscribe.complete();\n    }\n}\nNgxMaterialTimepickerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerComponent, deps: [{ token: NgxMaterialTimepickerEventService }, { token: DomService }], target: i0.ɵɵFactoryTarget.Component });\nNgxMaterialTimepickerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: NgxMaterialTimepickerComponent, selector: \"ngx-material-timepicker\", inputs: { cancelBtnTmpl: \"cancelBtnTmpl\", editableHintTmpl: \"editableHintTmpl\", confirmBtnTmpl: \"confirmBtnTmpl\", isEsc: [\"ESC\", \"isEsc\"], enableKeyboardInput: \"enableKeyboardInput\", preventOverlayClick: \"preventOverlayClick\", disableAnimation: \"disableAnimation\", appendToInput: \"appendToInput\", hoursOnly: \"hoursOnly\", defaultTime: \"defaultTime\", timepickerClass: \"timepickerClass\", theme: \"theme\", min: \"min\", max: \"max\", ngxMaterialTimepickerTheme: \"ngxMaterialTimepickerTheme\", format: \"format\", minutesGap: \"minutesGap\" }, outputs: { timeSet: \"timeSet\", opened: \"opened\", closed: \"closed\", hourSelected: \"hourSelected\", timeChanged: \"timeChanged\" }, ngImport: i0, template: '', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-material-timepicker',\n                    template: '',\n                }]\n        }], ctorParameters: function () { return [{ type: NgxMaterialTimepickerEventService }, { type: DomService }]; }, propDecorators: { cancelBtnTmpl: [{\n                type: Input\n            }], editableHintTmpl: [{\n                type: Input\n            }], confirmBtnTmpl: [{\n                type: Input\n            }], isEsc: [{\n                type: Input,\n                args: ['ESC']\n            }], enableKeyboardInput: [{\n                type: Input\n            }], preventOverlayClick: [{\n                type: Input\n            }], disableAnimation: [{\n                type: Input\n            }], appendToInput: [{\n                type: Input\n            }], hoursOnly: [{\n                type: Input\n            }], defaultTime: [{\n                type: Input\n            }], timepickerClass: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], ngxMaterialTimepickerTheme: [{\n                type: Input\n            }], format: [{\n                type: Input\n            }], minutesGap: [{\n                type: Input\n            }], timeSet: [{\n                type: Output\n            }], opened: [{\n                type: Output\n            }], closed: [{\n                type: Output\n            }], hourSelected: [{\n                type: Output\n            }], timeChanged: [{\n                type: Output\n            }] } });\n\n/* To override a default toggle icon */\nclass NgxMaterialTimepickerToggleIconDirective {\n}\nNgxMaterialTimepickerToggleIconDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerToggleIconDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nNgxMaterialTimepickerToggleIconDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: NgxMaterialTimepickerToggleIconDirective, selector: \"[ngxMaterialTimepickerToggleIcon]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerToggleIconDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngxMaterialTimepickerToggleIcon]' }]\n        }] });\n\nclass NgxMaterialTimepickerToggleComponent {\n    get disabled() {\n        return this._disabled === undefined ? this.timepicker.disabled : this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n    }\n    open(event) {\n        if (this.timepicker) {\n            this.timepicker.open();\n            event.stopPropagation();\n        }\n    }\n}\nNgxMaterialTimepickerToggleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerToggleComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNgxMaterialTimepickerToggleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: NgxMaterialTimepickerToggleComponent, selector: \"ngx-material-timepicker-toggle\", inputs: { timepicker: [\"for\", \"timepicker\"], disabled: \"disabled\" }, queries: [{ propertyName: \"customIcon\", first: true, predicate: NgxMaterialTimepickerToggleIconDirective, descendants: true, static: true }], ngImport: i0, template: \"<button class=\\\"ngx-material-timepicker-toggle\\\" (click)=\\\"open($event)\\\" [disabled]=\\\"disabled\\\" type=\\\"button\\\">\\n    <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24px\\\" height=\\\"24px\\\" *ngIf=\\\"!customIcon\\\">\\n        <path\\n            d=\\\"M 12 2 C 6.4889971 2 2 6.4889971 2 12 C 2 17.511003                   6.4889971 22 12 22 C 17.511003 22 22 17.511003 22 12 C 22 6.4889971 17.511003 2 12 2 z M 12 4 C 16.430123 4 20 7.5698774 20 12 C 20 16.430123 16.430123 20 12 20 C 7.5698774 20 4 16.430123 4 12 C 4 7.5698774 7.5698774 4 12 4 z M 11 6 L 11 12.414062 L 15.292969 16.707031 L 16.707031 15.292969 L 13 11.585938 L 13 6 L 11 6 z\\\"/>\\n    </svg>\\n\\n    <ng-content select=\\\"[ngxMaterialTimepickerToggleIcon]\\\"></ng-content>\\n</button>\\n\", styles: [\".ngx-material-timepicker-toggle{display:flex;justify-content:center;align-items:center;padding:4px;background-color:transparent;border-radius:50%;text-align:center;border:none;outline:none;-webkit-user-select:none;-moz-user-select:none;user-select:none;transition:background-color .3s;cursor:pointer}.ngx-material-timepicker-toggle:focus{background-color:#00000012}\\n\"], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerToggleComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-material-timepicker-toggle',\n                    templateUrl: 'ngx-material-timepicker-toggle.component.html',\n                    styleUrls: ['ngx-material-timepicker-toggle.component.scss']\n                }]\n        }], propDecorators: { timepicker: [{\n                type: Input,\n                args: ['for']\n            }], disabled: [{\n                type: Input\n            }], customIcon: [{\n                type: ContentChild,\n                args: [NgxMaterialTimepickerToggleIconDirective, { static: true }]\n            }] } });\n\nclass TimepickerDirective {\n    constructor(elementRef, locale) {\n        this.elementRef = elementRef;\n        this.locale = locale;\n        this._format = 12;\n        this._value = '';\n        this.timepickerSubscriptions = [];\n        this.onTouched = () => {\n        };\n        this.onChange = () => {\n        };\n    }\n    set format(value) {\n        this._format = value === 24 ? 24 : 12;\n        const isDynamicallyChanged = value && (this.previousFormat && this.previousFormat !== this._format);\n        if (isDynamicallyChanged) {\n            this.value = this._value;\n            this._timepicker.updateTime(this._value);\n        }\n        this.previousFormat = this._format;\n    }\n    get format() {\n        return this._format;\n    }\n    set min(value) {\n        console.log(value);\n        if (typeof value === 'string') {\n            this._min = TimeAdapter.parseTime(value, { locale: this.locale, format: this.format });\n            return;\n        }\n        this._min = value;\n    }\n    get min() {\n        return this._min;\n    }\n    set max(value) {\n        if (typeof value === 'string') {\n            this._max = TimeAdapter.parseTime(value, { locale: this.locale, format: this.format });\n            return;\n        }\n        this._max = value;\n    }\n    get max() {\n        return this._max;\n    }\n    set timepicker(picker) {\n        this.registerTimepicker(picker);\n    }\n    set value(value) {\n        if (!value) {\n            this._value = '';\n            this.updateInputValue();\n            return;\n        }\n        this.setTimeIfAvailable(value);\n    }\n    get value() {\n        if (!this._value) {\n            return '';\n        }\n        return TimeAdapter.toLocaleTimeString(this._value, { format: this.format, locale: this.locale });\n    }\n    get element() {\n        return this.elementRef && this.elementRef.nativeElement;\n    }\n    set defaultTime(time) {\n        this._timepicker.defaultTime = TimeAdapter.formatTime(time, { locale: this.locale, format: this.format });\n    }\n    updateValue(value) {\n        this.value = value;\n        this.onChange(value);\n    }\n    ngOnChanges(changes) {\n        var _a;\n        const value = (_a = changes === null || changes === void 0 ? void 0 : changes.value) === null || _a === void 0 ? void 0 : _a.currentValue;\n        if (value) {\n            // Call setTimeIfAvailable after @Input setters\n            this.setTimeIfAvailable(value);\n            this.defaultTime = value;\n        }\n    }\n    onClick(event) {\n        if (!this.disableClick) {\n            this._timepicker.open();\n            event.stopPropagation();\n        }\n    }\n    writeValue(value) {\n        this.value = value;\n        if (value) {\n            this.defaultTime = value;\n        }\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    ngOnDestroy() {\n        this.timepickerSubscriptions.forEach(s => s.unsubscribe());\n    }\n    registerTimepicker(picker) {\n        if (picker) {\n            this._timepicker = picker;\n            this._timepicker.registerInput(this);\n            this.timepickerSubscriptions.push(this._timepicker.timeSet.subscribe((time) => {\n                this.value = time;\n                this.onChange(this.value);\n                this.onTouched();\n                this.defaultTime = this._value;\n            }));\n        }\n        else {\n            throw new Error('NgxMaterialTimepickerComponent is not defined.' +\n                ' Please make sure you passed the timepicker to ngxTimepicker directive');\n        }\n    }\n    updateInputValue() {\n        this.elementRef.nativeElement.value = this.value;\n    }\n    setTimeIfAvailable(value) {\n        var _a;\n        const time = TimeAdapter.formatTime(value, { locale: this.locale, format: this.format });\n        const isAvailable = TimeAdapter.isTimeAvailable(time, this._min, this._max, 'minutes', (_a = this._timepicker) === null || _a === void 0 ? void 0 : _a.minutesGap, this._format);\n        if (isAvailable) {\n            this._value = time;\n            this.updateInputValue();\n        }\n        else {\n            this.value = null;\n            console.warn('Selected time doesn\\'t match min or max value');\n        }\n    }\n}\nTimepickerDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TimepickerDirective, deps: [{ token: i0.ElementRef }, { token: TIME_LOCALE }], target: i0.ɵɵFactoryTarget.Directive });\nTimepickerDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TimepickerDirective, selector: \"[ngxTimepicker]\", inputs: { format: \"format\", min: \"min\", max: \"max\", timepicker: [\"ngxTimepicker\", \"timepicker\"], value: \"value\", disabled: \"disabled\", disableClick: \"disableClick\" }, host: { listeners: { \"change\": \"updateValue($event.target.value)\", \"blur\": \"onTouched()\", \"click\": \"onClick($event)\" }, properties: { \"disabled\": \"disabled\" } }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: TimepickerDirective,\n            multi: true\n        }\n    ], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TimepickerDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngxTimepicker]',\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: TimepickerDirective,\n                            multi: true\n                        }\n                    ],\n                    host: {\n                        '[disabled]': 'disabled',\n                        '(change)': 'updateValue($event.target.value)',\n                        '(blur)': 'onTouched()',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TIME_LOCALE]\n                }] }]; }, propDecorators: { format: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], timepicker: [{\n                type: Input,\n                args: ['ngxTimepicker']\n            }], value: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], disableClick: [{\n                type: Input\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }] } });\n\nclass TimeFormatterPipe {\n    transform(time, timeUnit) {\n        if (time == null || time === '') {\n            return time;\n        }\n        switch (timeUnit) {\n            case TimeUnit.HOUR:\n                return DateTime.fromObject({ hour: +time }).toFormat('HH');\n            case TimeUnit.MINUTE:\n                return DateTime.fromObject({ minute: +time }).toFormat('mm');\n            default:\n                throw new Error('no such time unit');\n        }\n    }\n}\nTimeFormatterPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TimeFormatterPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nTimeFormatterPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TimeFormatterPipe, name: \"timeFormatter\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TimeFormatterPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'timeFormatter'\n                }]\n        }] });\n\nclass NgxTimepickerTimeControlComponent {\n    constructor(timeParser) {\n        this.timeParser = timeParser;\n        this.timeChanged = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        if (changes.timeList && this.time != null) {\n            if (this.isSelectedTimeDisabled(this.time)) {\n                this.setAvailableTime();\n            }\n        }\n    }\n    changeTime(event) {\n        event.stopPropagation();\n        const char = String.fromCharCode(event.keyCode);\n        const time = concatTime(String(this.time), char);\n        this.changeTimeIfValid(time);\n    }\n    onKeydown(event) {\n        event.stopPropagation();\n        if (!isDigit(event)) {\n            event.preventDefault();\n        }\n        switch (event.key) {\n            case 'ArrowUp':\n                this.increase();\n                break;\n            case 'ArrowDown':\n                this.decrease();\n                break;\n        }\n        if (this.preventTyping && event.key !== 'Tab') {\n            event.preventDefault();\n        }\n    }\n    increase() {\n        if (!this.disabled) {\n            let nextTime = +this.time + (this.minutesGap || 1);\n            if (nextTime > this.max) {\n                nextTime = this.min;\n            }\n            if (this.isSelectedTimeDisabled(nextTime)) {\n                nextTime = this.getAvailableTime(nextTime, this.getNextAvailableTime.bind(this));\n            }\n            if (nextTime !== this.time) {\n                this.timeChanged.emit(nextTime);\n            }\n        }\n    }\n    decrease() {\n        if (!this.disabled) {\n            let previousTime = +this.time - (this.minutesGap || 1);\n            if (previousTime < this.min) {\n                previousTime = this.minutesGap ? this.max - (this.minutesGap - 1) : this.max;\n            }\n            if (this.isSelectedTimeDisabled(previousTime)) {\n                previousTime = this.getAvailableTime(previousTime, this.getPrevAvailableTime.bind(this));\n            }\n            if (previousTime !== this.time) {\n                this.timeChanged.emit(previousTime);\n            }\n        }\n    }\n    onFocus() {\n        this.isFocused = true;\n        this.previousTime = this.time;\n    }\n    onBlur() {\n        this.isFocused = false;\n        if (this.previousTime !== this.time) {\n            this.changeTimeIfValid(+this.time);\n        }\n    }\n    onModelChange(value) {\n        this.time = +this.timeParser.transform(value, this.timeUnit);\n    }\n    changeTimeIfValid(value) {\n        if (!isNaN(value)) {\n            this.time = value;\n            if (this.time > this.max) {\n                const timeString = String(value);\n                this.time = +timeString[timeString.length - 1];\n            }\n            if (this.time < this.min) {\n                this.time = this.min;\n            }\n            this.timeChanged.emit(this.time);\n        }\n    }\n    isSelectedTimeDisabled(time) {\n        return this.timeList.find((faceTime) => faceTime.time === time).disabled;\n    }\n    getNextAvailableTime(index) {\n        const timeCollection = this.timeList;\n        const maxValue = timeCollection.length;\n        for (let i = index + 1; i < maxValue; i++) {\n            const time = timeCollection[i];\n            if (!time.disabled) {\n                return time.time;\n            }\n        }\n    }\n    getPrevAvailableTime(index) {\n        for (let i = index; i >= 0; i--) {\n            const time = this.timeList[i];\n            if (!time.disabled) {\n                return time.time;\n            }\n        }\n    }\n    getAvailableTime(currentTime, fn) {\n        const currentTimeIndex = this.timeList.findIndex(time => time.time === currentTime);\n        const availableTime = fn(currentTimeIndex);\n        return availableTime != null ? availableTime : this.time;\n    }\n    setAvailableTime() {\n        const availableTime = this.timeList.find(t => !t.disabled);\n        if (availableTime != null) {\n            this.time = availableTime.time;\n            this.timeChanged.emit(this.time);\n        }\n    }\n}\nNgxTimepickerTimeControlComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxTimepickerTimeControlComponent, deps: [{ token: TimeParserPipe }], target: i0.ɵɵFactoryTarget.Component });\nNgxTimepickerTimeControlComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: NgxTimepickerTimeControlComponent, selector: \"ngx-timepicker-time-control\", inputs: { time: \"time\", min: \"min\", max: \"max\", placeholder: \"placeholder\", timeUnit: \"timeUnit\", disabled: \"disabled\", timeList: \"timeList\", preventTyping: \"preventTyping\", minutesGap: \"minutesGap\" }, outputs: { timeChanged: \"timeChanged\" }, providers: [TimeParserPipe], usesOnChanges: true, ngImport: i0, template: \"<div class=\\\"ngx-timepicker-control\\\" [ngClass]=\\\"{'ngx-timepicker-control--active': isFocused}\\\">\\n    <!--suppress HtmlFormInputWithoutLabel -->\\n    <input class=\\\"ngx-timepicker-control__input\\\"\\n           maxlength=\\\"2\\\"\\n           [ngModel]=\\\"time | timeParser: timeUnit | timeLocalizer: timeUnit : true\\\"\\n           (ngModelChange)=\\\"onModelChange($event)\\\"\\n           [placeholder]=\\\"placeholder\\\"\\n           [disabled]=\\\"disabled\\\"\\n           (keydown)=\\\"onKeydown($event)\\\"\\n           (keypress)=\\\"changeTime($event)\\\"\\n           (focus)=\\\"onFocus()\\\"\\n           (blur)=\\\"onBlur()\\\">\\n    <div class=\\\"ngx-timepicker-control__arrows\\\">\\n            <span class=\\\"ngx-timepicker-control__arrow\\\" role=\\\"button\\\" (click)=\\\"increase()\\\">\\n                &#9650;\\n            </span>\\n        <span class=\\\"ngx-timepicker-control__arrow\\\" role=\\\"button\\\" (click)=\\\"decrease()\\\">\\n                &#9660;\\n            </span>\\n    </div>\\n</div>\\n\", styles: [\".ngx-timepicker-control{position:relative;display:flex;width:60px;height:30px;padding:0 5px;box-sizing:border-box}.ngx-timepicker-control--active:after{content:\\\"\\\";position:absolute;bottom:-2px;left:0;width:100%;height:1px;background-color:#00bfff}.ngx-timepicker-control__input{width:100%;height:100%;padding:0 5px 0 0;border:0;font-size:1rem;color:inherit;outline:none;text-align:center}.ngx-timepicker-control__input:disabled{background-color:transparent}.ngx-timepicker-control__arrows{position:absolute;right:2px;top:0;display:flex;flex-direction:column}.ngx-timepicker-control__arrow{font-size:11px;color:#0006;cursor:pointer;transition:color .2s;-webkit-user-select:none;-moz-user-select:none;user-select:none}.ngx-timepicker-control__arrow:hover{color:#000000e6}\\n\"], directives: [{ type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i4.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i4.MaxLengthValidator, selector: \"[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]\", inputs: [\"maxlength\"] }, { type: i4.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i4.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }], pipes: { \"timeLocalizer\": TimeLocalizerPipe, \"timeParser\": TimeParserPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxTimepickerTimeControlComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-timepicker-time-control',\n                    templateUrl: './ngx-timepicker-time-control.component.html',\n                    styleUrls: ['./ngx-timepicker-time-control.component.scss'],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [TimeParserPipe],\n                }]\n        }], ctorParameters: function () { return [{ type: TimeParserPipe }]; }, propDecorators: { time: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], timeUnit: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], timeList: [{\n                type: Input\n            }], preventTyping: [{\n                type: Input\n            }], minutesGap: [{\n                type: Input\n            }], timeChanged: [{\n                type: Output\n            }] } });\nfunction concatTime(currentTime, nextTime) {\n    const isNumber = /\\d/.test(nextTime);\n    if (isNumber) {\n        const time = currentTime + nextTime;\n        return +time;\n    }\n}\n\nclass NgxTimepickerPeriodSelectorComponent {\n    constructor(locale) {\n        this.locale = locale;\n        this.periodSelected = new EventEmitter();\n        this.period = TimePeriod;\n        this.meridiems = Info.meridiems({ locale: this.locale });\n    }\n    set selectedPeriod(period) {\n        if (period) {\n            const periods = [TimePeriod.AM, TimePeriod.PM];\n            this.localizedPeriod = this.meridiems[periods.indexOf(period)];\n        }\n    }\n    open() {\n        if (!this.disabled) {\n            this.isOpened = true;\n        }\n    }\n    select(period) {\n        this.periodSelected.next(period);\n        this.isOpened = false;\n    }\n    backdropClick() {\n        this.isOpened = false;\n    }\n}\nNgxTimepickerPeriodSelectorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxTimepickerPeriodSelectorComponent, deps: [{ token: TIME_LOCALE }], target: i0.ɵɵFactoryTarget.Component });\nNgxTimepickerPeriodSelectorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: NgxTimepickerPeriodSelectorComponent, selector: \"ngx-timepicker-period-selector\", inputs: { isOpened: \"isOpened\", disabled: \"disabled\", selectedPeriod: \"selectedPeriod\" }, outputs: { periodSelected: \"periodSelected\" }, ngImport: i0, template: \"<div class=\\\"period\\\">\\n    <div class=\\\"period-control\\\">\\n        <button class=\\\"period-control__button period__btn--default\\\"\\n                [ngClass]=\\\"{'period-control__button--disabled': disabled}\\\"\\n                type=\\\"button\\\"\\n                (click)=\\\"open()\\\">\\n            <span>{{localizedPeriod}}</span>\\n            <span class=\\\"period-control__arrow\\\">&#9660;</span>\\n        </button>\\n    </div>\\n    <ul class=\\\"period-selector\\\" @scaleInOut *ngIf=\\\"isOpened\\\" [timepickerAutofocus]=\\\"true\\\">\\n        <li>\\n            <button class=\\\"period-selector__button period__btn--default\\\"\\n                    type=\\\"button\\\"\\n                    (click)=\\\"select(period.AM)\\\"\\n                    [ngClass]=\\\"{'period-selector__button--active': localizedPeriod === meridiems[0]}\\\">{{meridiems[0]}}</button>\\n        </li>\\n        <li>\\n            <button class=\\\"period-selector__button period__btn--default\\\"\\n                    type=\\\"button\\\"\\n                    (click)=\\\"select(period.PM)\\\"\\n                    [ngClass]=\\\"{'period-selector__button--active': localizedPeriod === meridiems[1]}\\\">{{meridiems[1]}}</button>\\n        </li>\\n    </ul>\\n</div>\\n<div class=\\\"overlay\\\" (click)=\\\"backdropClick()\\\" *ngIf=\\\"isOpened\\\"></div>\\n\", styles: [\".period{position:relative}.period__btn--default{padding:0;border:none;background-color:transparent;cursor:pointer;text-align:left;-webkit-user-select:none;-moz-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;outline:none}.period-control{position:relative}.period-control__button{position:relative;width:60px;font-size:1rem;color:inherit;text-align:center}.period-control__button:not(.period-control__button--disabled):focus:after{content:\\\"\\\";position:absolute;bottom:-8px;left:0;width:100%;height:1px;background-color:#00bfff}.period-control__arrow{margin-left:10px;font-size:12px;color:#0006}.period-selector{position:absolute;top:calc(50% - 50px);right:calc(-50% + -50px);max-width:135px;width:150px;padding:6px 0;margin:0;list-style:none;background-color:#f5f5f5;box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;z-index:201}.period-selector__button{width:100%;height:48px;padding:0 16px;line-height:48px}.period-selector__button--active{color:#00bfff}.period-selector__button:focus{background-color:#eee}.overlay{position:fixed;width:100%;height:100%;top:0;left:0;background-color:transparent;z-index:200}\\n\"], directives: [{ type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: AutofocusDirective, selector: \"[timepickerAutofocus]\", inputs: [\"timepickerAutofocus\"] }], animations: [\n        trigger('scaleInOut', [\n            transition(':enter', [\n                style({ transform: 'scale(0)', opacity: 0 }),\n                animate(200, style({ transform: 'scale(1)', opacity: 1 }))\n            ]),\n            transition(':leave', [\n                animate(200, style({ transform: 'scale(0)', opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxTimepickerPeriodSelectorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-timepicker-period-selector',\n                    templateUrl: 'ngx-timepicker-period-selector.component.html',\n                    styleUrls: ['./ngx-timepicker-period-selector.component.scss'],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('scaleInOut', [\n                            transition(':enter', [\n                                style({ transform: 'scale(0)', opacity: 0 }),\n                                animate(200, style({ transform: 'scale(1)', opacity: 1 }))\n                            ]),\n                            transition(':leave', [\n                                animate(200, style({ transform: 'scale(0)', opacity: 0 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TIME_LOCALE]\n                }] }]; }, propDecorators: { isOpened: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], selectedPeriod: [{\n                type: Input\n            }], periodSelected: [{\n                type: Output\n            }] } });\n\nclass NgxTimepickerFieldComponent {\n    constructor(timepickerService, locale) {\n        this.timepickerService = timepickerService;\n        this.locale = locale;\n        this.minHour = 1;\n        this.maxHour = 12;\n        this.timeUnit = TimeUnit;\n        this.buttonAlign = 'right';\n        this.timeChanged = new EventEmitter();\n        this._format = 12;\n        this.unsubscribe$ = new Subject();\n        this.isFirstTimeChange = true;\n        this.onChange = () => {\n        };\n    }\n    set format(value) {\n        this._format = value === 24 ? 24 : 12;\n        this.minHour = this._format === 12 ? 1 : 0;\n        this.maxHour = this._format === 12 ? 12 : 23;\n        this.hoursList = TimepickerTimeUtils.getHours(this._format);\n        const isDynamicallyChanged = value && (this.previousFormat && this.previousFormat !== this._format);\n        if (isDynamicallyChanged) {\n            this.updateTime(this.timepickerTime);\n        }\n        this.previousFormat = this._format;\n    }\n    get format() {\n        return this._format;\n    }\n    set min(value) {\n        if (typeof value === 'string') {\n            this._min = TimeAdapter.parseTime(value, { locale: this.locale, format: this.format });\n            return;\n        }\n        this._min = value;\n    }\n    get min() {\n        return this._min;\n    }\n    set max(value) {\n        if (typeof value === 'string') {\n            this._max = TimeAdapter.parseTime(value, { locale: this.locale, format: this.format });\n            return;\n        }\n        this._max = value;\n    }\n    get max() {\n        return this._max;\n    }\n    set defaultTime(val) {\n        this._defaultTime = val;\n        this.isDefaultTime = !!val;\n    }\n    get defaultTime() {\n        return this._defaultTime;\n    }\n    set minutesGap(gap) {\n        if (gap == null) {\n            return;\n        }\n        gap = Math.floor(gap);\n        this._minutesGap = gap <= 59 ? gap : 1;\n    }\n    get minutesGap() {\n        return this._minutesGap;\n    }\n    ngOnInit() {\n        this.initTime(this.defaultTime);\n        this.hoursList = TimepickerTimeUtils.getHours(this._format);\n        this.minutesList = TimepickerTimeUtils.getMinutes();\n        this.isTimeRangeSet = !!(this.min || this.max);\n        this.hour$ = this.timepickerService.selectedHour.pipe(tap((clockTime) => this.selectedHour = clockTime.time), map(this.changeDefaultTimeValue.bind(this)), tap(() => this.isTimeRangeSet && this.updateAvailableMinutes()));\n        this.minute$ = this.timepickerService.selectedMinute.pipe(map(this.changeDefaultTimeValue.bind(this)), tap(() => this.isFirstTimeChange = false));\n        if (this.format === 12) {\n            this.timepickerService.selectedPeriod.pipe(distinctUntilChanged(), tap((period) => this.period = period), tap(period => this.isChangePeriodDisabled = this.isPeriodDisabled(period)), takeUntil(this.unsubscribe$)).subscribe(() => this.isTimeRangeSet && this.updateAvailableTime());\n        }\n        else if (this.isTimeRangeSet) {\n            this.updateAvailableTime();\n        }\n    }\n    writeValue(val) {\n        if (val) {\n            this.initTime(val);\n        }\n        else {\n            this.resetTime();\n        }\n    }\n    registerOnTouched(fn) {\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    changeHour(hour) {\n        this.timepickerService.hour = this.hoursList.find(h => h.time === hour);\n        this.changeTime();\n    }\n    changeMinute(minute) {\n        this.timepickerService.minute = this.minutesList.find(m => m.time === minute);\n        this.changeTime();\n    }\n    changePeriod(period) {\n        this.timepickerService.period = period;\n        this.changeTime();\n    }\n    onTimeSet(time) {\n        this.updateTime(time);\n        this.emitLocalTimeChange(time);\n    }\n    ngOnDestroy() {\n        this.unsubscribe$.next();\n        this.unsubscribe$.complete();\n    }\n    changeTime() {\n        const time = this.timepickerService.getFullTime(this.format);\n        this.timepickerTime = time;\n        this.emitLocalTimeChange(time);\n    }\n    resetTime() {\n        this.timepickerService.hour = { angle: 0, time: null };\n        this.timepickerService.minute = { angle: 0, time: null };\n    }\n    emitLocalTimeChange(time) {\n        const localTime = TimeAdapter.toLocaleTimeString(time, { format: this.format, locale: this.locale });\n        this.onChange(localTime);\n        this.timeChanged.emit(localTime);\n    }\n    changeDefaultTimeValue(clockFaceTime) {\n        if (!this.isDefaultTime && this.isFirstTimeChange) {\n            return Object.assign(Object.assign({}, clockFaceTime), { time: null });\n        }\n        return clockFaceTime;\n    }\n    updateAvailableHours() {\n        this.hoursList = TimepickerTimeUtils.disableHours(this.hoursList, {\n            min: this.min,\n            max: this.max,\n            format: this.format,\n            period: this.period\n        });\n    }\n    updateAvailableMinutes() {\n        this.minutesList = TimepickerTimeUtils.disableMinutes(this.minutesList, this.selectedHour, {\n            min: this.min,\n            max: this.max,\n            format: this.format,\n            period: this.period\n        });\n    }\n    updateAvailableTime() {\n        this.updateAvailableHours();\n        if (this.selectedHour) {\n            this.updateAvailableMinutes();\n        }\n    }\n    updateTime(time) {\n        if (time) {\n            const formattedTime = TimeAdapter.formatTime(time, { locale: this.locale, format: this.format });\n            this.timepickerService.setDefaultTimeIfAvailable(formattedTime, this.min, this.max, this.format);\n            this.timepickerTime = formattedTime;\n        }\n    }\n    initTime(time) {\n        const isDefaultTimeAvailable = TimeAdapter\n            .isTimeAvailable(time, this.min, this.max, 'minutes', null, this.format);\n        if (!isDefaultTimeAvailable) {\n            if (this.min) {\n                this.updateTime(TimeAdapter.fromDateTimeToString(this.min, this.format));\n                return;\n            }\n            if (this.max) {\n                this.updateTime(TimeAdapter.fromDateTimeToString(this.max, this.format));\n                return;\n            }\n        }\n        this.updateTime(time);\n    }\n    isPeriodDisabled(period) {\n        return TimepickerTimeUtils.disableHours(TimepickerTimeUtils.getHours(12), {\n            min: this.min,\n            max: this.max,\n            format: 12,\n            period: period === TimePeriod.AM ? TimePeriod.PM : TimePeriod.AM\n        }).every(time => time.disabled);\n    }\n}\nNgxTimepickerFieldComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxTimepickerFieldComponent, deps: [{ token: NgxMaterialTimepickerService }, { token: TIME_LOCALE }], target: i0.ɵɵFactoryTarget.Component });\nNgxTimepickerFieldComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: NgxTimepickerFieldComponent, selector: \"ngx-timepicker-field\", inputs: { disabled: \"disabled\", toggleIcon: \"toggleIcon\", buttonAlign: \"buttonAlign\", clockTheme: \"clockTheme\", controlOnly: \"controlOnly\", cancelBtnTmpl: \"cancelBtnTmpl\", confirmBtnTmpl: \"confirmBtnTmpl\", format: \"format\", min: \"min\", max: \"max\", defaultTime: \"defaultTime\", minutesGap: \"minutesGap\" }, outputs: { timeChanged: \"timeChanged\" }, providers: [\n        NgxMaterialTimepickerService,\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: NgxTimepickerFieldComponent,\n            multi: true\n        }\n    ], ngImport: i0, template: \"<div class=\\\"ngx-timepicker\\\" [ngClass]=\\\"{'ngx-timepicker--disabled': disabled}\\\">\\n    <ngx-timepicker-time-control\\n        class=\\\"ngx-timepicker__control--first\\\"\\n        [placeholder]=\\\"'HH'\\\"\\n        [time]=\\\"(hour$ | async)?.time\\\"\\n        [min]=\\\"minHour\\\"\\n        [max]=\\\"maxHour\\\"\\n        [timeUnit]=\\\"timeUnit.HOUR\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [timeList]=\\\"hoursList\\\"\\n        [preventTyping]=\\\"isTimeRangeSet\\\"\\n        (timeChanged)=\\\"changeHour($event)\\\"></ngx-timepicker-time-control>\\n    <span class=\\\"ngx-timepicker__time-colon ngx-timepicker__control--second\\\">:</span>\\n    <ngx-timepicker-time-control\\n        class=\\\"ngx-timepicker__control--third\\\"\\n        [placeholder]=\\\"'MM'\\\"\\n        [time]=\\\"(minute$ | async)?.time\\\"\\n        [min]=\\\"0\\\"\\n        [max]=\\\"59\\\"\\n        [timeUnit]=\\\"timeUnit.MINUTE\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [timeList]=\\\"minutesList\\\"\\n        [preventTyping]=\\\"isTimeRangeSet\\\"\\n        [minutesGap]=\\\"minutesGap\\\"\\n        (timeChanged)=\\\"changeMinute($event)\\\"></ngx-timepicker-time-control>\\n    <ngx-timepicker-period-selector\\n        class=\\\"ngx-timepicker__control--forth\\\"\\n        [selectedPeriod]=\\\"period\\\"\\n        [disabled]=\\\"disabled || isChangePeriodDisabled\\\"\\n        (periodSelected)=\\\"changePeriod($event)\\\"\\n        *ngIf=\\\"format !== 24\\\"></ngx-timepicker-period-selector>\\n    <ngx-material-timepicker-toggle\\n        class=\\\"ngx-timepicker__toggle\\\"\\n        *ngIf=\\\"!controlOnly\\\"\\n        [ngClass]=\\\"{'ngx-timepicker__toggle--left': buttonAlign === 'left'}\\\"\\n        [for]=\\\"timepicker\\\"\\n        [disabled]=\\\"disabled\\\">\\n        <span ngxMaterialTimepickerToggleIcon>\\n            <!--suppress HtmlUnknownAttribute -->\\n            <ng-container *ngTemplateOutlet=\\\"toggleIcon || defaultIcon\\\"></ng-container>\\n        </span>\\n    </ngx-material-timepicker-toggle>\\n</div>\\n<ngx-material-timepicker\\n    [min]=\\\"min\\\"\\n    [max]=\\\"max\\\"\\n    [theme]=\\\"clockTheme\\\"\\n    [defaultTime]=\\\"timepickerTime\\\"\\n    [format]=\\\"format\\\"\\n    [cancelBtnTmpl]=\\\"cancelBtnTmpl\\\"\\n    [confirmBtnTmpl]=\\\"confirmBtnTmpl\\\"\\n    [minutesGap]=\\\"minutesGap\\\"\\n    (timeSet)=\\\"onTimeSet($event)\\\" #timepicker></ngx-material-timepicker>\\n\\n<ng-template #defaultIcon>\\n    <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24px\\\" height=\\\"24px\\\">\\n        <!--suppress CheckEmptyScriptTag -->\\n        <path\\n            d=\\\"M 12 2 C 6.4889971 2 2 6.4889971 2 12 C 2 17.511003                   6.4889971 22 12 22 C 17.511003 22 22 17.511003 22 12 C 22 6.4889971 17.511003 2 12 2 z M 12 4 C 16.430123 4 20 7.5698774 20 12 C 20 16.430123 16.430123 20 12 20 C 7.5698774 20 4 16.430123 4 12 C 4 7.5698774 7.5698774 4 12 4 z M 11 6 L 11 12.414062 L 15.292969 16.707031 L 16.707031 15.292969 L 13 11.585938 L 13 6 L 11 6 z\\\"/>\\n    </svg>\\n</ng-template>\\n\", styles: [\".ngx-timepicker{display:flex;align-items:center;height:100%;border-bottom:1px solid rgba(0,0,0,.12)}.ngx-timepicker--disabled{background:rgba(0,0,0,.07);pointer-events:none}.ngx-timepicker__time-colon{margin-left:10px}.ngx-timepicker__control--first{order:1}.ngx-timepicker__control--second{order:2}.ngx-timepicker__control--third{order:3}.ngx-timepicker__control--forth{order:4}.ngx-timepicker__toggle{order:4}.ngx-timepicker__toggle--left{order:0}\\n\"], components: [{ type: NgxTimepickerTimeControlComponent, selector: \"ngx-timepicker-time-control\", inputs: [\"time\", \"min\", \"max\", \"placeholder\", \"timeUnit\", \"disabled\", \"timeList\", \"preventTyping\", \"minutesGap\"], outputs: [\"timeChanged\"] }, { type: NgxTimepickerPeriodSelectorComponent, selector: \"ngx-timepicker-period-selector\", inputs: [\"isOpened\", \"disabled\", \"selectedPeriod\"], outputs: [\"periodSelected\"] }, { type: NgxMaterialTimepickerToggleComponent, selector: \"ngx-material-timepicker-toggle\", inputs: [\"for\", \"disabled\"] }, { type: NgxMaterialTimepickerComponent, selector: \"ngx-material-timepicker\", inputs: [\"cancelBtnTmpl\", \"editableHintTmpl\", \"confirmBtnTmpl\", \"ESC\", \"enableKeyboardInput\", \"preventOverlayClick\", \"disableAnimation\", \"appendToInput\", \"hoursOnly\", \"defaultTime\", \"timepickerClass\", \"theme\", \"min\", \"max\", \"ngxMaterialTimepickerTheme\", \"format\", \"minutesGap\"], outputs: [\"timeSet\", \"opened\", \"closed\", \"hourSelected\", \"timeChanged\"] }], directives: [{ type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: NgxMaterialTimepickerToggleIconDirective, selector: \"[ngxMaterialTimepickerToggleIcon]\" }, { type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], pipes: { \"async\": i1.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxTimepickerFieldComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-timepicker-field',\n                    templateUrl: './ngx-timepicker-field.component.html',\n                    styleUrls: ['./ngx-timepicker-field.component.scss'],\n                    providers: [\n                        NgxMaterialTimepickerService,\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: NgxTimepickerFieldComponent,\n                            multi: true\n                        }\n                    ],\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: NgxMaterialTimepickerService }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TIME_LOCALE]\n                }] }]; }, propDecorators: { disabled: [{\n                type: Input\n            }], toggleIcon: [{\n                type: Input\n            }], buttonAlign: [{\n                type: Input\n            }], clockTheme: [{\n                type: Input\n            }], controlOnly: [{\n                type: Input\n            }], cancelBtnTmpl: [{\n                type: Input\n            }], confirmBtnTmpl: [{\n                type: Input\n            }], format: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], defaultTime: [{\n                type: Input\n            }], minutesGap: [{\n                type: Input\n            }], timeChanged: [{\n                type: Output\n            }] } });\n\nclass NgxMaterialTimepickerModule {\n    // tslint:disable-next-line:max-line-length\n    static setOpts(locale, numberingSystem = TimeAdapter.DEFAULT_NUMBERING_SYSTEM) {\n        return {\n            ngModule: NgxMaterialTimepickerModule,\n            providers: [\n                { provide: TIME_LOCALE, useValue: locale },\n                { provide: NUMBERING_SYSTEM, useValue: numberingSystem }\n            ]\n        };\n    }\n}\nNgxMaterialTimepickerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxMaterialTimepickerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerModule, declarations: [NgxMaterialTimepickerComponent,\n        NgxMaterialTimepicker24HoursFaceComponent,\n        NgxMaterialTimepicker12HoursFaceComponent,\n        NgxMaterialTimepickerMinutesFaceComponent,\n        NgxMaterialTimepickerFaceComponent,\n        NgxMaterialTimepickerToggleComponent,\n        NgxMaterialTimepickerButtonComponent,\n        NgxMaterialTimepickerDialComponent,\n        NgxMaterialTimepickerDialControlComponent,\n        NgxMaterialTimepickerPeriodComponent,\n        TimeFormatterPipe,\n        TimepickerDirective,\n        OverlayDirective,\n        NgxMaterialTimepickerToggleIconDirective,\n        AutofocusDirective,\n        MinutesFormatterPipe,\n        NgxMaterialTimepickerThemeDirective,\n        NgxTimepickerFieldComponent,\n        NgxTimepickerTimeControlComponent,\n        NgxTimepickerPeriodSelectorComponent,\n        TimeLocalizerPipe,\n        TimeParserPipe,\n        ActiveHourPipe,\n        ActiveMinutePipe,\n        NgxMaterialTimepickerContainerComponent,\n        NgxMaterialTimepickerContentComponent,\n        AppendToInputDirective], imports: [CommonModule,\n        FormsModule,\n        ReactiveFormsModule], exports: [NgxMaterialTimepickerComponent,\n        NgxMaterialTimepickerToggleComponent,\n        NgxTimepickerFieldComponent,\n        TimepickerDirective,\n        NgxMaterialTimepickerToggleIconDirective,\n        NgxMaterialTimepickerThemeDirective] });\nNgxMaterialTimepickerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerModule, imports: [[\n            CommonModule,\n            FormsModule,\n            ReactiveFormsModule,\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxMaterialTimepickerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        ReactiveFormsModule,\n                    ],\n                    exports: [\n                        NgxMaterialTimepickerComponent,\n                        NgxMaterialTimepickerToggleComponent,\n                        NgxTimepickerFieldComponent,\n                        TimepickerDirective,\n                        NgxMaterialTimepickerToggleIconDirective,\n                        NgxMaterialTimepickerThemeDirective,\n                    ],\n                    declarations: [\n                        NgxMaterialTimepickerComponent,\n                        NgxMaterialTimepicker24HoursFaceComponent,\n                        NgxMaterialTimepicker12HoursFaceComponent,\n                        NgxMaterialTimepickerMinutesFaceComponent,\n                        NgxMaterialTimepickerFaceComponent,\n                        NgxMaterialTimepickerToggleComponent,\n                        NgxMaterialTimepickerButtonComponent,\n                        NgxMaterialTimepickerDialComponent,\n                        NgxMaterialTimepickerDialControlComponent,\n                        NgxMaterialTimepickerPeriodComponent,\n                        TimeFormatterPipe,\n                        TimepickerDirective,\n                        OverlayDirective,\n                        NgxMaterialTimepickerToggleIconDirective,\n                        AutofocusDirective,\n                        MinutesFormatterPipe,\n                        NgxMaterialTimepickerThemeDirective,\n                        NgxTimepickerFieldComponent,\n                        NgxTimepickerTimeControlComponent,\n                        NgxTimepickerPeriodSelectorComponent,\n                        TimeLocalizerPipe,\n                        TimeParserPipe,\n                        ActiveHourPipe,\n                        ActiveMinutePipe,\n                        NgxMaterialTimepickerContainerComponent,\n                        NgxMaterialTimepickerContentComponent,\n                        AppendToInputDirective\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NUMBERING_SYSTEM, NgxMaterialTimepickerComponent, NgxMaterialTimepickerModule, NgxMaterialTimepickerThemeDirective, NgxMaterialTimepickerToggleComponent, NgxMaterialTimepickerToggleIconDirective, NgxTimepickerFieldComponent, TIME_LOCALE, TimepickerDirective };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}