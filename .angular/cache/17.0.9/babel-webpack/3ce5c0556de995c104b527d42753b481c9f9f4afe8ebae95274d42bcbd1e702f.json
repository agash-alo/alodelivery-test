{"ast":null,"code":"/**\r\n * Base class for all Axis\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Component } from \"../../core/Component\";\nimport { Container } from \"../../core/Container\";\nimport { DataItem } from \"../../core/DataItem\";\nimport { AxisBreak } from \"./AxisBreak\";\nimport { Label } from \"../../core/elements/Label\";\nimport { Tooltip } from \"../../core/elements/Tooltip\";\nimport { SortedListTemplate } from \"../../core/utils/SortedList\";\nimport { List, ListTemplate, ListDisposer } from \"../../core/utils/List\";\nimport { Disposer, MultiDisposer } from \"../../core/utils/Disposer\";\nimport { registry } from \"../../core/Registry\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\nimport * as $iter from \"../../core/utils/Iterator\";\nimport * as $math from \"../../core/utils/Math\";\nimport * as $utils from \"../../core/utils/Utils\";\nimport * as $number from \"../../core/utils/Number\";\nimport * as $array from \"../../core/utils/Array\";\nimport * as $type from \"../../core/utils/Type\";\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Defines a [[DataItem]] for [[Axis]].\r\n *\r\n * @see {@link DataItem}\r\n */\nvar AxisDataItem = /** @class */function (_super) {\n  __extends(AxisDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n  function AxisDataItem() {\n    var _this = _super.call(this) || this;\n    _this.className = \"AxisDataItem\";\n    _this.applyTheme();\n    return _this;\n  }\n  Object.defineProperty(AxisDataItem.prototype, \"grid\", {\n    /**\r\n     * @return Grid element\r\n     */\n    get: function () {\n      if (!this._grid) {\n        var component_1 = this.component;\n        if (component_1) {\n          var template = void 0;\n          var grid_1;\n          if (this.isRange) {\n            template = component_1.axisRanges.template.grid;\n            if (template.disabled) {\n              return;\n            } else {\n              grid_1 = template.clone();\n            }\n          } else {\n            template = component_1.renderer.grid.template;\n            if (template.disabled) {\n              return;\n            } else {\n              grid_1 = component_1.renderer.grid.create();\n              this._disposers.push(new Disposer(function () {\n                component_1.renderer.grid.removeValue(grid_1);\n              }));\n            }\n          }\n          this.grid = grid_1;\n          grid_1.shouldClone = false;\n          this._disposers.push(grid_1);\n          grid_1.axis = this.component;\n        }\n      }\n      return this._grid;\n    },\n    /**\r\n     * A [[Grid]] element associated with this data item.\r\n     *\r\n     * If there is no grid element associated with data item, a new one is\r\n     * created and returned.\r\n     *\r\n     * @param grid  Grid element\r\n     */\n    set: function (grid) {\n      if (this._grid && this._grid != grid) {\n        $array.remove(this.sprites, this._grid);\n        this._grid.dataItem = undefined;\n      }\n      if (grid) {\n        if (grid.dataItem && grid.dataItem != this) {\n          $array.remove(grid.dataItem.sprites, grid);\n          grid.dataItem.grid = undefined;\n        }\n        this.addSprite(grid);\n      }\n      this._grid = grid;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisDataItem.prototype, \"tick\", {\n    /**\r\n     * @return Tick element\r\n     */\n    get: function () {\n      if (!this._tick) {\n        var component_2 = this.component;\n        if (component_2) {\n          var template = void 0;\n          var tick_1;\n          if (this.isRange) {\n            template = component_2.axisRanges.template.tick;\n            if (template.disabled) {\n              return;\n            } else {\n              tick_1 = template.clone();\n            }\n          } else {\n            template = component_2.renderer.ticks.template;\n            if (template.disabled) {\n              return;\n            } else {\n              tick_1 = component_2.renderer.ticks.create();\n              this._disposers.push(new Disposer(function () {\n                component_2.renderer.ticks.removeValue(tick_1);\n              }));\n            }\n          }\n          this.tick = tick_1;\n          tick_1.axis = this.component;\n          tick_1.shouldClone = false;\n          this._disposers.push(tick_1);\n        }\n      }\n      return this._tick;\n    },\n    /**\r\n     * An [[AxisTick]] element associated with this data item.\r\n     *\r\n     * If there is no tick element associated with data item, a new one is\r\n     * created and returned.\r\n     *\r\n     * @param tick  Tick element\r\n     */\n    set: function (tick) {\n      if (this._tick && this._tick != tick) {\n        $array.remove(this.sprites, this._tick);\n        this._tick.dataItem = undefined;\n      }\n      if (tick) {\n        if (tick.dataItem && tick.dataItem != this) {\n          $array.remove(tick.dataItem.sprites, tick);\n          tick.dataItem.tick = undefined;\n        }\n        this.addSprite(tick);\n      }\n      this._tick = tick;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisDataItem.prototype, \"label\", {\n    /**\r\n     * @return Label element\r\n     */\n    get: function () {\n      if (!this._label) {\n        var component_3 = this.component;\n        if (component_3) {\n          var template = void 0;\n          var label_1;\n          if (this.isRange) {\n            template = component_3.axisRanges.template.label;\n            if (template.disabled) {\n              return;\n            } else {\n              label_1 = template.clone();\n            }\n          } else {\n            template = component_3.renderer.labels.template;\n            if (template.disabled) {\n              return;\n            } else {\n              label_1 = component_3.renderer.labels.create();\n              this._disposers.push(new Disposer(function () {\n                component_3.renderer.labels.removeValue(label_1);\n              }));\n            }\n          }\n          this._disposers.push(label_1);\n          this.label = label_1;\n          label_1.shouldClone = false;\n          label_1.axis = this.component;\n          label_1.virtualParent = component_3;\n        }\n      }\n      return this._label;\n    },\n    /**\r\n     * An [[AxisLabel]] element associated with this data item.\r\n     *\r\n     * If there is no label element associated with data item, a new one is\r\n     * created and returned.\r\n     *\r\n     * @param label Label element\r\n     */\n    set: function (label) {\n      if (this._label && this._label != label) {\n        $array.remove(this.sprites, this._label);\n        this._label.dataItem = undefined;\n      }\n      if (label) {\n        if (label.dataItem && label.dataItem != this) {\n          $array.remove(label.dataItem.sprites, label);\n          label.dataItem.label = undefined;\n        }\n        this.addSprite(label);\n      }\n      this._label = label;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisDataItem.prototype, \"axisFill\", {\n    /**\r\n     * @return Label element\r\n     */\n    get: function () {\n      if (!this._axisFill) {\n        var component_4 = this.component;\n        if (component_4) {\n          var template = void 0;\n          var axisFill_1;\n          if (this.isRange) {\n            template = component_4.axisRanges.template.axisFill;\n            if (!this.isTemplate && template.disabled) {\n              return;\n            } else {\n              axisFill_1 = template.clone();\n            }\n          } else {\n            template = component_4.renderer.axisFills.template;\n            if (template.disabled) {\n              return;\n            } else {\n              axisFill_1 = component_4.renderer.axisFills.create();\n              this._disposers.push(new Disposer(function () {\n                component_4.renderer.axisFills.removeValue(axisFill_1);\n              }));\n            }\n          }\n          this.axisFill = axisFill_1;\n          axisFill_1.shouldClone = false;\n          this._disposers.push(axisFill_1);\n        }\n      }\n      return this._axisFill;\n    },\n    /**\r\n     * An [[AxisFill]] associated element with this data item.\r\n     *\r\n     * If there is no fill element associated with data item, a new one is\r\n     * created and returned.\r\n     *\r\n     * @param label Label element\r\n     */\n    set: function (axisFill) {\n      if (this._axisFill && this._axisFill != axisFill) {\n        $array.remove(this.sprites, this._axisFill);\n        this._axisFill.dataItem = undefined;\n      }\n      if (axisFill) {\n        if (axisFill.dataItem && axisFill.dataItem != this) {\n          $array.remove(axisFill.dataItem.sprites, axisFill);\n          axisFill.dataItem.axisFill = undefined;\n        }\n        axisFill.axis = this.component;\n        this.addSprite(axisFill);\n      }\n      this._axisFill = axisFill;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisDataItem.prototype, \"text\", {\n    /**\r\n     * @return Text label\r\n     */\n    get: function () {\n      return this._text;\n    },\n    /**\r\n     * Text to be used as data item's label.\r\n     *\r\n     * @param text Text label\r\n     */\n    set: function (text) {\n      this._text = text;\n      if (this._label) {\n        // do not use getter, it will create unwanted instances!\n        this._label.text = text;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisDataItem.prototype, \"mask\", {\n    /**\r\n     * Data item's mask.\r\n     *\r\n     * @return Mask\r\n     */\n    get: function () {\n      return this._mask;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisDataItem.prototype, \"contents\", {\n    /**\r\n     * Returns a [[Container]] to place all visual elements, related to data item\r\n     * in.\r\n     *\r\n     * If there is no Container, a new one is created.\r\n     *\r\n     * @return Contents container\r\n     */\n    get: function () {\n      if (!this._contents) {\n        var contents = new Container();\n        this.addSprite(contents);\n        contents.isMeasured = false;\n        this._contents = contents;\n        var component = this.component;\n        if (component) {\n          var mask = component.renderer.createFill(this.component);\n          mask.disabled = false;\n          mask.axis = component;\n          this.addSprite(mask);\n          this._mask = mask;\n          contents.mask = mask;\n        }\n      }\n      return this._contents;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisDataItem.prototype, \"axisBreak\", {\n    /**\r\n     * @return Axis break\r\n     */\n    get: function () {\n      return this._axisBreak;\n    },\n    /**\r\n     * An [[AxisBreak]] this data item falls within.\r\n     *\r\n     * @param axisBreak Axis break\r\n     */\n    set: function (axisBreak) {\n      if (this._axisBreak) {\n        this._axisBreak.dataItems.removeValue(this);\n      }\n      if (axisBreak) {\n        axisBreak.dataItems.push(this);\n      }\n      this._axisBreak = axisBreak;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Re-draws the element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  AxisDataItem.prototype.validate = function () {\n    if (this.component) {\n      this.component.validateDataElement(this);\n    }\n  };\n  /**\r\n   * Appends data item's elements to the parent [[Container]].\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  AxisDataItem.prototype.appendChildren = function () {\n    if (this.component) {\n      this.component.appendDataItem(this);\n    }\n  };\n  /**\r\n   * Checks if data item has particular property set.\r\n   *\r\n   * @param prop  Property name\r\n   * @return Property set?\r\n   */\n  AxisDataItem.prototype.hasProperty = function (prop) {\n    return prop == \"component\" ? true : _super.prototype.hasProperty.call(this, prop);\n  };\n  /**\r\n   * Copies all parameters from another [[AxisDataItem]].\r\n   *\r\n   * @param source Source AxisDataItem\r\n   */\n  AxisDataItem.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n    this.text = source.text;\n    if (source.bullet) {\n      this.bullet = source.bullet.clone();\n    }\n    this.minPosition = source.minPosition;\n    this.maxPosition = source.maxPosition;\n  };\n  /**\r\n   * Sets visibility of the Data Item.\r\n   *\r\n   * @param value Data Item\r\n   */\n  AxisDataItem.prototype.setVisibility = function (value, noChangeValues) {\n    _super.prototype.setVisibility.call(this, value, noChangeValues);\n    if (this._contents) {\n      this._contents.visible = value;\n    }\n  };\n  Object.defineProperty(AxisDataItem.prototype, \"bullet\", {\n    /**\r\n     * @return Bullet\r\n     */\n    get: function () {\n      return this._bullet;\n    },\n    /**\r\n     * Set it to an instance of any [[Sprite]]. It will be displayed as an axis\r\n     * bullet in the middle of the cell, or specific value.\r\n     *\r\n     * If you need position bullet relatively to the cell, use [[AxisBullet]]\r\n     * instead. It has a `location` property which can be used to indicate\r\n     * precise relative location within cell/range.\r\n     *\r\n     * Also, [[AxisBullet]] is a [[Container]] so you can push any other element\r\n     * into it.\r\n     *\r\n     * NOTE: `location` is relative to the parent axis range's scope, i.e.\r\n     * between its `date` and `endDate` for [[DateAxis]], or `value`/`endValue`\r\n     * ([[ValueAxis]]), or `category`/`endCategory` ([[categoryAxis]]).\r\n     *\r\n     * ```TypeScript\r\n     * let range = dateAxis.axisRanges.create();\r\n     * range.date = new Date(2018, 0, 5);\r\n     *\r\n     * let flag = new am4plugins_bullets.FlagBullet();\r\n     * flag.label.text = \"Hello\";\r\n     *\r\n     * range.bullet = flag;\r\n     * ```\r\n     * ```JavaScript\r\n     * var range = dateAxis.axisRanges.create();\r\n     * range.date = new Date(2018, 0, 5);\r\n     *\r\n     * var flag = new am4plugins_bullets.FlagBullet();\r\n     * flag.label.text = \"Hello\";\r\n     *\r\n     * range.bullet = flag;\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"xAxes\": [{\r\n     *     \"type\": \"DateAxis\",\r\n     *     // ...\r\n     *     \"axisRanges\": [{\r\n     *       \"date\": new Date(2018, 0, 5),\r\n     *       \"bullet: {\r\n     *         \"type\": \"FlagBullet\",\r\n     *         \"label\": {\r\n     *           \"text\": \"Hello\"\r\n     *         }\r\n     *       }\r\n     *     }]\r\n     *   }]\r\n     * }\r\n     * ```\r\n     *\r\n     * @since 4.5.9\r\n     * @param  value  Bullet\r\n     */\n    set: function (value) {\n      if (this._bullet && this._bullet != value) {\n        $array.remove(this.sprites, this._bullet);\n        this._bullet.dataItem = undefined;\n      }\n      this._bullet = value;\n      if (value) {\n        this.addSprite(value);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return AxisDataItem;\n}(DataItem);\nexport { AxisDataItem };\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Defines named positions for data item's location within [[Axis]].\r\n */\nexport var AxisItemLocation;\n(function (AxisItemLocation) {\n  AxisItemLocation[AxisItemLocation[\"Start\"] = 0] = \"Start\";\n  AxisItemLocation[AxisItemLocation[\"Middle\"] = 0.5] = \"Middle\";\n  AxisItemLocation[AxisItemLocation[\"End\"] = 1] = \"End\";\n})(AxisItemLocation || (AxisItemLocation = {}));\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * A base class for all Axis elements.\r\n *\r\n * @see {@link IAxisEvents} for a list of available Events\r\n * @see {@link IAxisAdapters} for a list of available Adapters\r\n */\nvar Axis = /** @class */function (_super) {\n  __extends(Axis, _super);\n  /**\r\n   * Constructor\r\n   */\n  function Axis() {\n    var _this =\n    // Init\n    _super.call(this) || this;\n    /**\r\n     * Number of Grid elements on the axis.\r\n     */\n    _this._gridCount = 10;\n    /**\r\n     * A list of [[XYSeries]] that are using this Axis.\r\n     */\n    _this._series = new List();\n    /**\r\n     * Specifies if axis should be automatically disposed when removing from\r\n     * chart's axis list.\r\n     *\r\n     * @default true\r\n     */\n    _this.autoDispose = true;\n    /**\r\n     * @ignore\r\n     */\n    _this._axisItemCount = 0;\n    if (_this.constructor === Axis) {\n      throw new Error(\"'Axis' cannot be instantiated directly. Please use a specific axis type.\");\n    }\n    _this.hideTooltipWhileZooming = true;\n    _this.minWidth = 0.0001;\n    _this.minHeight = 0.0001;\n    _this.className = \"Axis\";\n    _this.shouldClone = false;\n    _this.setPropertyValue(\"cursorTooltipEnabled\", true);\n    _this.toggleZoomOutButton = true;\n    _this.zoomable = true;\n    var interfaceColors = new InterfaceColorSet();\n    // Create title\n    _this.title = new Label();\n    _this.title.shouldClone = false;\n    _this._disposers.push(_this.title);\n    _this.setPropertyValue(\"startLocation\", 0);\n    _this.setPropertyValue(\"endLocation\", 1);\n    // Data item iterator\n    _this._dataItemsIterator = new $iter.ListIterator(_this.dataItems, function () {\n      return _this.dataItems.create();\n    });\n    _this._dataItemsIterator.createNewItems = true;\n    // Create tooltip\n    var tooltip = new Tooltip();\n    _this._disposers.push(tooltip);\n    tooltip.label.padding(5, 10, 5, 10);\n    tooltip.background.pointerLength = 5;\n    tooltip.fitPointerToBounds = true;\n    tooltip.background.filters.clear();\n    // Set virtual parentfor the tooltip so that it can properly inheirt\n    // formatters from the axis.\n    tooltip.virtualParent = _this;\n    // Create background element for the tooltip\n    var background = tooltip.background;\n    background.cornerRadius = 0;\n    background.fill = interfaceColors.getFor(\"alternativeBackground\");\n    background.stroke = background.fill;\n    background.strokeWidth = 1;\n    background.fillOpacity = 1;\n    tooltip.label.fill = interfaceColors.getFor(\"alternativeText\");\n    _this.tooltip = tooltip;\n    // Accessibility\n    _this.readerHidden = true;\n    _this.events.on(\"rangechangestarted\", function () {\n      _this.series.each(function (series) {\n        if (series.hideTooltipWhileZooming) {\n          series.tooltip.hide();\n          series.tooltip.preventShow = true;\n        }\n      });\n      if (_this.hideTooltipWhileZooming) {\n        _this.tooltip.hide();\n        _this.tooltip.preventShow = true;\n      }\n    }, undefined, false);\n    _this.events.on(\"rangechangeended\", function () {\n      _this.series.each(function (series) {\n        if (series.hideTooltipWhileZooming) {\n          series.tooltip.hide();\n          series.tooltip.preventShow = false;\n        }\n      });\n      if (_this.hideTooltipWhileZooming) {\n        _this.tooltip.hide();\n        _this.tooltip.preventShow = false;\n      }\n    }, undefined, false);\n    _this.applyTheme();\n    return _this;\n  }\n  /**\r\n   * Holds reference to a function that accepts a DataItem and its index as\r\n   * parameters.\r\n   *\r\n   * It can either return a fill opacity for a fill, or manipulate data item\r\n   * directly, to create various highlighting scenarios.\r\n   *\r\n   * For example, you can set it up to highlight only weekends on a\r\n   * [[DateAxis]].\r\n   */\n  Axis.prototype.fillRule = function (dataItem, index) {\n    if (!$type.isNumber(index)) {\n      index = dataItem.index;\n    }\n    if (index / 2 == Math.round(index / 2)) {\n      dataItem.axisFill.__disabled = true;\n      dataItem.axisFill.opacity = 0;\n    } else {\n      dataItem.axisFill.opacity = 1;\n      dataItem.axisFill.__disabled = false;\n    }\n  };\n  /**\r\n   * Returns a new/empty DataItem of the type appropriate for this object.\r\n   *\r\n   * @see {@link DataItem}\r\n   * @return Data Item\r\n   */\n  Axis.prototype.createDataItem = function () {\n    return new AxisDataItem();\n  };\n  /**\r\n   * Invalidates layout.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Axis.prototype.invalidateLayout = function () {\n    _super.prototype.invalidateLayout.call(this);\n    // this puts series after axis in invalidation order also makes series update it's data items in case widht/height of a series is not 100%\n    $iter.each(this.series.iterator(), function (series) {\n      series.invalidateLayout();\n    });\n  };\n  /**\r\n   * Invalidates series of this axis.\r\n   */\n  Axis.prototype.invalidateSeries = function () {\n    // this puts series after axis in invalidation order also makes series update it's data items in case widht/height of a series is not 100%\n    $iter.each(this.series.iterator(), function (series) {\n      series.invalidate();\n    });\n  };\n  /**\r\n   * Override to cancel super call for data element validation.\r\n   * @ignore\r\n   */\n  Axis.prototype.validateDataElements = function () {\n    this._axisItemCount = 0;\n    if (this.ghostLabel) {\n      this.renderer.updateLabelElement(this.ghostLabel, this.start, this.end);\n      this.ghostLabel.validate();\n    }\n  };\n  /**\r\n   * Recalculates the number of grid items on the axis.\r\n   */\n  Axis.prototype.updateGridCount = function () {\n    if (this.renderer) {\n      var gridCount = this.axisLength / this.renderer.minGridDistance;\n      if (gridCount != this._gridCount) {\n        this._gridCount = gridCount;\n        this.clearCache();\n      }\n    }\n  };\n  /**\r\n   * Redraws the element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Axis.prototype.validateLayout = function () {\n    this.axisFullLength = this.axisLength / (this.end - this.start);\n    _super.prototype.validateLayout.call(this);\n    this.updateGridCount();\n    var renderer = this.renderer;\n    if (renderer) {\n      renderer.updateAxisLine();\n      renderer.updateTooltip();\n      renderer.updateBaseGridElement();\n    }\n    if (this._prevLength != this.axisLength) {\n      this.dispatchImmediately(\"lengthchanged\");\n      this._prevLength = this.axisLength;\n    }\n  };\n  /**\r\n   * Initializes Axis' renderer.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Axis.prototype.initRenderer = function () {};\n  /**\r\n   * Adds a data item to the Axis.\r\n   *\r\n   * @param dataItem Data item\r\n   */\n  Axis.prototype.appendDataItem = function (dataItem) {\n    var renderer = this.renderer;\n    var tick = dataItem.tick;\n    if (tick) {\n      if (tick.above) {\n        tick.parent = renderer.bulletsContainer;\n      } else {\n        tick.parent = renderer.gridContainer;\n      }\n    }\n    if (dataItem.label) {\n      dataItem.label.parent = renderer;\n    }\n    var axisFill = dataItem.axisFill;\n    if (axisFill) {\n      if (axisFill.above) {\n        axisFill.parent = renderer.bulletsContainer;\n      } else {\n        axisFill.parent = renderer.gridContainer;\n      }\n    }\n    var grid = dataItem.grid;\n    if (grid) {\n      if (grid.above) {\n        grid.parent = renderer.bulletsContainer;\n      } else {\n        grid.parent = renderer.gridContainer;\n      }\n    }\n    if (dataItem.bullet) {\n      dataItem.bullet.parent = renderer.bulletsContainer;\n    }\n  };\n  /**\r\n   * Redraws Axis' related items.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Axis.prototype.validate = function () {\n    _super.prototype.validate.call(this);\n    this.validateLayout();\n    this.renderer.updateGridContainer();\n  };\n  /**\r\n   * Redars Axis ranges.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Axis.prototype.validateAxisRanges = function () {\n    var _this = this;\n    $iter.each(this.axisRanges.iterator(), function (axisRange) {\n      _this.appendDataItem(axisRange);\n      _this.validateDataElement(axisRange);\n      if (axisRange.grid) {\n        axisRange.grid.validate();\n      }\n      if (axisRange.tick) {\n        axisRange.tick.validate();\n      }\n      if (axisRange.axisFill) {\n        axisRange.axisFill.validate();\n      }\n      if (axisRange.label) {\n        axisRange.label.validate();\n      }\n    });\n  };\n  /**\r\n   * Invalidates all axis breaks, so they are redrawn.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Axis.prototype.validateBreaks = function () {\n    if (this._axisBreaks) {\n      $iter.each(this._axisBreaks.iterator(), function (axisBreak) {\n        axisBreak.invalidate();\n      });\n    }\n  };\n  /**\r\n   * Associates an Axis break with this Axis, after it is inserted into\r\n   * `axisBreaks`.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param event Event\r\n   */\n  Axis.prototype.processBreak = function (event) {\n    var axisBreak = event.newValue;\n    axisBreak.parent = this.renderer.breakContainer;\n    axisBreak.axis = this;\n  };\n  /**\r\n   * Registers a [[XYSeries]] element with this Axis.\r\n   *\r\n   * Returns a [[Disposer]] for all events, added to Series for watching\r\n   * changes in Axis, and vice versa.\r\n   * @ignore\r\n   * @param series  Series\r\n   * @return Event disposer\r\n   */\n  Axis.prototype.registerSeries = function (series) {\n    var _this = this;\n    this.series.moveValue(series);\n    return new MultiDisposer([new Disposer(function () {\n      _this.series.removeValue(series);\n    }), this.events.on(\"lengthchanged\", series.invalidate, series, false), this.events.on(\"lengthchanged\", series.createMask, series, false), this.events.on(\"startchanged\", series.invalidate, series, false), this.events.on(\"endchanged\", series.invalidate, series, false)]);\n  };\n  Object.defineProperty(Axis.prototype, \"renderer\", {\n    /**\r\n     * @return Renderer\r\n     */\n    get: function () {\n      return this._renderer;\n    },\n    /**\r\n     * An [[AxisRenderer]] to be used to render this Axis.\r\n     *\r\n     * Please note that most of the settings, related to Axis' appearance are set\r\n     * via its renderer. Not directly on the Axis.\r\n     *\r\n     * E.g.:\r\n     *\r\n     * ```TypeScript\r\n     * axis.renderer.inside = true;\r\n     * axis.renderer.minLabelPosition = 0.1;\r\n     * axis.renderer.maxLabelPosition = 0.9;\r\n     * ```\r\n     * ```JavaScript\r\n     * axis.renderer.inside = true;\r\n     * axis.renderer.minLabelPosition = 0.1;\r\n     * axis.renderer.maxLabelPosition = 0.9;\r\n     * ```\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/} for more info\r\n     * @param renderer  Renderer\r\n     */\n    set: function (renderer) {\n      if (renderer != this._renderer) {\n        this._renderer = renderer;\n        renderer.chart = this.chart;\n        renderer.axis = this;\n        renderer.parent = this;\n        this.title.parent = this; // we add title to axis and set layout in renderer to avoid one extra container, as otherwise axis container would be used for holding renderer only\n        this.initRenderer();\n        this._disposers.push(renderer.gridContainer.events.on(\"maxsizechanged\", this.invalidate, this, false));\n        var ghostLabel_1 = this.renderer.labels.create();\n        this._disposers.push(ghostLabel_1);\n        ghostLabel_1.dataItem = this.dataItems.template.clone(); // just for the adapters not to fail\n        ghostLabel_1.text = \"L\";\n        ghostLabel_1.parent = this.renderer;\n        ghostLabel_1.shouldClone = false;\n        ghostLabel_1.fillOpacity = 0;\n        ghostLabel_1.opacity = 0;\n        ghostLabel_1.strokeOpacity = 0;\n        ghostLabel_1.interactionsEnabled = false;\n        ghostLabel_1.validate();\n        this.ghostLabel = ghostLabel_1;\n        this.events.on(\"beforedatavalidated\", function () {\n          ghostLabel_1.text = \"L\";\n        }, undefined, false);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Converts a relative position to angle. (for circular axes)\r\n   *\r\n   * @param position Position (0-1)\r\n   * @return Angle\r\n   */\n  Axis.prototype.positionToAngle = function (position) {\n    return this.renderer.positionToAngle(position);\n  };\n  /**\r\n   * Converts pixel coordinates to a relative position. (0-1)\r\n   *\r\n   * @param point  Coorinates (px)\r\n   * @return Position (0-1)\r\n   */\n  Axis.prototype.pointToPosition = function (point) {\n    return this.renderer.pointToPosition(point);\n  };\n  /**\r\n   * Converts relative position to coordinate.\r\n   *\r\n   * @since 4.7.15\r\n   * @param position (0-1)\r\n   * @return coordinate (px)\r\n   */\n  Axis.prototype.positionToCoordinate = function (position) {\n    return this.renderer.positionToCoordinate(position);\n  };\n  /**\r\n   * [getAnyRangePath description]\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description\r\n   * @param start  [description]\r\n   * @param end    [description]\r\n   * @return [description]\r\n   */\n  Axis.prototype.getAnyRangePath = function (start, end) {\n    return this.renderer.getPositionRangePath(start, end);\n  };\n  /**\r\n   * Converts any positional parameter to a relative position on axis.\r\n   *\r\n   * @todo Description (review)\r\n   * @param value  Pisition\r\n   * @return Position (0-1)\r\n   */\n  Axis.prototype.anyToPosition = function (value) {\n    return 0;\n  };\n  /**\r\n   * Converts any positional parameter to a relative position on axis.\r\n   *\r\n   * @todo Description (review)\r\n   * @param value  Pisition\r\n   * @return Orientation point\r\n   */\n  Axis.prototype.anyToPoint = function (value) {\n    return {\n      x: 0,\n      y: 0,\n      angle: 0\n    };\n  };\n  /**\r\n   * [getPositionRangePath description]\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description\r\n   * @param startPosition [description]\r\n   * @param endPosition   [description]\r\n   * @return [description]\r\n   */\n  Axis.prototype.getPositionRangePath = function (startPosition, endPosition) {\n    if (this.renderer) {\n      return this.renderer.getPositionRangePath(startPosition, endPosition);\n    }\n    return \"\";\n  };\n  Object.defineProperty(Axis.prototype, \"axisLength\", {\n    /**\r\n     * Actual axis length in pixels.\r\n     *\r\n     * @return Axis length (px)\r\n     */\n    get: function () {\n      if (this.renderer) {\n        return this.renderer.axisLength;\n      }\n      return 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Axis.prototype, \"cursorTooltipEnabled\", {\n    /**\r\n     * @return Display tooltip?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"cursorTooltipEnabled\");\n    },\n    /**\r\n     * Indicates if axis should display a tooltip for chart's cursor.\r\n     *\r\n     * @param value Display tooltip?\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"cursorTooltipEnabled\", value)) {\n        if (value && this.renderer) {\n          this.renderer.updateTooltip();\n        } else if (this.tooltip) {\n          this.tooltip.hide(0);\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Axis.prototype, \"toggleZoomOutButton\", {\n    /**\r\n     * @return Toggle zoom out button?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"toggleZoomOutButton\");\n    },\n    /**\r\n     * Normally, when axis is zoomed in, a zoom out button is shown by a chart,\r\n     * and vice versa: when axis is zoomed out completely, zoom out button is\r\n     * hidden.\r\n     *\r\n     * Setting this to `false` will disable this behavior. Zooming in our out\r\n     * this axis will not reveal or hide zoom out button.\r\n     *\r\n     * @default true\r\n     * @since 4.6.2\r\n     * @param  value  Toggle zoom out button?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"toggleZoomOutButton\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Hides element's [[Tooltip]].\r\n   *\r\n   * @see {@link Tooltip}\r\n   */\n  Axis.prototype.hideTooltip = function (duration) {\n    _super.prototype.hideTooltip.call(this, duration);\n    this._tooltipPosition = undefined;\n  };\n  /**\r\n   * Shows Axis tooltip at specific relative position within Axis. (0-1)\r\n   *\r\n   * @param position Position (0-1)\r\n   * @param local or global position\r\n   */\n  Axis.prototype.showTooltipAtPosition = function (position, local) {\n    var tooltip = this._tooltip;\n    if (!tooltip || this.dataItems.length <= 0) {\n      this._tooltipPosition = undefined;\n    } else {\n      if (!local) {\n        position = this.toAxisPosition(position);\n      }\n      if (!$type.isNumber(position) || position < this.start || position > this.end) {\n        tooltip.hide(0);\n        this._tooltipPosition = undefined;\n        return;\n      }\n      var renderer = this.renderer;\n      //@todo: think of how to solve this better\n      if (!tooltip.parent) {\n        tooltip.parent = this.tooltipContainer;\n      }\n      var tooltipLocation = renderer.tooltipLocation;\n      var startPosition = this.getCellStartPosition(position);\n      var endPosition = this.getCellEndPosition(position);\n      if (this.tooltipPosition == \"fixed\") {\n        position = startPosition + (endPosition - startPosition) * tooltipLocation;\n      }\n      position = $math.fitToRange(position, this.start, this.end);\n      if (this._tooltipPosition != position) {\n        this._tooltipPosition = position;\n        var tooltipLocation2 = renderer.tooltipLocation2;\n        var startPoint = renderer.positionToPoint(startPosition, tooltipLocation2);\n        var endPoint = renderer.positionToPoint(endPosition, tooltipLocation2);\n        // save values so cursor could use them\n        this.currentItemStartPoint = startPoint;\n        this.currentItemEndPoint = endPoint;\n        if (renderer.fullWidthTooltip) {\n          tooltip.width = endPoint.x - startPoint.x;\n          tooltip.height = endPoint.y - startPoint.y;\n        }\n        var point = renderer.positionToPoint(position, tooltipLocation2);\n        var globalPoint = $utils.spritePointToSvg(point, this.renderer.line);\n        tooltip.text = this.getTooltipText(position);\n        if (tooltip.text) {\n          tooltip.delayedPointTo(globalPoint);\n          tooltip.show();\n        }\n      }\n      if (!this.cursorTooltipEnabled || this.tooltip.disabled) {\n        tooltip.hide(0);\n      }\n    }\n  };\n  /**\r\n   * Converts relative position (0-1) to Axis position with zoom level and\r\n   * inversed taken into account.\r\n   *\r\n   * @param position Global position (0-1)\r\n   * @return Position within Axis (0-1)\r\n   */\n  Axis.prototype.toAxisPosition = function (position) {\n    position = this.renderer.toAxisPosition(position);\n    if (position == undefined) {\n      return;\n    }\n    position = position * (this.end - this.start);\n    if (this.renderer.inversed) {\n      position = this.end - position;\n    } else {\n      position = this.start + position;\n    }\n    return position;\n  };\n  /**\r\n   * Converts position on the axis with zoom level and\r\n   * inversed taken into account to global position.\r\n   *\r\n   * @param position Axis position (0-1)\r\n   * @return Global position (0-1)\r\n   */\n  Axis.prototype.toGlobalPosition = function (position) {\n    if (this.renderer.inversed) {\n      position = this.end - position;\n    } else {\n      position = position - this.start;\n    }\n    return position / (this.end - this.start);\n  };\n  /**\r\n   * Returns text to be used for cursor's Axis tooltip.\r\n   *\r\n   * This is a placeholder to override for extending classes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param position  Position coordinate (px)\r\n   * @return Label text\r\n   */\n  Axis.prototype.getTooltipText = function (position) {\n    return;\n  };\n  /**\r\n   * Updates Axis' tooltip's position and possibly size, and pointer (stem)\r\n   * place.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param pointerOrientation  Pointer (stem) orientation\r\n   * @param boundingRectangle   A rectangle for tooltip to fit within\r\n   */\n  Axis.prototype.updateTooltip = function (pointerOrientation, boundingRectangle) {\n    var tooltip = this._tooltip;\n    if (tooltip) {\n      tooltip.fixDoc = false;\n      tooltip.pointerOrientation = pointerOrientation;\n      tooltip.setBounds($utils.spriteRectToSvg(boundingRectangle, this.renderer.line));\n    }\n  };\n  /**\r\n   * [roundPosition description]\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description\r\n   * @param position  Relative position\r\n   * @param location  Location on axis\r\n   * @return Rounded position\r\n   */\n  Axis.prototype.roundPosition = function (position, location, axisLocation) {\n    return position;\n  };\n  /**\r\n   * [getCellStartPosition description]\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description\r\n   * @param position [description]\r\n   * @return [description]\r\n   */\n  Axis.prototype.getCellStartPosition = function (position) {\n    return position;\n  };\n  /**\r\n   * [getCellEndPosition description]\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description\r\n   * @param position [description]\r\n   * @return [description]\r\n   */\n  Axis.prototype.getCellEndPosition = function (position) {\n    return position;\n  };\n  Object.defineProperty(Axis.prototype, \"axisRanges\", {\n    /**\r\n     * A list of axis ranges for this Axis.\r\n     *\r\n     * @return Axis ranges\r\n     */\n    get: function () {\n      if (!this._axisRanges) {\n        var dataItem = this.createDataItem();\n        dataItem.isRange = true;\n        dataItem.axisFill = this.renderer.axisFills.template.clone();\n        dataItem.grid = this.renderer.grid.template.clone();\n        dataItem.tick = this.renderer.ticks.template.clone();\n        dataItem.label = this.renderer.labels.template.clone();\n        dataItem.isTemplate = true;\n        dataItem.component = this;\n        dataItem.axisFill.disabled = false;\n        dataItem.tick.disabled = false;\n        dataItem.grid.disabled = false;\n        dataItem.label.disabled = false;\n        this._axisRanges = new ListTemplate(dataItem);\n        this._axisRanges.events.on(\"inserted\", this.processAxisRange, this, false);\n        this._disposers.push(new ListDisposer(this._axisRanges));\n        this._disposers.push(this._axisRanges.template);\n      }\n      return this._axisRanges;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Decorates an axis range after it has been added to the axis range list.\r\n   *\r\n   * @param event Event\r\n   */\n  Axis.prototype.processAxisRange = function (event) {\n    var axisRange = event.newValue;\n    axisRange.component = this;\n    axisRange.isRange = true;\n  };\n  Object.defineProperty(Axis.prototype, \"axisBreaks\", {\n    /**\r\n     * A list of axis breaks on this Axis.\r\n     *\r\n     * @return Axis breaks.\r\n     */\n    get: function () {\n      if (!this._axisBreaks) {\n        this._axisBreaks = new SortedListTemplate(this.createAxisBreak(), function (a, b) {\n          return $number.order(a.adjustedStartValue, b.adjustedStartValue);\n        });\n        this._axisBreaks.events.on(\"inserted\", this.processBreak, this, false);\n        this._disposers.push(new ListDisposer(this._axisBreaks));\n        this._disposers.push(this._axisBreaks.template);\n      }\n      return this._axisBreaks;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Creates a new axis break.\r\n   *\r\n   * @return Axis break\r\n   */\n  Axis.prototype.createAxisBreak = function () {\n    return new AxisBreak();\n  };\n  Object.defineProperty(Axis.prototype, \"series\", {\n    /**\r\n     * A list of Series currently associated with this Axis.\r\n     *\r\n     * @return Series\r\n     */\n    get: function () {\n      if (!this._series) {\n        this._series = new List();\n      }\n      return this._series;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Processes Series' data items.\r\n   *\r\n   * This is a placeholder to override for extending classes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Axis.prototype.processSeriesDataItems = function () {};\n  /**\r\n   * Processes Series' single data item.\r\n   *\r\n   * This is a placeholder to override for extending classes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItem Data item\r\n   */\n  Axis.prototype.processSeriesDataItem = function (dataItem, axisLetter) {};\n  /**\r\n   * Post-processes Serie's data items.\r\n   *\r\n   * This is a placeholder to override for extending classes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Axis.prototype.postProcessSeriesDataItems = function (series) {};\n  /**\r\n   * Post-processes Serie's single data item.\r\n   *\r\n   * This is a placeholder to override for extending classes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItem Data item\r\n   */\n  Axis.prototype.postProcessSeriesDataItem = function (dataItem) {};\n  //\n  /**\r\n   * Updates Axis based on all Series that might influence it.\r\n   *\r\n   * Called by Series after Series data is validated.\r\n   *\r\n   * This is a placeholder to override for extending classes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Axis.prototype.updateAxisBySeries = function () {};\n  /**\r\n   * Hides unused data items.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Axis.prototype.hideUnusedDataItems = function () {\n    var _this = this;\n    // hide all unused\n    var dataItemsIterator = this._dataItemsIterator;\n    dataItemsIterator.createNewItems = false;\n    $iter.each(dataItemsIterator.iterator(), function (dataItem) {\n      _this.validateDataElement(dataItem); // solves shrinking\n      dataItem.__disabled = true;\n    });\n    dataItemsIterator.clear();\n    dataItemsIterator.createNewItems = true;\n  };\n  /**\r\n   * Returns a Series' data item that corresponds to specific position on Axis.\r\n   *\r\n   * This is a placeholder to override for extending classes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param series    Series\r\n   * @param position  Position (0-1)\r\n   * @param findNearest  Should axis try to find nearest tooltip if there is no data item at exact position\r\n   * @return Data item\r\n   */\n  Axis.prototype.getSeriesDataItem = function (series, position, findNearest) {\n    return;\n  };\n  /**\r\n   * Returns an angle that corresponds to specific position on axis.\r\n   *\r\n   * This is a placeholder to override for extending classes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description (review)\r\n   * @param dataItem  Data item\r\n   * @param key       ???\r\n   * @param location  Location\r\n   * @param stackKey  ???\r\n   * @return Angle\r\n   */\n  Axis.prototype.getAngle = function (dataItem, key, location, stackKey, range) {\n    return;\n  };\n  /**\r\n   * [getX description]\r\n   *\r\n   * This is a placeholder to override for extending classes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description (review)\r\n   * @param dataItem [description]\r\n   * @param key      [description]\r\n   * @param location [description]\r\n   * @param stackKey [description]\r\n   * @return [description]\r\n   */\n  Axis.prototype.getX = function (dataItem, key, location, stackKey, range) {\n    return;\n  };\n  /**\r\n   * [getX description]\r\n   *\r\n   * This is a placeholder to override for extending classes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description (review)\r\n   * @param dataItem [description]\r\n   * @param key      [description]\r\n   * @param location [description]\r\n   * @param stackKey [description]\r\n   * @return [description]\r\n   */\n  Axis.prototype.getPositionX = function (dataItem, key, location, stackKey, range) {\n    return;\n  };\n  /**\r\n   * [getY description]\r\n   *\r\n   * This is a placeholder to override for extending classes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description (review)\r\n   * @param dataItem [description]\r\n   * @param key      [description]\r\n   * @param location [description]\r\n   * @param stackKey [description]\r\n   * @return [description]\r\n   */\n  Axis.prototype.getY = function (dataItem, key, location, stackKey, range) {\n    return;\n  };\n  /**\r\n   * [getY description]\r\n   *\r\n   * This is a placeholder to override for extending classes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description (review)\r\n   * @param dataItem [description]\r\n   * @param key      [description]\r\n   * @param location [description]\r\n   * @param stackKey [description]\r\n   * @return [description]\r\n   */\n  Axis.prototype.getPositionY = function (dataItem, key, location, stackKey, range) {\n    return;\n  };\n  Object.defineProperty(Axis.prototype, \"basePoint\", {\n    /**\r\n     * Coordinates of the actual axis start.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Base point coordinates\r\n     */\n    get: function () {\n      return {\n        x: 0,\n        y: 0\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * [dataChangeUpdate description]\r\n   *\r\n   * This is a placeholder to override for extending classes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description\r\n   */\n  Axis.prototype.dataChangeUpdate = function () {};\n  /**\r\n   * [dataChangeUpdate description]\r\n   *\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description\r\n   */\n  Axis.prototype.seriesDataChangeUpdate = function (series) {};\n  /**\r\n   * Removes axis breaks that fall between `min` and `max` (???)\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description (review)\r\n   * @param min  Start value\r\n   * @param max  End value\r\n   * @return Spread o\r\n   */\n  Axis.prototype.adjustDifference = function (min, max) {\n    var difference = max - min;\n    if ($type.isNumber(difference)) {\n      if (this._axisBreaks) {\n        $iter.eachContinue(this._axisBreaks.iterator(), function (axisBreak) {\n          var startValue = axisBreak.adjustedStartValue;\n          var endValue = axisBreak.adjustedEndValue;\n          if ($type.isNumber(startValue) && $type.isNumber(endValue)) {\n            // breaks are sorted, we don't need go further anymore\n            if (startValue > max) {\n              return false;\n            }\n            if (endValue >= min) {\n              if ($type.isNumber(startValue) && $type.isNumber(endValue)) {\n                var breakSize = axisBreak.breakSize;\n                var intersection = $math.intersection({\n                  start: startValue,\n                  end: endValue\n                }, {\n                  start: min,\n                  end: max\n                });\n                if (intersection) {\n                  difference -= (intersection.end - intersection.start) * (1 - breakSize);\n                }\n              }\n            }\n            return true;\n          }\n        });\n      }\n      return difference;\n    }\n  };\n  /**\r\n   * Checks if specific value falls within a break.\r\n   *\r\n   * Returns [[AxisBreak]] the value falls into.\r\n   *\r\n   * @param value  Value to check\r\n   * @return Axis break\r\n   */\n  Axis.prototype.isInBreak = function (value) {\n    if (this._axisBreaks) {\n      return $iter.find(this._axisBreaks.iterator(), function (axisBreak) {\n        return value >= axisBreak.adjustedStartValue && value <= axisBreak.adjustedEndValue;\n      });\n    }\n  };\n  /**\r\n   * [fixAxisBreaks description]\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description\r\n   */\n  Axis.prototype.fixAxisBreaks = function () {\n    var _this = this;\n    if (this._axisBreaks) {\n      var axisBreaks = this._axisBreaks;\n      if (axisBreaks.length > 0) {\n        // first make sure that startValue is <= end value\n        // This needs to make a copy of axisBreaks because it mutates the list while traversing\n        // TODO very inefficient\n        $array.each($iter.toArray(axisBreaks.iterator()), function (axisBreak) {\n          var startValue = $math.min(axisBreak.startValue, axisBreak.endValue);\n          var endValue = $math.max(axisBreak.startValue, axisBreak.endValue);\n          axisBreak.adjustedStartValue = startValue;\n          axisBreak.adjustedEndValue = endValue;\n          _this._axisBreaks.update(axisBreak);\n        });\n        var firstAxisBreak = axisBreaks.first;\n        var previousEndValue_1 = Math.min(firstAxisBreak.startValue, firstAxisBreak.endValue);\n        // process breaks\n        // TODO does this need to call axisBreaks.update ?\n        $iter.each(axisBreaks.iterator(), function (axisBreak) {\n          var startValue = axisBreak.adjustedStartValue;\n          var endValue = axisBreak.adjustedEndValue;\n          // breaks can't overlap\n          // if break starts before previous break ends\n          if (startValue < previousEndValue_1) {\n            startValue = previousEndValue_1;\n            if (endValue < previousEndValue_1) {\n              endValue = previousEndValue_1;\n            }\n          }\n          axisBreak.adjustedStartValue = startValue;\n          axisBreak.adjustedEndValue = endValue;\n        });\n      }\n    }\n  };\n  Object.defineProperty(Axis.prototype, \"startIndex\", {\n    /**\r\n     * @ignore Exclude from docs\r\n     * @return [description]\r\n     */\n    get: function () {\n      return 0;\n    },\n    /**\r\n     * We need start/end indexes of axes to be 0 - `dataItems.length`.\r\n     *\r\n     * Yes, also for category axis, this helps to avoid jumping of categories\r\n     * while scrolling and does not do a lot of extra work as we use\r\n     * protected `_startIndex` and `_endIndex` when working with items.\r\n     *\r\n     * @hidden\r\n     */\n    /**\r\n     * [startIndex description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param value [description]\r\n     */\n    set: function (value) {},\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Axis.prototype, \"endIndex\", {\n    /**\r\n     * @ignore Exclude from docs\r\n     * @return [description]\r\n     */\n    get: function () {\n      return this.dataItems.length;\n    },\n    /**\r\n     * [endIndex description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param value [description]\r\n     */\n    set: function (value) {},\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Returns a formatted label based on position.\r\n   *\r\n   * Individual axis types should override this method to generate a label\r\n   * that is relevant to axis type.\r\n   *\r\n   * Please note that `position` represents position within axis which may be\r\n   * zoomed and not correspond to Cursor's `position`.\r\n   *\r\n   * To convert Cursor's `position` to Axis' `position` use `toAxisPosition()` method.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v4/tutorials/tracking-cursors-position-via-api/#Tracking_Cursor_s_position} For more information about cursor tracking.\r\n   * @param position  Relative position on axis (0-1)\r\n   * @return Position label\r\n   */\n  Axis.prototype.getPositionLabel = function (position) {\n    return Math.round(position * 100) + \"%x\";\n  };\n  Object.defineProperty(Axis.prototype, \"chart\", {\n    /**\r\n     * @return Chart\r\n     */\n    get: function () {\n      return this._chart;\n    },\n    /**\r\n     * A Chart this Axis belongs to.\r\n     *\r\n     * @param value  Chart\r\n     */\n    set: function (value) {\n      this._chart = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Creates a data item for a Series range.\r\n   *\r\n   * @param series  Target Series\r\n   * @return Range data item\r\n   */\n  Axis.prototype.createSeriesRange = function (series) {\n    var range = this.axisRanges.create();\n    range.component = this;\n    range.axisFill = this.renderer.axisFills.template.clone();\n    range.axisFill.disabled = false;\n    range.axisFill.fillOpacity = 0;\n    range.grid = this.renderer.grid.template.clone();\n    range.grid.disabled = true;\n    range.tick = this.renderer.ticks.template.clone();\n    range.tick.disabled = true;\n    range.label = this.renderer.labels.template.clone();\n    range.label.disabled = true;\n    range.addDisposer(new Disposer(function () {\n      series.axisRanges.removeValue(range);\n    }));\n    series.axisRanges.push(range);\n    return range;\n  };\n  /**\r\n   * Copies all properties and related data from a different instance of Axis.\r\n   *\r\n   * @param source Source Axis\r\n   */\n  Axis.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n    if (this.renderer) {\n      this.renderer.copyFrom(source.renderer);\n    } else {\n      if (source.renderer) {\n        this.renderer = source.renderer.clone();\n        this._disposers.push(this.renderer);\n      }\n    }\n    if (source.title) {\n      if (!this.title) {\n        this.title = source.title.clone();\n        this.title.parent = this;\n      } else {\n        this.title.copyFrom(source.title);\n      }\n      this._disposers.push(this.title);\n    }\n  };\n  /**\r\n   * Resets internal iterator.\r\n   */\n  Axis.prototype.resetIterators = function () {\n    this._dataItemsIterator.reset();\n  };\n  /**\r\n   * Processes JSON-based config before it is applied to the object.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param config  Config\r\n   */\n  Axis.prototype.processConfig = function (config) {\n    if (config) {\n      // Set up axis ranges\n      if ($type.hasValue(config.axisRanges) && $type.isArray(config.axisRanges)) {\n        for (var i = 0, len = config.axisRanges.length; i < len; i++) {\n          var range = config.axisRanges[i];\n          // If `series` is set, we know it's a series range\n          if ($type.hasValue(range[\"series\"])) {\n            if ($type.isString(range[\"series\"])) {\n              if (this.map.hasKey(range[\"series\"])) {\n                //range[\"series\"] = this.map.getKey(range[\"series\"]);\n                config.axisRanges[i] = this.createSeriesRange(this.map.getKey(range[\"series\"]));\n                delete range[\"series\"];\n                config.axisRanges[i].config = range;\n              }\n            }\n          }\n        }\n      }\n    }\n    _super.prototype.processConfig.call(this, config);\n  };\n  /**\r\n   * Ordering function used in JSON setup.\r\n   *\r\n   * @param a  Item A\r\n   * @param b  Item B\r\n   * @return Order\r\n   */\n  Axis.prototype.configOrder = function (a, b) {\n    if (a == b) {\n      return 0;\n    }\n    // last\n    else if (a == \"title\") {\n      return 1;\n    } else if (b == \"title\") {\n      return -1;\n    }\n    // first\n    else if (a == \"component\") {\n      return -1;\n    } else if (b == \"component\") {\n      return 1;\n    } else {\n      return _super.prototype.configOrder.call(this, a, b);\n    }\n  };\n  Object.defineProperty(Axis.prototype, \"startLocation\", {\n    /**\r\n     * @return Location (0-1)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"startLocation\");\n    },\n    /**\r\n     * Axis start location. Works on Date/Category axis, doesn't work on Value axis.\r\n     *\r\n     * * 0 - Full first cell is shown.\r\n     * * 0.5 - Half of first cell is shown.\r\n     * * 1 - None of the first cell is visible. (you probably don't want that)\r\n     *\r\n     * @param value Location (0-1)\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"startLocation\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Axis.prototype, \"endLocation\", {\n    /**\r\n     * @return Location (0-1)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"endLocation\");\n    },\n    /**\r\n     * Axis end location. Works on Date/Category axis, doesn't work on Value axis.\r\n     *\r\n     * * 0 - None of the last cell is shown. (don't do that)\r\n     * * 0.5 - Half of the last cell is shown.\r\n     * * 1 - Full last cell is shown.\r\n     *\r\n     * @param value Location (0-1)\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"endLocation\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Axis.prototype.setDisabled = function (value) {\n    var changed = _super.prototype.setDisabled.call(this, value);\n    if (this.renderer) {\n      this.renderer.gridContainer.disabled = value;\n    }\n    return changed;\n  };\n  Object.defineProperty(Axis.prototype, \"title\", {\n    /**\r\n     * @return Title label\r\n     */\n    get: function () {\n      return this._title;\n    },\n    /**\r\n     * A reference to a [[Label]] element which serves as a title to the axis.\r\n     *\r\n     * When axis is created it aleready has an element, so you can just modify\r\n     * it.\r\n     *\r\n     * Or you can replace it with your own instance of `Label`.\r\n     *\r\n     * @param  value  Title label\r\n     */\n    set: function (value) {\n      if (this._title && this._title != value) {\n        this._title.dispose();\n      }\n      if (value) {\n        this._title = value;\n        value.parent = this;\n        value.shouldClone = false;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Axis.prototype, \"hideTooltipWhileZooming\", {\n    /**\r\n     * @return Hide tooltip while zooming?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"hideTooltipWhileZooming\");\n    },\n    /**\r\n     * Indicates if axis' tooltip should be hidden while axis range is animating\r\n     * (zooming)\r\n     *\r\n     * @default true\r\n     * @since 4.7.16\r\n     * @param  value  Hide tooltip while zooming?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"hideTooltipWhileZooming\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Axis.prototype, \"zoomable\", {\n    /**\r\n     * @return Zoomable?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"zoomable\");\n    },\n    /**\r\n     * Should the axis be zoomed with scrollbar/cursor?\r\n     *\r\n     * @default true\r\n     * @since 4.9.28\r\n     * @param  value  Zoomable?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"zoomable\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Axis;\n}(Component);\nexport { Axis };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"Axis\"] = Axis;\nregistry.registeredClasses[\"AxisDataItem\"] = AxisDataItem;\n/**\r\n * Add default responsive rules\r\n */\n/**\r\n * Disable axis tooltips.\r\n */\ndefaultRules.push({\n  relevant: ResponsiveBreakpoints.maybeXS,\n  state: function (target, stateId) {\n    if (target instanceof Axis && target.tooltip) {\n      var state = target.states.create(stateId);\n      state.properties.cursorTooltipEnabled = false;\n      return state;\n    }\n    return null;\n  }\n});","map":{"version":3,"names":["__extends","Component","Container","DataItem","AxisBreak","Label","Tooltip","SortedListTemplate","List","ListTemplate","ListDisposer","Disposer","MultiDisposer","registry","InterfaceColorSet","$iter","$math","$utils","$number","$array","$type","defaultRules","ResponsiveBreakpoints","AxisDataItem","_super","_this","call","className","applyTheme","Object","defineProperty","prototype","get","_grid","component_1","component","template","grid_1","isRange","axisRanges","grid","disabled","clone","renderer","create","_disposers","push","removeValue","shouldClone","axis","set","remove","sprites","dataItem","undefined","addSprite","enumerable","configurable","_tick","component_2","tick_1","tick","ticks","_label","component_3","label_1","label","labels","virtualParent","_axisFill","component_4","axisFill_1","axisFill","isTemplate","axisFills","_text","text","_mask","_contents","contents","isMeasured","mask","createFill","_axisBreak","axisBreak","dataItems","validate","validateDataElement","appendChildren","appendDataItem","hasProperty","prop","copyFrom","source","bullet","minPosition","maxPosition","setVisibility","value","noChangeValues","visible","_bullet","AxisItemLocation","Axis","_gridCount","_series","autoDispose","_axisItemCount","constructor","Error","hideTooltipWhileZooming","minWidth","minHeight","setPropertyValue","toggleZoomOutButton","zoomable","interfaceColors","title","_dataItemsIterator","ListIterator","createNewItems","tooltip","padding","background","pointerLength","fitPointerToBounds","filters","clear","cornerRadius","fill","getFor","stroke","strokeWidth","fillOpacity","readerHidden","events","on","series","each","hide","preventShow","fillRule","index","isNumber","Math","round","__disabled","opacity","createDataItem","invalidateLayout","iterator","invalidateSeries","invalidate","validateDataElements","ghostLabel","updateLabelElement","start","end","updateGridCount","gridCount","axisLength","minGridDistance","clearCache","validateLayout","axisFullLength","updateAxisLine","updateTooltip","updateBaseGridElement","_prevLength","dispatchImmediately","initRenderer","above","parent","bulletsContainer","gridContainer","updateGridContainer","validateAxisRanges","axisRange","validateBreaks","_axisBreaks","processBreak","event","newValue","breakContainer","registerSeries","moveValue","createMask","_renderer","chart","ghostLabel_1","strokeOpacity","interactionsEnabled","positionToAngle","position","pointToPosition","point","positionToCoordinate","getAnyRangePath","getPositionRangePath","anyToPosition","anyToPoint","x","y","angle","startPosition","endPosition","getPropertyValue","hideTooltip","duration","_tooltipPosition","showTooltipAtPosition","local","_tooltip","length","toAxisPosition","tooltipContainer","tooltipLocation","getCellStartPosition","getCellEndPosition","tooltipPosition","fitToRange","tooltipLocation2","startPoint","positionToPoint","endPoint","currentItemStartPoint","currentItemEndPoint","fullWidthTooltip","width","height","globalPoint","spritePointToSvg","line","getTooltipText","delayedPointTo","show","cursorTooltipEnabled","inversed","toGlobalPosition","pointerOrientation","boundingRectangle","fixDoc","setBounds","spriteRectToSvg","roundPosition","location","axisLocation","_axisRanges","processAxisRange","createAxisBreak","a","b","order","adjustedStartValue","processSeriesDataItems","processSeriesDataItem","axisLetter","postProcessSeriesDataItems","postProcessSeriesDataItem","updateAxisBySeries","hideUnusedDataItems","dataItemsIterator","getSeriesDataItem","findNearest","getAngle","key","stackKey","range","getX","getPositionX","getY","getPositionY","dataChangeUpdate","seriesDataChangeUpdate","adjustDifference","min","max","difference","eachContinue","startValue","endValue","adjustedEndValue","breakSize","intersection","isInBreak","find","fixAxisBreaks","axisBreaks","toArray","update","firstAxisBreak","first","previousEndValue_1","getPositionLabel","_chart","createSeriesRange","addDisposer","resetIterators","reset","processConfig","config","hasValue","isArray","i","len","isString","map","hasKey","getKey","configOrder","setDisabled","changed","_title","dispose","registeredClasses","relevant","maybeXS","state","target","stateId","states","properties"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/charts/axes/Axis.js"],"sourcesContent":["/**\r\n * Base class for all Axis\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component } from \"../../core/Component\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { DataItem } from \"../../core/DataItem\";\r\nimport { AxisBreak } from \"./AxisBreak\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { Tooltip } from \"../../core/elements/Tooltip\";\r\nimport { SortedListTemplate } from \"../../core/utils/SortedList\";\r\nimport { List, ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Disposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $number from \"../../core/utils/Number\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[Axis]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar AxisDataItem = /** @class */ (function (_super) {\r\n    __extends(AxisDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function AxisDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"AxisDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(AxisDataItem.prototype, \"grid\", {\r\n        /**\r\n         * @return Grid element\r\n         */\r\n        get: function () {\r\n            if (!this._grid) {\r\n                var component_1 = this.component;\r\n                if (component_1) {\r\n                    var template = void 0;\r\n                    var grid_1;\r\n                    if (this.isRange) {\r\n                        template = component_1.axisRanges.template.grid;\r\n                        if (template.disabled) {\r\n                            return;\r\n                        }\r\n                        else {\r\n                            grid_1 = template.clone();\r\n                        }\r\n                    }\r\n                    else {\r\n                        template = component_1.renderer.grid.template;\r\n                        if (template.disabled) {\r\n                            return;\r\n                        }\r\n                        else {\r\n                            grid_1 = component_1.renderer.grid.create();\r\n                            this._disposers.push(new Disposer(function () {\r\n                                component_1.renderer.grid.removeValue(grid_1);\r\n                            }));\r\n                        }\r\n                    }\r\n                    this.grid = grid_1;\r\n                    grid_1.shouldClone = false;\r\n                    this._disposers.push(grid_1);\r\n                    grid_1.axis = this.component;\r\n                }\r\n            }\r\n            return this._grid;\r\n        },\r\n        /**\r\n         * A [[Grid]] element associated with this data item.\r\n         *\r\n         * If there is no grid element associated with data item, a new one is\r\n         * created and returned.\r\n         *\r\n         * @param grid  Grid element\r\n         */\r\n        set: function (grid) {\r\n            if (this._grid && this._grid != grid) {\r\n                $array.remove(this.sprites, this._grid);\r\n                this._grid.dataItem = undefined;\r\n            }\r\n            if (grid) {\r\n                if (grid.dataItem && grid.dataItem != this) {\r\n                    $array.remove(grid.dataItem.sprites, grid);\r\n                    grid.dataItem.grid = undefined;\r\n                }\r\n                this.addSprite(grid);\r\n            }\r\n            this._grid = grid;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisDataItem.prototype, \"tick\", {\r\n        /**\r\n         * @return Tick element\r\n         */\r\n        get: function () {\r\n            if (!this._tick) {\r\n                var component_2 = this.component;\r\n                if (component_2) {\r\n                    var template = void 0;\r\n                    var tick_1;\r\n                    if (this.isRange) {\r\n                        template = component_2.axisRanges.template.tick;\r\n                        if (template.disabled) {\r\n                            return;\r\n                        }\r\n                        else {\r\n                            tick_1 = template.clone();\r\n                        }\r\n                    }\r\n                    else {\r\n                        template = component_2.renderer.ticks.template;\r\n                        if (template.disabled) {\r\n                            return;\r\n                        }\r\n                        else {\r\n                            tick_1 = component_2.renderer.ticks.create();\r\n                            this._disposers.push(new Disposer(function () {\r\n                                component_2.renderer.ticks.removeValue(tick_1);\r\n                            }));\r\n                        }\r\n                    }\r\n                    this.tick = tick_1;\r\n                    tick_1.axis = this.component;\r\n                    tick_1.shouldClone = false;\r\n                    this._disposers.push(tick_1);\r\n                }\r\n            }\r\n            return this._tick;\r\n        },\r\n        /**\r\n         * An [[AxisTick]] element associated with this data item.\r\n         *\r\n         * If there is no tick element associated with data item, a new one is\r\n         * created and returned.\r\n         *\r\n         * @param tick  Tick element\r\n         */\r\n        set: function (tick) {\r\n            if (this._tick && this._tick != tick) {\r\n                $array.remove(this.sprites, this._tick);\r\n                this._tick.dataItem = undefined;\r\n            }\r\n            if (tick) {\r\n                if (tick.dataItem && tick.dataItem != this) {\r\n                    $array.remove(tick.dataItem.sprites, tick);\r\n                    tick.dataItem.tick = undefined;\r\n                }\r\n                this.addSprite(tick);\r\n            }\r\n            this._tick = tick;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisDataItem.prototype, \"label\", {\r\n        /**\r\n         * @return Label element\r\n         */\r\n        get: function () {\r\n            if (!this._label) {\r\n                var component_3 = this.component;\r\n                if (component_3) {\r\n                    var template = void 0;\r\n                    var label_1;\r\n                    if (this.isRange) {\r\n                        template = component_3.axisRanges.template.label;\r\n                        if (template.disabled) {\r\n                            return;\r\n                        }\r\n                        else {\r\n                            label_1 = template.clone();\r\n                        }\r\n                    }\r\n                    else {\r\n                        template = component_3.renderer.labels.template;\r\n                        if (template.disabled) {\r\n                            return;\r\n                        }\r\n                        else {\r\n                            label_1 = component_3.renderer.labels.create();\r\n                            this._disposers.push(new Disposer(function () {\r\n                                component_3.renderer.labels.removeValue(label_1);\r\n                            }));\r\n                        }\r\n                    }\r\n                    this._disposers.push(label_1);\r\n                    this.label = label_1;\r\n                    label_1.shouldClone = false;\r\n                    label_1.axis = this.component;\r\n                    label_1.virtualParent = component_3;\r\n                }\r\n            }\r\n            return this._label;\r\n        },\r\n        /**\r\n         * An [[AxisLabel]] element associated with this data item.\r\n         *\r\n         * If there is no label element associated with data item, a new one is\r\n         * created and returned.\r\n         *\r\n         * @param label Label element\r\n         */\r\n        set: function (label) {\r\n            if (this._label && this._label != label) {\r\n                $array.remove(this.sprites, this._label);\r\n                this._label.dataItem = undefined;\r\n            }\r\n            if (label) {\r\n                if (label.dataItem && label.dataItem != this) {\r\n                    $array.remove(label.dataItem.sprites, label);\r\n                    label.dataItem.label = undefined;\r\n                }\r\n                this.addSprite(label);\r\n            }\r\n            this._label = label;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisDataItem.prototype, \"axisFill\", {\r\n        /**\r\n         * @return Label element\r\n         */\r\n        get: function () {\r\n            if (!this._axisFill) {\r\n                var component_4 = this.component;\r\n                if (component_4) {\r\n                    var template = void 0;\r\n                    var axisFill_1;\r\n                    if (this.isRange) {\r\n                        template = component_4.axisRanges.template.axisFill;\r\n                        if (!this.isTemplate && template.disabled) {\r\n                            return;\r\n                        }\r\n                        else {\r\n                            axisFill_1 = template.clone();\r\n                        }\r\n                    }\r\n                    else {\r\n                        template = component_4.renderer.axisFills.template;\r\n                        if (template.disabled) {\r\n                            return;\r\n                        }\r\n                        else {\r\n                            axisFill_1 = component_4.renderer.axisFills.create();\r\n                            this._disposers.push(new Disposer(function () {\r\n                                component_4.renderer.axisFills.removeValue(axisFill_1);\r\n                            }));\r\n                        }\r\n                    }\r\n                    this.axisFill = axisFill_1;\r\n                    axisFill_1.shouldClone = false;\r\n                    this._disposers.push(axisFill_1);\r\n                }\r\n            }\r\n            return this._axisFill;\r\n        },\r\n        /**\r\n         * An [[AxisFill]] associated element with this data item.\r\n         *\r\n         * If there is no fill element associated with data item, a new one is\r\n         * created and returned.\r\n         *\r\n         * @param label Label element\r\n         */\r\n        set: function (axisFill) {\r\n            if (this._axisFill && this._axisFill != axisFill) {\r\n                $array.remove(this.sprites, this._axisFill);\r\n                this._axisFill.dataItem = undefined;\r\n            }\r\n            if (axisFill) {\r\n                if (axisFill.dataItem && axisFill.dataItem != this) {\r\n                    $array.remove(axisFill.dataItem.sprites, axisFill);\r\n                    axisFill.dataItem.axisFill = undefined;\r\n                }\r\n                axisFill.axis = this.component;\r\n                this.addSprite(axisFill);\r\n            }\r\n            this._axisFill = axisFill;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisDataItem.prototype, \"text\", {\r\n        /**\r\n         * @return Text label\r\n         */\r\n        get: function () {\r\n            return this._text;\r\n        },\r\n        /**\r\n         * Text to be used as data item's label.\r\n         *\r\n         * @param text Text label\r\n         */\r\n        set: function (text) {\r\n            this._text = text;\r\n            if (this._label) { // do not use getter, it will create unwanted instances!\r\n                this._label.text = text;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisDataItem.prototype, \"mask\", {\r\n        /**\r\n         * Data item's mask.\r\n         *\r\n         * @return Mask\r\n         */\r\n        get: function () {\r\n            return this._mask;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisDataItem.prototype, \"contents\", {\r\n        /**\r\n         * Returns a [[Container]] to place all visual elements, related to data item\r\n         * in.\r\n         *\r\n         * If there is no Container, a new one is created.\r\n         *\r\n         * @return Contents container\r\n         */\r\n        get: function () {\r\n            if (!this._contents) {\r\n                var contents = new Container();\r\n                this.addSprite(contents);\r\n                contents.isMeasured = false;\r\n                this._contents = contents;\r\n                var component = this.component;\r\n                if (component) {\r\n                    var mask = component.renderer.createFill(this.component);\r\n                    mask.disabled = false;\r\n                    mask.axis = component;\r\n                    this.addSprite(mask);\r\n                    this._mask = mask;\r\n                    contents.mask = mask;\r\n                }\r\n            }\r\n            return this._contents;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisDataItem.prototype, \"axisBreak\", {\r\n        /**\r\n         * @return Axis break\r\n         */\r\n        get: function () {\r\n            return this._axisBreak;\r\n        },\r\n        /**\r\n         * An [[AxisBreak]] this data item falls within.\r\n         *\r\n         * @param axisBreak Axis break\r\n         */\r\n        set: function (axisBreak) {\r\n            if (this._axisBreak) {\r\n                this._axisBreak.dataItems.removeValue(this);\r\n            }\r\n            if (axisBreak) {\r\n                axisBreak.dataItems.push(this);\r\n            }\r\n            this._axisBreak = axisBreak;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Re-draws the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisDataItem.prototype.validate = function () {\r\n        if (this.component) {\r\n            this.component.validateDataElement(this);\r\n        }\r\n    };\r\n    /**\r\n     * Appends data item's elements to the parent [[Container]].\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisDataItem.prototype.appendChildren = function () {\r\n        if (this.component) {\r\n            this.component.appendDataItem(this);\r\n        }\r\n    };\r\n    /**\r\n     * Checks if data item has particular property set.\r\n     *\r\n     * @param prop  Property name\r\n     * @return Property set?\r\n     */\r\n    AxisDataItem.prototype.hasProperty = function (prop) {\r\n        return prop == \"component\" ? true : _super.prototype.hasProperty.call(this, prop);\r\n    };\r\n    /**\r\n     * Copies all parameters from another [[AxisDataItem]].\r\n     *\r\n     * @param source Source AxisDataItem\r\n     */\r\n    AxisDataItem.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.text = source.text;\r\n        if (source.bullet) {\r\n            this.bullet = source.bullet.clone();\r\n        }\r\n        this.minPosition = source.minPosition;\r\n        this.maxPosition = source.maxPosition;\r\n    };\r\n    /**\r\n     * Sets visibility of the Data Item.\r\n     *\r\n     * @param value Data Item\r\n     */\r\n    AxisDataItem.prototype.setVisibility = function (value, noChangeValues) {\r\n        _super.prototype.setVisibility.call(this, value, noChangeValues);\r\n        if (this._contents) {\r\n            this._contents.visible = value;\r\n        }\r\n    };\r\n    Object.defineProperty(AxisDataItem.prototype, \"bullet\", {\r\n        /**\r\n         * @return Bullet\r\n         */\r\n        get: function () {\r\n            return this._bullet;\r\n        },\r\n        /**\r\n         * Set it to an instance of any [[Sprite]]. It will be displayed as an axis\r\n         * bullet in the middle of the cell, or specific value.\r\n         *\r\n         * If you need position bullet relatively to the cell, use [[AxisBullet]]\r\n         * instead. It has a `location` property which can be used to indicate\r\n         * precise relative location within cell/range.\r\n         *\r\n         * Also, [[AxisBullet]] is a [[Container]] so you can push any other element\r\n         * into it.\r\n         *\r\n         * NOTE: `location` is relative to the parent axis range's scope, i.e.\r\n         * between its `date` and `endDate` for [[DateAxis]], or `value`/`endValue`\r\n         * ([[ValueAxis]]), or `category`/`endCategory` ([[categoryAxis]]).\r\n         *\r\n         * ```TypeScript\r\n         * let range = dateAxis.axisRanges.create();\r\n         * range.date = new Date(2018, 0, 5);\r\n         *\r\n         * let flag = new am4plugins_bullets.FlagBullet();\r\n         * flag.label.text = \"Hello\";\r\n         *\r\n         * range.bullet = flag;\r\n         * ```\r\n         * ```JavaScript\r\n         * var range = dateAxis.axisRanges.create();\r\n         * range.date = new Date(2018, 0, 5);\r\n         *\r\n         * var flag = new am4plugins_bullets.FlagBullet();\r\n         * flag.label.text = \"Hello\";\r\n         *\r\n         * range.bullet = flag;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"xAxes\": [{\r\n         *     \"type\": \"DateAxis\",\r\n         *     // ...\r\n         *     \"axisRanges\": [{\r\n         *       \"date\": new Date(2018, 0, 5),\r\n         *       \"bullet: {\r\n         *         \"type\": \"FlagBullet\",\r\n         *         \"label\": {\r\n         *           \"text\": \"Hello\"\r\n         *         }\r\n         *       }\r\n         *     }]\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @since 4.5.9\r\n         * @param  value  Bullet\r\n         */\r\n        set: function (value) {\r\n            if (this._bullet && this._bullet != value) {\r\n                $array.remove(this.sprites, this._bullet);\r\n                this._bullet.dataItem = undefined;\r\n            }\r\n            this._bullet = value;\r\n            if (value) {\r\n                this.addSprite(value);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return AxisDataItem;\r\n}(DataItem));\r\nexport { AxisDataItem };\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines named positions for data item's location within [[Axis]].\r\n */\r\nexport var AxisItemLocation;\r\n(function (AxisItemLocation) {\r\n    AxisItemLocation[AxisItemLocation[\"Start\"] = 0] = \"Start\";\r\n    AxisItemLocation[AxisItemLocation[\"Middle\"] = 0.5] = \"Middle\";\r\n    AxisItemLocation[AxisItemLocation[\"End\"] = 1] = \"End\";\r\n})(AxisItemLocation || (AxisItemLocation = {}));\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A base class for all Axis elements.\r\n *\r\n * @see {@link IAxisEvents} for a list of available Events\r\n * @see {@link IAxisAdapters} for a list of available Adapters\r\n */\r\nvar Axis = /** @class */ (function (_super) {\r\n    __extends(Axis, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Axis() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * Number of Grid elements on the axis.\r\n         */\r\n        _this._gridCount = 10;\r\n        /**\r\n         * A list of [[XYSeries]] that are using this Axis.\r\n         */\r\n        _this._series = new List();\r\n        /**\r\n         * Specifies if axis should be automatically disposed when removing from\r\n         * chart's axis list.\r\n         *\r\n         * @default true\r\n         */\r\n        _this.autoDispose = true;\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this._axisItemCount = 0;\r\n        if (_this.constructor === Axis) {\r\n            throw new Error(\"'Axis' cannot be instantiated directly. Please use a specific axis type.\");\r\n        }\r\n        _this.hideTooltipWhileZooming = true;\r\n        _this.minWidth = 0.0001;\r\n        _this.minHeight = 0.0001;\r\n        _this.className = \"Axis\";\r\n        _this.shouldClone = false;\r\n        _this.setPropertyValue(\"cursorTooltipEnabled\", true);\r\n        _this.toggleZoomOutButton = true;\r\n        _this.zoomable = true;\r\n        var interfaceColors = new InterfaceColorSet();\r\n        // Create title\r\n        _this.title = new Label();\r\n        _this.title.shouldClone = false;\r\n        _this._disposers.push(_this.title);\r\n        _this.setPropertyValue(\"startLocation\", 0);\r\n        _this.setPropertyValue(\"endLocation\", 1);\r\n        // Data item iterator\r\n        _this._dataItemsIterator = new $iter.ListIterator(_this.dataItems, function () { return _this.dataItems.create(); });\r\n        _this._dataItemsIterator.createNewItems = true;\r\n        // Create tooltip\r\n        var tooltip = new Tooltip();\r\n        _this._disposers.push(tooltip);\r\n        tooltip.label.padding(5, 10, 5, 10);\r\n        tooltip.background.pointerLength = 5;\r\n        tooltip.fitPointerToBounds = true;\r\n        tooltip.background.filters.clear();\r\n        // Set virtual parentfor the tooltip so that it can properly inheirt\r\n        // formatters from the axis.\r\n        tooltip.virtualParent = _this;\r\n        // Create background element for the tooltip\r\n        var background = tooltip.background;\r\n        background.cornerRadius = 0;\r\n        background.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n        background.stroke = background.fill;\r\n        background.strokeWidth = 1;\r\n        background.fillOpacity = 1;\r\n        tooltip.label.fill = interfaceColors.getFor(\"alternativeText\");\r\n        _this.tooltip = tooltip;\r\n        // Accessibility\r\n        _this.readerHidden = true;\r\n        _this.events.on(\"rangechangestarted\", function () {\r\n            _this.series.each(function (series) {\r\n                if (series.hideTooltipWhileZooming) {\r\n                    series.tooltip.hide();\r\n                    series.tooltip.preventShow = true;\r\n                }\r\n            });\r\n            if (_this.hideTooltipWhileZooming) {\r\n                _this.tooltip.hide();\r\n                _this.tooltip.preventShow = true;\r\n            }\r\n        }, undefined, false);\r\n        _this.events.on(\"rangechangeended\", function () {\r\n            _this.series.each(function (series) {\r\n                if (series.hideTooltipWhileZooming) {\r\n                    series.tooltip.hide();\r\n                    series.tooltip.preventShow = false;\r\n                }\r\n            });\r\n            if (_this.hideTooltipWhileZooming) {\r\n                _this.tooltip.hide();\r\n                _this.tooltip.preventShow = false;\r\n            }\r\n        }, undefined, false);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Holds reference to a function that accepts a DataItem and its index as\r\n     * parameters.\r\n     *\r\n     * It can either return a fill opacity for a fill, or manipulate data item\r\n     * directly, to create various highlighting scenarios.\r\n     *\r\n     * For example, you can set it up to highlight only weekends on a\r\n     * [[DateAxis]].\r\n     */\r\n    Axis.prototype.fillRule = function (dataItem, index) {\r\n        if (!$type.isNumber(index)) {\r\n            index = dataItem.index;\r\n        }\r\n        if (index / 2 == Math.round(index / 2)) {\r\n            dataItem.axisFill.__disabled = true;\r\n            dataItem.axisFill.opacity = 0;\r\n        }\r\n        else {\r\n            dataItem.axisFill.opacity = 1;\r\n            dataItem.axisFill.__disabled = false;\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    Axis.prototype.createDataItem = function () {\r\n        return new AxisDataItem();\r\n    };\r\n    /**\r\n     * Invalidates layout.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Axis.prototype.invalidateLayout = function () {\r\n        _super.prototype.invalidateLayout.call(this);\r\n        // this puts series after axis in invalidation order also makes series update it's data items in case widht/height of a series is not 100%\r\n        $iter.each(this.series.iterator(), function (series) {\r\n            series.invalidateLayout();\r\n        });\r\n    };\r\n    /**\r\n     * Invalidates series of this axis.\r\n     */\r\n    Axis.prototype.invalidateSeries = function () {\r\n        // this puts series after axis in invalidation order also makes series update it's data items in case widht/height of a series is not 100%\r\n        $iter.each(this.series.iterator(), function (series) {\r\n            series.invalidate();\r\n        });\r\n    };\r\n    /**\r\n     * Override to cancel super call for data element validation.\r\n     * @ignore\r\n     */\r\n    Axis.prototype.validateDataElements = function () {\r\n        this._axisItemCount = 0;\r\n        if (this.ghostLabel) {\r\n            this.renderer.updateLabelElement(this.ghostLabel, this.start, this.end);\r\n            this.ghostLabel.validate();\r\n        }\r\n    };\r\n    /**\r\n     * Recalculates the number of grid items on the axis.\r\n     */\r\n    Axis.prototype.updateGridCount = function () {\r\n        if (this.renderer) {\r\n            var gridCount = this.axisLength / this.renderer.minGridDistance;\r\n            if (gridCount != this._gridCount) {\r\n                this._gridCount = gridCount;\r\n                this.clearCache();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Redraws the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Axis.prototype.validateLayout = function () {\r\n        this.axisFullLength = this.axisLength / (this.end - this.start);\r\n        _super.prototype.validateLayout.call(this);\r\n        this.updateGridCount();\r\n        var renderer = this.renderer;\r\n        if (renderer) {\r\n            renderer.updateAxisLine();\r\n            renderer.updateTooltip();\r\n            renderer.updateBaseGridElement();\r\n        }\r\n        if (this._prevLength != this.axisLength) {\r\n            this.dispatchImmediately(\"lengthchanged\");\r\n            this._prevLength = this.axisLength;\r\n        }\r\n    };\r\n    /**\r\n     * Initializes Axis' renderer.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Axis.prototype.initRenderer = function () {\r\n    };\r\n    /**\r\n     * Adds a data item to the Axis.\r\n     *\r\n     * @param dataItem Data item\r\n     */\r\n    Axis.prototype.appendDataItem = function (dataItem) {\r\n        var renderer = this.renderer;\r\n        var tick = dataItem.tick;\r\n        if (tick) {\r\n            if (tick.above) {\r\n                tick.parent = renderer.bulletsContainer;\r\n            }\r\n            else {\r\n                tick.parent = renderer.gridContainer;\r\n            }\r\n        }\r\n        if (dataItem.label) {\r\n            dataItem.label.parent = renderer;\r\n        }\r\n        var axisFill = dataItem.axisFill;\r\n        if (axisFill) {\r\n            if (axisFill.above) {\r\n                axisFill.parent = renderer.bulletsContainer;\r\n            }\r\n            else {\r\n                axisFill.parent = renderer.gridContainer;\r\n            }\r\n        }\r\n        var grid = dataItem.grid;\r\n        if (grid) {\r\n            if (grid.above) {\r\n                grid.parent = renderer.bulletsContainer;\r\n            }\r\n            else {\r\n                grid.parent = renderer.gridContainer;\r\n            }\r\n        }\r\n        if (dataItem.bullet) {\r\n            dataItem.bullet.parent = renderer.bulletsContainer;\r\n        }\r\n    };\r\n    /**\r\n     * Redraws Axis' related items.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Axis.prototype.validate = function () {\r\n        _super.prototype.validate.call(this);\r\n        this.validateLayout();\r\n        this.renderer.updateGridContainer();\r\n    };\r\n    /**\r\n     * Redars Axis ranges.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Axis.prototype.validateAxisRanges = function () {\r\n        var _this = this;\r\n        $iter.each(this.axisRanges.iterator(), function (axisRange) {\r\n            _this.appendDataItem(axisRange);\r\n            _this.validateDataElement(axisRange);\r\n            if (axisRange.grid) {\r\n                axisRange.grid.validate();\r\n            }\r\n            if (axisRange.tick) {\r\n                axisRange.tick.validate();\r\n            }\r\n            if (axisRange.axisFill) {\r\n                axisRange.axisFill.validate();\r\n            }\r\n            if (axisRange.label) {\r\n                axisRange.label.validate();\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invalidates all axis breaks, so they are redrawn.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Axis.prototype.validateBreaks = function () {\r\n        if (this._axisBreaks) {\r\n            $iter.each(this._axisBreaks.iterator(), function (axisBreak) {\r\n                axisBreak.invalidate();\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Associates an Axis break with this Axis, after it is inserted into\r\n     * `axisBreaks`.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event Event\r\n     */\r\n    Axis.prototype.processBreak = function (event) {\r\n        var axisBreak = event.newValue;\r\n        axisBreak.parent = this.renderer.breakContainer;\r\n        axisBreak.axis = this;\r\n    };\r\n    /**\r\n     * Registers a [[XYSeries]] element with this Axis.\r\n     *\r\n     * Returns a [[Disposer]] for all events, added to Series for watching\r\n     * changes in Axis, and vice versa.\r\n     * @ignore\r\n     * @param series  Series\r\n     * @return Event disposer\r\n     */\r\n    Axis.prototype.registerSeries = function (series) {\r\n        var _this = this;\r\n        this.series.moveValue(series);\r\n        return new MultiDisposer([\r\n            new Disposer(function () {\r\n                _this.series.removeValue(series);\r\n            }),\r\n            this.events.on(\"lengthchanged\", series.invalidate, series, false),\r\n            this.events.on(\"lengthchanged\", series.createMask, series, false),\r\n            this.events.on(\"startchanged\", series.invalidate, series, false),\r\n            this.events.on(\"endchanged\", series.invalidate, series, false),\r\n        ]);\r\n    };\r\n    Object.defineProperty(Axis.prototype, \"renderer\", {\r\n        /**\r\n         * @return Renderer\r\n         */\r\n        get: function () {\r\n            return this._renderer;\r\n        },\r\n        /**\r\n         * An [[AxisRenderer]] to be used to render this Axis.\r\n         *\r\n         * Please note that most of the settings, related to Axis' appearance are set\r\n         * via its renderer. Not directly on the Axis.\r\n         *\r\n         * E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * axis.renderer.inside = true;\r\n         * axis.renderer.minLabelPosition = 0.1;\r\n         * axis.renderer.maxLabelPosition = 0.9;\r\n         * ```\r\n         * ```JavaScript\r\n         * axis.renderer.inside = true;\r\n         * axis.renderer.minLabelPosition = 0.1;\r\n         * axis.renderer.maxLabelPosition = 0.9;\r\n         * ```\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/} for more info\r\n         * @param renderer  Renderer\r\n         */\r\n        set: function (renderer) {\r\n            if (renderer != this._renderer) {\r\n                this._renderer = renderer;\r\n                renderer.chart = this.chart;\r\n                renderer.axis = this;\r\n                renderer.parent = this;\r\n                this.title.parent = this; // we add title to axis and set layout in renderer to avoid one extra container, as otherwise axis container would be used for holding renderer only\r\n                this.initRenderer();\r\n                this._disposers.push(renderer.gridContainer.events.on(\"maxsizechanged\", this.invalidate, this, false));\r\n                var ghostLabel_1 = this.renderer.labels.create();\r\n                this._disposers.push(ghostLabel_1);\r\n                ghostLabel_1.dataItem = this.dataItems.template.clone(); // just for the adapters not to fail\r\n                ghostLabel_1.text = \"L\";\r\n                ghostLabel_1.parent = this.renderer;\r\n                ghostLabel_1.shouldClone = false;\r\n                ghostLabel_1.fillOpacity = 0;\r\n                ghostLabel_1.opacity = 0;\r\n                ghostLabel_1.strokeOpacity = 0;\r\n                ghostLabel_1.interactionsEnabled = false;\r\n                ghostLabel_1.validate();\r\n                this.ghostLabel = ghostLabel_1;\r\n                this.events.on(\"beforedatavalidated\", function () {\r\n                    ghostLabel_1.text = \"L\";\r\n                }, undefined, false);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Converts a relative position to angle. (for circular axes)\r\n     *\r\n     * @param position Position (0-1)\r\n     * @return Angle\r\n     */\r\n    Axis.prototype.positionToAngle = function (position) {\r\n        return this.renderer.positionToAngle(position);\r\n    };\r\n    /**\r\n     * Converts pixel coordinates to a relative position. (0-1)\r\n     *\r\n     * @param point  Coorinates (px)\r\n     * @return Position (0-1)\r\n     */\r\n    Axis.prototype.pointToPosition = function (point) {\r\n        return this.renderer.pointToPosition(point);\r\n    };\r\n    /**\r\n     * Converts relative position to coordinate.\r\n     *\r\n     * @since 4.7.15\r\n     * @param position (0-1)\r\n     * @return coordinate (px)\r\n     */\r\n    Axis.prototype.positionToCoordinate = function (position) {\r\n        return this.renderer.positionToCoordinate(position);\r\n    };\r\n    /**\r\n     * [getAnyRangePath description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param start  [description]\r\n     * @param end    [description]\r\n     * @return [description]\r\n     */\r\n    Axis.prototype.getAnyRangePath = function (start, end) {\r\n        return this.renderer.getPositionRangePath(start, end);\r\n    };\r\n    /**\r\n     * Converts any positional parameter to a relative position on axis.\r\n     *\r\n     * @todo Description (review)\r\n     * @param value  Pisition\r\n     * @return Position (0-1)\r\n     */\r\n    Axis.prototype.anyToPosition = function (value) {\r\n        return 0;\r\n    };\r\n    /**\r\n     * Converts any positional parameter to a relative position on axis.\r\n     *\r\n     * @todo Description (review)\r\n     * @param value  Pisition\r\n     * @return Orientation point\r\n     */\r\n    Axis.prototype.anyToPoint = function (value) {\r\n        return { x: 0, y: 0, angle: 0 };\r\n    };\r\n    /**\r\n     * [getPositionRangePath description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param startPosition [description]\r\n     * @param endPosition   [description]\r\n     * @return [description]\r\n     */\r\n    Axis.prototype.getPositionRangePath = function (startPosition, endPosition) {\r\n        if (this.renderer) {\r\n            return this.renderer.getPositionRangePath(startPosition, endPosition);\r\n        }\r\n        return \"\";\r\n    };\r\n    Object.defineProperty(Axis.prototype, \"axisLength\", {\r\n        /**\r\n         * Actual axis length in pixels.\r\n         *\r\n         * @return Axis length (px)\r\n         */\r\n        get: function () {\r\n            if (this.renderer) {\r\n                return this.renderer.axisLength;\r\n            }\r\n            return 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Axis.prototype, \"cursorTooltipEnabled\", {\r\n        /**\r\n         * @return Display tooltip?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"cursorTooltipEnabled\");\r\n        },\r\n        /**\r\n         * Indicates if axis should display a tooltip for chart's cursor.\r\n         *\r\n         * @param value Display tooltip?\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"cursorTooltipEnabled\", value)) {\r\n                if (value && this.renderer) {\r\n                    this.renderer.updateTooltip();\r\n                }\r\n                else if (this.tooltip) {\r\n                    this.tooltip.hide(0);\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Axis.prototype, \"toggleZoomOutButton\", {\r\n        /**\r\n         * @return Toggle zoom out button?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"toggleZoomOutButton\");\r\n        },\r\n        /**\r\n         * Normally, when axis is zoomed in, a zoom out button is shown by a chart,\r\n         * and vice versa: when axis is zoomed out completely, zoom out button is\r\n         * hidden.\r\n         *\r\n         * Setting this to `false` will disable this behavior. Zooming in our out\r\n         * this axis will not reveal or hide zoom out button.\r\n         *\r\n         * @default true\r\n         * @since 4.6.2\r\n         * @param  value  Toggle zoom out button?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"toggleZoomOutButton\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Hides element's [[Tooltip]].\r\n     *\r\n     * @see {@link Tooltip}\r\n     */\r\n    Axis.prototype.hideTooltip = function (duration) {\r\n        _super.prototype.hideTooltip.call(this, duration);\r\n        this._tooltipPosition = undefined;\r\n    };\r\n    /**\r\n     * Shows Axis tooltip at specific relative position within Axis. (0-1)\r\n     *\r\n     * @param position Position (0-1)\r\n     * @param local or global position\r\n     */\r\n    Axis.prototype.showTooltipAtPosition = function (position, local) {\r\n        var tooltip = this._tooltip;\r\n        if (!tooltip || this.dataItems.length <= 0) {\r\n            this._tooltipPosition = undefined;\r\n        }\r\n        else {\r\n            if (!local) {\r\n                position = this.toAxisPosition(position);\r\n            }\r\n            if (!$type.isNumber(position) || position < this.start || position > this.end) {\r\n                tooltip.hide(0);\r\n                this._tooltipPosition = undefined;\r\n                return;\r\n            }\r\n            var renderer = this.renderer;\r\n            //@todo: think of how to solve this better\r\n            if (!tooltip.parent) {\r\n                tooltip.parent = this.tooltipContainer;\r\n            }\r\n            var tooltipLocation = renderer.tooltipLocation;\r\n            var startPosition = this.getCellStartPosition(position);\r\n            var endPosition = this.getCellEndPosition(position);\r\n            if (this.tooltipPosition == \"fixed\") {\r\n                position = startPosition + (endPosition - startPosition) * tooltipLocation;\r\n            }\r\n            position = $math.fitToRange(position, this.start, this.end);\r\n            if (this._tooltipPosition != position) {\r\n                this._tooltipPosition = position;\r\n                var tooltipLocation2 = renderer.tooltipLocation2;\r\n                var startPoint = renderer.positionToPoint(startPosition, tooltipLocation2);\r\n                var endPoint = renderer.positionToPoint(endPosition, tooltipLocation2);\r\n                // save values so cursor could use them\r\n                this.currentItemStartPoint = startPoint;\r\n                this.currentItemEndPoint = endPoint;\r\n                if (renderer.fullWidthTooltip) {\r\n                    tooltip.width = endPoint.x - startPoint.x;\r\n                    tooltip.height = endPoint.y - startPoint.y;\r\n                }\r\n                var point = renderer.positionToPoint(position, tooltipLocation2);\r\n                var globalPoint = $utils.spritePointToSvg(point, this.renderer.line);\r\n                tooltip.text = this.getTooltipText(position);\r\n                if (tooltip.text) {\r\n                    tooltip.delayedPointTo(globalPoint);\r\n                    tooltip.show();\r\n                }\r\n            }\r\n            if (!this.cursorTooltipEnabled || this.tooltip.disabled) {\r\n                tooltip.hide(0);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Converts relative position (0-1) to Axis position with zoom level and\r\n     * inversed taken into account.\r\n     *\r\n     * @param position Global position (0-1)\r\n     * @return Position within Axis (0-1)\r\n     */\r\n    Axis.prototype.toAxisPosition = function (position) {\r\n        position = this.renderer.toAxisPosition(position);\r\n        if (position == undefined) {\r\n            return;\r\n        }\r\n        position = position * (this.end - this.start);\r\n        if (this.renderer.inversed) {\r\n            position = this.end - position;\r\n        }\r\n        else {\r\n            position = this.start + position;\r\n        }\r\n        return position;\r\n    };\r\n    /**\r\n     * Converts position on the axis with zoom level and\r\n     * inversed taken into account to global position.\r\n     *\r\n     * @param position Axis position (0-1)\r\n     * @return Global position (0-1)\r\n     */\r\n    Axis.prototype.toGlobalPosition = function (position) {\r\n        if (this.renderer.inversed) {\r\n            position = this.end - position;\r\n        }\r\n        else {\r\n            position = position - this.start;\r\n        }\r\n        return position / (this.end - this.start);\r\n    };\r\n    /**\r\n     * Returns text to be used for cursor's Axis tooltip.\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param position  Position coordinate (px)\r\n     * @return Label text\r\n     */\r\n    Axis.prototype.getTooltipText = function (position) {\r\n        return;\r\n    };\r\n    /**\r\n     * Updates Axis' tooltip's position and possibly size, and pointer (stem)\r\n     * place.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param pointerOrientation  Pointer (stem) orientation\r\n     * @param boundingRectangle   A rectangle for tooltip to fit within\r\n     */\r\n    Axis.prototype.updateTooltip = function (pointerOrientation, boundingRectangle) {\r\n        var tooltip = this._tooltip;\r\n        if (tooltip) {\r\n            tooltip.fixDoc = false;\r\n            tooltip.pointerOrientation = pointerOrientation;\r\n            tooltip.setBounds($utils.spriteRectToSvg(boundingRectangle, this.renderer.line));\r\n        }\r\n    };\r\n    /**\r\n     * [roundPosition description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param position  Relative position\r\n     * @param location  Location on axis\r\n     * @return Rounded position\r\n     */\r\n    Axis.prototype.roundPosition = function (position, location, axisLocation) {\r\n        return position;\r\n    };\r\n    /**\r\n     * [getCellStartPosition description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param position [description]\r\n     * @return [description]\r\n     */\r\n    Axis.prototype.getCellStartPosition = function (position) {\r\n        return position;\r\n    };\r\n    /**\r\n     * [getCellEndPosition description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param position [description]\r\n     * @return [description]\r\n     */\r\n    Axis.prototype.getCellEndPosition = function (position) {\r\n        return position;\r\n    };\r\n    Object.defineProperty(Axis.prototype, \"axisRanges\", {\r\n        /**\r\n         * A list of axis ranges for this Axis.\r\n         *\r\n         * @return Axis ranges\r\n         */\r\n        get: function () {\r\n            if (!this._axisRanges) {\r\n                var dataItem = this.createDataItem();\r\n                dataItem.isRange = true;\r\n                dataItem.axisFill = this.renderer.axisFills.template.clone();\r\n                dataItem.grid = this.renderer.grid.template.clone();\r\n                dataItem.tick = this.renderer.ticks.template.clone();\r\n                dataItem.label = this.renderer.labels.template.clone();\r\n                dataItem.isTemplate = true;\r\n                dataItem.component = this;\r\n                dataItem.axisFill.disabled = false;\r\n                dataItem.tick.disabled = false;\r\n                dataItem.grid.disabled = false;\r\n                dataItem.label.disabled = false;\r\n                this._axisRanges = new ListTemplate(dataItem);\r\n                this._axisRanges.events.on(\"inserted\", this.processAxisRange, this, false);\r\n                this._disposers.push(new ListDisposer(this._axisRanges));\r\n                this._disposers.push(this._axisRanges.template);\r\n            }\r\n            return this._axisRanges;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Decorates an axis range after it has been added to the axis range list.\r\n     *\r\n     * @param event Event\r\n     */\r\n    Axis.prototype.processAxisRange = function (event) {\r\n        var axisRange = event.newValue;\r\n        axisRange.component = this;\r\n        axisRange.isRange = true;\r\n    };\r\n    Object.defineProperty(Axis.prototype, \"axisBreaks\", {\r\n        /**\r\n         * A list of axis breaks on this Axis.\r\n         *\r\n         * @return Axis breaks.\r\n         */\r\n        get: function () {\r\n            if (!this._axisBreaks) {\r\n                this._axisBreaks = new SortedListTemplate(this.createAxisBreak(), function (a, b) {\r\n                    return $number.order(a.adjustedStartValue, b.adjustedStartValue);\r\n                });\r\n                this._axisBreaks.events.on(\"inserted\", this.processBreak, this, false);\r\n                this._disposers.push(new ListDisposer(this._axisBreaks));\r\n                this._disposers.push(this._axisBreaks.template);\r\n            }\r\n            return this._axisBreaks;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new axis break.\r\n     *\r\n     * @return Axis break\r\n     */\r\n    Axis.prototype.createAxisBreak = function () {\r\n        return new AxisBreak();\r\n    };\r\n    Object.defineProperty(Axis.prototype, \"series\", {\r\n        /**\r\n         * A list of Series currently associated with this Axis.\r\n         *\r\n         * @return Series\r\n         */\r\n        get: function () {\r\n            if (!this._series) {\r\n                this._series = new List();\r\n            }\r\n            return this._series;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Processes Series' data items.\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Axis.prototype.processSeriesDataItems = function () {\r\n    };\r\n    /**\r\n     * Processes Series' single data item.\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem Data item\r\n     */\r\n    Axis.prototype.processSeriesDataItem = function (dataItem, axisLetter) {\r\n    };\r\n    /**\r\n     * Post-processes Serie's data items.\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Axis.prototype.postProcessSeriesDataItems = function (series) {\r\n    };\r\n    /**\r\n     * Post-processes Serie's single data item.\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem Data item\r\n     */\r\n    Axis.prototype.postProcessSeriesDataItem = function (dataItem) {\r\n    };\r\n    //\r\n    /**\r\n     * Updates Axis based on all Series that might influence it.\r\n     *\r\n     * Called by Series after Series data is validated.\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Axis.prototype.updateAxisBySeries = function () {\r\n    };\r\n    /**\r\n     * Hides unused data items.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Axis.prototype.hideUnusedDataItems = function () {\r\n        var _this = this;\r\n        // hide all unused\r\n        var dataItemsIterator = this._dataItemsIterator;\r\n        dataItemsIterator.createNewItems = false;\r\n        $iter.each(dataItemsIterator.iterator(), function (dataItem) {\r\n            _this.validateDataElement(dataItem); // solves shrinking\r\n            dataItem.__disabled = true;\r\n        });\r\n        dataItemsIterator.clear();\r\n        dataItemsIterator.createNewItems = true;\r\n    };\r\n    /**\r\n     * Returns a Series' data item that corresponds to specific position on Axis.\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param series    Series\r\n     * @param position  Position (0-1)\r\n     * @param findNearest  Should axis try to find nearest tooltip if there is no data item at exact position\r\n     * @return Data item\r\n     */\r\n    Axis.prototype.getSeriesDataItem = function (series, position, findNearest) {\r\n        return;\r\n    };\r\n    /**\r\n     * Returns an angle that corresponds to specific position on axis.\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param dataItem  Data item\r\n     * @param key       ???\r\n     * @param location  Location\r\n     * @param stackKey  ???\r\n     * @return Angle\r\n     */\r\n    Axis.prototype.getAngle = function (dataItem, key, location, stackKey, range) {\r\n        return;\r\n    };\r\n    /**\r\n     * [getX description]\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param dataItem [description]\r\n     * @param key      [description]\r\n     * @param location [description]\r\n     * @param stackKey [description]\r\n     * @return [description]\r\n     */\r\n    Axis.prototype.getX = function (dataItem, key, location, stackKey, range) {\r\n        return;\r\n    };\r\n    /**\r\n     * [getX description]\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param dataItem [description]\r\n     * @param key      [description]\r\n     * @param location [description]\r\n     * @param stackKey [description]\r\n     * @return [description]\r\n     */\r\n    Axis.prototype.getPositionX = function (dataItem, key, location, stackKey, range) {\r\n        return;\r\n    };\r\n    /**\r\n     * [getY description]\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param dataItem [description]\r\n     * @param key      [description]\r\n     * @param location [description]\r\n     * @param stackKey [description]\r\n     * @return [description]\r\n     */\r\n    Axis.prototype.getY = function (dataItem, key, location, stackKey, range) {\r\n        return;\r\n    };\r\n    /**\r\n     * [getY description]\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param dataItem [description]\r\n     * @param key      [description]\r\n     * @param location [description]\r\n     * @param stackKey [description]\r\n     * @return [description]\r\n     */\r\n    Axis.prototype.getPositionY = function (dataItem, key, location, stackKey, range) {\r\n        return;\r\n    };\r\n    Object.defineProperty(Axis.prototype, \"basePoint\", {\r\n        /**\r\n         * Coordinates of the actual axis start.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Base point coordinates\r\n         */\r\n        get: function () {\r\n            return { x: 0, y: 0 };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * [dataChangeUpdate description]\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     */\r\n    Axis.prototype.dataChangeUpdate = function () {\r\n    };\r\n    /**\r\n     * [dataChangeUpdate description]\r\n     *\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     */\r\n    Axis.prototype.seriesDataChangeUpdate = function (series) {\r\n    };\r\n    /**\r\n     * Removes axis breaks that fall between `min` and `max` (???)\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param min  Start value\r\n     * @param max  End value\r\n     * @return Spread o\r\n     */\r\n    Axis.prototype.adjustDifference = function (min, max) {\r\n        var difference = max - min;\r\n        if ($type.isNumber(difference)) {\r\n            if (this._axisBreaks) {\r\n                $iter.eachContinue(this._axisBreaks.iterator(), function (axisBreak) {\r\n                    var startValue = axisBreak.adjustedStartValue;\r\n                    var endValue = axisBreak.adjustedEndValue;\r\n                    if ($type.isNumber(startValue) && $type.isNumber(endValue)) {\r\n                        // breaks are sorted, we don't need go further anymore\r\n                        if (startValue > max) {\r\n                            return false;\r\n                        }\r\n                        if (endValue >= min) {\r\n                            if ($type.isNumber(startValue) && $type.isNumber(endValue)) {\r\n                                var breakSize = axisBreak.breakSize;\r\n                                var intersection = $math.intersection({ start: startValue, end: endValue }, { start: min, end: max });\r\n                                if (intersection) {\r\n                                    difference -= (intersection.end - intersection.start) * (1 - breakSize);\r\n                                }\r\n                            }\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n            }\r\n            return difference;\r\n        }\r\n    };\r\n    /**\r\n     * Checks if specific value falls within a break.\r\n     *\r\n     * Returns [[AxisBreak]] the value falls into.\r\n     *\r\n     * @param value  Value to check\r\n     * @return Axis break\r\n     */\r\n    Axis.prototype.isInBreak = function (value) {\r\n        if (this._axisBreaks) {\r\n            return $iter.find(this._axisBreaks.iterator(), function (axisBreak) {\r\n                return value >= axisBreak.adjustedStartValue &&\r\n                    value <= axisBreak.adjustedEndValue;\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * [fixAxisBreaks description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     */\r\n    Axis.prototype.fixAxisBreaks = function () {\r\n        var _this = this;\r\n        if (this._axisBreaks) {\r\n            var axisBreaks = this._axisBreaks;\r\n            if (axisBreaks.length > 0) {\r\n                // first make sure that startValue is <= end value\r\n                // This needs to make a copy of axisBreaks because it mutates the list while traversing\r\n                // TODO very inefficient\r\n                $array.each($iter.toArray(axisBreaks.iterator()), function (axisBreak) {\r\n                    var startValue = $math.min(axisBreak.startValue, axisBreak.endValue);\r\n                    var endValue = $math.max(axisBreak.startValue, axisBreak.endValue);\r\n                    axisBreak.adjustedStartValue = startValue;\r\n                    axisBreak.adjustedEndValue = endValue;\r\n                    _this._axisBreaks.update(axisBreak);\r\n                });\r\n                var firstAxisBreak = axisBreaks.first;\r\n                var previousEndValue_1 = Math.min(firstAxisBreak.startValue, firstAxisBreak.endValue);\r\n                // process breaks\r\n                // TODO does this need to call axisBreaks.update ?\r\n                $iter.each(axisBreaks.iterator(), function (axisBreak) {\r\n                    var startValue = axisBreak.adjustedStartValue;\r\n                    var endValue = axisBreak.adjustedEndValue;\r\n                    // breaks can't overlap\r\n                    // if break starts before previous break ends\r\n                    if (startValue < previousEndValue_1) {\r\n                        startValue = previousEndValue_1;\r\n                        if (endValue < previousEndValue_1) {\r\n                            endValue = previousEndValue_1;\r\n                        }\r\n                    }\r\n                    axisBreak.adjustedStartValue = startValue;\r\n                    axisBreak.adjustedEndValue = endValue;\r\n                });\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(Axis.prototype, \"startIndex\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return 0;\r\n        },\r\n        /**\r\n         * We need start/end indexes of axes to be 0 - `dataItems.length`.\r\n         *\r\n         * Yes, also for category axis, this helps to avoid jumping of categories\r\n         * while scrolling and does not do a lot of extra work as we use\r\n         * protected `_startIndex` and `_endIndex` when working with items.\r\n         *\r\n         * @hidden\r\n         */\r\n        /**\r\n         * [startIndex description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @param value [description]\r\n         */\r\n        set: function (value) {\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Axis.prototype, \"endIndex\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this.dataItems.length;\r\n        },\r\n        /**\r\n         * [endIndex description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @param value [description]\r\n         */\r\n        set: function (value) {\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a formatted label based on position.\r\n     *\r\n     * Individual axis types should override this method to generate a label\r\n     * that is relevant to axis type.\r\n     *\r\n     * Please note that `position` represents position within axis which may be\r\n     * zoomed and not correspond to Cursor's `position`.\r\n     *\r\n     * To convert Cursor's `position` to Axis' `position` use `toAxisPosition()` method.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/tutorials/tracking-cursors-position-via-api/#Tracking_Cursor_s_position} For more information about cursor tracking.\r\n     * @param position  Relative position on axis (0-1)\r\n     * @return Position label\r\n     */\r\n    Axis.prototype.getPositionLabel = function (position) {\r\n        return Math.round(position * 100) + \"%x\";\r\n    };\r\n    Object.defineProperty(Axis.prototype, \"chart\", {\r\n        /**\r\n         * @return Chart\r\n         */\r\n        get: function () {\r\n            return this._chart;\r\n        },\r\n        /**\r\n         * A Chart this Axis belongs to.\r\n         *\r\n         * @param value  Chart\r\n         */\r\n        set: function (value) {\r\n            this._chart = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a data item for a Series range.\r\n     *\r\n     * @param series  Target Series\r\n     * @return Range data item\r\n     */\r\n    Axis.prototype.createSeriesRange = function (series) {\r\n        var range = this.axisRanges.create();\r\n        range.component = this;\r\n        range.axisFill = this.renderer.axisFills.template.clone();\r\n        range.axisFill.disabled = false;\r\n        range.axisFill.fillOpacity = 0;\r\n        range.grid = this.renderer.grid.template.clone();\r\n        range.grid.disabled = true;\r\n        range.tick = this.renderer.ticks.template.clone();\r\n        range.tick.disabled = true;\r\n        range.label = this.renderer.labels.template.clone();\r\n        range.label.disabled = true;\r\n        range.addDisposer(new Disposer(function () {\r\n            series.axisRanges.removeValue(range);\r\n        }));\r\n        series.axisRanges.push(range);\r\n        return range;\r\n    };\r\n    /**\r\n     * Copies all properties and related data from a different instance of Axis.\r\n     *\r\n     * @param source Source Axis\r\n     */\r\n    Axis.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        if (this.renderer) {\r\n            this.renderer.copyFrom(source.renderer);\r\n        }\r\n        else {\r\n            if (source.renderer) {\r\n                this.renderer = source.renderer.clone();\r\n                this._disposers.push(this.renderer);\r\n            }\r\n        }\r\n        if (source.title) {\r\n            if (!this.title) {\r\n                this.title = source.title.clone();\r\n                this.title.parent = this;\r\n            }\r\n            else {\r\n                this.title.copyFrom(source.title);\r\n            }\r\n            this._disposers.push(this.title);\r\n        }\r\n    };\r\n    /**\r\n     * Resets internal iterator.\r\n     */\r\n    Axis.prototype.resetIterators = function () {\r\n        this._dataItemsIterator.reset();\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    Axis.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            // Set up axis ranges\r\n            if ($type.hasValue(config.axisRanges) && $type.isArray(config.axisRanges)) {\r\n                for (var i = 0, len = config.axisRanges.length; i < len; i++) {\r\n                    var range = config.axisRanges[i];\r\n                    // If `series` is set, we know it's a series range\r\n                    if ($type.hasValue(range[\"series\"])) {\r\n                        if ($type.isString(range[\"series\"])) {\r\n                            if (this.map.hasKey(range[\"series\"])) {\r\n                                //range[\"series\"] = this.map.getKey(range[\"series\"]);\r\n                                config.axisRanges[i] = this.createSeriesRange(this.map.getKey(range[\"series\"]));\r\n                                delete (range[\"series\"]);\r\n                                config.axisRanges[i].config = range;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    /**\r\n     * Ordering function used in JSON setup.\r\n     *\r\n     * @param a  Item A\r\n     * @param b  Item B\r\n     * @return Order\r\n     */\r\n    Axis.prototype.configOrder = function (a, b) {\r\n        if (a == b) {\r\n            return 0;\r\n        }\r\n        // last\r\n        else if (a == \"title\") {\r\n            return 1;\r\n        }\r\n        else if (b == \"title\") {\r\n            return -1;\r\n        }\r\n        // first\r\n        else if (a == \"component\") {\r\n            return -1;\r\n        }\r\n        else if (b == \"component\") {\r\n            return 1;\r\n        }\r\n        else {\r\n            return _super.prototype.configOrder.call(this, a, b);\r\n        }\r\n    };\r\n    Object.defineProperty(Axis.prototype, \"startLocation\", {\r\n        /**\r\n         * @return Location (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startLocation\");\r\n        },\r\n        /**\r\n         * Axis start location. Works on Date/Category axis, doesn't work on Value axis.\r\n         *\r\n         * * 0 - Full first cell is shown.\r\n         * * 0.5 - Half of first cell is shown.\r\n         * * 1 - None of the first cell is visible. (you probably don't want that)\r\n         *\r\n         * @param value Location (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"startLocation\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Axis.prototype, \"endLocation\", {\r\n        /**\r\n         * @return Location (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endLocation\");\r\n        },\r\n        /**\r\n         * Axis end location. Works on Date/Category axis, doesn't work on Value axis.\r\n         *\r\n         * * 0 - None of the last cell is shown. (don't do that)\r\n         * * 0.5 - Half of the last cell is shown.\r\n         * * 1 - Full last cell is shown.\r\n         *\r\n         * @param value Location (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"endLocation\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Axis.prototype.setDisabled = function (value) {\r\n        var changed = _super.prototype.setDisabled.call(this, value);\r\n        if (this.renderer) {\r\n            this.renderer.gridContainer.disabled = value;\r\n        }\r\n        return changed;\r\n    };\r\n    Object.defineProperty(Axis.prototype, \"title\", {\r\n        /**\r\n         * @return Title label\r\n         */\r\n        get: function () {\r\n            return this._title;\r\n        },\r\n        /**\r\n         * A reference to a [[Label]] element which serves as a title to the axis.\r\n         *\r\n         * When axis is created it aleready has an element, so you can just modify\r\n         * it.\r\n         *\r\n         * Or you can replace it with your own instance of `Label`.\r\n         *\r\n         * @param  value  Title label\r\n         */\r\n        set: function (value) {\r\n            if (this._title && this._title != value) {\r\n                this._title.dispose();\r\n            }\r\n            if (value) {\r\n                this._title = value;\r\n                value.parent = this;\r\n                value.shouldClone = false;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Axis.prototype, \"hideTooltipWhileZooming\", {\r\n        /**\r\n         * @return Hide tooltip while zooming?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"hideTooltipWhileZooming\");\r\n        },\r\n        /**\r\n         * Indicates if axis' tooltip should be hidden while axis range is animating\r\n         * (zooming)\r\n         *\r\n         * @default true\r\n         * @since 4.7.16\r\n         * @param  value  Hide tooltip while zooming?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"hideTooltipWhileZooming\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Axis.prototype, \"zoomable\", {\r\n        /**\r\n         * @return Zoomable?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"zoomable\");\r\n        },\r\n        /**\r\n         * Should the axis be zoomed with scrollbar/cursor?\r\n         *\r\n         * @default true\r\n         * @since 4.9.28\r\n         * @param  value  Zoomable?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"zoomable\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Axis;\r\n}(Component));\r\nexport { Axis };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Axis\"] = Axis;\r\nregistry.registeredClasses[\"AxisDataItem\"] = AxisDataItem;\r\n/**\r\n * Add default responsive rules\r\n */\r\n/**\r\n * Disable axis tooltips.\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.maybeXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Axis && target.tooltip) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.cursorTooltipEnabled = false;\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}