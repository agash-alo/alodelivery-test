{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { TargetedEventDispatcher } from \"../utils/EventDispatcher\";\nimport { MultiDisposer, CounterDisposer } from \"../utils/Disposer\";\n/**\r\n * Represents an Event Dispatcher for [[InteractionObject]].\r\n *\r\n * Besides regular [[EventDispatcher]] functionality it adds new events with\r\n * direct application to DOM nodes. Primarily used to handle keyboard events,\r\n * but can turn into something else moving forward.\r\n */\nvar InteractionObjectEventDispatcher = /** @class */function (_super) {\n  __extends(InteractionObjectEventDispatcher, _super);\n  function InteractionObjectEventDispatcher() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\r\n     * Holds a list of Disposers for DOM events added.\r\n     */\n    _this._domEvents = {};\n    return _this;\n  }\n  /**\r\n   * Adds a DOM event and returns Disposer.\r\n   *\r\n   * @return Disposer\r\n   */\n  InteractionObjectEventDispatcher.prototype._addDOMEvent = function (type, key, listener, context) {\n    var _this = this;\n    if (!this._domEvents[type]) {\n      var callback_1 = function (e) {\n        listener.call(context, key, e);\n      };\n      this.target.element.addEventListener(type, callback_1, false);\n      this._domEvents[type] = new CounterDisposer(function () {\n        delete _this._domEvents[type];\n        _this.target.element.removeEventListener(type, callback_1, false);\n      });\n    }\n    return this._domEvents[type].increment();\n  };\n  InteractionObjectEventDispatcher.prototype._dispatchKeyboardEvent = function (key, ev) {\n    // TODO use this.dispatchImmediately ?\n    if (this.target.events.isEnabled(key)) {\n      this.target.events.dispatchImmediately(key, {\n        type: key,\n        target: this.target,\n        event: ev\n      });\n    }\n  };\n  InteractionObjectEventDispatcher.prototype._on = function (once, type, callback, context, shouldClone, dispatch) {\n    var info = _super.prototype._on.call(this, once, type, callback, context, shouldClone, dispatch);\n    var disposers = [info.disposer];\n    switch (type) {\n      case \"hit\":\n      case \"doublehit\":\n      case \"rightclick\":\n      case \"down\":\n      case \"up\":\n        this.target.clickable = true;\n        break;\n      case \"drag\":\n      case \"dragstart\":\n      case \"dragstop\":\n        this.target.draggable = true;\n        break;\n      case \"track\":\n        this.target.trackable = true;\n        break;\n      case \"resize\":\n        this.target.resizable = true;\n        break;\n      case \"swipe\":\n      case \"swipeleft\":\n      case \"swiperight\":\n        this.target.swipeable = true;\n        break;\n      case \"wheel\":\n      case \"wheelup\":\n      case \"wheeldown\":\n      case \"wheelleft\":\n      case \"wheelright\":\n        this.target.wheelable = true;\n        break;\n      case \"over\":\n      case \"out\":\n        this.target.hoverable = true;\n        break;\n      case \"focus\":\n      case \"blur\":\n      case \"focusin\":\n      case \"focusout\":\n        this.target.focusable = true;\n        break;\n      case \"keydown\":\n        disposers.push(this._addDOMEvent(type, type, this._dispatchKeyboardEvent, this));\n        break;\n      case \"keyup\":\n        disposers.push(this._addDOMEvent(type, type, this._dispatchKeyboardEvent, this));\n        break;\n      case \"keypress\":\n        disposers.push(this._addDOMEvent(type, type, this._dispatchKeyboardEvent, this));\n        break;\n      case \"input\":\n        disposers.push(this._addDOMEvent(type, type, this._dispatchKeyboardEvent, this));\n        break;\n    }\n    info.disposer = new MultiDisposer(disposers);\n    return info;\n  };\n  return InteractionObjectEventDispatcher;\n}(TargetedEventDispatcher);\nexport { InteractionObjectEventDispatcher };","map":{"version":3,"names":["__extends","TargetedEventDispatcher","MultiDisposer","CounterDisposer","InteractionObjectEventDispatcher","_super","_this","apply","arguments","_domEvents","prototype","_addDOMEvent","type","key","listener","context","callback_1","e","call","target","element","addEventListener","removeEventListener","increment","_dispatchKeyboardEvent","ev","events","isEnabled","dispatchImmediately","event","_on","once","callback","shouldClone","dispatch","info","disposers","disposer","clickable","draggable","trackable","resizable","swipeable","wheelable","hoverable","focusable","push"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/core/interaction/InteractionObjectEvents.js"],"sourcesContent":["import { __extends } from \"tslib\";\r\nimport { TargetedEventDispatcher } from \"../utils/EventDispatcher\";\r\nimport { MultiDisposer, CounterDisposer } from \"../utils/Disposer\";\r\n/**\r\n * Represents an Event Dispatcher for [[InteractionObject]].\r\n *\r\n * Besides regular [[EventDispatcher]] functionality it adds new events with\r\n * direct application to DOM nodes. Primarily used to handle keyboard events,\r\n * but can turn into something else moving forward.\r\n */\r\nvar InteractionObjectEventDispatcher = /** @class */ (function (_super) {\r\n    __extends(InteractionObjectEventDispatcher, _super);\r\n    function InteractionObjectEventDispatcher() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Holds a list of Disposers for DOM events added.\r\n         */\r\n        _this._domEvents = {};\r\n        return _this;\r\n    }\r\n    /**\r\n     * Adds a DOM event and returns Disposer.\r\n     *\r\n     * @return Disposer\r\n     */\r\n    InteractionObjectEventDispatcher.prototype._addDOMEvent = function (type, key, listener, context) {\r\n        var _this = this;\r\n        if (!this._domEvents[type]) {\r\n            var callback_1 = function (e) {\r\n                listener.call(context, key, e);\r\n            };\r\n            this.target.element.addEventListener(type, callback_1, false);\r\n            this._domEvents[type] = new CounterDisposer(function () {\r\n                delete _this._domEvents[type];\r\n                _this.target.element.removeEventListener(type, callback_1, false);\r\n            });\r\n        }\r\n        return this._domEvents[type].increment();\r\n    };\r\n    InteractionObjectEventDispatcher.prototype._dispatchKeyboardEvent = function (key, ev) {\r\n        // TODO use this.dispatchImmediately ?\r\n        if (this.target.events.isEnabled(key)) {\r\n            this.target.events.dispatchImmediately(key, {\r\n                type: key,\r\n                target: this.target,\r\n                event: ev\r\n            });\r\n        }\r\n    };\r\n    InteractionObjectEventDispatcher.prototype._on = function (once, type, callback, context, shouldClone, dispatch) {\r\n        var info = _super.prototype._on.call(this, once, type, callback, context, shouldClone, dispatch);\r\n        var disposers = [info.disposer];\r\n        switch (type) {\r\n            case \"hit\":\r\n            case \"doublehit\":\r\n            case \"rightclick\":\r\n            case \"down\":\r\n            case \"up\":\r\n                this.target.clickable = true;\r\n                break;\r\n            case \"drag\":\r\n            case \"dragstart\":\r\n            case \"dragstop\":\r\n                this.target.draggable = true;\r\n                break;\r\n            case \"track\":\r\n                this.target.trackable = true;\r\n                break;\r\n            case \"resize\":\r\n                this.target.resizable = true;\r\n                break;\r\n            case \"swipe\":\r\n            case \"swipeleft\":\r\n            case \"swiperight\":\r\n                this.target.swipeable = true;\r\n                break;\r\n            case \"wheel\":\r\n            case \"wheelup\":\r\n            case \"wheeldown\":\r\n            case \"wheelleft\":\r\n            case \"wheelright\":\r\n                this.target.wheelable = true;\r\n                break;\r\n            case \"over\":\r\n            case \"out\":\r\n                this.target.hoverable = true;\r\n                break;\r\n            case \"focus\":\r\n            case \"blur\":\r\n            case \"focusin\":\r\n            case \"focusout\":\r\n                this.target.focusable = true;\r\n                break;\r\n            case \"keydown\":\r\n                disposers.push(this._addDOMEvent(type, type, this._dispatchKeyboardEvent, this));\r\n                break;\r\n            case \"keyup\":\r\n                disposers.push(this._addDOMEvent(type, type, this._dispatchKeyboardEvent, this));\r\n                break;\r\n            case \"keypress\":\r\n                disposers.push(this._addDOMEvent(type, type, this._dispatchKeyboardEvent, this));\r\n                break;\r\n            case \"input\":\r\n                disposers.push(this._addDOMEvent(type, type, this._dispatchKeyboardEvent, this));\r\n                break;\r\n        }\r\n        info.disposer = new MultiDisposer(disposers);\r\n        return info;\r\n    };\r\n    return InteractionObjectEventDispatcher;\r\n}(TargetedEventDispatcher));\r\nexport { InteractionObjectEventDispatcher };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}