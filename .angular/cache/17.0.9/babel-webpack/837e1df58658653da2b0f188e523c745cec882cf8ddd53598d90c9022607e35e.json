{"ast":null,"code":"/**\r\n * A module with functionality for buildin a scrollbar with an XY graph in it.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Scrollbar } from \"../../core/elements/Scrollbar\";\nimport { Sprite } from \"../../core/Sprite\";\nimport { List } from \"../../core/utils/List\";\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\nimport { XYChart } from \"../types/XYChart\";\nimport { ValueAxis } from \"../axes/ValueAxis\";\nimport { DateAxis } from \"../axes/DateAxis\";\nimport { registry } from \"../../core/Registry\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\nimport { DesaturateFilter } from \"../../core/rendering/filters/DesaturateFilter\";\nimport * as $iter from \"../../core/utils/Iterator\";\nimport * as $type from \"../../core/utils/Type\";\nimport * as $path from \"../../core/rendering/Path\";\nimport * as $utils from \"../../core/utils/Utils\";\nimport { percent } from \"../../core/utils/Percent\";\nimport { color } from \"../../core/utils/Color\";\nimport { options } from \"../../core/Options\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * A special version of the Scrollbar that has an XY chart in it.\r\n *\r\n * Used mainly as an advanced scrollbar with a preview for other XY charts.\r\n *\r\n * However, can be used as standalone element.\r\n *\r\n * @see {@link IXYChartScrollbarEvents} for a list of available events\r\n * @see {@link IXYChartScrollbarAdapters} for a list of available Adapters\r\n * @important\r\n */\nvar XYChartScrollbar = /** @class */function (_super) {\n  __extends(XYChartScrollbar, _super);\n  /**\r\n   * Constructor\r\n   */\n  function XYChartScrollbar() {\n    var _this = _super.call(this) || this;\n    /**\r\n     * A chart element Scrollbar is for.\r\n     */\n    _this._chart = new MutableValueDisposer();\n    _this.className = \"XYChartScrollbar\";\n    var interfaceColors = new InterfaceColorSet();\n    _this.padding(0, 0, 0, 0);\n    var scrollbarChart = _this.createChild(XYChart);\n    scrollbarChart.shouldClone = false;\n    scrollbarChart.margin(0, 0, 0, 0);\n    scrollbarChart.padding(0, 0, 0, 0);\n    scrollbarChart.interactionsEnabled = false;\n    _this._scrollbarChart = scrollbarChart;\n    if (!$utils.isIE()) {\n      var filter = new DesaturateFilter();\n      filter.filterUnits = \"userSpaceOnUse\";\n      scrollbarChart.plotContainer.filters.push(filter);\n    }\n    _this._disposers.push(_this._scrollbarChart);\n    _this.minHeight = 60;\n    _this.minWidth = 60;\n    var unselectedOverlay = _this.createChild(Sprite);\n    unselectedOverlay.shouldClone = false;\n    unselectedOverlay.setElement(_this.paper.add(\"path\"));\n    unselectedOverlay.fill = interfaceColors.getFor(\"background\");\n    unselectedOverlay.fillOpacity = 0.8;\n    unselectedOverlay.interactionsEnabled = false;\n    unselectedOverlay.isMeasured = false;\n    unselectedOverlay.toBack();\n    _this._unselectedOverlay = unselectedOverlay;\n    _this._disposers.push(_this._unselectedOverlay);\n    scrollbarChart.toBack();\n    _this.background.cornerRadius(0, 0, 0, 0);\n    var thumbBackground = _this.thumb.background;\n    thumbBackground.cornerRadius(0, 0, 0, 0);\n    thumbBackground.fillOpacity = 0;\n    thumbBackground.fill = interfaceColors.getFor(\"background\");\n    var hoverState = thumbBackground.states.getKey(\"hover\");\n    if (hoverState) {\n      hoverState.properties.fillOpacity = 0.2;\n    }\n    var downState = thumbBackground.states.getKey(\"down\");\n    if (downState) {\n      downState.properties.fillOpacity = 0.4;\n    }\n    _this._disposers.push(_this._chart);\n    _this.applyTheme();\n    return _this;\n  }\n  Object.defineProperty(XYChartScrollbar.prototype, \"series\", {\n    /**\r\n     * A list of series that are used to draw graph(s) on the scrollbar.\r\n     *\r\n     * @readonly\r\n     * @return Series\r\n     */\n    get: function () {\n      if (!this._series) {\n        this._series = new List();\n        this._disposers.push(this._series.events.on(\"inserted\", this.handleSeriesAdded, this, false));\n        this._disposers.push(this._series.events.on(\"removed\", this.handleSeriesRemoved, this, false));\n      }\n      return this._series;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Decorates a new series when they are pushed into a `series` list.\r\n   *\r\n   * @param event Event\r\n   */\n  XYChartScrollbar.prototype.handleSeriesAdded = function (event) {\n    var _this = this;\n    var sourceSeries = event.newValue;\n    if (!sourceSeries.xAxis || !sourceSeries.yAxis) {\n      return;\n    }\n    var scrollbarChart = this.scrollbarChart;\n    scrollbarChart.zoomOutButton.disabled = true;\n    this.chart = sourceSeries.chart;\n    scrollbarChart.dateFormatter.inputDateFormat = this.chart.dateFormatter.inputDateFormat;\n    // Ensure that scrollbar chart shares the same locale as parent chart\n    scrollbarChart.language.locale = this.chart.language.locale;\n    var addXAxis = true;\n    var addYAxis = true;\n    // check if we haven't added clone of x or y axis before\n    $iter.each(this.series.iterator(), function (series) {\n      if (series != sourceSeries) {\n        if (series.xAxis == sourceSeries.xAxis && _this.scrollbarChart.xAxes.length > 0) {\n          addXAxis = false;\n        }\n        if (series.yAxis == sourceSeries.yAxis && _this.scrollbarChart.yAxes.length > 0) {\n          addYAxis = false;\n        }\n      }\n    });\n    sourceSeries.events.on(\"beforedisposed\", function () {\n      _this.series.removeValue(sourceSeries);\n    });\n    var interfaceColors = new InterfaceColorSet();\n    var series = sourceSeries.clone();\n    if (options.onlyShowOnViewport || options.queue) {\n      this.addDisposer(this.chart.events.on(\"removedfromqueue\", function () {\n        scrollbarChart.invalidateData();\n      }));\n    }\n    if ($utils.isIE()) {\n      series.stroke = color(\"#aaaaaa\");\n      series.fill = series.stroke;\n      series.propertyFields.fill = undefined;\n      series.propertyFields.stroke = undefined;\n    }\n    sourceSeries.scrollbarSeries = series;\n    if (addXAxis) {\n      var xAxis = sourceSeries.xAxis.clone();\n      scrollbarChart.xAxes.moveValue(xAxis);\n      xAxis.title.disabled = true;\n      xAxis.rangeChangeDuration = 0;\n      //xAxis.id = sourceSeries.uid;\n      var renderer = xAxis.renderer;\n      renderer.ticks.template.disabled = true;\n      renderer.inside = true;\n      renderer.labels.template.inside = true;\n      renderer.line.strokeOpacity = 0;\n      renderer.minLabelPosition = 0.02;\n      renderer.maxLabelPosition = 0.98;\n      renderer.line.disabled = true;\n      renderer.axisFills.template.disabled = true;\n      renderer.baseGrid.disabled = true;\n      renderer.grid.template.strokeOpacity = 0.05;\n      renderer.minWidth = undefined;\n      renderer.minHeight = undefined;\n      renderer.padding(0, 0, 0, 0);\n      renderer.chart = scrollbarChart;\n      renderer.margin(0, 0, 0, 0);\n      xAxis.width = percent(100);\n      var labelsTemplate = renderer.labels.template;\n      labelsTemplate.fillOpacity = 0.5;\n      xAxis.maxZoomCount = undefined;\n      xAxis.minZoomCount = undefined;\n      if (xAxis instanceof DateAxis) {\n        var vAxis_1 = xAxis;\n        var sourceAxis = sourceSeries.xAxis;\n        vAxis_1.groupCount = sourceAxis.groupCount * 5;\n        vAxis_1.min = undefined;\n        vAxis_1.max = undefined;\n        this._disposers.push(vAxis_1.clonedFrom.events.on(\"extremeschanged\", function () {\n          if ($type.isNumber(vAxis_1.clonedFrom.minDefined)) {\n            vAxis_1.min = vAxis_1.clonedFrom.minDefined;\n          }\n          if ($type.isNumber(vAxis_1.clonedFrom.maxDefined)) {\n            vAxis_1.max = vAxis_1.clonedFrom.maxDefined;\n          }\n        }, undefined, false));\n      } else if (xAxis instanceof ValueAxis) {\n        var vAxis_2 = xAxis;\n        vAxis_2.min = undefined;\n        vAxis_2.max = undefined;\n        if (!$type.isNumber(vAxis_2.clonedFrom.minDefined)) {\n          vAxis_2.min = undefined;\n        }\n        if (!$type.isNumber(vAxis_2.clonedFrom.maxDefined)) {\n          vAxis_2.max = undefined;\n        }\n        this._disposers.push(vAxis_2.clonedFrom.events.on(\"extremeschanged\", function () {\n          if ($type.isNumber(vAxis_2.clonedFrom.minDefined)) {\n            vAxis_2.min = vAxis_2.clonedFrom.min;\n          }\n          if ($type.isNumber(vAxis_2.clonedFrom.maxDefined)) {\n            vAxis_2.max = vAxis_2.clonedFrom.max;\n          }\n        }, undefined, false));\n      }\n      series.xAxis = xAxis;\n    } else {\n      this.scrollbarChart.xAxes.each(function (xAxis) {\n        if (xAxis.clonedFrom == sourceSeries.xAxis) {\n          series.xAxis = xAxis;\n        }\n      });\n    }\n    if (addYAxis) {\n      var yAxis = sourceSeries.yAxis.clone();\n      scrollbarChart.yAxes.moveValue(yAxis);\n      yAxis.title.disabled = true;\n      yAxis.rangeChangeDuration = 0;\n      var renderer = yAxis.renderer;\n      renderer.ticks.template.disabled = true;\n      renderer.inside = true;\n      renderer.labels.template.inside = true;\n      renderer.line.strokeOpacity = 0;\n      renderer.minLabelPosition = 0.02;\n      renderer.maxLabelPosition = 0.98;\n      renderer.line.disabled = true;\n      renderer.axisFills.template.disabled = true;\n      renderer.grid.template.stroke = interfaceColors.getFor(\"background\");\n      renderer.baseGrid.disabled = true;\n      renderer.grid.template.strokeOpacity = 0.05;\n      renderer.minWidth = undefined;\n      renderer.minHeight = undefined;\n      renderer.chart = scrollbarChart;\n      renderer.padding(0, 0, 0, 0);\n      renderer.margin(0, 0, 0, 0);\n      yAxis.height = percent(100);\n      var labelsTemplate = renderer.labels.template;\n      labelsTemplate.fillOpacity = 0.5;\n      series.yAxis = yAxis;\n      yAxis.maxZoomCount = undefined;\n      yAxis.minZoomCount = undefined;\n      if (yAxis instanceof DateAxis) {\n        var vAxis_3 = yAxis;\n        vAxis_3.min = undefined;\n        vAxis_3.max = undefined;\n        var sourceAxis = sourceSeries.yAxis;\n        yAxis.groupCount = sourceAxis.groupCount * 5;\n        this._disposers.push(vAxis_3.clonedFrom.events.on(\"extremeschanged\", function () {\n          if ($type.isNumber(vAxis_3.clonedFrom.minDefined)) {\n            vAxis_3.min = vAxis_3.clonedFrom.minDefined;\n          }\n          if ($type.isNumber(vAxis_3.clonedFrom.maxDefined)) {\n            vAxis_3.max = vAxis_3.clonedFrom.maxDefined;\n          }\n        }));\n      } else if (yAxis instanceof ValueAxis) {\n        var vAxis_4 = yAxis;\n        vAxis_4.min = undefined;\n        vAxis_4.max = undefined;\n        if (!$type.isNumber(vAxis_4.clonedFrom.minDefined)) {\n          vAxis_4.min = undefined;\n        }\n        if (!$type.isNumber(vAxis_4.clonedFrom.maxDefined)) {\n          vAxis_4.max = undefined;\n        }\n        this._disposers.push(vAxis_4.clonedFrom.events.on(\"extremeschanged\", function () {\n          if ($type.isNumber(vAxis_4.clonedFrom.minDefined)) {\n            vAxis_4.min = vAxis_4.clonedFrom.minDefined;\n          }\n          if ($type.isNumber(vAxis_4.clonedFrom.maxDefined)) {\n            vAxis_4.max = vAxis_4.clonedFrom.maxDefined;\n          }\n        }));\n      }\n    } else {\n      this.scrollbarChart.yAxes.each(function (yAxis) {\n        if (yAxis.clonedFrom == sourceSeries.yAxis) {\n          series.yAxis = yAxis;\n        }\n      });\n    }\n    series.rangeChangeDuration = 0;\n    series.interpolationDuration = 0;\n    series.defaultState.transitionDuration = 0;\n    series.showOnInit = false;\n    this._disposers.push(series.events.on(\"validated\", this.zoomOutAxes, this, false));\n    // data might be set drectly on series\n    this._disposers.push(sourceSeries.events.on(\"datavalidated\", function () {\n      if (series.data != sourceSeries.data) {\n        // data setter doesn't check this\n        series.data = sourceSeries.data;\n      }\n    }, undefined, false));\n    series.defaultState.properties.visible = true;\n    scrollbarChart.series.push(series);\n    this.updateByOrientation();\n  };\n  /**\r\n   * @ignore\r\n   */\n  XYChartScrollbar.prototype.updateByOrientation = function () {\n    var _this = this;\n    if (this._scrollbarChart) {\n      $iter.each(this._scrollbarChart.xAxes.iterator(), function (xAxis) {\n        var renderer = xAxis.renderer;\n        if (_this.orientation == \"vertical\") {\n          renderer.grid.template.disabled = true;\n          renderer.labels.template.disabled = true;\n          renderer.minGridDistance = 10;\n        } else {\n          renderer.grid.template.disabled = false;\n          renderer.labels.template.disabled = false;\n          renderer.minGridDistance = xAxis.clonedFrom.renderer.minGridDistance;\n        }\n      });\n      $iter.each(this._scrollbarChart.yAxes.iterator(), function (yAxis) {\n        var renderer = yAxis.renderer;\n        if (_this.orientation == \"horizontal\") {\n          renderer.grid.template.disabled = true;\n          renderer.labels.template.disabled = true;\n          renderer.minGridDistance = 10;\n        } else {\n          renderer.grid.template.disabled = false;\n          renderer.labels.template.disabled = false;\n          renderer.minGridDistance = yAxis.clonedFrom.renderer.minGridDistance;\n        }\n      });\n    }\n  };\n  /**\r\n   * Cleans up after series are removed from Scrollbar.\r\n   *\r\n   * @param event  Event\r\n   */\n  XYChartScrollbar.prototype.handleSeriesRemoved = function (event) {\n    var sourceSeries = event.oldValue;\n    var scrollbarChart = this.scrollbarChart;\n    scrollbarChart.series.each(function (series) {\n      if (series && series.clonedFrom == sourceSeries) {\n        scrollbarChart.series.removeValue(series);\n      }\n    });\n    if (scrollbarChart.series.length == 0) {\n      scrollbarChart.xAxes.clear();\n      scrollbarChart.yAxes.clear();\n    }\n    try {\n      sourceSeries.events.off(\"validated\", this.zoomOutAxes, this);\n    } catch (err) {}\n  };\n  Object.defineProperty(XYChartScrollbar.prototype, \"scrollbarChart\", {\n    /**\r\n     * A chart element that is used to display graphs in the Scrollbar.\r\n     *\r\n     * This is not the same as `chart`. It's a totally independent instance of\r\n     * [[XYChart]] with separate config, series, etc.\r\n     *\r\n     * It can be configured just like any other [[XYChart]].\r\n     *\r\n     * @readonly\r\n     * @return Scrollbar's internal chart\r\n     */\n    get: function () {\n      return this._scrollbarChart;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYChartScrollbar.prototype, \"chart\", {\n    /**\r\n     * @return Chart\r\n     */\n    get: function () {\n      return this._chart.get();\n    },\n    /**\r\n     * A chart that Scrollbar belongs to.\r\n     *\r\n     * @param chart  Chart\r\n     */\n    set: function (chart) {\n      if (this._chart.get() !== chart) {\n        this._chart.set(chart, chart.events.on(\"datavalidated\", this.handleDataChanged, this, false));\n        this.handleDataChanged();\n        this._scrollbarChart.dataProvider = chart; // this makes scrollbar chart do not validate data untill charts' data is validated\n      }\n    },\n\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYChartScrollbar.prototype, \"unselectedOverlay\", {\n    /**\r\n     * A [[Sprite]] object representing overlay that is used to dim area of the\r\n     * scrollbar that is currently not selected.\r\n     *\r\n     * Use its `fillOpacity` to set opacity of the fill, with `0` (zero)\r\n     * completely disabling the dimming, and `1` making unselected area completely\r\n     * blank.\r\n     *\r\n     * @since 4.6.1\r\n     * @readonly\r\n     * @return Unselected area curtain element\r\n     */\n    get: function () {\n      return this._unselectedOverlay;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Updates Scrollbar's internal chart's data when the main chart's data\r\n   * changes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  XYChartScrollbar.prototype.handleDataChanged = function () {\n    if (this.chart.data != this.scrollbarChart.data) {\n      this.scrollbarChart.data = this.chart.data;\n    } else {\n      // add data is handled in XYChart\n      // invalidating all data caused the problem: https://github.com/amcharts/amcharts4/issues/2096\n      this.scrollbarChart.invalidateRawData();\n    }\n  };\n  /**\r\n   * Zooms out all axes on the internal chart.\r\n   */\n  XYChartScrollbar.prototype.zoomOutAxes = function () {\n    var scrollbarChart = this.scrollbarChart;\n    $iter.each(scrollbarChart.xAxes.iterator(), function (x) {\n      x.zoom({\n        start: 0,\n        end: 1\n      }, true, true);\n    });\n    $iter.each(scrollbarChart.yAxes.iterator(), function (y) {\n      y.zoom({\n        start: 0,\n        end: 1\n      }, true, true);\n    });\n  };\n  /**\r\n   * Updates scrollbar thumb.\r\n   *\r\n   * @ignore\r\n   */\n  XYChartScrollbar.prototype.updateThumb = function (dispatchEvents) {\n    if (dispatchEvents === void 0) {\n      dispatchEvents = true;\n    }\n    _super.prototype.updateThumb.call(this, dispatchEvents);\n    if (this._unselectedOverlay) {\n      var thumb = this.thumb;\n      var x = thumb.pixelX || 0;\n      var y = thumb.pixelY || 0;\n      var w = thumb.pixelWidth || 0;\n      var h = thumb.pixelHeight || 0;\n      var path = \"\";\n      if (this.orientation == \"horizontal\") {\n        path = $path.rectToPath({\n          x: -1,\n          y: 0,\n          width: x,\n          height: h\n        });\n        path += $path.rectToPath({\n          x: x + w,\n          y: 0,\n          width: (this.pixelWidth || 0) - x - w,\n          height: h\n        });\n      } else {\n        path = $path.rectToPath({\n          x: 0,\n          y: 0,\n          width: w,\n          height: y\n        });\n        path += $path.rectToPath({\n          x: 0,\n          y: y + h,\n          width: w,\n          height: (this.pixelHeight || 0) - y - h\n        });\n      }\n      this._unselectedOverlay.path = path;\n    }\n  };\n  /**\r\n   * Processes JSON-based config before it is applied to the object.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param config  Config\r\n   */\n  XYChartScrollbar.prototype.processConfig = function (config) {\n    if (config) {\n      if ($type.hasValue(config.series) && $type.isArray(config.series)) {\n        for (var i = 0, len = config.series.length; i < len; i++) {\n          var series = config.series[i];\n          if ($type.hasValue(series) && $type.isString(series)) {\n            if (this.map.hasKey(series)) {\n              config.series[i] = this.map.getKey(series);\n            } else {\n              throw Error(\"XYChartScrollbar error: Series with id `\" + series + \"` does not exist.\");\n            }\n          }\n        }\n      }\n    }\n    _super.prototype.processConfig.call(this, config);\n  };\n  return XYChartScrollbar;\n}(Scrollbar);\nexport { XYChartScrollbar };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"XYChartScrollbar\"] = XYChartScrollbar;","map":{"version":3,"names":["__extends","Scrollbar","Sprite","List","MutableValueDisposer","XYChart","ValueAxis","DateAxis","registry","InterfaceColorSet","DesaturateFilter","$iter","$type","$path","$utils","percent","color","options","XYChartScrollbar","_super","_this","call","_chart","className","interfaceColors","padding","scrollbarChart","createChild","shouldClone","margin","interactionsEnabled","_scrollbarChart","isIE","filter","filterUnits","plotContainer","filters","push","_disposers","minHeight","minWidth","unselectedOverlay","setElement","paper","add","fill","getFor","fillOpacity","isMeasured","toBack","_unselectedOverlay","background","cornerRadius","thumbBackground","thumb","hoverState","states","getKey","properties","downState","applyTheme","Object","defineProperty","prototype","get","_series","events","on","handleSeriesAdded","handleSeriesRemoved","enumerable","configurable","event","sourceSeries","newValue","xAxis","yAxis","zoomOutButton","disabled","chart","dateFormatter","inputDateFormat","language","locale","addXAxis","addYAxis","each","series","iterator","xAxes","length","yAxes","removeValue","clone","onlyShowOnViewport","queue","addDisposer","invalidateData","stroke","propertyFields","undefined","scrollbarSeries","moveValue","title","rangeChangeDuration","renderer","ticks","template","inside","labels","line","strokeOpacity","minLabelPosition","maxLabelPosition","axisFills","baseGrid","grid","width","labelsTemplate","maxZoomCount","minZoomCount","vAxis_1","sourceAxis","groupCount","min","max","clonedFrom","isNumber","minDefined","maxDefined","vAxis_2","height","vAxis_3","vAxis_4","interpolationDuration","defaultState","transitionDuration","showOnInit","zoomOutAxes","data","visible","updateByOrientation","orientation","minGridDistance","oldValue","clear","off","err","set","handleDataChanged","dataProvider","invalidateRawData","x","zoom","start","end","y","updateThumb","dispatchEvents","pixelX","pixelY","w","pixelWidth","h","pixelHeight","path","rectToPath","processConfig","config","hasValue","isArray","i","len","isString","map","hasKey","Error","registeredClasses"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/charts/elements/XYChartScrollbar.js"],"sourcesContent":["/**\r\n * A module with functionality for buildin a scrollbar with an XY graph in it.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Scrollbar } from \"../../core/elements/Scrollbar\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { List } from \"../../core/utils/List\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { XYChart } from \"../types/XYChart\";\r\nimport { ValueAxis } from \"../axes/ValueAxis\";\r\nimport { DateAxis } from \"../axes/DateAxis\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { DesaturateFilter } from \"../../core/rendering/filters/DesaturateFilter\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { options } from \"../../core/Options\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A special version of the Scrollbar that has an XY chart in it.\r\n *\r\n * Used mainly as an advanced scrollbar with a preview for other XY charts.\r\n *\r\n * However, can be used as standalone element.\r\n *\r\n * @see {@link IXYChartScrollbarEvents} for a list of available events\r\n * @see {@link IXYChartScrollbarAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar XYChartScrollbar = /** @class */ (function (_super) {\r\n    __extends(XYChartScrollbar, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function XYChartScrollbar() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * A chart element Scrollbar is for.\r\n         */\r\n        _this._chart = new MutableValueDisposer();\r\n        _this.className = \"XYChartScrollbar\";\r\n        var interfaceColors = new InterfaceColorSet();\r\n        _this.padding(0, 0, 0, 0);\r\n        var scrollbarChart = _this.createChild(XYChart);\r\n        scrollbarChart.shouldClone = false;\r\n        scrollbarChart.margin(0, 0, 0, 0);\r\n        scrollbarChart.padding(0, 0, 0, 0);\r\n        scrollbarChart.interactionsEnabled = false;\r\n        _this._scrollbarChart = scrollbarChart;\r\n        if (!$utils.isIE()) {\r\n            var filter = new DesaturateFilter();\r\n            filter.filterUnits = \"userSpaceOnUse\";\r\n            scrollbarChart.plotContainer.filters.push(filter);\r\n        }\r\n        _this._disposers.push(_this._scrollbarChart);\r\n        _this.minHeight = 60;\r\n        _this.minWidth = 60;\r\n        var unselectedOverlay = _this.createChild(Sprite);\r\n        unselectedOverlay.shouldClone = false;\r\n        unselectedOverlay.setElement(_this.paper.add(\"path\"));\r\n        unselectedOverlay.fill = interfaceColors.getFor(\"background\");\r\n        unselectedOverlay.fillOpacity = 0.8;\r\n        unselectedOverlay.interactionsEnabled = false;\r\n        unselectedOverlay.isMeasured = false;\r\n        unselectedOverlay.toBack();\r\n        _this._unselectedOverlay = unselectedOverlay;\r\n        _this._disposers.push(_this._unselectedOverlay);\r\n        scrollbarChart.toBack();\r\n        _this.background.cornerRadius(0, 0, 0, 0);\r\n        var thumbBackground = _this.thumb.background;\r\n        thumbBackground.cornerRadius(0, 0, 0, 0);\r\n        thumbBackground.fillOpacity = 0;\r\n        thumbBackground.fill = interfaceColors.getFor(\"background\");\r\n        var hoverState = thumbBackground.states.getKey(\"hover\");\r\n        if (hoverState) {\r\n            hoverState.properties.fillOpacity = 0.2;\r\n        }\r\n        var downState = thumbBackground.states.getKey(\"down\");\r\n        if (downState) {\r\n            downState.properties.fillOpacity = 0.4;\r\n        }\r\n        _this._disposers.push(_this._chart);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(XYChartScrollbar.prototype, \"series\", {\r\n        /**\r\n         * A list of series that are used to draw graph(s) on the scrollbar.\r\n         *\r\n         * @readonly\r\n         * @return Series\r\n         */\r\n        get: function () {\r\n            if (!this._series) {\r\n                this._series = new List();\r\n                this._disposers.push(this._series.events.on(\"inserted\", this.handleSeriesAdded, this, false));\r\n                this._disposers.push(this._series.events.on(\"removed\", this.handleSeriesRemoved, this, false));\r\n            }\r\n            return this._series;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Decorates a new series when they are pushed into a `series` list.\r\n     *\r\n     * @param event Event\r\n     */\r\n    XYChartScrollbar.prototype.handleSeriesAdded = function (event) {\r\n        var _this = this;\r\n        var sourceSeries = event.newValue;\r\n        if (!sourceSeries.xAxis || !sourceSeries.yAxis) {\r\n            return;\r\n        }\r\n        var scrollbarChart = this.scrollbarChart;\r\n        scrollbarChart.zoomOutButton.disabled = true;\r\n        this.chart = sourceSeries.chart;\r\n        scrollbarChart.dateFormatter.inputDateFormat = this.chart.dateFormatter.inputDateFormat;\r\n        // Ensure that scrollbar chart shares the same locale as parent chart\r\n        scrollbarChart.language.locale = this.chart.language.locale;\r\n        var addXAxis = true;\r\n        var addYAxis = true;\r\n        // check if we haven't added clone of x or y axis before\r\n        $iter.each(this.series.iterator(), function (series) {\r\n            if (series != sourceSeries) {\r\n                if (series.xAxis == sourceSeries.xAxis && _this.scrollbarChart.xAxes.length > 0) {\r\n                    addXAxis = false;\r\n                }\r\n                if (series.yAxis == sourceSeries.yAxis && _this.scrollbarChart.yAxes.length > 0) {\r\n                    addYAxis = false;\r\n                }\r\n            }\r\n        });\r\n        sourceSeries.events.on(\"beforedisposed\", function () {\r\n            _this.series.removeValue(sourceSeries);\r\n        });\r\n        var interfaceColors = new InterfaceColorSet();\r\n        var series = sourceSeries.clone();\r\n        if (options.onlyShowOnViewport || options.queue) {\r\n            this.addDisposer(this.chart.events.on(\"removedfromqueue\", function () {\r\n                scrollbarChart.invalidateData();\r\n            }));\r\n        }\r\n        if ($utils.isIE()) {\r\n            series.stroke = color(\"#aaaaaa\");\r\n            series.fill = series.stroke;\r\n            series.propertyFields.fill = undefined;\r\n            series.propertyFields.stroke = undefined;\r\n        }\r\n        sourceSeries.scrollbarSeries = series;\r\n        if (addXAxis) {\r\n            var xAxis = sourceSeries.xAxis.clone();\r\n            scrollbarChart.xAxes.moveValue(xAxis);\r\n            xAxis.title.disabled = true;\r\n            xAxis.rangeChangeDuration = 0;\r\n            //xAxis.id = sourceSeries.uid;\r\n            var renderer = xAxis.renderer;\r\n            renderer.ticks.template.disabled = true;\r\n            renderer.inside = true;\r\n            renderer.labels.template.inside = true;\r\n            renderer.line.strokeOpacity = 0;\r\n            renderer.minLabelPosition = 0.02;\r\n            renderer.maxLabelPosition = 0.98;\r\n            renderer.line.disabled = true;\r\n            renderer.axisFills.template.disabled = true;\r\n            renderer.baseGrid.disabled = true;\r\n            renderer.grid.template.strokeOpacity = 0.05;\r\n            renderer.minWidth = undefined;\r\n            renderer.minHeight = undefined;\r\n            renderer.padding(0, 0, 0, 0);\r\n            renderer.chart = scrollbarChart;\r\n            renderer.margin(0, 0, 0, 0);\r\n            xAxis.width = percent(100);\r\n            var labelsTemplate = renderer.labels.template;\r\n            labelsTemplate.fillOpacity = 0.5;\r\n            xAxis.maxZoomCount = undefined;\r\n            xAxis.minZoomCount = undefined;\r\n            if (xAxis instanceof DateAxis) {\r\n                var vAxis_1 = xAxis;\r\n                var sourceAxis = sourceSeries.xAxis;\r\n                vAxis_1.groupCount = sourceAxis.groupCount * 5;\r\n                vAxis_1.min = undefined;\r\n                vAxis_1.max = undefined;\r\n                this._disposers.push(vAxis_1.clonedFrom.events.on(\"extremeschanged\", function () {\r\n                    if ($type.isNumber(vAxis_1.clonedFrom.minDefined)) {\r\n                        vAxis_1.min = vAxis_1.clonedFrom.minDefined;\r\n                    }\r\n                    if ($type.isNumber(vAxis_1.clonedFrom.maxDefined)) {\r\n                        vAxis_1.max = vAxis_1.clonedFrom.maxDefined;\r\n                    }\r\n                }, undefined, false));\r\n            }\r\n            else if (xAxis instanceof ValueAxis) {\r\n                var vAxis_2 = xAxis;\r\n                vAxis_2.min = undefined;\r\n                vAxis_2.max = undefined;\r\n                if (!$type.isNumber(vAxis_2.clonedFrom.minDefined)) {\r\n                    vAxis_2.min = undefined;\r\n                }\r\n                if (!$type.isNumber(vAxis_2.clonedFrom.maxDefined)) {\r\n                    vAxis_2.max = undefined;\r\n                }\r\n                this._disposers.push(vAxis_2.clonedFrom.events.on(\"extremeschanged\", function () {\r\n                    if ($type.isNumber(vAxis_2.clonedFrom.minDefined)) {\r\n                        vAxis_2.min = vAxis_2.clonedFrom.min;\r\n                    }\r\n                    if ($type.isNumber(vAxis_2.clonedFrom.maxDefined)) {\r\n                        vAxis_2.max = vAxis_2.clonedFrom.max;\r\n                    }\r\n                }, undefined, false));\r\n            }\r\n            series.xAxis = xAxis;\r\n        }\r\n        else {\r\n            this.scrollbarChart.xAxes.each(function (xAxis) {\r\n                if (xAxis.clonedFrom == sourceSeries.xAxis) {\r\n                    series.xAxis = xAxis;\r\n                }\r\n            });\r\n        }\r\n        if (addYAxis) {\r\n            var yAxis = sourceSeries.yAxis.clone();\r\n            scrollbarChart.yAxes.moveValue(yAxis);\r\n            yAxis.title.disabled = true;\r\n            yAxis.rangeChangeDuration = 0;\r\n            var renderer = yAxis.renderer;\r\n            renderer.ticks.template.disabled = true;\r\n            renderer.inside = true;\r\n            renderer.labels.template.inside = true;\r\n            renderer.line.strokeOpacity = 0;\r\n            renderer.minLabelPosition = 0.02;\r\n            renderer.maxLabelPosition = 0.98;\r\n            renderer.line.disabled = true;\r\n            renderer.axisFills.template.disabled = true;\r\n            renderer.grid.template.stroke = interfaceColors.getFor(\"background\");\r\n            renderer.baseGrid.disabled = true;\r\n            renderer.grid.template.strokeOpacity = 0.05;\r\n            renderer.minWidth = undefined;\r\n            renderer.minHeight = undefined;\r\n            renderer.chart = scrollbarChart;\r\n            renderer.padding(0, 0, 0, 0);\r\n            renderer.margin(0, 0, 0, 0);\r\n            yAxis.height = percent(100);\r\n            var labelsTemplate = renderer.labels.template;\r\n            labelsTemplate.fillOpacity = 0.5;\r\n            series.yAxis = yAxis;\r\n            yAxis.maxZoomCount = undefined;\r\n            yAxis.minZoomCount = undefined;\r\n            if (yAxis instanceof DateAxis) {\r\n                var vAxis_3 = yAxis;\r\n                vAxis_3.min = undefined;\r\n                vAxis_3.max = undefined;\r\n                var sourceAxis = sourceSeries.yAxis;\r\n                yAxis.groupCount = sourceAxis.groupCount * 5;\r\n                this._disposers.push(vAxis_3.clonedFrom.events.on(\"extremeschanged\", function () {\r\n                    if ($type.isNumber(vAxis_3.clonedFrom.minDefined)) {\r\n                        vAxis_3.min = vAxis_3.clonedFrom.minDefined;\r\n                    }\r\n                    if ($type.isNumber(vAxis_3.clonedFrom.maxDefined)) {\r\n                        vAxis_3.max = vAxis_3.clonedFrom.maxDefined;\r\n                    }\r\n                }));\r\n            }\r\n            else if (yAxis instanceof ValueAxis) {\r\n                var vAxis_4 = yAxis;\r\n                vAxis_4.min = undefined;\r\n                vAxis_4.max = undefined;\r\n                if (!$type.isNumber(vAxis_4.clonedFrom.minDefined)) {\r\n                    vAxis_4.min = undefined;\r\n                }\r\n                if (!$type.isNumber(vAxis_4.clonedFrom.maxDefined)) {\r\n                    vAxis_4.max = undefined;\r\n                }\r\n                this._disposers.push(vAxis_4.clonedFrom.events.on(\"extremeschanged\", function () {\r\n                    if ($type.isNumber(vAxis_4.clonedFrom.minDefined)) {\r\n                        vAxis_4.min = vAxis_4.clonedFrom.minDefined;\r\n                    }\r\n                    if ($type.isNumber(vAxis_4.clonedFrom.maxDefined)) {\r\n                        vAxis_4.max = vAxis_4.clonedFrom.maxDefined;\r\n                    }\r\n                }));\r\n            }\r\n        }\r\n        else {\r\n            this.scrollbarChart.yAxes.each(function (yAxis) {\r\n                if (yAxis.clonedFrom == sourceSeries.yAxis) {\r\n                    series.yAxis = yAxis;\r\n                }\r\n            });\r\n        }\r\n        series.rangeChangeDuration = 0;\r\n        series.interpolationDuration = 0;\r\n        series.defaultState.transitionDuration = 0;\r\n        series.showOnInit = false;\r\n        this._disposers.push(series.events.on(\"validated\", this.zoomOutAxes, this, false));\r\n        // data might be set drectly on series\r\n        this._disposers.push(sourceSeries.events.on(\"datavalidated\", function () {\r\n            if (series.data != sourceSeries.data) { // data setter doesn't check this\r\n                series.data = sourceSeries.data;\r\n            }\r\n        }, undefined, false));\r\n        series.defaultState.properties.visible = true;\r\n        scrollbarChart.series.push(series);\r\n        this.updateByOrientation();\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYChartScrollbar.prototype.updateByOrientation = function () {\r\n        var _this = this;\r\n        if (this._scrollbarChart) {\r\n            $iter.each(this._scrollbarChart.xAxes.iterator(), function (xAxis) {\r\n                var renderer = xAxis.renderer;\r\n                if (_this.orientation == \"vertical\") {\r\n                    renderer.grid.template.disabled = true;\r\n                    renderer.labels.template.disabled = true;\r\n                    renderer.minGridDistance = 10;\r\n                }\r\n                else {\r\n                    renderer.grid.template.disabled = false;\r\n                    renderer.labels.template.disabled = false;\r\n                    renderer.minGridDistance = xAxis.clonedFrom.renderer.minGridDistance;\r\n                }\r\n            });\r\n            $iter.each(this._scrollbarChart.yAxes.iterator(), function (yAxis) {\r\n                var renderer = yAxis.renderer;\r\n                if (_this.orientation == \"horizontal\") {\r\n                    renderer.grid.template.disabled = true;\r\n                    renderer.labels.template.disabled = true;\r\n                    renderer.minGridDistance = 10;\r\n                }\r\n                else {\r\n                    renderer.grid.template.disabled = false;\r\n                    renderer.labels.template.disabled = false;\r\n                    renderer.minGridDistance = yAxis.clonedFrom.renderer.minGridDistance;\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up after series are removed from Scrollbar.\r\n     *\r\n     * @param event  Event\r\n     */\r\n    XYChartScrollbar.prototype.handleSeriesRemoved = function (event) {\r\n        var sourceSeries = event.oldValue;\r\n        var scrollbarChart = this.scrollbarChart;\r\n        scrollbarChart.series.each(function (series) {\r\n            if (series && series.clonedFrom == sourceSeries) {\r\n                scrollbarChart.series.removeValue(series);\r\n            }\r\n        });\r\n        if (scrollbarChart.series.length == 0) {\r\n            scrollbarChart.xAxes.clear();\r\n            scrollbarChart.yAxes.clear();\r\n        }\r\n        try {\r\n            sourceSeries.events.off(\"validated\", this.zoomOutAxes, this);\r\n        }\r\n        catch (err) {\r\n        }\r\n    };\r\n    Object.defineProperty(XYChartScrollbar.prototype, \"scrollbarChart\", {\r\n        /**\r\n         * A chart element that is used to display graphs in the Scrollbar.\r\n         *\r\n         * This is not the same as `chart`. It's a totally independent instance of\r\n         * [[XYChart]] with separate config, series, etc.\r\n         *\r\n         * It can be configured just like any other [[XYChart]].\r\n         *\r\n         * @readonly\r\n         * @return Scrollbar's internal chart\r\n         */\r\n        get: function () {\r\n            return this._scrollbarChart;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYChartScrollbar.prototype, \"chart\", {\r\n        /**\r\n         * @return Chart\r\n         */\r\n        get: function () {\r\n            return this._chart.get();\r\n        },\r\n        /**\r\n         * A chart that Scrollbar belongs to.\r\n         *\r\n         * @param chart  Chart\r\n         */\r\n        set: function (chart) {\r\n            if (this._chart.get() !== chart) {\r\n                this._chart.set(chart, chart.events.on(\"datavalidated\", this.handleDataChanged, this, false));\r\n                this.handleDataChanged();\r\n                this._scrollbarChart.dataProvider = chart; // this makes scrollbar chart do not validate data untill charts' data is validated\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYChartScrollbar.prototype, \"unselectedOverlay\", {\r\n        /**\r\n         * A [[Sprite]] object representing overlay that is used to dim area of the\r\n         * scrollbar that is currently not selected.\r\n         *\r\n         * Use its `fillOpacity` to set opacity of the fill, with `0` (zero)\r\n         * completely disabling the dimming, and `1` making unselected area completely\r\n         * blank.\r\n         *\r\n         * @since 4.6.1\r\n         * @readonly\r\n         * @return Unselected area curtain element\r\n         */\r\n        get: function () {\r\n            return this._unselectedOverlay;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates Scrollbar's internal chart's data when the main chart's data\r\n     * changes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYChartScrollbar.prototype.handleDataChanged = function () {\r\n        if (this.chart.data != this.scrollbarChart.data) {\r\n            this.scrollbarChart.data = this.chart.data;\r\n        }\r\n        else {\r\n            // add data is handled in XYChart\r\n            // invalidating all data caused the problem: https://github.com/amcharts/amcharts4/issues/2096\r\n            this.scrollbarChart.invalidateRawData();\r\n        }\r\n    };\r\n    /**\r\n     * Zooms out all axes on the internal chart.\r\n     */\r\n    XYChartScrollbar.prototype.zoomOutAxes = function () {\r\n        var scrollbarChart = this.scrollbarChart;\r\n        $iter.each(scrollbarChart.xAxes.iterator(), function (x) {\r\n            x.zoom({ start: 0, end: 1 }, true, true);\r\n        });\r\n        $iter.each(scrollbarChart.yAxes.iterator(), function (y) {\r\n            y.zoom({ start: 0, end: 1 }, true, true);\r\n        });\r\n    };\r\n    /**\r\n     * Updates scrollbar thumb.\r\n     *\r\n     * @ignore\r\n     */\r\n    XYChartScrollbar.prototype.updateThumb = function (dispatchEvents) {\r\n        if (dispatchEvents === void 0) { dispatchEvents = true; }\r\n        _super.prototype.updateThumb.call(this, dispatchEvents);\r\n        if (this._unselectedOverlay) {\r\n            var thumb = this.thumb;\r\n            var x = thumb.pixelX || 0;\r\n            var y = thumb.pixelY || 0;\r\n            var w = thumb.pixelWidth || 0;\r\n            var h = thumb.pixelHeight || 0;\r\n            var path = \"\";\r\n            if (this.orientation == \"horizontal\") {\r\n                path = $path.rectToPath({\r\n                    x: -1,\r\n                    y: 0,\r\n                    width: x,\r\n                    height: h\r\n                });\r\n                path += $path.rectToPath({\r\n                    x: x + w,\r\n                    y: 0,\r\n                    width: (this.pixelWidth || 0) - x - w,\r\n                    height: h\r\n                });\r\n            }\r\n            else {\r\n                path = $path.rectToPath({\r\n                    x: 0,\r\n                    y: 0,\r\n                    width: w,\r\n                    height: y\r\n                });\r\n                path += $path.rectToPath({\r\n                    x: 0,\r\n                    y: y + h,\r\n                    width: w,\r\n                    height: (this.pixelHeight || 0) - y - h\r\n                });\r\n            }\r\n            this._unselectedOverlay.path = path;\r\n        }\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    XYChartScrollbar.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            if ($type.hasValue(config.series) && $type.isArray(config.series)) {\r\n                for (var i = 0, len = config.series.length; i < len; i++) {\r\n                    var series = config.series[i];\r\n                    if ($type.hasValue(series) && $type.isString(series)) {\r\n                        if (this.map.hasKey(series)) {\r\n                            config.series[i] = this.map.getKey(series);\r\n                        }\r\n                        else {\r\n                            throw Error(\"XYChartScrollbar error: Series with id `\" + series + \"` does not exist.\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    return XYChartScrollbar;\r\n}(Scrollbar));\r\nexport { XYChartScrollbar };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"XYChartScrollbar\"] = XYChartScrollbar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}