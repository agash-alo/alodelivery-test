{"ast":null,"code":"/**\r\n * A module that defines Text element used to indicate links.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Label } from \"../../core/elements/Label\";\nimport { MouseCursorStyle } from \"../../core/interaction/Mouse\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\nimport { registry } from \"../Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Creates a text element with a link.\r\n *\r\n * @see {@link ITextLinkEvents} for a list of available events\r\n * @see {@link ITextLinkAdapters} for a list of available Adapters\r\n */\nvar TextLink = /** @class */function (_super) {\n  __extends(TextLink, _super);\n  /**\r\n   * Constructor\r\n   */\n  function TextLink() {\n    var _this = _super.call(this) || this;\n    _this.className = \"TextLink\";\n    _this.selectable = true;\n    var interfaceColors = new InterfaceColorSet();\n    _this.fill = interfaceColors.getFor(\"primaryButton\").brighten(0.3);\n    var hoverState = _this.states.create(\"hover\");\n    hoverState.properties.fill = interfaceColors.getFor(\"primaryButtonHover\").brighten(0.3);\n    var downState = _this.states.create(\"down\");\n    downState.properties.fill = interfaceColors.getFor(\"primaryButtonDown\").brighten(0.3);\n    _this.cursorOverStyle = MouseCursorStyle.pointer;\n    _this.applyTheme();\n    return _this;\n  }\n  return TextLink;\n}(Label);\nexport { TextLink };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"TextLink\"] = TextLink;","map":{"version":3,"names":["__extends","Label","MouseCursorStyle","InterfaceColorSet","registry","TextLink","_super","_this","call","className","selectable","interfaceColors","fill","getFor","brighten","hoverState","states","create","properties","downState","cursorOverStyle","pointer","applyTheme","registeredClasses"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/core/elements/TextLink.js"],"sourcesContent":["/**\r\n * A module that defines Text element used to indicate links.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { MouseCursorStyle } from \"../../core/interaction/Mouse\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { registry } from \"../Registry\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a text element with a link.\r\n *\r\n * @see {@link ITextLinkEvents} for a list of available events\r\n * @see {@link ITextLinkAdapters} for a list of available Adapters\r\n */\r\nvar TextLink = /** @class */ (function (_super) {\r\n    __extends(TextLink, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function TextLink() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"TextLink\";\r\n        _this.selectable = true;\r\n        var interfaceColors = new InterfaceColorSet();\r\n        _this.fill = interfaceColors.getFor(\"primaryButton\").brighten(0.3);\r\n        var hoverState = _this.states.create(\"hover\");\r\n        hoverState.properties.fill = interfaceColors.getFor(\"primaryButtonHover\").brighten(0.3);\r\n        var downState = _this.states.create(\"down\");\r\n        downState.properties.fill = interfaceColors.getFor(\"primaryButtonDown\").brighten(0.3);\r\n        _this.cursorOverStyle = MouseCursorStyle.pointer;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return TextLink;\r\n}(Label));\r\nexport { TextLink };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"TextLink\"] = TextLink;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,KAAK,QAAQ,2BAA2B;AACjD,SAASC,gBAAgB,QAAQ,8BAA8B;AAC/D,SAASC,iBAAiB,QAAQ,oCAAoC;AACtE,SAASC,QAAQ,QAAQ,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,QAAQ,GAAG,aAAe,UAAUC,MAAM,EAAE;EAC5CN,SAAS,CAACK,QAAQ,EAAEC,MAAM,CAAC;EAC3B;AACJ;AACA;EACI,SAASD,QAAQA,CAAA,EAAG;IAChB,IAAIE,KAAK,GAAGD,MAAM,CAACE,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI;IACrCD,KAAK,CAACE,SAAS,GAAG,UAAU;IAC5BF,KAAK,CAACG,UAAU,GAAG,IAAI;IACvB,IAAIC,eAAe,GAAG,IAAIR,iBAAiB,CAAC,CAAC;IAC7CI,KAAK,CAACK,IAAI,GAAGD,eAAe,CAACE,MAAM,CAAC,eAAe,CAAC,CAACC,QAAQ,CAAC,GAAG,CAAC;IAClE,IAAIC,UAAU,GAAGR,KAAK,CAACS,MAAM,CAACC,MAAM,CAAC,OAAO,CAAC;IAC7CF,UAAU,CAACG,UAAU,CAACN,IAAI,GAAGD,eAAe,CAACE,MAAM,CAAC,oBAAoB,CAAC,CAACC,QAAQ,CAAC,GAAG,CAAC;IACvF,IAAIK,SAAS,GAAGZ,KAAK,CAACS,MAAM,CAACC,MAAM,CAAC,MAAM,CAAC;IAC3CE,SAAS,CAACD,UAAU,CAACN,IAAI,GAAGD,eAAe,CAACE,MAAM,CAAC,mBAAmB,CAAC,CAACC,QAAQ,CAAC,GAAG,CAAC;IACrFP,KAAK,CAACa,eAAe,GAAGlB,gBAAgB,CAACmB,OAAO;IAChDd,KAAK,CAACe,UAAU,CAAC,CAAC;IAClB,OAAOf,KAAK;EAChB;EACA,OAAOF,QAAQ;AACnB,CAAC,CAACJ,KAAK,CAAE;AACT,SAASI,QAAQ;AACjB;AACA;AACA;AACA;AACA;AACA;AACAD,QAAQ,CAACmB,iBAAiB,CAAC,UAAU,CAAC,GAAGlB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}