{"ast":null,"code":"/**\r\n * Bullet module\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Bullet } from \"./Bullet\";\nimport { Circle } from \"../../core/elements/Circle\";\nimport { registry } from \"../../core/Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Creates a bullet with a textual label.\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\nvar CircleBullet = /** @class */function (_super) {\n  __extends(CircleBullet, _super);\n  /**\r\n   * Constructor\r\n   */\n  function CircleBullet() {\n    var _this = _super.call(this) || this;\n    _this.className = \"CircleBullet\";\n    var circle = _this.createChild(Circle);\n    circle.shouldClone = false;\n    circle.radius = 5;\n    circle.isMeasured = false;\n    _this.circle = circle;\n    _this.applyTheme();\n    return _this;\n  }\n  /**\r\n   * Copies all proprities and related stuff from another instance of\r\n   * [[CircleBullet]].\r\n   *\r\n   * @param source  Source element\r\n   */\n  CircleBullet.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n    this.circle.copyFrom(source.circle);\n  };\n  return CircleBullet;\n}(Bullet);\nexport { CircleBullet };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"CircleBullet\"] = CircleBullet;","map":{"version":3,"names":["__extends","Bullet","Circle","registry","CircleBullet","_super","_this","call","className","circle","createChild","shouldClone","radius","isMeasured","applyTheme","prototype","copyFrom","source","registeredClasses"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/charts/elements/CircleBullet.js"],"sourcesContent":["/**\r\n * Bullet module\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Bullet } from \"./Bullet\";\r\nimport { Circle } from \"../../core/elements/Circle\";\r\nimport { registry } from \"../../core/Registry\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a bullet with a textual label.\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nvar CircleBullet = /** @class */ (function (_super) {\r\n    __extends(CircleBullet, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function CircleBullet() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"CircleBullet\";\r\n        var circle = _this.createChild(Circle);\r\n        circle.shouldClone = false;\r\n        circle.radius = 5;\r\n        circle.isMeasured = false;\r\n        _this.circle = circle;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Copies all proprities and related stuff from another instance of\r\n     * [[CircleBullet]].\r\n     *\r\n     * @param source  Source element\r\n     */\r\n    CircleBullet.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.circle.copyFrom(source.circle);\r\n    };\r\n    return CircleBullet;\r\n}(Bullet));\r\nexport { CircleBullet };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CircleBullet\"] = CircleBullet;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,MAAM,QAAQ,4BAA4B;AACnD,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,YAAY,GAAG,aAAe,UAAUC,MAAM,EAAE;EAChDL,SAAS,CAACI,YAAY,EAAEC,MAAM,CAAC;EAC/B;AACJ;AACA;EACI,SAASD,YAAYA,CAAA,EAAG;IACpB,IAAIE,KAAK,GAAGD,MAAM,CAACE,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI;IACrCD,KAAK,CAACE,SAAS,GAAG,cAAc;IAChC,IAAIC,MAAM,GAAGH,KAAK,CAACI,WAAW,CAACR,MAAM,CAAC;IACtCO,MAAM,CAACE,WAAW,GAAG,KAAK;IAC1BF,MAAM,CAACG,MAAM,GAAG,CAAC;IACjBH,MAAM,CAACI,UAAU,GAAG,KAAK;IACzBP,KAAK,CAACG,MAAM,GAAGA,MAAM;IACrBH,KAAK,CAACQ,UAAU,CAAC,CAAC;IAClB,OAAOR,KAAK;EAChB;EACA;AACJ;AACA;AACA;AACA;AACA;EACIF,YAAY,CAACW,SAAS,CAACC,QAAQ,GAAG,UAAUC,MAAM,EAAE;IAChDZ,MAAM,CAACU,SAAS,CAACC,QAAQ,CAACT,IAAI,CAAC,IAAI,EAAEU,MAAM,CAAC;IAC5C,IAAI,CAACR,MAAM,CAACO,QAAQ,CAACC,MAAM,CAACR,MAAM,CAAC;EACvC,CAAC;EACD,OAAOL,YAAY;AACvB,CAAC,CAACH,MAAM,CAAE;AACV,SAASG,YAAY;AACrB;AACA;AACA;AACA;AACA;AACA;AACAD,QAAQ,CAACe,iBAAiB,CAAC,cAAc,CAAC,GAAGd,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}