{"ast":null,"code":"/**\r\n * Pattern module.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { BaseObject } from \"../../Base\";\nimport { getGhostPaper } from \"../Paper\";\nimport { List, ListDisposer } from \"../../utils/List\";\nimport { Animation, AnimationDisposer } from \"../../utils/Animation\";\nimport { registry } from \"../../Registry\";\nimport { InterfaceColorSet } from \"../../utils/InterfaceColorSet\";\nimport * as $iter from \"../../utils/Iterator\";\nimport * as $object from \"../../utils/Object\";\nimport * as $type from \"../../utils/Type\";\n;\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Base class to define patterns.\r\n */\nvar Pattern = /** @class */function (_super) {\n  __extends(Pattern, _super);\n  //public propertyValues = new Dictionary<PatternProperties, any>();\n  /**\r\n   * Constructor\r\n   */\n  function Pattern() {\n    var _this =\n    // Init\n    _super.call(this) || this;\n    /**\r\n     * List of elements the pattern consists of.\r\n     */\n    _this._elements = new List();\n    /**\r\n     * A storage for Filter property/value pairs.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @see {@link PatternProperties}\r\n     */\n    _this.properties = {};\n    _this.className = \"Pattern\";\n    // Set defaults\n    _this.width = 10;\n    _this.height = 10;\n    _this.x = 0;\n    _this.y = 0;\n    _this.patternUnits = \"userSpaceOnUse\";\n    var interfaceColors = new InterfaceColorSet();\n    _this.backgroundFill = interfaceColors.getFor(\"background\");\n    _this.backgroundOpacity = 0;\n    _this.fillOpacity = 1;\n    _this.fill = interfaceColors.getFor(\"alternativeBackground\");\n    _this.stroke = interfaceColors.getFor(\"alternativeBackground\");\n    _this.strokeOpacity = 1;\n    _this.strokeWidth = 1;\n    _this.shapeRendering = \"crispEdges\";\n    _this.rotation = 0;\n    // Create main group to store pattern elements inelements\n    _this.element = _this.paper.addGroup(\"pattern\");\n    _this.id = \"pattern-\" + registry.getUniqueId();\n    _this.element.attr({\n      \"id\": _this.id\n    });\n    _this._disposers.push(_this.element);\n    // Make elements disposable\n    _this._disposers.push(new ListDisposer(_this._elements));\n    // Request again to trigger getter/setter code\n    _this.patternUnits = _this.patternUnits;\n    _this.width = _this.width;\n    _this.height = _this.height;\n    // Apply theme\n    _this.applyTheme();\n    return _this;\n  }\n  /**\r\n   * Draws the pattern.\r\n   */\n  Pattern.prototype.draw = function () {\n    var _this = this;\n    var patternElement = this.element;\n    if (patternElement) {\n      patternElement.removeChildNodes();\n      var background = this.paper.add(\"rect\");\n      background.attr({\n        \"width\": this.width,\n        \"height\": this.height,\n        \"shape-rendering\": \"crispEdges\",\n        \"fill\": this.backgroundFill.hex,\n        \"fill-opacity\": this.backgroundOpacity,\n        \"stroke\": this.backgroundFill.hex,\n        \"stroke-opacity\": 0\n      });\n      patternElement.add(background);\n      patternElement.attr({\n        \"x\": this.x,\n        \"y\": this.y,\n        \"width\": this.width,\n        \"height\": this.height,\n        \"stroke\": this.stroke.hex,\n        \"fill\": this.fill.hex,\n        \"fill-opacity\": this.fillOpacity,\n        \"stroke-opacity\": this.strokeOpacity,\n        \"stroke-width\": this.strokeWidth,\n        \"shape-rendering\": this.shapeRendering,\n        \"patternUnits\": this.patternUnits,\n        \"stroke-dasharray\": this.strokeDasharray\n      });\n      $iter.each(this._elements.iterator(), function (element) {\n        element.rotation = _this.rotation;\n        element.rotationX = _this.properties[\"rotationX\"];\n        element.rotationY = _this.properties[\"rotationY\"];\n        _this.element.add(element);\n      });\n    }\n  };\n  /**\r\n   * Animate pattern properties.\r\n   *\r\n   * @see {@link Animation}\r\n   * @param animationOptions  Animation options\r\n   * @param duration          Duration (ms)\r\n   * @param easing            Easing function\r\n   * @return Animation instance\r\n   */\n  Pattern.prototype.animate = function (animationOptions, duration, easing) {\n    return new Animation(this, animationOptions, duration, easing).start();\n  };\n  /**\r\n   * Adds an element to the pattern.\r\n   *\r\n   * @param element  Element\r\n   */\n  Pattern.prototype.addElement = function (element) {\n    this._elements.push(element);\n    this._disposers.push(element);\n  };\n  /**\r\n   * Remove an element from the pattern.\r\n   *\r\n   * @param element  Element\r\n   */\n  Pattern.prototype.removeElement = function (element) {\n    this._elements.removeValue(element);\n    this.removeDispose(element);\n  };\n  Object.defineProperty(Pattern.prototype, \"elements\", {\n    /**\r\n     * Returns the list of SVG elements comprising the pattern.\r\n     *\r\n     * @return Pattern elements\r\n     */\n    get: function () {\n      return this._elements;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"fillOpacity\", {\n    /**\r\n     * @return Opacity (0-1)\r\n     */\n    get: function () {\n      return this.properties[\"fillOpacity\"];\n    },\n    /**\r\n     * Pattern fill opacity. (0-1)\r\n     *\r\n     * @param value  Opacity (0-1)\r\n     */\n    set: function (value) {\n      this.properties[\"fillOpacity\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"fill\", {\n    /**\r\n     * @return Fill color\r\n     */\n    get: function () {\n      return this.properties[\"fill\"];\n    },\n    /**\r\n     * Fill color of the pattern.\r\n     *\r\n     * @param value  Fill color\r\n     */\n    set: function (value) {\n      this.properties[\"fill\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"backgroundFill\", {\n    /**\r\n     * @return Background color\r\n     */\n    get: function () {\n      return this.properties[\"backgroundFill\"];\n    },\n    /**\r\n     * Pattern background fill color.\r\n     *\r\n     * @param value  Background color\r\n     */\n    set: function (value) {\n      this.properties[\"backgroundFill\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"backgroundOpacity\", {\n    /**\r\n     * @return Background opacity (0-1)\r\n     */\n    get: function () {\n      return this.properties[\"backgroundOpacity\"];\n    },\n    /**\r\n     * Pattern backgorund opacity. (0-1)\r\n     *\r\n     * @param value  Background opacity (0-1)\r\n     */\n    set: function (value) {\n      this.properties[\"backgroundOpacity\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"stroke\", {\n    /**\r\n     * @return Color\r\n     */\n    get: function () {\n      return this.properties[\"stroke\"];\n    },\n    /**\r\n     * Pattern stroke (border) color.\r\n     *\r\n     * @param value  Color\r\n     */\n    set: function (value) {\n      this.properties[\"stroke\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"strokeOpacity\", {\n    /**\r\n     * @return Opacity (0-1)\r\n     */\n    get: function () {\n      return this.properties[\"strokeOpacity\"];\n    },\n    /**\r\n     * Pattern stroke opacity. (0-1)\r\n     *\r\n     * @param value  Opacity (0-1)\r\n     */\n    set: function (value) {\n      this.properties[\"strokeOpacity\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"strokeWidth\", {\n    /**\r\n     * @return Stroke thickness (px)\r\n     */\n    get: function () {\n      return this.properties[\"strokeWidth\"];\n    },\n    /**\r\n     * Pattern stroke thickness in pixels.\r\n     *\r\n     * @param value  Stroke thickness (px)\r\n     */\n    set: function (value) {\n      this.properties[\"strokeWidth\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"shapeRendering\", {\n    get: function () {\n      return this.properties[\"shapeRendering\"];\n    },\n    /**\r\n     * Shape rendering\r\n     * @param value [description]\r\n     */\n    set: function (value) {\n      this.properties[\"shapeRendering\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"rotation\", {\n    /**\r\n     * @return Rotation\r\n     */\n    get: function () {\n      return this.properties[\"rotation\"];\n    },\n    /**\r\n     * Pattern rotation in degrees.\r\n     *\r\n     * @param value  Rotation\r\n     */\n    set: function (value) {\n      this.properties[\"rotation\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"patternUnits\", {\n    /**\r\n     * @return Units\r\n     */\n    get: function () {\n      return this.properties[\"patternUnits\"];\n    },\n    /**\r\n     * Pattern measuring units.\r\n     *\r\n     * Available options: \"userSpaceOnUse\" | \"objectBoundingBox\".\r\n     *\r\n     * @param value  Units\r\n     */\n    set: function (value) {\n      this.properties[\"patternUnits\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"width\", {\n    /**\r\n     * @return Width (px)\r\n     */\n    get: function () {\n      return this.properties[\"width\"];\n    },\n    /**\r\n     * Pattern width in pixels.\r\n     *\r\n     * @param value  Width (px)\r\n     */\n    set: function (value) {\n      this.properties[\"width\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"height\", {\n    /**\r\n     * @return Height (px)\r\n     */\n    get: function () {\n      return this.properties[\"height\"];\n    },\n    /**\r\n     * Pattern height in pixels.\r\n     *\r\n     * @param value Height (px)\r\n     */\n    set: function (value) {\n      this.properties[\"height\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"x\", {\n    /**\r\n     * @return X (px)\r\n     */\n    get: function () {\n      return this.properties[\"x\"];\n    },\n    /**\r\n     * X position. (pixels)\r\n     *\r\n     * @param value X (px)\r\n     */\n    set: function (value) {\n      this.properties[\"x\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"y\", {\n    /**\r\n     * @return Y (px)\r\n     */\n    get: function () {\n      return this.properties[\"y\"];\n    },\n    /**\r\n     * Y position (px).\r\n     *\r\n     * @param value Y (px)\r\n     */\n    set: function (value) {\n      this.properties[\"y\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"paper\", {\n    /**\r\n     * @ignore Exclude from docs\r\n     * @return Paper\r\n     */\n    get: function () {\n      if (this._paper) {\n        return this._paper;\n      }\n      return getGhostPaper();\n    },\n    /**\r\n     * [[Paper]] instance to draw pattern in.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param paper  Paper\r\n     */\n    set: function (paper) {\n      if (this._paper != paper) {\n        this._paper = paper;\n        this.draw();\n        paper.appendDef(this.element);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Copies properties from another Pattern instance.\r\n   *\r\n   * @param source  Source pattern\r\n   */\n  Pattern.prototype.copyFrom = function (source) {\n    var _this = this;\n    _super.prototype.copyFrom.call(this, source);\n    $object.each(source.properties, function (key, value) {\n      _this[key] = value;\n    });\n  };\n  Object.defineProperty(Pattern.prototype, \"animations\", {\n    /**\r\n     * A list of animations currently running on the patter.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Animation list\r\n     */\n    get: function () {\n      if (!this._animations) {\n        this._animations = [];\n        this._disposers.push(new AnimationDisposer(this._animations));\n      }\n      return this._animations;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"strokeDasharray\", {\n    /**\r\n     * @return `stroke-dasharray`\r\n     */\n    get: function () {\n      return this.properties[\"strokeDashArray\"];\n    },\n    /**\r\n     * A `stroke-dasharray` for the stroke (outline).\r\n     *\r\n     * \"Dasharray\" allows setting rules to make lines dashed, dotted, etc.\r\n     *\r\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray} for more info on `stroke-dasharray`\r\n     * @param value  `stroke-dasharray`\r\n     */\n    set: function (value) {\n      this.properties[\"strokeDashArray\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Processes JSON-based config before it is applied to the object.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param config  Config\r\n   */\n  Pattern.prototype.processConfig = function (config) {\n    if (config) {\n      // Set up series\n      if ($type.hasValue(config.elements) && $type.isArray(config.elements)) {\n        for (var i = 0, len = config.elements.length; i < len; i++) {\n          var element = config.elements[i];\n          if ($type.hasValue(element[\"type\"])) {\n            var sprite = this.createEntryInstance(element);\n            if (sprite instanceof BaseObject) {\n              sprite.config = element;\n            }\n            this.addElement($type.hasValue(element[\"typeProperty\"]) ? sprite[element[\"typeProperty\"]] : sprite.element);\n          }\n        }\n      }\n    }\n    _super.prototype.processConfig.call(this, config);\n  };\n  return Pattern;\n}(BaseObject);\nexport { Pattern };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"Pattern\"] = Pattern;","map":{"version":3,"names":["__extends","BaseObject","getGhostPaper","List","ListDisposer","Animation","AnimationDisposer","registry","InterfaceColorSet","$iter","$object","$type","Pattern","_super","_this","call","_elements","properties","className","width","height","x","y","patternUnits","interfaceColors","backgroundFill","getFor","backgroundOpacity","fillOpacity","fill","stroke","strokeOpacity","strokeWidth","shapeRendering","rotation","element","paper","addGroup","id","getUniqueId","attr","_disposers","push","applyTheme","prototype","draw","patternElement","removeChildNodes","background","add","hex","strokeDasharray","each","iterator","rotationX","rotationY","animate","animationOptions","duration","easing","start","addElement","removeElement","removeValue","removeDispose","Object","defineProperty","get","enumerable","configurable","set","value","_paper","appendDef","copyFrom","source","key","_animations","processConfig","config","hasValue","elements","isArray","i","len","length","sprite","createEntryInstance","registeredClasses"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/Pattern.js"],"sourcesContent":["/**\r\n * Pattern module.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../../Base\";\r\nimport { getGhostPaper } from \"../Paper\";\r\nimport { List, ListDisposer } from \"../../utils/List\";\r\nimport { Animation, AnimationDisposer } from \"../../utils/Animation\";\r\nimport { registry } from \"../../Registry\";\r\nimport { InterfaceColorSet } from \"../../utils/InterfaceColorSet\";\r\nimport * as $iter from \"../../utils/Iterator\";\r\nimport * as $object from \"../../utils/Object\";\r\nimport * as $type from \"../../utils/Type\";\r\n;\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Base class to define patterns.\r\n */\r\nvar Pattern = /** @class */ (function (_super) {\r\n    __extends(Pattern, _super);\r\n    //public propertyValues = new Dictionary<PatternProperties, any>();\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Pattern() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * List of elements the pattern consists of.\r\n         */\r\n        _this._elements = new List();\r\n        /**\r\n         * A storage for Filter property/value pairs.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @see {@link PatternProperties}\r\n         */\r\n        _this.properties = {};\r\n        _this.className = \"Pattern\";\r\n        // Set defaults\r\n        _this.width = 10;\r\n        _this.height = 10;\r\n        _this.x = 0;\r\n        _this.y = 0;\r\n        _this.patternUnits = \"userSpaceOnUse\";\r\n        var interfaceColors = new InterfaceColorSet();\r\n        _this.backgroundFill = interfaceColors.getFor(\"background\");\r\n        _this.backgroundOpacity = 0;\r\n        _this.fillOpacity = 1;\r\n        _this.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n        _this.stroke = interfaceColors.getFor(\"alternativeBackground\");\r\n        _this.strokeOpacity = 1;\r\n        _this.strokeWidth = 1;\r\n        _this.shapeRendering = \"crispEdges\";\r\n        _this.rotation = 0;\r\n        // Create main group to store pattern elements inelements\r\n        _this.element = _this.paper.addGroup(\"pattern\");\r\n        _this.id = \"pattern-\" + registry.getUniqueId();\r\n        _this.element.attr({ \"id\": _this.id });\r\n        _this._disposers.push(_this.element);\r\n        // Make elements disposable\r\n        _this._disposers.push(new ListDisposer(_this._elements));\r\n        // Request again to trigger getter/setter code\r\n        _this.patternUnits = _this.patternUnits;\r\n        _this.width = _this.width;\r\n        _this.height = _this.height;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the pattern.\r\n     */\r\n    Pattern.prototype.draw = function () {\r\n        var _this = this;\r\n        var patternElement = this.element;\r\n        if (patternElement) {\r\n            patternElement.removeChildNodes();\r\n            var background = this.paper.add(\"rect\");\r\n            background.attr({ \"width\": this.width, \"height\": this.height, \"shape-rendering\": \"crispEdges\", \"fill\": this.backgroundFill.hex, \"fill-opacity\": this.backgroundOpacity, \"stroke\": this.backgroundFill.hex, \"stroke-opacity\": 0 });\r\n            patternElement.add(background);\r\n            patternElement.attr({ \"x\": this.x, \"y\": this.y, \"width\": this.width, \"height\": this.height, \"stroke\": this.stroke.hex, \"fill\": this.fill.hex, \"fill-opacity\": this.fillOpacity, \"stroke-opacity\": this.strokeOpacity, \"stroke-width\": this.strokeWidth, \"shape-rendering\": this.shapeRendering, \"patternUnits\": this.patternUnits, \"stroke-dasharray\": this.strokeDasharray });\r\n            $iter.each(this._elements.iterator(), function (element) {\r\n                element.rotation = _this.rotation;\r\n                element.rotationX = _this.properties[\"rotationX\"];\r\n                element.rotationY = _this.properties[\"rotationY\"];\r\n                _this.element.add(element);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Animate pattern properties.\r\n     *\r\n     * @see {@link Animation}\r\n     * @param animationOptions  Animation options\r\n     * @param duration          Duration (ms)\r\n     * @param easing            Easing function\r\n     * @return Animation instance\r\n     */\r\n    Pattern.prototype.animate = function (animationOptions, duration, easing) {\r\n        return new Animation(this, animationOptions, duration, easing).start();\r\n    };\r\n    /**\r\n     * Adds an element to the pattern.\r\n     *\r\n     * @param element  Element\r\n     */\r\n    Pattern.prototype.addElement = function (element) {\r\n        this._elements.push(element);\r\n        this._disposers.push(element);\r\n    };\r\n    /**\r\n     * Remove an element from the pattern.\r\n     *\r\n     * @param element  Element\r\n     */\r\n    Pattern.prototype.removeElement = function (element) {\r\n        this._elements.removeValue(element);\r\n        this.removeDispose(element);\r\n    };\r\n    Object.defineProperty(Pattern.prototype, \"elements\", {\r\n        /**\r\n         * Returns the list of SVG elements comprising the pattern.\r\n         *\r\n         * @return Pattern elements\r\n         */\r\n        get: function () {\r\n            return this._elements;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"fillOpacity\", {\r\n        /**\r\n         * @return Opacity (0-1)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"fillOpacity\"];\r\n        },\r\n        /**\r\n         * Pattern fill opacity. (0-1)\r\n         *\r\n         * @param value  Opacity (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"fillOpacity\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"fill\", {\r\n        /**\r\n         * @return Fill color\r\n         */\r\n        get: function () {\r\n            return this.properties[\"fill\"];\r\n        },\r\n        /**\r\n         * Fill color of the pattern.\r\n         *\r\n         * @param value  Fill color\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"fill\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"backgroundFill\", {\r\n        /**\r\n         * @return Background color\r\n         */\r\n        get: function () {\r\n            return this.properties[\"backgroundFill\"];\r\n        },\r\n        /**\r\n         * Pattern background fill color.\r\n         *\r\n         * @param value  Background color\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"backgroundFill\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"backgroundOpacity\", {\r\n        /**\r\n         * @return Background opacity (0-1)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"backgroundOpacity\"];\r\n        },\r\n        /**\r\n         * Pattern backgorund opacity. (0-1)\r\n         *\r\n         * @param value  Background opacity (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"backgroundOpacity\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"stroke\", {\r\n        /**\r\n         * @return Color\r\n         */\r\n        get: function () {\r\n            return this.properties[\"stroke\"];\r\n        },\r\n        /**\r\n         * Pattern stroke (border) color.\r\n         *\r\n         * @param value  Color\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"stroke\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"strokeOpacity\", {\r\n        /**\r\n         * @return Opacity (0-1)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"strokeOpacity\"];\r\n        },\r\n        /**\r\n         * Pattern stroke opacity. (0-1)\r\n         *\r\n         * @param value  Opacity (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"strokeOpacity\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"strokeWidth\", {\r\n        /**\r\n         * @return Stroke thickness (px)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"strokeWidth\"];\r\n        },\r\n        /**\r\n         * Pattern stroke thickness in pixels.\r\n         *\r\n         * @param value  Stroke thickness (px)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"strokeWidth\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"shapeRendering\", {\r\n        get: function () {\r\n            return this.properties[\"shapeRendering\"];\r\n        },\r\n        /**\r\n         * Shape rendering\r\n         * @param value [description]\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"shapeRendering\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"rotation\", {\r\n        /**\r\n         * @return Rotation\r\n         */\r\n        get: function () {\r\n            return this.properties[\"rotation\"];\r\n        },\r\n        /**\r\n         * Pattern rotation in degrees.\r\n         *\r\n         * @param value  Rotation\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"rotation\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"patternUnits\", {\r\n        /**\r\n         * @return Units\r\n         */\r\n        get: function () {\r\n            return this.properties[\"patternUnits\"];\r\n        },\r\n        /**\r\n         * Pattern measuring units.\r\n         *\r\n         * Available options: \"userSpaceOnUse\" | \"objectBoundingBox\".\r\n         *\r\n         * @param value  Units\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"patternUnits\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"width\", {\r\n        /**\r\n         * @return Width (px)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"width\"];\r\n        },\r\n        /**\r\n         * Pattern width in pixels.\r\n         *\r\n         * @param value  Width (px)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"width\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"height\", {\r\n        /**\r\n         * @return Height (px)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"height\"];\r\n        },\r\n        /**\r\n         * Pattern height in pixels.\r\n         *\r\n         * @param value Height (px)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"height\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"x\", {\r\n        /**\r\n         * @return X (px)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"x\"];\r\n        },\r\n        /**\r\n         * X position. (pixels)\r\n         *\r\n         * @param value X (px)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"x\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"y\", {\r\n        /**\r\n         * @return Y (px)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"y\"];\r\n        },\r\n        /**\r\n         * Y position (px).\r\n         *\r\n         * @param value Y (px)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"y\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"paper\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Paper\r\n         */\r\n        get: function () {\r\n            if (this._paper) {\r\n                return this._paper;\r\n            }\r\n            return getGhostPaper();\r\n        },\r\n        /**\r\n         * [[Paper]] instance to draw pattern in.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param paper  Paper\r\n         */\r\n        set: function (paper) {\r\n            if (this._paper != paper) {\r\n                this._paper = paper;\r\n                this.draw();\r\n                paper.appendDef(this.element);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Copies properties from another Pattern instance.\r\n     *\r\n     * @param source  Source pattern\r\n     */\r\n    Pattern.prototype.copyFrom = function (source) {\r\n        var _this = this;\r\n        _super.prototype.copyFrom.call(this, source);\r\n        $object.each(source.properties, function (key, value) {\r\n            _this[key] = value;\r\n        });\r\n    };\r\n    Object.defineProperty(Pattern.prototype, \"animations\", {\r\n        /**\r\n         * A list of animations currently running on the patter.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Animation list\r\n         */\r\n        get: function () {\r\n            if (!this._animations) {\r\n                this._animations = [];\r\n                this._disposers.push(new AnimationDisposer(this._animations));\r\n            }\r\n            return this._animations;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"strokeDasharray\", {\r\n        /**\r\n         * @return `stroke-dasharray`\r\n         */\r\n        get: function () {\r\n            return this.properties[\"strokeDashArray\"];\r\n        },\r\n        /**\r\n         * A `stroke-dasharray` for the stroke (outline).\r\n         *\r\n         * \"Dasharray\" allows setting rules to make lines dashed, dotted, etc.\r\n         *\r\n         * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray} for more info on `stroke-dasharray`\r\n         * @param value  `stroke-dasharray`\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"strokeDashArray\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    Pattern.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            // Set up series\r\n            if ($type.hasValue(config.elements) && $type.isArray(config.elements)) {\r\n                for (var i = 0, len = config.elements.length; i < len; i++) {\r\n                    var element = config.elements[i];\r\n                    if ($type.hasValue(element[\"type\"])) {\r\n                        var sprite = this.createEntryInstance(element);\r\n                        if (sprite instanceof BaseObject) {\r\n                            sprite.config = element;\r\n                        }\r\n                        this.addElement($type.hasValue(element[\"typeProperty\"])\r\n                            ? sprite[element[\"typeProperty\"]]\r\n                            : sprite.element);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    return Pattern;\r\n}(BaseObject));\r\nexport { Pattern };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Pattern\"] = Pattern;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}