{"ast":null,"code":"import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDivider {\n  constructor() {\n    this._vertical = false;\n    this._inset = false;\n  }\n  /** Whether the divider is vertically aligned. */\n  get vertical() {\n    return this._vertical;\n  }\n  set vertical(value) {\n    this._vertical = coerceBooleanProperty(value);\n  }\n  /** Whether the divider is an inset divider. */\n  get inset() {\n    return this._inset;\n  }\n  set inset(value) {\n    this._inset = coerceBooleanProperty(value);\n  }\n}\nMatDivider.decorators = [{\n  type: Component,\n  args: [{\n    selector: 'mat-divider',\n    host: {\n      'role': 'separator',\n      '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n      '[class.mat-divider-vertical]': 'vertical',\n      '[class.mat-divider-horizontal]': '!vertical',\n      '[class.mat-divider-inset]': 'inset',\n      'class': 'mat-divider'\n    },\n    template: '',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"]\n  }]\n}];\nMatDivider.propDecorators = {\n  vertical: [{\n    type: Input\n  }],\n  inset: [{\n    type: Input\n  }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDividerModule {}\nMatDividerModule.decorators = [{\n  type: NgModule,\n  args: [{\n    imports: [MatCommonModule],\n    exports: [MatDivider, MatCommonModule],\n    declarations: [MatDivider]\n  }]\n}];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };","map":{"version":3,"names":["Component","ViewEncapsulation","ChangeDetectionStrategy","Input","NgModule","coerceBooleanProperty","MatCommonModule","MatDivider","constructor","_vertical","_inset","vertical","value","inset","decorators","type","args","selector","host","template","encapsulation","None","changeDetection","OnPush","styles","propDecorators","MatDividerModule","imports","exports","declarations"],"sources":["D:/alodelivery test/node_modules/@angular/material/fesm2015/divider.js"],"sourcesContent":["import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDivider {\n    constructor() {\n        this._vertical = false;\n        this._inset = false;\n    }\n    /** Whether the divider is vertically aligned. */\n    get vertical() { return this._vertical; }\n    set vertical(value) { this._vertical = coerceBooleanProperty(value); }\n    /** Whether the divider is an inset divider. */\n    get inset() { return this._inset; }\n    set inset(value) { this._inset = coerceBooleanProperty(value); }\n}\nMatDivider.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-divider',\n                host: {\n                    'role': 'separator',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-divider-vertical]': 'vertical',\n                    '[class.mat-divider-horizontal]': '!vertical',\n                    '[class.mat-divider-inset]': 'inset',\n                    'class': 'mat-divider'\n                },\n                template: '',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"]\n            },] }\n];\nMatDivider.propDecorators = {\n    vertical: [{ type: Input }],\n    inset: [{ type: Input }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDividerModule {\n}\nMatDividerModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [MatCommonModule],\n                exports: [MatDivider, MatCommonModule],\n                declarations: [MatDivider],\n            },] }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,iBAAiB,EAAEC,uBAAuB,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,eAAe;AACtG,SAASC,qBAAqB,QAAQ,uBAAuB;AAC7D,SAASC,eAAe,QAAQ,wBAAwB;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,UAAU,CAAC;EACbC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,SAAS,GAAG,KAAK;IACtB,IAAI,CAACC,MAAM,GAAG,KAAK;EACvB;EACA;EACA,IAAIC,QAAQA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACF,SAAS;EAAE;EACxC,IAAIE,QAAQA,CAACC,KAAK,EAAE;IAAE,IAAI,CAACH,SAAS,GAAGJ,qBAAqB,CAACO,KAAK,CAAC;EAAE;EACrE;EACA,IAAIC,KAAKA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACH,MAAM;EAAE;EAClC,IAAIG,KAAKA,CAACD,KAAK,EAAE;IAAE,IAAI,CAACF,MAAM,GAAGL,qBAAqB,CAACO,KAAK,CAAC;EAAE;AACnE;AACAL,UAAU,CAACO,UAAU,GAAG,CACpB;EAAEC,IAAI,EAAEf,SAAS;EAAEgB,IAAI,EAAE,CAAC;IACdC,QAAQ,EAAE,aAAa;IACvBC,IAAI,EAAE;MACF,MAAM,EAAE,WAAW;MACnB,yBAAyB,EAAE,sCAAsC;MACjE,8BAA8B,EAAE,UAAU;MAC1C,gCAAgC,EAAE,WAAW;MAC7C,2BAA2B,EAAE,OAAO;MACpC,OAAO,EAAE;IACb,CAAC;IACDC,QAAQ,EAAE,EAAE;IACZC,aAAa,EAAEnB,iBAAiB,CAACoB,IAAI;IACrCC,eAAe,EAAEpB,uBAAuB,CAACqB,MAAM;IAC/CC,MAAM,EAAE,CAAC,+SAA+S;EAC5T,CAAC;AAAG,CAAC,CAChB;AACDjB,UAAU,CAACkB,cAAc,GAAG;EACxBd,QAAQ,EAAE,CAAC;IAAEI,IAAI,EAAEZ;EAAM,CAAC,CAAC;EAC3BU,KAAK,EAAE,CAAC;IAAEE,IAAI,EAAEZ;EAAM,CAAC;AAC3B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMuB,gBAAgB,CAAC;AAEvBA,gBAAgB,CAACZ,UAAU,GAAG,CAC1B;EAAEC,IAAI,EAAEX,QAAQ;EAAEY,IAAI,EAAE,CAAC;IACbW,OAAO,EAAE,CAACrB,eAAe,CAAC;IAC1BsB,OAAO,EAAE,CAACrB,UAAU,EAAED,eAAe,CAAC;IACtCuB,YAAY,EAAE,CAACtB,UAAU;EAC7B,CAAC;AAAG,CAAC,CAChB;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAASA,UAAU,EAAEmB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}