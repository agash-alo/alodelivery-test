{"ast":null,"code":"/**\r\n * 3D Pie chart module.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * Imports\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { PieChart, PieChartDataItem } from \"./PieChart\";\nimport { PieSeries3D } from \"../series/PieSeries3D\";\nimport { registry } from \"../../core/Registry\";\nimport * as $math from \"../../core/utils/Math\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Defines a [[DataItem]] for [[PieChart3D]].\r\n *\r\n * @see {@link DataItem}\r\n */\nvar PieChart3DDataItem = /** @class */function (_super) {\n  __extends(PieChart3DDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n  function PieChart3DDataItem() {\n    var _this = _super.call(this) || this;\n    _this.className = \"PieChart3DDataItem\";\n    _this.applyTheme();\n    return _this;\n  }\n  return PieChart3DDataItem;\n}(PieChartDataItem);\nexport { PieChart3DDataItem };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Creates a 3D Pie chart.\r\n *\r\n *  * ```TypeScript\r\n * // Includes\r\n * import * as am4core from \"@amcharts/amcharts4/core\";\r\n * import * as am4charts from \"@amcharts/amcharts4/charts\";\r\n *\r\n * // Create chart\r\n * let chart = am4core.create(\"chartdiv\", am4charts.Pie3DChart);\r\n *\r\n * // Set data\r\n * chart.data = [{\r\n * \t\"country\": \"Lithuania\",\r\n * \t\"litres\": 501.9\r\n * }, {\r\n * \t\"country\": \"Czechia\",\r\n * \t\"litres\": 301.9\r\n * }, {\r\n * \t\"country\": \"Ireland\",\r\n * \t\"litres\": 201.1\r\n * }];\r\n *\r\n * // Create series\r\n * let series = chart.series.push(new am4charts.Pie3DSeries());\r\n * series.dataFields.value = \"litres\";\r\n * series.dataFields.category = \"country\";\r\n * ```\r\n * ```JavaScript\r\n * // Create chart\r\n * var chart = am4core.create(\"chartdiv\", am4charts.Pie3DChart);\r\n *\r\n * // The following would work as well:\r\n * // var chart = am4core.create(\"chartdiv\", \"Pie3DChart\");\r\n *\r\n * // Set data\r\n * chart.data = [{\r\n * \t\"country\": \"Lithuania\",\r\n * \t\"litres\": 501.9\r\n * }, {\r\n * \t\"country\": \"Czechia\",\r\n * \t\"litres\": 301.9\r\n * }, {\r\n * \t\"country\": \"Ireland\",\r\n * \t\"litres\": 201.1\r\n * }];\r\n *\r\n * // Create series\r\n * var series = chart.series.push(new am4charts.Pie3DSeries());\r\n * series.dataFields.value = \"litres\";\r\n * series.dataFields.category = \"country\";\r\n * ```\r\n * ```JSON\r\n * var chart = am4core.createFromConfig({\r\n *\r\n * \t// Series\r\n * \t\"series\": [{\r\n * \t\t\"type\": \"Pie3DSeries\",\r\n * \t\t\"dataFields\": {\r\n * \t\t\t\"value\": \"litres\",\r\n * \t\t\t\"category\": \"country\"\r\n * \t\t}\r\n * \t}],\r\n *\r\n * \t// Data\r\n * \t\"data\": [{\r\n * \t\t\"country\": \"Lithuania\",\r\n * \t\t\"litres\": 501.9\r\n * \t}, {\r\n * \t\t\"country\": \"Czechia\",\r\n * \t\t\"litres\": 301.9\r\n * \t}, {\r\n * \t\t\"country\": \"Ireland\",\r\n * \t\t\"litres\": 201.1\r\n * \t}]\r\n *\r\n * }, \"chartdiv\", \"Pie3DChart\");\r\n * ```\r\n *\r\n * @see {@link IPieChart3DEvents} for a list of available Events\r\n * @see {@link IPieChart3DAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/pie-chart/} for documentation\r\n * @important\r\n */\nvar PieChart3D = /** @class */function (_super) {\n  __extends(PieChart3D, _super);\n  /**\r\n   * Constructor\r\n   */\n  function PieChart3D() {\n    var _this =\n    // Init\n    _super.call(this) || this;\n    _this.className = \"PieChart3D\";\n    _this.depth = 20;\n    _this.angle = 10;\n    // Apply theme\n    _this.applyTheme();\n    return _this;\n  }\n  Object.defineProperty(PieChart3D.prototype, \"depth\", {\n    /**\r\n     * @return Depth (px)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"depth\");\n    },\n    /**\r\n     * Depth of the 3D pie in pixels.\r\n     *\r\n     * This will determine \"height\" of the pie.\r\n     *\r\n     * @default 20\r\n     * @param value  Depth (px)\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"depth\", value)) {\n        this.invalidateDataUsers();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PieChart3D.prototype, \"angle\", {\n    /**\r\n     * @return Angle (degrees)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"angle\");\n    },\n    /**\r\n     * An angle of a \"point of view\" in degrees. Possible range 0 - 90.\r\n     *\r\n     * @default 10\r\n     * @param value  Angle (degrees)\r\n     */\n    set: function (value) {\n      value = $math.fitToRange(value, 0, 90);\n      if (this.setPropertyValue(\"angle\", value)) {\n        this.invalidateDataUsers();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Creates and returns a new Series.\r\n   *\r\n   * @return New series\r\n   */\n  PieChart3D.prototype.createSeries = function () {\n    return new PieSeries3D();\n  };\n  return PieChart3D;\n}(PieChart);\nexport { PieChart3D };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"PieChart3D\"] = PieChart3D;","map":{"version":3,"names":["__extends","PieChart","PieChartDataItem","PieSeries3D","registry","$math","PieChart3DDataItem","_super","_this","call","className","applyTheme","PieChart3D","depth","angle","Object","defineProperty","prototype","get","getPropertyValue","set","value","setPropertyValue","invalidateDataUsers","enumerable","configurable","fitToRange","createSeries","registeredClasses"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/charts/types/PieChart3D.js"],"sourcesContent":["/**\r\n * 3D Pie chart module.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * Imports\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { PieChart, PieChartDataItem } from \"./PieChart\";\r\nimport { PieSeries3D } from \"../series/PieSeries3D\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $math from \"../../core/utils/Math\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[PieChart3D]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar PieChart3DDataItem = /** @class */ (function (_super) {\r\n    __extends(PieChart3DDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PieChart3DDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PieChart3DDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return PieChart3DDataItem;\r\n}(PieChartDataItem));\r\nexport { PieChart3DDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a 3D Pie chart.\r\n *\r\n *  * ```TypeScript\r\n * // Includes\r\n * import * as am4core from \"@amcharts/amcharts4/core\";\r\n * import * as am4charts from \"@amcharts/amcharts4/charts\";\r\n *\r\n * // Create chart\r\n * let chart = am4core.create(\"chartdiv\", am4charts.Pie3DChart);\r\n *\r\n * // Set data\r\n * chart.data = [{\r\n * \t\"country\": \"Lithuania\",\r\n * \t\"litres\": 501.9\r\n * }, {\r\n * \t\"country\": \"Czechia\",\r\n * \t\"litres\": 301.9\r\n * }, {\r\n * \t\"country\": \"Ireland\",\r\n * \t\"litres\": 201.1\r\n * }];\r\n *\r\n * // Create series\r\n * let series = chart.series.push(new am4charts.Pie3DSeries());\r\n * series.dataFields.value = \"litres\";\r\n * series.dataFields.category = \"country\";\r\n * ```\r\n * ```JavaScript\r\n * // Create chart\r\n * var chart = am4core.create(\"chartdiv\", am4charts.Pie3DChart);\r\n *\r\n * // The following would work as well:\r\n * // var chart = am4core.create(\"chartdiv\", \"Pie3DChart\");\r\n *\r\n * // Set data\r\n * chart.data = [{\r\n * \t\"country\": \"Lithuania\",\r\n * \t\"litres\": 501.9\r\n * }, {\r\n * \t\"country\": \"Czechia\",\r\n * \t\"litres\": 301.9\r\n * }, {\r\n * \t\"country\": \"Ireland\",\r\n * \t\"litres\": 201.1\r\n * }];\r\n *\r\n * // Create series\r\n * var series = chart.series.push(new am4charts.Pie3DSeries());\r\n * series.dataFields.value = \"litres\";\r\n * series.dataFields.category = \"country\";\r\n * ```\r\n * ```JSON\r\n * var chart = am4core.createFromConfig({\r\n *\r\n * \t// Series\r\n * \t\"series\": [{\r\n * \t\t\"type\": \"Pie3DSeries\",\r\n * \t\t\"dataFields\": {\r\n * \t\t\t\"value\": \"litres\",\r\n * \t\t\t\"category\": \"country\"\r\n * \t\t}\r\n * \t}],\r\n *\r\n * \t// Data\r\n * \t\"data\": [{\r\n * \t\t\"country\": \"Lithuania\",\r\n * \t\t\"litres\": 501.9\r\n * \t}, {\r\n * \t\t\"country\": \"Czechia\",\r\n * \t\t\"litres\": 301.9\r\n * \t}, {\r\n * \t\t\"country\": \"Ireland\",\r\n * \t\t\"litres\": 201.1\r\n * \t}]\r\n *\r\n * }, \"chartdiv\", \"Pie3DChart\");\r\n * ```\r\n *\r\n * @see {@link IPieChart3DEvents} for a list of available Events\r\n * @see {@link IPieChart3DAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/pie-chart/} for documentation\r\n * @important\r\n */\r\nvar PieChart3D = /** @class */ (function (_super) {\r\n    __extends(PieChart3D, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PieChart3D() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"PieChart3D\";\r\n        _this.depth = 20;\r\n        _this.angle = 10;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(PieChart3D.prototype, \"depth\", {\r\n        /**\r\n         * @return Depth (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"depth\");\r\n        },\r\n        /**\r\n         * Depth of the 3D pie in pixels.\r\n         *\r\n         * This will determine \"height\" of the pie.\r\n         *\r\n         * @default 20\r\n         * @param value  Depth (px)\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"depth\", value)) {\r\n                this.invalidateDataUsers();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PieChart3D.prototype, \"angle\", {\r\n        /**\r\n         * @return Angle (degrees)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"angle\");\r\n        },\r\n        /**\r\n         * An angle of a \"point of view\" in degrees. Possible range 0 - 90.\r\n         *\r\n         * @default 10\r\n         * @param value  Angle (degrees)\r\n         */\r\n        set: function (value) {\r\n            value = $math.fitToRange(value, 0, 90);\r\n            if (this.setPropertyValue(\"angle\", value)) {\r\n                this.invalidateDataUsers();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates and returns a new Series.\r\n     *\r\n     * @return New series\r\n     */\r\n    PieChart3D.prototype.createSeries = function () {\r\n        return new PieSeries3D();\r\n    };\r\n    return PieChart3D;\r\n}(PieChart));\r\nexport { PieChart3D };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PieChart3D\"] = PieChart3D;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,QAAQ,EAAEC,gBAAgB,QAAQ,YAAY;AACvD,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,OAAO,KAAKC,KAAK,MAAM,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,kBAAkB,GAAG,aAAe,UAAUC,MAAM,EAAE;EACtDP,SAAS,CAACM,kBAAkB,EAAEC,MAAM,CAAC;EACrC;AACJ;AACA;EACI,SAASD,kBAAkBA,CAAA,EAAG;IAC1B,IAAIE,KAAK,GAAGD,MAAM,CAACE,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI;IACrCD,KAAK,CAACE,SAAS,GAAG,oBAAoB;IACtCF,KAAK,CAACG,UAAU,CAAC,CAAC;IAClB,OAAOH,KAAK;EAChB;EACA,OAAOF,kBAAkB;AAC7B,CAAC,CAACJ,gBAAgB,CAAE;AACpB,SAASI,kBAAkB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIM,UAAU,GAAG,aAAe,UAAUL,MAAM,EAAE;EAC9CP,SAAS,CAACY,UAAU,EAAEL,MAAM,CAAC;EAC7B;AACJ;AACA;EACI,SAASK,UAAUA,CAAA,EAAG;IAClB,IAAIJ,KAAK;IACT;IACAD,MAAM,CAACE,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI;IACzBD,KAAK,CAACE,SAAS,GAAG,YAAY;IAC9BF,KAAK,CAACK,KAAK,GAAG,EAAE;IAChBL,KAAK,CAACM,KAAK,GAAG,EAAE;IAChB;IACAN,KAAK,CAACG,UAAU,CAAC,CAAC;IAClB,OAAOH,KAAK;EAChB;EACAO,MAAM,CAACC,cAAc,CAACJ,UAAU,CAACK,SAAS,EAAE,OAAO,EAAE;IACjD;AACR;AACA;IACQC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACC,gBAAgB,CAAC,OAAO,CAAC;IACzC,CAAC;IACD;AACR;AACA;AACA;AACA;AACA;AACA;AACA;IACQC,GAAG,EAAE,SAAAA,CAAUC,KAAK,EAAE;MAClB,IAAI,IAAI,CAACC,gBAAgB,CAAC,OAAO,EAAED,KAAK,CAAC,EAAE;QACvC,IAAI,CAACE,mBAAmB,CAAC,CAAC;MAC9B;IACJ,CAAC;IACDC,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFV,MAAM,CAACC,cAAc,CAACJ,UAAU,CAACK,SAAS,EAAE,OAAO,EAAE;IACjD;AACR;AACA;IACQC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACC,gBAAgB,CAAC,OAAO,CAAC;IACzC,CAAC;IACD;AACR;AACA;AACA;AACA;AACA;IACQC,GAAG,EAAE,SAAAA,CAAUC,KAAK,EAAE;MAClBA,KAAK,GAAGhB,KAAK,CAACqB,UAAU,CAACL,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC;MACtC,IAAI,IAAI,CAACC,gBAAgB,CAAC,OAAO,EAAED,KAAK,CAAC,EAAE;QACvC,IAAI,CAACE,mBAAmB,CAAC,CAAC;MAC9B;IACJ,CAAC;IACDC,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF;AACJ;AACA;AACA;AACA;EACIb,UAAU,CAACK,SAAS,CAACU,YAAY,GAAG,YAAY;IAC5C,OAAO,IAAIxB,WAAW,CAAC,CAAC;EAC5B,CAAC;EACD,OAAOS,UAAU;AACrB,CAAC,CAACX,QAAQ,CAAE;AACZ,SAASW,UAAU;AACnB;AACA;AACA;AACA;AACA;AACA;AACAR,QAAQ,CAACwB,iBAAiB,CAAC,YAAY,CAAC,GAAGhB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}