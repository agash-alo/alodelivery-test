{"ast":null,"code":"/**\r\n * Sliced chart module.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { PercentChart, PercentChartDataItem } from \"./PercentChart\";\nimport { registry } from \"../../core/Registry\";\nimport * as $type from \"../../core/utils/Type\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Defines a [[DataItem]] for [[SlicedChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\nvar SlicedChartDataItem = /** @class */function (_super) {\n  __extends(SlicedChartDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n  function SlicedChartDataItem() {\n    var _this = _super.call(this) || this;\n    _this.className = \"SlicedChartDataItem\";\n    _this.applyTheme();\n    return _this;\n  }\n  return SlicedChartDataItem;\n}(PercentChartDataItem);\nexport { SlicedChartDataItem };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Creates a Sliced chart.\r\n *\r\n * @see {@link ISlicedChartEvents} for a list of available Events\r\n * @see {@link ISlicedChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation\r\n * @important\r\n */\nvar SlicedChart = /** @class */function (_super) {\n  __extends(SlicedChart, _super);\n  /**\r\n   * Constructor\r\n   */\n  function SlicedChart() {\n    var _this =\n    // Init\n    _super.call(this) || this;\n    _this.className = \"SlicedChart\";\n    _this.seriesContainer.layout = \"horizontal\";\n    _this.padding(15, 15, 15, 15);\n    // Apply theme\n    _this.applyTheme();\n    return _this;\n  }\n  /**\r\n   * Sets defaults that instantiate some objects that rely on parent, so they\r\n   * cannot be set in constructor.\r\n   */\n  SlicedChart.prototype.applyInternalDefaults = function () {\n    _super.prototype.applyInternalDefaults.call(this);\n    // Add a default screen reader title for accessibility\n    // This will be overridden in screen reader if there are any `titles` set\n    if (!$type.hasValue(this.readerTitle)) {\n      this.readerTitle = this.language.translate(\"Sliced chart\");\n    }\n  };\n  /**\r\n   * (Re)validates the chart, causing it to redraw.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  SlicedChart.prototype.validate = function () {\n    _super.prototype.validate.call(this);\n  };\n  return SlicedChart;\n}(PercentChart);\nexport { SlicedChart };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"SlicedChart\"] = SlicedChart;\nregistry.registeredClasses[\"SlicedChartDataItem\"] = SlicedChartDataItem;","map":{"version":3,"names":["__extends","PercentChart","PercentChartDataItem","registry","$type","SlicedChartDataItem","_super","_this","call","className","applyTheme","SlicedChart","seriesContainer","layout","padding","prototype","applyInternalDefaults","hasValue","readerTitle","language","translate","validate","registeredClasses"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/charts/types/SlicedChart.js"],"sourcesContent":["/**\r\n * Sliced chart module.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { PercentChart, PercentChartDataItem } from \"./PercentChart\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[SlicedChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar SlicedChartDataItem = /** @class */ (function (_super) {\r\n    __extends(SlicedChartDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function SlicedChartDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"SlicedChartDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return SlicedChartDataItem;\r\n}(PercentChartDataItem));\r\nexport { SlicedChartDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a Sliced chart.\r\n *\r\n * @see {@link ISlicedChartEvents} for a list of available Events\r\n * @see {@link ISlicedChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation\r\n * @important\r\n */\r\nvar SlicedChart = /** @class */ (function (_super) {\r\n    __extends(SlicedChart, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function SlicedChart() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"SlicedChart\";\r\n        _this.seriesContainer.layout = \"horizontal\";\r\n        _this.padding(15, 15, 15, 15);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    SlicedChart.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        // Add a default screen reader title for accessibility\r\n        // This will be overridden in screen reader if there are any `titles` set\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Sliced chart\");\r\n        }\r\n    };\r\n    /**\r\n     * (Re)validates the chart, causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    SlicedChart.prototype.validate = function () {\r\n        _super.prototype.validate.call(this);\r\n    };\r\n    return SlicedChart;\r\n}(PercentChart));\r\nexport { SlicedChart };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SlicedChart\"] = SlicedChart;\r\nregistry.registeredClasses[\"SlicedChartDataItem\"] = SlicedChartDataItem;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,YAAY,EAAEC,oBAAoB,QAAQ,gBAAgB;AACnE,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,OAAO,KAAKC,KAAK,MAAM,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,mBAAmB,GAAG,aAAe,UAAUC,MAAM,EAAE;EACvDN,SAAS,CAACK,mBAAmB,EAAEC,MAAM,CAAC;EACtC;AACJ;AACA;EACI,SAASD,mBAAmBA,CAAA,EAAG;IAC3B,IAAIE,KAAK,GAAGD,MAAM,CAACE,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI;IACrCD,KAAK,CAACE,SAAS,GAAG,qBAAqB;IACvCF,KAAK,CAACG,UAAU,CAAC,CAAC;IAClB,OAAOH,KAAK;EAChB;EACA,OAAOF,mBAAmB;AAC9B,CAAC,CAACH,oBAAoB,CAAE;AACxB,SAASG,mBAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIM,WAAW,GAAG,aAAe,UAAUL,MAAM,EAAE;EAC/CN,SAAS,CAACW,WAAW,EAAEL,MAAM,CAAC;EAC9B;AACJ;AACA;EACI,SAASK,WAAWA,CAAA,EAAG;IACnB,IAAIJ,KAAK;IACT;IACAD,MAAM,CAACE,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI;IACzBD,KAAK,CAACE,SAAS,GAAG,aAAa;IAC/BF,KAAK,CAACK,eAAe,CAACC,MAAM,GAAG,YAAY;IAC3CN,KAAK,CAACO,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAC7B;IACAP,KAAK,CAACG,UAAU,CAAC,CAAC;IAClB,OAAOH,KAAK;EAChB;EACA;AACJ;AACA;AACA;EACII,WAAW,CAACI,SAAS,CAACC,qBAAqB,GAAG,YAAY;IACtDV,MAAM,CAACS,SAAS,CAACC,qBAAqB,CAACR,IAAI,CAAC,IAAI,CAAC;IACjD;IACA;IACA,IAAI,CAACJ,KAAK,CAACa,QAAQ,CAAC,IAAI,CAACC,WAAW,CAAC,EAAE;MACnC,IAAI,CAACA,WAAW,GAAG,IAAI,CAACC,QAAQ,CAACC,SAAS,CAAC,cAAc,CAAC;IAC9D;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIT,WAAW,CAACI,SAAS,CAACM,QAAQ,GAAG,YAAY;IACzCf,MAAM,CAACS,SAAS,CAACM,QAAQ,CAACb,IAAI,CAAC,IAAI,CAAC;EACxC,CAAC;EACD,OAAOG,WAAW;AACtB,CAAC,CAACV,YAAY,CAAE;AAChB,SAASU,WAAW;AACpB;AACA;AACA;AACA;AACA;AACA;AACAR,QAAQ,CAACmB,iBAAiB,CAAC,aAAa,CAAC,GAAGX,WAAW;AACvDR,QAAQ,CAACmB,iBAAiB,CAAC,qBAAqB,CAAC,GAAGjB,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}