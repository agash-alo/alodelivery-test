{"ast":null,"code":"/**\r\n * Functionality for drawing simple NavigationBar.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Component } from \"../../core/Component\";\nimport { DataItem } from \"../../core/DataItem\";\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\nimport { TextLink } from \"../../core/elements/TextLink\";\nimport { Triangle } from \"../../core/elements/Triangle\";\nimport { registry } from \"../../core/Registry\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\nimport { percent } from \"../../core/utils/Percent\";\nimport * as $iter from \"../../core/utils/Iterator\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Defines a [[DataItem]] for [[NavigationBar]].\r\n *\r\n * @see {@link DataItem}\r\n */\nvar NavigationBarDataItem = /** @class */function (_super) {\n  __extends(NavigationBarDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n  function NavigationBarDataItem() {\n    var _this = _super.call(this) || this;\n    _this.className = \"NavigationBarDataItem\";\n    _this.applyTheme();\n    return _this;\n  }\n  Object.defineProperty(NavigationBarDataItem.prototype, \"name\", {\n    /**\r\n     * @return Name\r\n     */\n    get: function () {\n      return this.properties[\"name\"];\n    },\n    /**\r\n     * Name of the navigation bar item.\r\n     *\r\n     * @param value  Name\r\n     */\n    set: function (value) {\n      this.setProperty(\"name\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return NavigationBarDataItem;\n}(DataItem);\nexport { NavigationBarDataItem };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * NavigationBar class can be used to create a multi-level breadcrumb-style\r\n * navigation control.\r\n *\r\n * @see {@link INavigationBarEvents} for a list of available events\r\n * @see {@link INavigationBarAdapters} for a list of available Adapters\r\n * @todo Implement better\r\n * @important\r\n */\nvar NavigationBar = /** @class */function (_super) {\n  __extends(NavigationBar, _super);\n  /**\r\n   * Constructor\r\n   */\n  function NavigationBar() {\n    var _this =\n    // Init\n    _super.call(this) || this;\n    _this.className = \"NavigationBar\";\n    var interfaceColors = new InterfaceColorSet();\n    var textLink = new TextLink();\n    textLink.valign = \"middle\";\n    textLink.paddingTop = 8;\n    textLink.paddingBottom = 8;\n    _this.paddingBottom = 2;\n    _this.links = new ListTemplate(textLink);\n    _this._disposers.push(new ListDisposer(_this.links));\n    _this._disposers.push(textLink);\n    _this._linksIterator = new $iter.ListIterator(_this.links, function () {\n      return _this.links.create();\n    });\n    _this._linksIterator.createNewItems = true;\n    var triangle = new Triangle();\n    triangle.direction = \"right\";\n    triangle.width = 8;\n    triangle.height = 12;\n    triangle.fill = interfaceColors.getFor(\"alternativeBackground\");\n    triangle.fillOpacity = 0.5;\n    triangle.valign = \"middle\";\n    triangle.marginLeft = 10;\n    triangle.marginRight = 10;\n    _this.separators = new ListTemplate(triangle);\n    _this._disposers.push(new ListDisposer(_this.separators));\n    _this._disposers.push(triangle);\n    var activeLink = new TextLink();\n    _this.activeLink = activeLink;\n    activeLink.copyFrom(textLink);\n    activeLink.valign = \"middle\";\n    activeLink.fontWeight = \"bold\";\n    _this.width = percent(100);\n    _this.layout = \"grid\";\n    _this.dataFields.name = \"name\";\n    // Apply theme\n    _this.applyTheme();\n    return _this;\n  }\n  /**\r\n   * Completely redraws the navigation bar.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  NavigationBar.prototype.validateDataElements = function () {\n    this.removeChildren();\n    this._linksIterator.reset();\n    _super.prototype.validateDataElements.call(this);\n    //@todo: dispose\n  };\n  /**\r\n   * Creates a visual element for a data item (nav item).\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItem  Data item\r\n   */\n  NavigationBar.prototype.validateDataElement = function (dataItem) {\n    _super.prototype.validateDataElement.call(this, dataItem);\n    var textLink;\n    if (dataItem.index < this.dataItems.length - 1) {\n      textLink = this._linksIterator.getLast();\n      textLink.parent = this;\n      var separator = this.separators.create();\n      separator.parent = this;\n      separator.valign = \"middle\";\n    } else {\n      textLink = this.activeLink;\n      textLink.events.copyFrom(this.links.template.events);\n      textLink.hide(0);\n      textLink.show();\n      textLink.parent = this;\n    }\n    textLink.dataItem = dataItem;\n    textLink.text = dataItem.name;\n    textLink.validate();\n  };\n  return NavigationBar;\n}(Component);\nexport { NavigationBar };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"NavigationBar\"] = NavigationBar;\nregistry.registeredClasses[\"NavigationBarDataItem\"] = NavigationBarDataItem;","map":{"version":3,"names":["__extends","Component","DataItem","ListTemplate","ListDisposer","TextLink","Triangle","registry","InterfaceColorSet","percent","$iter","NavigationBarDataItem","_super","_this","call","className","applyTheme","Object","defineProperty","prototype","get","properties","set","value","setProperty","enumerable","configurable","NavigationBar","interfaceColors","textLink","valign","paddingTop","paddingBottom","links","_disposers","push","_linksIterator","ListIterator","create","createNewItems","triangle","direction","width","height","fill","getFor","fillOpacity","marginLeft","marginRight","separators","activeLink","copyFrom","fontWeight","layout","dataFields","name","validateDataElements","removeChildren","reset","validateDataElement","dataItem","index","dataItems","length","getLast","parent","separator","events","template","hide","show","text","validate","registeredClasses"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/charts/elements/NavigationBar.js"],"sourcesContent":["/**\r\n * Functionality for drawing simple NavigationBar.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component } from \"../../core/Component\";\r\nimport { DataItem } from \"../../core/DataItem\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { TextLink } from \"../../core/elements/TextLink\";\r\nimport { Triangle } from \"../../core/elements/Triangle\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[NavigationBar]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar NavigationBarDataItem = /** @class */ (function (_super) {\r\n    __extends(NavigationBarDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function NavigationBarDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"NavigationBarDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(NavigationBarDataItem.prototype, \"name\", {\r\n        /**\r\n         * @return Name\r\n         */\r\n        get: function () {\r\n            return this.properties[\"name\"];\r\n        },\r\n        /**\r\n         * Name of the navigation bar item.\r\n         *\r\n         * @param value  Name\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"name\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return NavigationBarDataItem;\r\n}(DataItem));\r\nexport { NavigationBarDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * NavigationBar class can be used to create a multi-level breadcrumb-style\r\n * navigation control.\r\n *\r\n * @see {@link INavigationBarEvents} for a list of available events\r\n * @see {@link INavigationBarAdapters} for a list of available Adapters\r\n * @todo Implement better\r\n * @important\r\n */\r\nvar NavigationBar = /** @class */ (function (_super) {\r\n    __extends(NavigationBar, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function NavigationBar() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"NavigationBar\";\r\n        var interfaceColors = new InterfaceColorSet();\r\n        var textLink = new TextLink();\r\n        textLink.valign = \"middle\";\r\n        textLink.paddingTop = 8;\r\n        textLink.paddingBottom = 8;\r\n        _this.paddingBottom = 2;\r\n        _this.links = new ListTemplate(textLink);\r\n        _this._disposers.push(new ListDisposer(_this.links));\r\n        _this._disposers.push(textLink);\r\n        _this._linksIterator = new $iter.ListIterator(_this.links, function () { return _this.links.create(); });\r\n        _this._linksIterator.createNewItems = true;\r\n        var triangle = new Triangle();\r\n        triangle.direction = \"right\";\r\n        triangle.width = 8;\r\n        triangle.height = 12;\r\n        triangle.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n        triangle.fillOpacity = 0.5;\r\n        triangle.valign = \"middle\";\r\n        triangle.marginLeft = 10;\r\n        triangle.marginRight = 10;\r\n        _this.separators = new ListTemplate(triangle);\r\n        _this._disposers.push(new ListDisposer(_this.separators));\r\n        _this._disposers.push(triangle);\r\n        var activeLink = new TextLink();\r\n        _this.activeLink = activeLink;\r\n        activeLink.copyFrom(textLink);\r\n        activeLink.valign = \"middle\";\r\n        activeLink.fontWeight = \"bold\";\r\n        _this.width = percent(100);\r\n        _this.layout = \"grid\";\r\n        _this.dataFields.name = \"name\";\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Completely redraws the navigation bar.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    NavigationBar.prototype.validateDataElements = function () {\r\n        this.removeChildren();\r\n        this._linksIterator.reset();\r\n        _super.prototype.validateDataElements.call(this);\r\n        //@todo: dispose\r\n    };\r\n    /**\r\n     * Creates a visual element for a data item (nav item).\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    NavigationBar.prototype.validateDataElement = function (dataItem) {\r\n        _super.prototype.validateDataElement.call(this, dataItem);\r\n        var textLink;\r\n        if (dataItem.index < this.dataItems.length - 1) {\r\n            textLink = this._linksIterator.getLast();\r\n            textLink.parent = this;\r\n            var separator = this.separators.create();\r\n            separator.parent = this;\r\n            separator.valign = \"middle\";\r\n        }\r\n        else {\r\n            textLink = this.activeLink;\r\n            textLink.events.copyFrom(this.links.template.events);\r\n            textLink.hide(0);\r\n            textLink.show();\r\n            textLink.parent = this;\r\n        }\r\n        textLink.dataItem = dataItem;\r\n        textLink.text = dataItem.name;\r\n        textLink.validate();\r\n    };\r\n    return NavigationBar;\r\n}(Component));\r\nexport { NavigationBar };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"NavigationBar\"] = NavigationBar;\r\nregistry.registeredClasses[\"NavigationBarDataItem\"] = NavigationBarDataItem;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}