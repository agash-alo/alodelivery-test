{"ast":null,"code":"/**\r\n * Responsive functionality module.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { BaseObjectEvents } from \"../Base\";\nimport { List } from \"../utils/List\";\nimport { Adapter } from \"../utils/Adapter\";\nimport { registry } from \"../Registry\";\nimport * as $iter from \"../utils/Iterator\";\nimport * as $array from \"../utils/Array\";\nimport * as $type from \"../utils/Type\";\nimport * as $object from \"../utils/Object\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Responsive is responsible for overriding certain properties when conditions\r\n * are met.\r\n *\r\n * This class is used to dynamically apply and change certain chart properties\r\n * based on the current values of properties.\r\n *\r\n * Mainly, this is used with [[Sprite]]'s dimensional properties, like\r\n * `pixelWidth` and `pixelHeight`. However, it can be used to dynamically\r\n * change any property, based on any other property's value.\r\n *\r\n * A default responsive rules are disabled.\r\n *\r\n * To enable, set `enabled = false`. E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.responsive.enabled = true;\r\n * ```\r\n * ```JavaScript\r\n * chart.responsive.enabled = true;\r\n * ```\r\n *\r\n * @see {@link IResponsiveEvents} for a list of available events\r\n * @see {@link IResponsiveAdapters} for a list of available Adapters\r\n * @todo Add default rules\r\n * @todo Watch for rule modification\r\n * @important\r\n */\nvar Responsive = /** @class */function (_super) {\n  __extends(Responsive, _super);\n  /**\r\n   * Constructor\r\n   */\n  function Responsive() {\n    var _this =\n    // Init\n    _super.call(this) || this;\n    /**\r\n     * Holds a list of responsive rules organized by object type.\r\n     */\n    _this._rules = new List();\n    /**\r\n     * Holds the list of the default responsive rules.\r\n     * @deprecated\r\n     */\n    //protected _defaultRules = new List<IResponsiveRule>();\n    /**\r\n     * Holds the list of currently applied rules.\r\n     */\n    _this._appliedRules = {};\n    /**\r\n     * Used to keep track of objects that have rules applied at the moment.\r\n     */\n    _this._appliedTargets = [];\n    /**\r\n     * Use default rules in addition to the user-defined ones?\r\n     */\n    _this._useDefault = true;\n    /**\r\n     * Adapter.\r\n     */\n    _this.adapter = new Adapter(_this);\n    /**\r\n     * Indicates of responsive rules application is enabled.\r\n     */\n    _this._enabled = false;\n    /**\r\n     * Holds disposers for all events added by this class.\r\n     */\n    _this._responsiveDisposers = [];\n    /**\r\n     * Collection of objects and state ids that do not have any properties set.\r\n     */\n    _this._noStates = [];\n    _this.className = \"Responsive\";\n    // Set up rules list events\n    _this.rules.events.on(\"inserted\", function () {\n      _this.checkRules();\n    }, true);\n    _this.rules.events.on(\"removed\", function () {\n      _this.checkRules();\n    }, true);\n    _this._disposers.push(_this.rules.events);\n    // Apply theme\n    _this.applyTheme();\n    return _this;\n  }\n  Object.defineProperty(Responsive.prototype, \"component\", {\n    /**\r\n     * @return Target object\r\n     */\n    get: function () {\n      return this._component;\n    },\n    /**\r\n     * A target object that responsive rules will need to be applied to.\r\n     *\r\n     * @param value  Target object\r\n     */\n    set: function (value) {\n      var _this = this;\n      // Check if it's the same\n      if (value == this._component) {\n        return;\n      }\n      // Check if we already have a set up component and remove its events\n      this.disposeResponsiveHandlers();\n      // Set\n      this._component = value;\n      // Set up resize monitoring events\n      this._responsiveDisposers.push($type.getValue(this.component).events.on(\"sizechanged\", function () {\n        _this.checkRules();\n      }, this));\n      this._responsiveDisposers.push($type.getValue(this.component).events.once(\"datavalidated\", function () {\n        if (_this._component.isReady()) {\n          _this.checkRules(true);\n        }\n      }, this));\n      // Enable resoponsive\n      this.enabled = true;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Responsive.prototype, \"enabled\", {\n    /**\r\n     * @return Apply responsive rules?\r\n     */\n    get: function () {\n      return this.adapter.apply(\"enabled\", this._enabled);\n    },\n    /**\r\n     * Should responsive rules be checked against and applied?\r\n     *\r\n     * @default false\r\n     * @param value  Apply responsive rules?\r\n     */\n    set: function (value) {\n      if (this._enabled != value) {\n        this._enabled = value;\n        // Run `applyRules` so that any currently applied rules can be reset\n        this.applyRules();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Responsive.prototype, \"useDefault\", {\n    /**\r\n     * @return Use default rules?\r\n     */\n    get: function () {\n      return this.adapter.apply(\"useDefault\", this._useDefault);\n    },\n    /**\r\n     * Should default responsive rules be applied in addition to user-defined\r\n     * ones.\r\n     *\r\n     * User-defined rules will take precedence over default rules whenever they\r\n     * produce conflicting settings.\r\n     *\r\n     * @default true\r\n     * @param value  Use default rules?\r\n     */\n    set: function (value) {\n      if (this._useDefault != value) {\n        this._useDefault = value;\n        // Run `applyRules` so that any currently applied rules can be reset\n        this.applyRules();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Responsive.prototype, \"rules\", {\n    /**\r\n     * @return User-defined rules\r\n     */\n    get: function () {\n      return this.adapter.apply(\"rules\", this._rules);\n    },\n    /**\r\n     * User-defined responsive rules.\r\n     *\r\n     * User-defined rules will take precedence over default rules whenever they\r\n     * produce conflicting settings.\r\n     *\r\n     * Use `allRules` to get all applicable rules including default and\r\n     * user-defined ones.\r\n     *\r\n     * @param value  User-defined rules\r\n     */\n    set: function (value) {\n      this._rules = value;\n      this._enabled = true;\n      this.applyRules();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Responsive.prototype, \"defaultRules\", {\n    /**\r\n     * Default responsive rules.\r\n     *\r\n     * @readonly\r\n     * @return List of responsive rules\r\n     */\n    get: function () {\n      return this.adapter.apply(\"defaultRules\", defaultRules);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Responsive.prototype, \"allRules\", {\n    /**\r\n     * Returns all rules: default rules (if not disabled) combined with\r\n     * user-defined ones.\r\n     *\r\n     * @readonly\r\n     * @return List of all applicable rules\r\n     */\n    get: function () {\n      // Create empty list\n      var rules = new List();\n      // Add default rules if not disabled\n      // A code, requesting `allRules` must ensure loading of default rules\n      // by calling `loadDefaultRules()`\n      if (this.useDefault) {\n        rules.copyFrom(this.defaultRules);\n      }\n      // Add user-defined ones\n      rules.copyFrom(this.rules);\n      return this.adapter.apply(\"allRules\", rules);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Checks if rule by the particular id currently applied.\r\n   *\r\n   * @param ruleId  Rule ID\r\n   * @return Is currently applied?\r\n   */\n  Responsive.prototype.isApplied = function (ruleId) {\n    var rule = this._appliedRules[ruleId];\n    return $type.hasValue(rule) ? rule : false;\n  };\n  /**\r\n   * Checks which responsive rules currently satisfy their conditions and\r\n   * should be applied, or unapplied.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Responsive.prototype.checkRules = function (force) {\n    var _this = this;\n    if (force === void 0) {\n      force = false;\n    }\n    // Check if there are any rules\n    var rules = this.allRules;\n    if (!rules || rules.length == 0) {\n      return;\n    }\n    // Init a list of rules to be applied\n    var rulesChanged = false;\n    var component = $type.getValue(this.component);\n    // Do not perform rule application of target has no size\n    if (component.pixelWidth == 0 || component.pixelHeight == 0) {\n      return;\n    }\n    // Check which rules match\n    $iter.each(rules.iterator(), function (rule) {\n      // Check if rule has an id\n      if (!rule.id) {\n        rule.id = registry.getUniqueId();\n      }\n      // Init indicator if this rule should be applied\n      var apply = rule.relevant(component);\n      // Let's check if this rule needs to be applied\n      if (apply && !_this.isApplied(rule.id) || !apply && _this.isApplied(rule.id)) {\n        rulesChanged = true;\n      }\n      _this._appliedRules[rule.id] = apply;\n    });\n    if (force) {\n      rulesChanged = true;\n    }\n    // Check if we need to re-apply the rules\n    if (rulesChanged) {\n      if (!this.component.isReady()) {\n        // The chart is not yet ready (built)\n        // We will hide the chart and delay application of rules\n        // until \"ready\" event kicks in\n        //component.hide(0);\n        component.hidden = true;\n        component.events.once(\"ready\", function (ev) {\n          ev.target.show(0);\n          _this._applyRules();\n        });\n        return;\n      }\n      this.dispatchImmediately(\"ruleschanged\");\n      this._applyRules();\n    }\n  };\n  Responsive.prototype._applyRules = function () {\n    var _this = this;\n    if (this._timeout) {\n      this._timeout.dispose();\n    }\n    this._timeout = this.setTimeout(function () {\n      _this.applyRules();\n    }, 10);\n  };\n  /**\r\n   * Applies current rules to the object.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param target Target object\r\n   * @todo Better type check\r\n   */\n  Responsive.prototype.applyRules = function (target) {\n    var _this = this;\n    // If no target supplied, we assume the top-level element\n    var newTarget = $type.hasValue(target) ? target : $type.getValue(this.component);\n    // Check each rule\n    var defaultStateApplied = false;\n    if (this.enabled) {\n      var isApplied_1 = false;\n      $iter.each(this.allRules.iterator(), function (rule) {\n        // Get relevant state\n        var state = _this.getState(rule, newTarget);\n        // If there's a state, it means it needs to be applied\n        if (state) {\n          // Check if default state was already applied to this element.\n          // We don't want to go resetting default states to ALL element,\n          // if they don't have responsive states.\n          if (!defaultStateApplied) {\n            // Nope, reset states (instantly).\n            if ($array.indexOf(_this._appliedTargets, newTarget.uid) !== -1) {\n              // But only if this element has any rules applied, otherwise no\n              // point in setting current state\n              newTarget.setState(_this.getDefaultState(newTarget), 0);\n            }\n            defaultStateApplied = true;\n          }\n          // Is this rule currently applied?\n          if (_this.isApplied($type.getValue(rule.id))) {\n            // Yes. Apply the responsive state\n            state.transitionDuration = 0;\n            _this.setTargetState(newTarget, state);\n            _this.dispatchImmediately(\"ruleapplied\", {\n              rule: rule\n            });\n            isApplied_1 = true;\n          }\n        }\n      });\n      if (isApplied_1) {\n        $array.replace(this._appliedTargets, newTarget.uid);\n      } else {\n        $array.remove(this._appliedTargets, newTarget.uid);\n      }\n    }\n    // Apply rules to the children\n    if (newTarget.children) {\n      $iter.each(newTarget.children.iterator(), function (child) {\n        _this.applyRules(child);\n      });\n    }\n  };\n  /**\r\n   * Returns a relative state for the rule/target, or `undefined` if no state is\r\n   * needed.\r\n   *\r\n   * @param rule    [description]\r\n   * @param target  [description]\r\n   * @return [description]\r\n   */\n  Responsive.prototype.getState = function (rule, target) {\n    var stateId = \"responsive-\" + rule.id;\n    var tmpId = target.uid + \"_\" + stateId;\n    if ($array.indexOf(this._noStates, tmpId) !== -1) {\n      return;\n    } else if (!target.states.hasKey(stateId)) {\n      var state = rule.state(target, stateId);\n      if (!state) {\n        this._noStates.push(tmpId);\n      }\n      return state;\n    } else {\n      return target.states.getKey(stateId);\n    }\n  };\n  /**\r\n   * Creates and returns default responsive rule for the target.\r\n   *\r\n   * This rule will be used to \"reset\" to non-responsive values.\r\n   * @param   target  Target Sprite\r\n   * @return          State\r\n   */\n  Responsive.prototype.getDefaultState = function (target) {\n    if (target.states.hasKey(\"responsive-default\")) {\n      return target.states.getKey(\"responsive-default\");\n    }\n    return target.states.create(\"responsive-default\");\n  };\n  /**\r\n   * Sets state on the target element and updates default state with the\r\n   * overwritten values if needed.\r\n   *\r\n   * @param  target  Target\r\n   * @param  state   State\r\n   */\n  Responsive.prototype.setTargetState = function (target, state) {\n    var _this = this;\n    // Update default state\n    var defaultState = this.getDefaultState(target);\n    $object.each(state.properties, function (key, val) {\n      if (!$type.hasValue(defaultState.properties[key])) {\n        defaultState.properties[key] = _this.getValue(target, key);\n      }\n    });\n    target.setState(state);\n  };\n  /**\r\n   * Gets a value from an element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param target    Target object\r\n   * @param property  Property\r\n   * @return Property value\r\n   */\n  Responsive.prototype.getValue = function (target, property) {\n    // This is a bit hacky, first we check if the property exist.\n    // If it doesn't we try accessing target's property directly\n    var value = target.getPropertyValue(property);\n    if (!$type.hasValue(value) && $type.hasValue(target[property])) {\n      value = target[property];\n    }\n    return value;\n  };\n  /**\r\n   * Disposes the object.\r\n   */\n  Responsive.prototype.dispose = function () {\n    this.disposeResponsiveHandlers();\n    _super.prototype.dispose.call(this);\n  };\n  /**\r\n   * Disposes all event handlers.\r\n   */\n  Responsive.prototype.disposeResponsiveHandlers = function () {\n    var disposer = this._responsiveDisposers.pop();\n    while (disposer) {\n      disposer.dispose();\n      disposer = this._responsiveDisposers.pop();\n    }\n  };\n  return Responsive;\n}(BaseObjectEvents);\nexport { Responsive };\n/**\r\n * [defaultRules description]\r\n *\r\n * @todo description\r\n */\nexport var defaultRules = new List();\ndefaultRules.events.on(\"inserted\", function (ev) {\n  ev.newValue.id = registry.getUniqueId();\n});\n/**\r\n *\r\n * @todo description\r\n */\nvar ResponsiveBreakpoints = /** @class */function () {\n  function ResponsiveBreakpoints() {}\n  // Breakpoint functions (for use in `relevant` clause of the responsive rules)\n  ResponsiveBreakpoints.widthXXS = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.XXS;\n  };\n  ResponsiveBreakpoints.widthXS = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.XS;\n  };\n  ResponsiveBreakpoints.widthS = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.S;\n  };\n  ResponsiveBreakpoints.widthM = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.M;\n  };\n  ResponsiveBreakpoints.widthL = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.L;\n  };\n  ResponsiveBreakpoints.widthXL = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.XL;\n  };\n  ResponsiveBreakpoints.widthXXL = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.XXL;\n  };\n  ResponsiveBreakpoints.heightXXS = function (container) {\n    return container.pixelHeight <= ResponsiveBreakpoints.XXS;\n  };\n  ResponsiveBreakpoints.heightXS = function (container) {\n    return container.pixelHeight <= ResponsiveBreakpoints.XS;\n  };\n  ResponsiveBreakpoints.heightS = function (container) {\n    return container.pixelHeight <= ResponsiveBreakpoints.S;\n  };\n  ResponsiveBreakpoints.heightM = function (container) {\n    return container.pixelHeight <= ResponsiveBreakpoints.M;\n  };\n  ResponsiveBreakpoints.heightL = function (container) {\n    return container.pixelHeight <= ResponsiveBreakpoints.L;\n  };\n  ResponsiveBreakpoints.heightXL = function (container) {\n    return container.pixelHeight <= ResponsiveBreakpoints.XL;\n  };\n  ResponsiveBreakpoints.heightXXL = function (container) {\n    return container.pixelHeight <= ResponsiveBreakpoints.XXL;\n  };\n  ResponsiveBreakpoints.isXXS = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.XXS && container.pixelHeight <= ResponsiveBreakpoints.XXS;\n  };\n  ResponsiveBreakpoints.isXS = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.XS && container.pixelHeight <= ResponsiveBreakpoints.XS;\n  };\n  ResponsiveBreakpoints.isS = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.S && container.pixelHeight <= ResponsiveBreakpoints.S;\n  };\n  ResponsiveBreakpoints.isM = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.M && container.pixelHeight <= ResponsiveBreakpoints.M;\n  };\n  ResponsiveBreakpoints.isL = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.L && container.pixelHeight <= ResponsiveBreakpoints.L;\n  };\n  ResponsiveBreakpoints.isXL = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.XL && container.pixelHeight <= ResponsiveBreakpoints.XL;\n  };\n  ResponsiveBreakpoints.isXXL = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.XXL && container.pixelHeight <= ResponsiveBreakpoints.XXL;\n  };\n  ResponsiveBreakpoints.maybeXXS = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.XXS || container.pixelHeight <= ResponsiveBreakpoints.XXS;\n  };\n  ResponsiveBreakpoints.maybeXS = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.XS || container.pixelHeight <= ResponsiveBreakpoints.XS;\n  };\n  ResponsiveBreakpoints.maybeS = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.S || container.pixelHeight <= ResponsiveBreakpoints.S;\n  };\n  ResponsiveBreakpoints.maybeM = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.M || container.pixelHeight <= ResponsiveBreakpoints.M;\n  };\n  ResponsiveBreakpoints.maybeL = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.L || container.pixelHeight <= ResponsiveBreakpoints.L;\n  };\n  ResponsiveBreakpoints.maybeXL = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.XL || container.pixelHeight <= ResponsiveBreakpoints.XL;\n  };\n  ResponsiveBreakpoints.maybeXXL = function (container) {\n    return container.pixelWidth <= ResponsiveBreakpoints.XXL || container.pixelHeight <= ResponsiveBreakpoints.XXL;\n  };\n  // Named pixel breakpoints\n  ResponsiveBreakpoints.XXS = 100;\n  ResponsiveBreakpoints.XS = 200;\n  ResponsiveBreakpoints.S = 300;\n  ResponsiveBreakpoints.M = 400;\n  ResponsiveBreakpoints.L = 600;\n  ResponsiveBreakpoints.XL = 800;\n  ResponsiveBreakpoints.XXL = 1000;\n  return ResponsiveBreakpoints;\n}();\nexport { ResponsiveBreakpoints };","map":{"version":3,"names":["__extends","BaseObjectEvents","List","Adapter","registry","$iter","$array","$type","$object","Responsive","_super","_this","call","_rules","_appliedRules","_appliedTargets","_useDefault","adapter","_enabled","_responsiveDisposers","_noStates","className","rules","events","on","checkRules","_disposers","push","applyTheme","Object","defineProperty","prototype","get","_component","set","value","disposeResponsiveHandlers","getValue","component","once","isReady","enabled","enumerable","configurable","apply","applyRules","defaultRules","useDefault","copyFrom","isApplied","ruleId","rule","hasValue","force","allRules","length","rulesChanged","pixelWidth","pixelHeight","each","iterator","id","getUniqueId","relevant","hidden","ev","target","show","_applyRules","dispatchImmediately","_timeout","dispose","setTimeout","newTarget","defaultStateApplied","isApplied_1","state","getState","indexOf","uid","setState","getDefaultState","transitionDuration","setTargetState","replace","remove","children","child","stateId","tmpId","states","hasKey","getKey","create","defaultState","properties","key","val","property","getPropertyValue","disposer","pop","newValue","ResponsiveBreakpoints","widthXXS","container","XXS","widthXS","XS","widthS","S","widthM","M","widthL","L","widthXL","XL","widthXXL","XXL","heightXXS","heightXS","heightS","heightM","heightL","heightXL","heightXXL","isXXS","isXS","isS","isM","isL","isXL","isXXL","maybeXXS","maybeXS","maybeS","maybeM","maybeL","maybeXL","maybeXXL"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/core/utils/Responsive.js"],"sourcesContent":["/**\r\n * Responsive functionality module.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObjectEvents } from \"../Base\";\r\nimport { List } from \"../utils/List\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $iter from \"../utils/Iterator\";\r\nimport * as $array from \"../utils/Array\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $object from \"../utils/Object\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Responsive is responsible for overriding certain properties when conditions\r\n * are met.\r\n *\r\n * This class is used to dynamically apply and change certain chart properties\r\n * based on the current values of properties.\r\n *\r\n * Mainly, this is used with [[Sprite]]'s dimensional properties, like\r\n * `pixelWidth` and `pixelHeight`. However, it can be used to dynamically\r\n * change any property, based on any other property's value.\r\n *\r\n * A default responsive rules are disabled.\r\n *\r\n * To enable, set `enabled = false`. E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.responsive.enabled = true;\r\n * ```\r\n * ```JavaScript\r\n * chart.responsive.enabled = true;\r\n * ```\r\n *\r\n * @see {@link IResponsiveEvents} for a list of available events\r\n * @see {@link IResponsiveAdapters} for a list of available Adapters\r\n * @todo Add default rules\r\n * @todo Watch for rule modification\r\n * @important\r\n */\r\nvar Responsive = /** @class */ (function (_super) {\r\n    __extends(Responsive, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Responsive() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * Holds a list of responsive rules organized by object type.\r\n         */\r\n        _this._rules = new List();\r\n        /**\r\n         * Holds the list of the default responsive rules.\r\n         * @deprecated\r\n         */\r\n        //protected _defaultRules = new List<IResponsiveRule>();\r\n        /**\r\n         * Holds the list of currently applied rules.\r\n         */\r\n        _this._appliedRules = {};\r\n        /**\r\n         * Used to keep track of objects that have rules applied at the moment.\r\n         */\r\n        _this._appliedTargets = [];\r\n        /**\r\n         * Use default rules in addition to the user-defined ones?\r\n         */\r\n        _this._useDefault = true;\r\n        /**\r\n         * Adapter.\r\n         */\r\n        _this.adapter = new Adapter(_this);\r\n        /**\r\n         * Indicates of responsive rules application is enabled.\r\n         */\r\n        _this._enabled = false;\r\n        /**\r\n         * Holds disposers for all events added by this class.\r\n         */\r\n        _this._responsiveDisposers = [];\r\n        /**\r\n         * Collection of objects and state ids that do not have any properties set.\r\n         */\r\n        _this._noStates = [];\r\n        _this.className = \"Responsive\";\r\n        // Set up rules list events\r\n        _this.rules.events.on(\"inserted\", function () { _this.checkRules(); }, true);\r\n        _this.rules.events.on(\"removed\", function () { _this.checkRules(); }, true);\r\n        _this._disposers.push(_this.rules.events);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Responsive.prototype, \"component\", {\r\n        /**\r\n         * @return Target object\r\n         */\r\n        get: function () {\r\n            return this._component;\r\n        },\r\n        /**\r\n         * A target object that responsive rules will need to be applied to.\r\n         *\r\n         * @param value  Target object\r\n         */\r\n        set: function (value) {\r\n            var _this = this;\r\n            // Check if it's the same\r\n            if (value == this._component) {\r\n                return;\r\n            }\r\n            // Check if we already have a set up component and remove its events\r\n            this.disposeResponsiveHandlers();\r\n            // Set\r\n            this._component = value;\r\n            // Set up resize monitoring events\r\n            this._responsiveDisposers.push($type.getValue(this.component).events.on(\"sizechanged\", function () { _this.checkRules(); }, this));\r\n            this._responsiveDisposers.push($type.getValue(this.component).events.once(\"datavalidated\", function () {\r\n                if (_this._component.isReady()) {\r\n                    _this.checkRules(true);\r\n                }\r\n            }, this));\r\n            // Enable resoponsive\r\n            this.enabled = true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Responsive.prototype, \"enabled\", {\r\n        /**\r\n         * @return Apply responsive rules?\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"enabled\", this._enabled);\r\n        },\r\n        /**\r\n         * Should responsive rules be checked against and applied?\r\n         *\r\n         * @default false\r\n         * @param value  Apply responsive rules?\r\n         */\r\n        set: function (value) {\r\n            if (this._enabled != value) {\r\n                this._enabled = value;\r\n                // Run `applyRules` so that any currently applied rules can be reset\r\n                this.applyRules();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Responsive.prototype, \"useDefault\", {\r\n        /**\r\n         * @return Use default rules?\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"useDefault\", this._useDefault);\r\n        },\r\n        /**\r\n         * Should default responsive rules be applied in addition to user-defined\r\n         * ones.\r\n         *\r\n         * User-defined rules will take precedence over default rules whenever they\r\n         * produce conflicting settings.\r\n         *\r\n         * @default true\r\n         * @param value  Use default rules?\r\n         */\r\n        set: function (value) {\r\n            if (this._useDefault != value) {\r\n                this._useDefault = value;\r\n                // Run `applyRules` so that any currently applied rules can be reset\r\n                this.applyRules();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Responsive.prototype, \"rules\", {\r\n        /**\r\n         * @return User-defined rules\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"rules\", this._rules);\r\n        },\r\n        /**\r\n         * User-defined responsive rules.\r\n         *\r\n         * User-defined rules will take precedence over default rules whenever they\r\n         * produce conflicting settings.\r\n         *\r\n         * Use `allRules` to get all applicable rules including default and\r\n         * user-defined ones.\r\n         *\r\n         * @param value  User-defined rules\r\n         */\r\n        set: function (value) {\r\n            this._rules = value;\r\n            this._enabled = true;\r\n            this.applyRules();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Responsive.prototype, \"defaultRules\", {\r\n        /**\r\n         * Default responsive rules.\r\n         *\r\n         * @readonly\r\n         * @return List of responsive rules\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"defaultRules\", defaultRules);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Responsive.prototype, \"allRules\", {\r\n        /**\r\n         * Returns all rules: default rules (if not disabled) combined with\r\n         * user-defined ones.\r\n         *\r\n         * @readonly\r\n         * @return List of all applicable rules\r\n         */\r\n        get: function () {\r\n            // Create empty list\r\n            var rules = new List();\r\n            // Add default rules if not disabled\r\n            // A code, requesting `allRules` must ensure loading of default rules\r\n            // by calling `loadDefaultRules()`\r\n            if (this.useDefault) {\r\n                rules.copyFrom(this.defaultRules);\r\n            }\r\n            // Add user-defined ones\r\n            rules.copyFrom(this.rules);\r\n            return this.adapter.apply(\"allRules\", rules);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Checks if rule by the particular id currently applied.\r\n     *\r\n     * @param ruleId  Rule ID\r\n     * @return Is currently applied?\r\n     */\r\n    Responsive.prototype.isApplied = function (ruleId) {\r\n        var rule = this._appliedRules[ruleId];\r\n        return $type.hasValue(rule) ? rule : false;\r\n    };\r\n    /**\r\n     * Checks which responsive rules currently satisfy their conditions and\r\n     * should be applied, or unapplied.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Responsive.prototype.checkRules = function (force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        // Check if there are any rules\r\n        var rules = this.allRules;\r\n        if (!rules || rules.length == 0) {\r\n            return;\r\n        }\r\n        // Init a list of rules to be applied\r\n        var rulesChanged = false;\r\n        var component = $type.getValue(this.component);\r\n        // Do not perform rule application of target has no size\r\n        if (component.pixelWidth == 0 || component.pixelHeight == 0) {\r\n            return;\r\n        }\r\n        // Check which rules match\r\n        $iter.each(rules.iterator(), function (rule) {\r\n            // Check if rule has an id\r\n            if (!rule.id) {\r\n                rule.id = registry.getUniqueId();\r\n            }\r\n            // Init indicator if this rule should be applied\r\n            var apply = rule.relevant(component);\r\n            // Let's check if this rule needs to be applied\r\n            if ((apply && !_this.isApplied(rule.id)) || (!apply && _this.isApplied(rule.id))) {\r\n                rulesChanged = true;\r\n            }\r\n            _this._appliedRules[rule.id] = apply;\r\n        });\r\n        if (force) {\r\n            rulesChanged = true;\r\n        }\r\n        // Check if we need to re-apply the rules\r\n        if (rulesChanged) {\r\n            if (!this.component.isReady()) {\r\n                // The chart is not yet ready (built)\r\n                // We will hide the chart and delay application of rules\r\n                // until \"ready\" event kicks in\r\n                //component.hide(0);\r\n                component.hidden = true;\r\n                component.events.once(\"ready\", function (ev) {\r\n                    ev.target.show(0);\r\n                    _this._applyRules();\r\n                });\r\n                return;\r\n            }\r\n            this.dispatchImmediately(\"ruleschanged\");\r\n            this._applyRules();\r\n        }\r\n    };\r\n    Responsive.prototype._applyRules = function () {\r\n        var _this = this;\r\n        if (this._timeout) {\r\n            this._timeout.dispose();\r\n        }\r\n        this._timeout = this.setTimeout(function () {\r\n            _this.applyRules();\r\n        }, 10);\r\n    };\r\n    /**\r\n     * Applies current rules to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param target Target object\r\n     * @todo Better type check\r\n     */\r\n    Responsive.prototype.applyRules = function (target) {\r\n        var _this = this;\r\n        // If no target supplied, we assume the top-level element\r\n        var newTarget = ($type.hasValue(target)\r\n            ? target\r\n            : $type.getValue(this.component));\r\n        // Check each rule\r\n        var defaultStateApplied = false;\r\n        if (this.enabled) {\r\n            var isApplied_1 = false;\r\n            $iter.each(this.allRules.iterator(), function (rule) {\r\n                // Get relevant state\r\n                var state = _this.getState(rule, newTarget);\r\n                // If there's a state, it means it needs to be applied\r\n                if (state) {\r\n                    // Check if default state was already applied to this element.\r\n                    // We don't want to go resetting default states to ALL element,\r\n                    // if they don't have responsive states.\r\n                    if (!defaultStateApplied) {\r\n                        // Nope, reset states (instantly).\r\n                        if ($array.indexOf(_this._appliedTargets, newTarget.uid) !== -1) {\r\n                            // But only if this element has any rules applied, otherwise no\r\n                            // point in setting current state\r\n                            newTarget.setState(_this.getDefaultState(newTarget), 0);\r\n                        }\r\n                        defaultStateApplied = true;\r\n                    }\r\n                    // Is this rule currently applied?\r\n                    if (_this.isApplied($type.getValue(rule.id))) {\r\n                        // Yes. Apply the responsive state\r\n                        state.transitionDuration = 0;\r\n                        _this.setTargetState(newTarget, state);\r\n                        _this.dispatchImmediately(\"ruleapplied\", {\r\n                            rule: rule\r\n                        });\r\n                        isApplied_1 = true;\r\n                    }\r\n                }\r\n            });\r\n            if (isApplied_1) {\r\n                $array.replace(this._appliedTargets, newTarget.uid);\r\n            }\r\n            else {\r\n                $array.remove(this._appliedTargets, newTarget.uid);\r\n            }\r\n        }\r\n        // Apply rules to the children\r\n        if (newTarget.children) {\r\n            $iter.each(newTarget.children.iterator(), function (child) {\r\n                _this.applyRules(child);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Returns a relative state for the rule/target, or `undefined` if no state is\r\n     * needed.\r\n     *\r\n     * @param rule    [description]\r\n     * @param target  [description]\r\n     * @return [description]\r\n     */\r\n    Responsive.prototype.getState = function (rule, target) {\r\n        var stateId = \"responsive-\" + rule.id;\r\n        var tmpId = target.uid + \"_\" + stateId;\r\n        if ($array.indexOf(this._noStates, tmpId) !== -1) {\r\n            return;\r\n        }\r\n        else if (!target.states.hasKey(stateId)) {\r\n            var state = rule.state(target, stateId);\r\n            if (!state) {\r\n                this._noStates.push(tmpId);\r\n            }\r\n            return state;\r\n        }\r\n        else {\r\n            return target.states.getKey(stateId);\r\n        }\r\n    };\r\n    /**\r\n     * Creates and returns default responsive rule for the target.\r\n     *\r\n     * This rule will be used to \"reset\" to non-responsive values.\r\n     * @param   target  Target Sprite\r\n     * @return          State\r\n     */\r\n    Responsive.prototype.getDefaultState = function (target) {\r\n        if (target.states.hasKey(\"responsive-default\")) {\r\n            return target.states.getKey(\"responsive-default\");\r\n        }\r\n        return target.states.create(\"responsive-default\");\r\n    };\r\n    /**\r\n     * Sets state on the target element and updates default state with the\r\n     * overwritten values if needed.\r\n     *\r\n     * @param  target  Target\r\n     * @param  state   State\r\n     */\r\n    Responsive.prototype.setTargetState = function (target, state) {\r\n        var _this = this;\r\n        // Update default state\r\n        var defaultState = this.getDefaultState(target);\r\n        $object.each(state.properties, function (key, val) {\r\n            if (!$type.hasValue(defaultState.properties[key])) {\r\n                defaultState.properties[key] = _this.getValue(target, key);\r\n            }\r\n        });\r\n        target.setState(state);\r\n    };\r\n    /**\r\n     * Gets a value from an element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param target    Target object\r\n     * @param property  Property\r\n     * @return Property value\r\n     */\r\n    Responsive.prototype.getValue = function (target, property) {\r\n        // This is a bit hacky, first we check if the property exist.\r\n        // If it doesn't we try accessing target's property directly\r\n        var value = target.getPropertyValue(property);\r\n        if (!$type.hasValue(value) && $type.hasValue(target[property])) {\r\n            value = target[property];\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Disposes the object.\r\n     */\r\n    Responsive.prototype.dispose = function () {\r\n        this.disposeResponsiveHandlers();\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    /**\r\n     * Disposes all event handlers.\r\n     */\r\n    Responsive.prototype.disposeResponsiveHandlers = function () {\r\n        var disposer = this._responsiveDisposers.pop();\r\n        while (disposer) {\r\n            disposer.dispose();\r\n            disposer = this._responsiveDisposers.pop();\r\n        }\r\n    };\r\n    return Responsive;\r\n}(BaseObjectEvents));\r\nexport { Responsive };\r\n/**\r\n * [defaultRules description]\r\n *\r\n * @todo description\r\n */\r\nexport var defaultRules = new List();\r\ndefaultRules.events.on(\"inserted\", function (ev) {\r\n    ev.newValue.id = registry.getUniqueId();\r\n});\r\n/**\r\n *\r\n * @todo description\r\n */\r\nvar ResponsiveBreakpoints = /** @class */ (function () {\r\n    function ResponsiveBreakpoints() {\r\n    }\r\n    // Breakpoint functions (for use in `relevant` clause of the responsive rules)\r\n    ResponsiveBreakpoints.widthXXS = function (container) {\r\n        return container.pixelWidth <= ResponsiveBreakpoints.XXS;\r\n    };\r\n    ResponsiveBreakpoints.widthXS = function (container) {\r\n        return container.pixelWidth <= ResponsiveBreakpoints.XS;\r\n    };\r\n    ResponsiveBreakpoints.widthS = function (container) {\r\n        return container.pixelWidth <= ResponsiveBreakpoints.S;\r\n    };\r\n    ResponsiveBreakpoints.widthM = function (container) {\r\n        return container.pixelWidth <= ResponsiveBreakpoints.M;\r\n    };\r\n    ResponsiveBreakpoints.widthL = function (container) {\r\n        return container.pixelWidth <= ResponsiveBreakpoints.L;\r\n    };\r\n    ResponsiveBreakpoints.widthXL = function (container) {\r\n        return container.pixelWidth <= ResponsiveBreakpoints.XL;\r\n    };\r\n    ResponsiveBreakpoints.widthXXL = function (container) {\r\n        return container.pixelWidth <= ResponsiveBreakpoints.XXL;\r\n    };\r\n    ResponsiveBreakpoints.heightXXS = function (container) {\r\n        return container.pixelHeight <= ResponsiveBreakpoints.XXS;\r\n    };\r\n    ResponsiveBreakpoints.heightXS = function (container) {\r\n        return container.pixelHeight <= ResponsiveBreakpoints.XS;\r\n    };\r\n    ResponsiveBreakpoints.heightS = function (container) {\r\n        return container.pixelHeight <= ResponsiveBreakpoints.S;\r\n    };\r\n    ResponsiveBreakpoints.heightM = function (container) {\r\n        return container.pixelHeight <= ResponsiveBreakpoints.M;\r\n    };\r\n    ResponsiveBreakpoints.heightL = function (container) {\r\n        return container.pixelHeight <= ResponsiveBreakpoints.L;\r\n    };\r\n    ResponsiveBreakpoints.heightXL = function (container) {\r\n        return container.pixelHeight <= ResponsiveBreakpoints.XL;\r\n    };\r\n    ResponsiveBreakpoints.heightXXL = function (container) {\r\n        return container.pixelHeight <= ResponsiveBreakpoints.XXL;\r\n    };\r\n    ResponsiveBreakpoints.isXXS = function (container) {\r\n        return (container.pixelWidth <= ResponsiveBreakpoints.XXS) && (container.pixelHeight <= ResponsiveBreakpoints.XXS);\r\n    };\r\n    ResponsiveBreakpoints.isXS = function (container) {\r\n        return (container.pixelWidth <= ResponsiveBreakpoints.XS) && (container.pixelHeight <= ResponsiveBreakpoints.XS);\r\n    };\r\n    ResponsiveBreakpoints.isS = function (container) {\r\n        return (container.pixelWidth <= ResponsiveBreakpoints.S) && (container.pixelHeight <= ResponsiveBreakpoints.S);\r\n    };\r\n    ResponsiveBreakpoints.isM = function (container) {\r\n        return (container.pixelWidth <= ResponsiveBreakpoints.M) && (container.pixelHeight <= ResponsiveBreakpoints.M);\r\n    };\r\n    ResponsiveBreakpoints.isL = function (container) {\r\n        return (container.pixelWidth <= ResponsiveBreakpoints.L) && (container.pixelHeight <= ResponsiveBreakpoints.L);\r\n    };\r\n    ResponsiveBreakpoints.isXL = function (container) {\r\n        return (container.pixelWidth <= ResponsiveBreakpoints.XL) && (container.pixelHeight <= ResponsiveBreakpoints.XL);\r\n    };\r\n    ResponsiveBreakpoints.isXXL = function (container) {\r\n        return (container.pixelWidth <= ResponsiveBreakpoints.XXL) && (container.pixelHeight <= ResponsiveBreakpoints.XXL);\r\n    };\r\n    ResponsiveBreakpoints.maybeXXS = function (container) {\r\n        return (container.pixelWidth <= ResponsiveBreakpoints.XXS) || (container.pixelHeight <= ResponsiveBreakpoints.XXS);\r\n    };\r\n    ResponsiveBreakpoints.maybeXS = function (container) {\r\n        return (container.pixelWidth <= ResponsiveBreakpoints.XS) || (container.pixelHeight <= ResponsiveBreakpoints.XS);\r\n    };\r\n    ResponsiveBreakpoints.maybeS = function (container) {\r\n        return (container.pixelWidth <= ResponsiveBreakpoints.S) || (container.pixelHeight <= ResponsiveBreakpoints.S);\r\n    };\r\n    ResponsiveBreakpoints.maybeM = function (container) {\r\n        return (container.pixelWidth <= ResponsiveBreakpoints.M) || (container.pixelHeight <= ResponsiveBreakpoints.M);\r\n    };\r\n    ResponsiveBreakpoints.maybeL = function (container) {\r\n        return (container.pixelWidth <= ResponsiveBreakpoints.L) || (container.pixelHeight <= ResponsiveBreakpoints.L);\r\n    };\r\n    ResponsiveBreakpoints.maybeXL = function (container) {\r\n        return (container.pixelWidth <= ResponsiveBreakpoints.XL) || (container.pixelHeight <= ResponsiveBreakpoints.XL);\r\n    };\r\n    ResponsiveBreakpoints.maybeXXL = function (container) {\r\n        return (container.pixelWidth <= ResponsiveBreakpoints.XXL) || (container.pixelHeight <= ResponsiveBreakpoints.XXL);\r\n    };\r\n    // Named pixel breakpoints\r\n    ResponsiveBreakpoints.XXS = 100;\r\n    ResponsiveBreakpoints.XS = 200;\r\n    ResponsiveBreakpoints.S = 300;\r\n    ResponsiveBreakpoints.M = 400;\r\n    ResponsiveBreakpoints.L = 600;\r\n    ResponsiveBreakpoints.XL = 800;\r\n    ResponsiveBreakpoints.XXL = 1000;\r\n    return ResponsiveBreakpoints;\r\n}());\r\nexport { ResponsiveBreakpoints };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}