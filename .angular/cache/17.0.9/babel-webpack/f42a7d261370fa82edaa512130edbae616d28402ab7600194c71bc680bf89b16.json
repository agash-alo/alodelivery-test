{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class FoodPopupComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.btnlabel = 'Add';\n    this.foodForm = this.formBuilder.group({\n      restaurantName: ['', [Validators.required]]\n    });\n  }\n  ngOnInit() {}\n  onCheckboxChange(e, type) {\n    if (e?.checked) {\n      this.foodtype.push(type);\n    } else {\n      console.log(\"type\", type);\n      this.foodtype = this.foodtype.filter(e => e !== type);\n    }\n    console.log(this.foodtype, \"foodtype\");\n  }\n  onSubmit() {\n    console.log(JSON.stringify(this.foodForm.value, null, 2));\n  }\n  get f() {\n    return this.foodForm.controls;\n  }\n  static #_ = this.ɵfac = function FoodPopupComponent_Factory(t) {\n    return new (t || FoodPopupComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FoodPopupComponent,\n    selectors: [[\"app-food-popup\"]],\n    decls: 40,\n    vars: 2,\n    consts: [[\"fxLayout\", \"row wrap\"], [\"fxFlex.gt-sm\", \"100\", \"fxFlex\", \"100\"], [1, \"container-fluid\", \"p-3\"], [1, \"row\"], [1, \"col-12\"], [1, \"m-0\"], [1, \"text-center\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"col-lg-4\", \"col-12\"], [\"placeholder\", \"Enter the Restaurant Name\", \"formControlName\", \"foodName\", 1, \"form-control\"], [\"placeholder\", \"Description\", \"formControlName\", \"description\", 1, \"form-control\"], [1, \"mt-4\"], [1, \"example-section\"], [\"formControlName\", \"veg\", 1, \"example-margin\", 3, \"change\"], [\"formControlName\", \"nonVeg\", 1, \"example-margin\", \"mx-3\", 3, \"change\"], [1, \"col-lg-4\", \"col-12\", \"mt-2\"], [1, \"mt-2\"], [\"placeholder\", \"Give the Ratings\", \"formControlName\", \"ratings\", 1, \"form-control\"], [\"placeholder\", \" Enter the Restaurant Offer\", \"formControlName\", \"resoffer\", 1, \"form-control\"]],\n    template: function FoodPopupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"mat-card\", 5)(6, \"card-header\")(7, \"div\", 6)(8, \"h5\");\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"form\", 7);\n        i0.ɵɵlistener(\"ngSubmit\", function FoodPopupComponent_Template_form_ngSubmit_10_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(11, \"mat-card-content\")(12, \"div\", 3)(13, \"div\", 8)(14, \"label\");\n        i0.ɵɵtext(15, \"Food Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"br\")(17, \"input\", 9)(18, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 8)(20, \"label\");\n        i0.ɵɵtext(21, \" Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 8)(24, \"div\", 11)(25, \"section\", 12)(26, \"mat-checkbox\", 13);\n        i0.ɵɵlistener(\"change\", function FoodPopupComponent_Template_mat_checkbox_change_26_listener($event) {\n          return ctx.onCheckboxChange($event, \"veg\");\n        });\n        i0.ɵɵtext(27, \"Veg\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"mat-checkbox\", 14);\n        i0.ɵɵlistener(\"change\", function FoodPopupComponent_Template_mat_checkbox_change_28_listener($event) {\n          return ctx.onCheckboxChange($event, \"nonveg\");\n        });\n        i0.ɵɵtext(29, \"Non Veg\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(30, \"div\", 15)(31, \"div\", 16)(32, \"label\");\n        i0.ɵɵtext(33, \" Ratings\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(34, \"input\", 17);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(35, \"div\", 15)(36, \"div\", 16)(37, \"label\");\n        i0.ɵɵtext(38, \" Offer\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(39, \"input\", 18);\n        i0.ɵɵelementEnd()()()()()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵtextInterpolate1(\"\", ctx.btnlabel, \" Food\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.foodForm);\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormBuilder","Validators","FoodPopupComponent","constructor","formBuilder","btnlabel","foodForm","group","restaurantName","required","ngOnInit","onCheckboxChange","e","type","checked","foodtype","push","console","log","filter","onSubmit","JSON","stringify","value","f","controls","_","i0","ɵɵdirectiveInject","i1","_2","selectors","decls","vars","consts","template","FoodPopupComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","FoodPopupComponent_Template_form_ngSubmit_10_listener","ɵɵelement","FoodPopupComponent_Template_mat_checkbox_change_26_listener","$event","FoodPopupComponent_Template_mat_checkbox_change_28_listener","ɵɵadvance","ɵɵtextInterpolate1","ɵɵproperty"],"sources":["D:\\alodelivery test\\src\\app\\food-popup\\food-popup.component.ts","D:\\alodelivery test\\src\\app\\food-popup\\food-popup.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-food-popup',\r\n  templateUrl: './food-popup.component.html',\r\n  styleUrls: ['./food-popup.component.scss']\r\n})\r\nexport class FoodPopupComponent implements OnInit {\r\n  foodForm: any;\r\n  foodtype: any;\r\nbtnlabel:any='Add';\r\n  constructor(private formBuilder:FormBuilder) {\r\n    this.foodForm=this.formBuilder.group({\r\n      restaurantName: ['',[Validators.required]],\r\n\r\n      })\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  onCheckboxChange(e: any, type: any) {\r\n    if(e?.checked)  {\r\n     this.foodtype.push(type);\r\n    }  else  {\r\n     console.log(\"type\",type)\r\n     this.foodtype=this.foodtype.filter((e: any)=> e !== type)\r\n    }\r\n   \r\n     console.log(this.foodtype,\"foodtype\");\r\n   }\r\n   onSubmit(): void {\r\n    \r\n    console.log(JSON.stringify(this.foodForm.value, null, 2));\r\n  }\r\n  get f(): { [key: string]: AbstractControl } {\r\n    return this.foodForm.controls;\r\n  }\r\n}\r\n","\r\n<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\r\n<div class=\"container-fluid p-3\">\r\n    <div class=\"row \">\r\n        <div class=\"col-12 \">\r\n            <mat-card class=\"m-0\">\r\n                <card-header>\r\n                    <div class=\"text-center\">\r\n                        <h5>{{btnlabel}} Food</h5>\r\n                    </div>\r\n                </card-header>\r\n                <form [formGroup]=\"foodForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <mat-card-content>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-lg-4 col-12\">\r\n                                <label>Food Name</label><br>\r\n                                <input class=\"form-control\" placeholder=\"Enter the Restaurant Name\"\r\n                                    formControlName=\"foodName\">\r\n                                <br>\r\n                                <!-- <div *ngIf=\"submitted && f['foodName'].errors\" class=\"invalid-feedback\" required>\r\n                                    <div style=\"font-size: 12px;\" *ngIf=\"f['foodName'].errors['required']\">\r\n                                        Food Name is required</div>\r\n                                </div> -->\r\n                            </div>\r\n                            <div class=\"col-lg-4 col-12 \">\r\n                                        <label > Description</label>\r\n                                        <input class=\"form-control\" placeholder=\"Description\"\r\n                                            formControlName=\"description\">\r\n                                        <!-- <div *ngIf=\"submitted && f['description'].errors\" class=\"invalid-feedback\"\r\n                                            required>\r\n                                            <div style=\"font-size: 10px;\" *ngIf=\"f['description'].errors['required']\">\r\n                                                Description is required</div>\r\n                                        </div> -->\r\n                            </div>\r\n                            <div class=\"col-lg-4 col-12 \">\r\n                                <div class=\"mt-4\">\r\n                                    <section class=\"example-section\">\r\n                                        <mat-checkbox class=\"example-margin\" formControlName=\"veg\"\r\n                                            (change)=\"onCheckboxChange($event,'veg')\">Veg</mat-checkbox>\r\n                                        <mat-checkbox class=\"example-margin mx-3\" formControlName=\"nonVeg\"\r\n                                            (change)=\"onCheckboxChange($event,'nonveg')\">Non Veg</mat-checkbox>\r\n                                    </section>\r\n                                </div>\r\n                            </div>\r\n                            <!-- <div class=\"col-lg-4 col-12 mt-2\">\r\n                                <div class=\"mt-2\">\r\n                                     <label> Category</label>\r\n                                        <ng-select [items]=\"category\" [clearable]=\"false\" bindValue=\"id\" \r\n                        [searchable]=\"true\" bindLabel=\"name\" placeholder=\"Select deliveryman\">\r\n                      </ng-select>\r\n                                </div>\r\n                            </div> -->\r\n                            <div class=\"col-lg-4 col-12 mt-2\">\r\n                            <div class=\"mt-2\">\r\n                                <label> Ratings</label>\r\n                                <input class=\"form-control\" placeholder=\"Give the Ratings\"\r\n                                    formControlName=\"ratings\">\r\n                            </div>\r\n                            <!-- <div *ngIf=\"submitted && f['ratings'].errors\" class=\"invalid-feedback\" required>\r\n                                <div style=\"font-size: 10px;\" *ngIf=\"f['ratings'].errors['required']\">\r\n                                    Ratings is required</div>\r\n                            </div> -->\r\n                        </div>\r\n                            <div class=\"col-lg-4 col-12 mt-2\">\r\n                            <div class=\"mt-2\">\r\n                                <label> Offer</label>\r\n                                <input class=\"form-control\" placeholder=\" Enter the Restaurant Offer\"\r\n                                    formControlName=\"resoffer\">\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                        </mat-card-content>\r\n                        </form>\r\n                    </mat-card>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}