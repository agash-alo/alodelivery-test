{"ast":null,"code":"/**\r\n * Contains code and logic for generating linear gradients.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { BaseObject } from \"../../Base\";\nimport { List } from \"../../utils/List\";\nimport { getGhostPaper } from \"../Paper\";\nimport { registry } from \"../../Registry\";\nimport * as $iter from \"../../utils/Iterator\";\nimport * as $math from \"../../utils/Math\";\nimport * as $type from \"../../utils/Type\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Linear gradient class.\r\n */\nvar LinearGradient = /** @class */function (_super) {\n  __extends(LinearGradient, _super);\n  /**\r\n   * Constructor.\r\n   */\n  function LinearGradient() {\n    var _this =\n    // Init\n    _super.call(this) || this;\n    /**\r\n     * List of colors switch definitions in a gradient.\r\n     */\n    _this._stops = new List();\n    /**\r\n     * Gradient direction.\r\n     */\n    _this._rotation = 0;\n    _this.className = \"LinearGradient\";\n    _this._stops.events.on(\"setIndex\", _this.validate, _this);\n    _this._stops.events.on(\"inserted\", _this.validate, _this);\n    // Create element\n    _this.element = _this.paper.addGroup(\"linearGradient\");\n    _this.id = \"gradient-\" + registry.getUniqueId();\n    _this.element.attr({\n      \"id\": _this.id\n    });\n    _this._disposers.push(_this.element);\n    // Apply theme\n    _this.applyTheme();\n    return _this;\n  }\n  /**\r\n   * Draws gradient.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  LinearGradient.prototype.validate = function () {\n    var _this = this;\n    var rotation = (this._rotation + 90) * $math.RADIANS;\n    var x1 = Math.round(50 + Math.sin(rotation + Math.PI) * 50) + '%';\n    var y1 = Math.round(50 + Math.cos(rotation) * 50) + '%';\n    var x2 = Math.round(50 + Math.sin(rotation) * 50) + '%';\n    var y2 = Math.round(50 + Math.cos(rotation + Math.PI) * 50) + '%';\n    var gradientElement = this.element;\n    gradientElement.removeChildNodes();\n    gradientElement.attr({\n      \"x1\": x1,\n      \"x2\": x2,\n      \"y1\": y1,\n      \"y2\": y2\n    });\n    $iter.each($iter.indexed(this._stops.iterator()), function (a) {\n      var i = a[0];\n      var stop = a[1];\n      var offset = stop.offset;\n      if (!$type.isNumber(offset)) {\n        offset = i / (_this._stops.length - 1);\n      }\n      var gradientStop = _this.paper.add(\"stop\");\n      if ($type.hasValue(stop.color)) {\n        gradientStop.attr({\n          \"stop-color\": stop.color.toString()\n        });\n      }\n      if ($type.isNumber(stop.opacity)) {\n        gradientStop.attr({\n          \"stop-opacity\": stop.opacity\n        });\n      }\n      if ($type.isNumber(offset)) {\n        gradientStop.attr({\n          \"offset\": offset\n        });\n      }\n      gradientElement.add(gradientStop);\n    });\n  };\n  /**\r\n   * Clears the gradient.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  LinearGradient.prototype.clear = function () {\n    this._stops.clear();\n  };\n  /**\r\n   * Adds a color step to the gradient.\r\n   *\r\n   * @param color    Color (hex code or named color)\r\n   * @param opacity  Opacity (value from 0 to 1; 0 completely transaprent, 1 fully opaque)\r\n   * @param offset   Position of color in the gradient (value 0 to 1; 0 meaning start of the gradient and 1 end)\r\n   */\n  LinearGradient.prototype.addColor = function (color, opacity, offset) {\n    this._stops.push({\n      color: color,\n      opacity: opacity,\n      offset: offset\n    });\n  };\n  Object.defineProperty(LinearGradient.prototype, \"stops\", {\n    /**\r\n     * A list of color stops in the gradient.\r\n     *\r\n     * @return Stops\r\n     */\n    get: function () {\n      return this._stops;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LinearGradient.prototype, \"paper\", {\n    /**\r\n     * @ignore Exclude from docs\r\n     * @return Paper\r\n     */\n    get: function () {\n      if (this._paper) {\n        return this._paper;\n      }\n      return getGhostPaper();\n    },\n    /**\r\n     * [[Paper]] instace to use for the gradient.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param paper  Paper\r\n     */\n    set: function (paper) {\n      if (this._paper != paper) {\n        this._paper = paper;\n        this.validate();\n        paper.appendDef(this.element);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LinearGradient.prototype, \"rotation\", {\n    /**\r\n     * @return Rotation\r\n     */\n    get: function () {\n      return this._rotation;\n    },\n    /**\r\n     * Rotation (direction) of the gradient in degrees.\r\n     *\r\n     * @param value  Rotation\r\n     */\n    set: function (value) {\n      //this.element.attr({ \"gradientTransform\": \"rotate(\" + value + \" 10 100)\" });\n      this._rotation = value;\n      this.validate();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  LinearGradient.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n    this.stops.copyFrom(source.stops);\n    this._rotation = source.rotation;\n  };\n  Object.defineProperty(LinearGradient.prototype, \"gradientUnits\", {\n    /**\r\n     * Which units are used when drawing gradient filter.\r\n     *\r\n     * Use `\"userSpaceOnUse\"` when applying gradient on a perfectly straight line.\r\n     *\r\n     * @since 4.9.17\r\n     * @default objectBoundingBox\r\n     * @param value Filter units\r\n     */\n    set: function (value) {\n      this.element.attr({\n        gradientUnits: value\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return LinearGradient;\n}(BaseObject);\nexport { LinearGradient };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"LinearGradient\"] = LinearGradient;","map":{"version":3,"names":["__extends","BaseObject","List","getGhostPaper","registry","$iter","$math","$type","LinearGradient","_super","_this","call","_stops","_rotation","className","events","on","validate","element","paper","addGroup","id","getUniqueId","attr","_disposers","push","applyTheme","prototype","rotation","RADIANS","x1","Math","round","sin","PI","y1","cos","x2","y2","gradientElement","removeChildNodes","each","indexed","iterator","a","i","stop","offset","isNumber","length","gradientStop","add","hasValue","color","toString","opacity","clear","addColor","Object","defineProperty","get","enumerable","configurable","_paper","set","appendDef","value","copyFrom","source","stops","gradientUnits","registeredClasses"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/LinearGradient.js"],"sourcesContent":["/**\r\n * Contains code and logic for generating linear gradients.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../../Base\";\r\nimport { List } from \"../../utils/List\";\r\nimport { getGhostPaper } from \"../Paper\";\r\nimport { registry } from \"../../Registry\";\r\nimport * as $iter from \"../../utils/Iterator\";\r\nimport * as $math from \"../../utils/Math\";\r\nimport * as $type from \"../../utils/Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Linear gradient class.\r\n */\r\nvar LinearGradient = /** @class */ (function (_super) {\r\n    __extends(LinearGradient, _super);\r\n    /**\r\n     * Constructor.\r\n     */\r\n    function LinearGradient() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * List of colors switch definitions in a gradient.\r\n         */\r\n        _this._stops = new List();\r\n        /**\r\n         * Gradient direction.\r\n         */\r\n        _this._rotation = 0;\r\n        _this.className = \"LinearGradient\";\r\n        _this._stops.events.on(\"setIndex\", _this.validate, _this);\r\n        _this._stops.events.on(\"inserted\", _this.validate, _this);\r\n        // Create element\r\n        _this.element = _this.paper.addGroup(\"linearGradient\");\r\n        _this.id = \"gradient-\" + registry.getUniqueId();\r\n        _this.element.attr({ \"id\": _this.id });\r\n        _this._disposers.push(_this.element);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws gradient.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    LinearGradient.prototype.validate = function () {\r\n        var _this = this;\r\n        var rotation = (this._rotation + 90) * $math.RADIANS;\r\n        var x1 = Math.round(50 + Math.sin(rotation + Math.PI) * 50) + '%';\r\n        var y1 = Math.round(50 + Math.cos(rotation) * 50) + '%';\r\n        var x2 = Math.round(50 + Math.sin(rotation) * 50) + '%';\r\n        var y2 = Math.round(50 + Math.cos(rotation + Math.PI) * 50) + '%';\r\n        var gradientElement = this.element;\r\n        gradientElement.removeChildNodes();\r\n        gradientElement.attr({ \"x1\": x1, \"x2\": x2, \"y1\": y1, \"y2\": y2 });\r\n        $iter.each($iter.indexed(this._stops.iterator()), function (a) {\r\n            var i = a[0];\r\n            var stop = a[1];\r\n            var offset = stop.offset;\r\n            if (!$type.isNumber(offset)) {\r\n                offset = i / (_this._stops.length - 1);\r\n            }\r\n            var gradientStop = _this.paper.add(\"stop\");\r\n            if ($type.hasValue(stop.color)) {\r\n                gradientStop.attr({ \"stop-color\": stop.color.toString() });\r\n            }\r\n            if ($type.isNumber(stop.opacity)) {\r\n                gradientStop.attr({ \"stop-opacity\": stop.opacity });\r\n            }\r\n            if ($type.isNumber(offset)) {\r\n                gradientStop.attr({ \"offset\": offset });\r\n            }\r\n            gradientElement.add(gradientStop);\r\n        });\r\n    };\r\n    /**\r\n     * Clears the gradient.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    LinearGradient.prototype.clear = function () {\r\n        this._stops.clear();\r\n    };\r\n    /**\r\n     * Adds a color step to the gradient.\r\n     *\r\n     * @param color    Color (hex code or named color)\r\n     * @param opacity  Opacity (value from 0 to 1; 0 completely transaprent, 1 fully opaque)\r\n     * @param offset   Position of color in the gradient (value 0 to 1; 0 meaning start of the gradient and 1 end)\r\n     */\r\n    LinearGradient.prototype.addColor = function (color, opacity, offset) {\r\n        this._stops.push({ color: color, opacity: opacity, offset: offset });\r\n    };\r\n    Object.defineProperty(LinearGradient.prototype, \"stops\", {\r\n        /**\r\n         * A list of color stops in the gradient.\r\n         *\r\n         * @return Stops\r\n         */\r\n        get: function () {\r\n            return this._stops;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LinearGradient.prototype, \"paper\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Paper\r\n         */\r\n        get: function () {\r\n            if (this._paper) {\r\n                return this._paper;\r\n            }\r\n            return getGhostPaper();\r\n        },\r\n        /**\r\n         * [[Paper]] instace to use for the gradient.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param paper  Paper\r\n         */\r\n        set: function (paper) {\r\n            if (this._paper != paper) {\r\n                this._paper = paper;\r\n                this.validate();\r\n                paper.appendDef(this.element);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LinearGradient.prototype, \"rotation\", {\r\n        /**\r\n         * @return Rotation\r\n         */\r\n        get: function () {\r\n            return this._rotation;\r\n        },\r\n        /**\r\n         * Rotation (direction) of the gradient in degrees.\r\n         *\r\n         * @param value  Rotation\r\n         */\r\n        set: function (value) {\r\n            //this.element.attr({ \"gradientTransform\": \"rotate(\" + value + \" 10 100)\" });\r\n            this._rotation = value;\r\n            this.validate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LinearGradient.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.stops.copyFrom(source.stops);\r\n        this._rotation = source.rotation;\r\n    };\r\n    Object.defineProperty(LinearGradient.prototype, \"gradientUnits\", {\r\n        /**\r\n         * Which units are used when drawing gradient filter.\r\n         *\r\n         * Use `\"userSpaceOnUse\"` when applying gradient on a perfectly straight line.\r\n         *\r\n         * @since 4.9.17\r\n         * @default objectBoundingBox\r\n         * @param value Filter units\r\n         */\r\n        set: function (value) {\r\n            this.element.attr({ gradientUnits: value });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return LinearGradient;\r\n}(BaseObject));\r\nexport { LinearGradient };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"LinearGradient\"] = LinearGradient;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}