{"ast":null,"code":"/**\r\n * Module for building Gauge charts.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { RadarChart, RadarChartDataItem } from \"./RadarChart\";\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\nimport { ClockHand } from \"../elements/ClockHand\";\nimport { registry } from \"../../core/Registry\";\nimport * as $type from \"../../core/utils/Type\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Defines a [[DataItem]] for [[GaugeChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\nvar GaugeChartDataItem = /** @class */function (_super) {\n  __extends(GaugeChartDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n  function GaugeChartDataItem() {\n    var _this = _super.call(this) || this;\n    _this.className = \"GaugeChartDataItem\";\n    _this.applyTheme();\n    return _this;\n  }\n  return GaugeChartDataItem;\n}(RadarChartDataItem);\nexport { GaugeChartDataItem };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Creates a Gauge chart.\r\n *\r\n * @see {@link IGaugeChartEvents} for a list of available Events\r\n * @see {@link IGaugeChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/gauge-chart/} for documentation\r\n * @important\r\n */\nvar GaugeChart = /** @class */function (_super) {\n  __extends(GaugeChart, _super);\n  /**\r\n   * Constructor\r\n   */\n  function GaugeChart() {\n    var _this =\n    // Init\n    _super.call(this) || this;\n    _this.className = \"GaugeChart\";\n    _this.startAngle = 180;\n    _this.endAngle = 360;\n    _this.hands = new ListTemplate(new ClockHand());\n    _this.hands.events.on(\"inserted\", _this.processHand, _this, false);\n    _this._disposers.push(new ListDisposer(_this.hands));\n    _this._disposers.push(_this.hands.template);\n    // Apply theme\n    _this.applyTheme();\n    return _this;\n  }\n  /**\r\n   * Sets defaults that instantiate some objects that rely on parent, so they\r\n   * cannot be set in constructor.\r\n   */\n  GaugeChart.prototype.applyInternalDefaults = function () {\n    _super.prototype.applyInternalDefaults.call(this);\n    // Add a default screen reader title for accessibility\n    // This will be overridden in screen reader if there are any `titles` set\n    if (!$type.hasValue(this.readerTitle)) {\n      this.readerTitle = this.language.translate(\"Gauge chart\");\n    }\n  };\n  /**\r\n   * Decorates a [[ClockHand]] when it is added to the chart.\r\n   *\r\n   * @param event  Event\r\n   */\n  GaugeChart.prototype.processHand = function (event) {\n    var hand = event.newValue;\n    if (!hand.axis) {\n      hand.axis = this.xAxes.getIndex(0);\n    }\n  };\n  /**\r\n   * This function is used to sort element's JSON config properties, so that\r\n   * some properties that absolutely need to be processed last, can be put at\r\n   * the end.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param a  Element 1\r\n   * @param b  Element 2\r\n   * @return Sorting number\r\n   */\n  GaugeChart.prototype.configOrder = function (a, b) {\n    if (a == b) {\n      return 0;\n    }\n    // Must come last\n    else if (a == \"hands\") {\n      return 1;\n    } else if (b == \"hands\") {\n      return -1;\n    } else {\n      return _super.prototype.configOrder.call(this, a, b);\n    }\n  };\n  return GaugeChart;\n}(RadarChart);\nexport { GaugeChart };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"GaugeChart\"] = GaugeChart;","map":{"version":3,"names":["__extends","RadarChart","RadarChartDataItem","ListTemplate","ListDisposer","ClockHand","registry","$type","GaugeChartDataItem","_super","_this","call","className","applyTheme","GaugeChart","startAngle","endAngle","hands","events","on","processHand","_disposers","push","template","prototype","applyInternalDefaults","hasValue","readerTitle","language","translate","event","hand","newValue","axis","xAxes","getIndex","configOrder","a","b","registeredClasses"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/charts/types/GaugeChart.js"],"sourcesContent":["/**\r\n * Module for building Gauge charts.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { RadarChart, RadarChartDataItem } from \"./RadarChart\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { ClockHand } from \"../elements/ClockHand\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[GaugeChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar GaugeChartDataItem = /** @class */ (function (_super) {\r\n    __extends(GaugeChartDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function GaugeChartDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"GaugeChartDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return GaugeChartDataItem;\r\n}(RadarChartDataItem));\r\nexport { GaugeChartDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a Gauge chart.\r\n *\r\n * @see {@link IGaugeChartEvents} for a list of available Events\r\n * @see {@link IGaugeChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/gauge-chart/} for documentation\r\n * @important\r\n */\r\nvar GaugeChart = /** @class */ (function (_super) {\r\n    __extends(GaugeChart, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function GaugeChart() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"GaugeChart\";\r\n        _this.startAngle = 180;\r\n        _this.endAngle = 360;\r\n        _this.hands = new ListTemplate(new ClockHand());\r\n        _this.hands.events.on(\"inserted\", _this.processHand, _this, false);\r\n        _this._disposers.push(new ListDisposer(_this.hands));\r\n        _this._disposers.push(_this.hands.template);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    GaugeChart.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        // Add a default screen reader title for accessibility\r\n        // This will be overridden in screen reader if there are any `titles` set\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Gauge chart\");\r\n        }\r\n    };\r\n    /**\r\n     * Decorates a [[ClockHand]] when it is added to the chart.\r\n     *\r\n     * @param event  Event\r\n     */\r\n    GaugeChart.prototype.processHand = function (event) {\r\n        var hand = event.newValue;\r\n        if (!hand.axis) {\r\n            hand.axis = this.xAxes.getIndex(0);\r\n        }\r\n    };\r\n    /**\r\n     * This function is used to sort element's JSON config properties, so that\r\n     * some properties that absolutely need to be processed last, can be put at\r\n     * the end.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param a  Element 1\r\n     * @param b  Element 2\r\n     * @return Sorting number\r\n     */\r\n    GaugeChart.prototype.configOrder = function (a, b) {\r\n        if (a == b) {\r\n            return 0;\r\n        }\r\n        // Must come last\r\n        else if (a == \"hands\") {\r\n            return 1;\r\n        }\r\n        else if (b == \"hands\") {\r\n            return -1;\r\n        }\r\n        else {\r\n            return _super.prototype.configOrder.call(this, a, b);\r\n        }\r\n    };\r\n    return GaugeChart;\r\n}(RadarChart));\r\nexport { GaugeChart };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"GaugeChart\"] = GaugeChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}