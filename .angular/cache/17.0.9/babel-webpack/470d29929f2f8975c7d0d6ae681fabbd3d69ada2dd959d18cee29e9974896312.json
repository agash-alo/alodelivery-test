{"ast":null,"code":"/**\r\n * This module defines a [[Validatable]] class which can be used by all\r\n * non-[[Sprite]] classes to use system beats to revalidate themselves.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { BaseObjectEvents } from \"../Base\";\nimport { registry } from \"../Registry\";\n/**\r\n * This module defines a [[Validatable]] class which can be used by all\r\n * non-[[Sprite]] classes to use system update cycle to revalidate themselves.\r\n *\r\n * @ignore Exclude from docs\r\n */\nvar Validatable = /** @class */function (_super) {\n  __extends(Validatable, _super);\n  function Validatable() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\r\n     * Is invalid and should be revalidated?\r\n     */\n    _this._validateDisposer = null;\n    return _this;\n  }\n  /**\r\n   * Invalidates the element, so that it can re-validate/redraw itself in the\r\n   * next cycle.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Validatable.prototype.invalidate = function () {\n    if (this._validateDisposer === null) {\n      this._validateDisposer = registry.events.on(\"exitframe\", this.validate, this);\n    }\n  };\n  /**\r\n   * Validates itself.\r\n   *\r\n   * Most probably the extending class will have an overriding `validate()`\r\n   * method which will do actual work, as well as call this method using\r\n   * `super.validate()`.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Validatable.prototype.validate = function () {\n    if (this._validateDisposer !== null) {\n      this._validateDisposer.dispose();\n      this._validateDisposer = null;\n    }\n  };\n  Validatable.prototype.dispose = function () {\n    if (this._validateDisposer !== null) {\n      this._validateDisposer.dispose();\n      this._validateDisposer = null;\n    }\n    _super.prototype.dispose.call(this);\n  };\n  return Validatable;\n}(BaseObjectEvents);\nexport { Validatable };","map":{"version":3,"names":["__extends","BaseObjectEvents","registry","Validatable","_super","_this","apply","arguments","_validateDisposer","prototype","invalidate","events","on","validate","dispose","call"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/core/utils/Validatable.js"],"sourcesContent":["/**\r\n * This module defines a [[Validatable]] class which can be used by all\r\n * non-[[Sprite]] classes to use system beats to revalidate themselves.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObjectEvents } from \"../Base\";\r\nimport { registry } from \"../Registry\";\r\n/**\r\n * This module defines a [[Validatable]] class which can be used by all\r\n * non-[[Sprite]] classes to use system update cycle to revalidate themselves.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nvar Validatable = /** @class */ (function (_super) {\r\n    __extends(Validatable, _super);\r\n    function Validatable() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Is invalid and should be revalidated?\r\n         */\r\n        _this._validateDisposer = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Invalidates the element, so that it can re-validate/redraw itself in the\r\n     * next cycle.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Validatable.prototype.invalidate = function () {\r\n        if (this._validateDisposer === null) {\r\n            this._validateDisposer = registry.events.on(\"exitframe\", this.validate, this);\r\n        }\r\n    };\r\n    /**\r\n     * Validates itself.\r\n     *\r\n     * Most probably the extending class will have an overriding `validate()`\r\n     * method which will do actual work, as well as call this method using\r\n     * `super.validate()`.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Validatable.prototype.validate = function () {\r\n        if (this._validateDisposer !== null) {\r\n            this._validateDisposer.dispose();\r\n            this._validateDisposer = null;\r\n        }\r\n    };\r\n    Validatable.prototype.dispose = function () {\r\n        if (this._validateDisposer !== null) {\r\n            this._validateDisposer.dispose();\r\n            this._validateDisposer = null;\r\n        }\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    return Validatable;\r\n}(BaseObjectEvents));\r\nexport { Validatable };\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,gBAAgB,QAAQ,SAAS;AAC1C,SAASC,QAAQ,QAAQ,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,WAAW,GAAG,aAAe,UAAUC,MAAM,EAAE;EAC/CJ,SAAS,CAACG,WAAW,EAAEC,MAAM,CAAC;EAC9B,SAASD,WAAWA,CAAA,EAAG;IACnB,IAAIE,KAAK,GAAGD,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACE,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,IAAI,IAAI;IACpE;AACR;AACA;IACQF,KAAK,CAACG,iBAAiB,GAAG,IAAI;IAC9B,OAAOH,KAAK;EAChB;EACA;AACJ;AACA;AACA;AACA;AACA;EACIF,WAAW,CAACM,SAAS,CAACC,UAAU,GAAG,YAAY;IAC3C,IAAI,IAAI,CAACF,iBAAiB,KAAK,IAAI,EAAE;MACjC,IAAI,CAACA,iBAAiB,GAAGN,QAAQ,CAACS,MAAM,CAACC,EAAE,CAAC,WAAW,EAAE,IAAI,CAACC,QAAQ,EAAE,IAAI,CAAC;IACjF;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIV,WAAW,CAACM,SAAS,CAACI,QAAQ,GAAG,YAAY;IACzC,IAAI,IAAI,CAACL,iBAAiB,KAAK,IAAI,EAAE;MACjC,IAAI,CAACA,iBAAiB,CAACM,OAAO,CAAC,CAAC;MAChC,IAAI,CAACN,iBAAiB,GAAG,IAAI;IACjC;EACJ,CAAC;EACDL,WAAW,CAACM,SAAS,CAACK,OAAO,GAAG,YAAY;IACxC,IAAI,IAAI,CAACN,iBAAiB,KAAK,IAAI,EAAE;MACjC,IAAI,CAACA,iBAAiB,CAACM,OAAO,CAAC,CAAC;MAChC,IAAI,CAACN,iBAAiB,GAAG,IAAI;IACjC;IACAJ,MAAM,CAACK,SAAS,CAACK,OAAO,CAACC,IAAI,CAAC,IAAI,CAAC;EACvC,CAAC;EACD,OAAOZ,WAAW;AACtB,CAAC,CAACF,gBAAgB,CAAE;AACpB,SAASE,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}