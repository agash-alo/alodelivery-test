{"ast":null,"code":"import { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, NgZone, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewContainerRef, ContentChild, ViewChild, Input, ComponentFactoryResolver, forwardRef, EventEmitter, ChangeDetectorRef, Output, QueryList, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, merge, fromEvent, of, timer } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token for the MatInkBar's Positioner. */\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n  providedIn: 'root',\n  factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n  const method = element => ({\n    left: element ? (element.offsetLeft || 0) + 'px' : '0',\n    width: element ? (element.offsetWidth || 0) + 'px' : '0'\n  });\n  return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\nclass MatInkBar {\n  constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    this._inkBarPositioner = _inkBarPositioner;\n    this._animationMode = _animationMode;\n  }\n  /**\n   * Calculates the styles from the provided element in order to align the ink-bar to that element.\n   * Shows the ink bar if previously set as hidden.\n   * @param element\n   */\n  alignToElement(element) {\n    this.show();\n    if (typeof requestAnimationFrame !== 'undefined') {\n      this._ngZone.runOutsideAngular(() => {\n        requestAnimationFrame(() => this._setStyles(element));\n      });\n    } else {\n      this._setStyles(element);\n    }\n  }\n  /** Shows the ink bar. */\n  show() {\n    this._elementRef.nativeElement.style.visibility = 'visible';\n  }\n  /** Hides the ink bar. */\n  hide() {\n    this._elementRef.nativeElement.style.visibility = 'hidden';\n  }\n  /**\n   * Sets the proper styles to the ink bar element.\n   * @param element\n   */\n  _setStyles(element) {\n    const positions = this._inkBarPositioner(element);\n    const inkBar = this._elementRef.nativeElement;\n    inkBar.style.left = positions.left;\n    inkBar.style.width = positions.width;\n  }\n}\nMatInkBar.decorators = [{\n  type: Directive,\n  args: [{\n    selector: 'mat-ink-bar',\n    host: {\n      'class': 'mat-ink-bar',\n      '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n    }\n  }]\n}];\nMatInkBar.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: NgZone\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [_MAT_INK_BAR_POSITIONER]\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_CONTENT = new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\nclass MatTabContent {\n  constructor( /** Content for the tab. */template) {\n    this.template = template;\n  }\n}\nMatTabContent.decorators = [{\n  type: Directive,\n  args: [{\n    selector: '[matTabContent]',\n    providers: [{\n      provide: MAT_TAB_CONTENT,\n      useExisting: MatTabContent\n    }]\n  }]\n}];\nMatTabContent.ctorParameters = () => [{\n  type: TemplateRef\n}];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_LABEL = new InjectionToken('MatTabLabel');\n/** Used to flag tab labels for use with the portal directive */\nclass MatTabLabel extends CdkPortal {}\nMatTabLabel.decorators = [{\n  type: Directive,\n  args: [{\n    selector: '[mat-tab-label], [matTabLabel]',\n    providers: [{\n      provide: MAT_TAB_LABEL,\n      useExisting: MatTabLabel\n    }]\n  }]\n}];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nclass MatTabBase {}\nconst _MatTabMixinBase = mixinDisabled(MatTabBase);\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab extends _MatTabMixinBase {\n  constructor(_viewContainerRef, _closestTabGroup) {\n    super();\n    this._viewContainerRef = _viewContainerRef;\n    this._closestTabGroup = _closestTabGroup;\n    /** Plain text label for the tab, used when there is no template label. */\n    this.textLabel = '';\n    /** Portal that will be the hosted content of the tab */\n    this._contentPortal = null;\n    /** Emits whenever the internal state of the tab changes. */\n    this._stateChanges = new Subject();\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     */\n    this.position = null;\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     */\n    this.origin = null;\n    /**\n     * Whether the tab is currently active.\n     */\n    this.isActive = false;\n  }\n  /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n  get templateLabel() {\n    return this._templateLabel;\n  }\n  set templateLabel(value) {\n    this._setTemplateLabelInput(value);\n  }\n  /** @docs-private */\n  get content() {\n    return this._contentPortal;\n  }\n  ngOnChanges(changes) {\n    if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n      this._stateChanges.next();\n    }\n  }\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n  ngOnInit() {\n    this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n  }\n  /**\n   * This has been extracted to a util because of TS 4 and VE.\n   * View Engine doesn't support property rename inheritance.\n   * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n   * @docs-private\n   */\n  _setTemplateLabelInput(value) {\n    // Only update the templateLabel via query if there is actually\n    // a MatTabLabel found. This works around an issue where a user may have\n    // manually set `templateLabel` during creation mode, which would then get clobbered\n    // by `undefined` when this query resolves.\n    if (value) {\n      this._templateLabel = value;\n    }\n  }\n}\nMatTab.decorators = [{\n  type: Component,\n  args: [{\n    selector: 'mat-tab',\n    template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\",\n    inputs: ['disabled'],\n    // tslint:disable-next-line:validate-decorators\n    changeDetection: ChangeDetectionStrategy.Default,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'matTab'\n  }]\n}];\nMatTab.ctorParameters = () => [{\n  type: ViewContainerRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_TAB_GROUP]\n  }, {\n    type: Optional\n  }]\n}];\nMatTab.propDecorators = {\n  templateLabel: [{\n    type: ContentChild,\n    args: [MAT_TAB_LABEL]\n  }],\n  _explicitContent: [{\n    type: ContentChild,\n    args: [MAT_TAB_CONTENT, {\n      read: TemplateRef,\n      static: true\n    }]\n  }],\n  _implicitContent: [{\n    type: ViewChild,\n    args: [TemplateRef, {\n      static: true\n    }]\n  }],\n  textLabel: [{\n    type: Input,\n    args: ['label']\n  }],\n  ariaLabel: [{\n    type: Input,\n    args: ['aria-label']\n  }],\n  ariaLabelledby: [{\n    type: Input,\n    args: ['aria-labelledby']\n  }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nconst matTabsAnimations = {\n  /** Animation translates a tab along the X axis. */\n  translateTab: trigger('translateTab', [\n  // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n  state('center, void, left-origin-center, right-origin-center', style({\n    transform: 'none'\n  })),\n  // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n  // in order to ensure that the element has a height before its state changes. This is\n  // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n  // not have a static height and is not rendered. See related issue: #9465\n  state('left', style({\n    transform: 'translate3d(-100%, 0, 0)',\n    minHeight: '1px'\n  })), state('right', style({\n    transform: 'translate3d(100%, 0, 0)',\n    minHeight: '1px'\n  })), transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')), transition('void => left-origin-center', [style({\n    transform: 'translate3d(-100%, 0, 0)'\n  }), animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')]), transition('void => right-origin-center', [style({\n    transform: 'translate3d(100%, 0, 0)'\n  }), animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')])])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n  constructor(componentFactoryResolver, viewContainerRef, _host, _document) {\n    super(componentFactoryResolver, viewContainerRef, _document);\n    this._host = _host;\n    /** Subscription to events for when the tab body begins centering. */\n    this._centeringSub = Subscription.EMPTY;\n    /** Subscription to events for when the tab body finishes leaving from center position. */\n    this._leavingSub = Subscription.EMPTY;\n  }\n  /** Set initial visibility or set up subscription for changing visibility. */\n  ngOnInit() {\n    super.ngOnInit();\n    this._centeringSub = this._host._beforeCentering.pipe(startWith(this._host._isCenterPosition(this._host._position))).subscribe(isCentering => {\n      if (isCentering && !this.hasAttached()) {\n        this.attach(this._host._content);\n      }\n    });\n    this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n      this.detach();\n    });\n  }\n  /** Clean up centering subscription. */\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._centeringSub.unsubscribe();\n    this._leavingSub.unsubscribe();\n  }\n}\nMatTabBodyPortal.decorators = [{\n  type: Directive,\n  args: [{\n    selector: '[matTabBodyHost]'\n  }]\n}];\nMatTabBodyPortal.ctorParameters = () => [{\n  type: ComponentFactoryResolver\n}, {\n  type: ViewContainerRef\n}, {\n  type: MatTabBody,\n  decorators: [{\n    type: Inject,\n    args: [forwardRef(() => MatTabBody)]\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\nclass _MatTabBodyBase {\n  constructor(_elementRef, _dir, changeDetectorRef) {\n    this._elementRef = _elementRef;\n    this._dir = _dir;\n    /** Subscription to the directionality change observable. */\n    this._dirChangeSubscription = Subscription.EMPTY;\n    /** Emits when an animation on the tab is complete. */\n    this._translateTabComplete = new Subject();\n    /** Event emitted when the tab begins to animate towards the center as the active tab. */\n    this._onCentering = new EventEmitter();\n    /** Event emitted before the centering of the tab begins. */\n    this._beforeCentering = new EventEmitter();\n    /** Event emitted before the centering of the tab begins. */\n    this._afterLeavingCenter = new EventEmitter();\n    /** Event emitted when the tab completes its animation towards the center. */\n    this._onCentered = new EventEmitter(true);\n    // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n    // anyway to prevent the animations module from throwing an error if the body is used on its own.\n    /** Duration for the tab's animation. */\n    this.animationDuration = '500ms';\n    if (_dir) {\n      this._dirChangeSubscription = _dir.change.subscribe(dir => {\n        this._computePositionAnimationState(dir);\n        changeDetectorRef.markForCheck();\n      });\n    }\n    // Ensure that we get unique animation events, because the `.done` callback can get\n    // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n    this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(event => {\n      // If the transition to the center is complete, emit an event.\n      if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n        this._onCentered.emit();\n      }\n      if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n        this._afterLeavingCenter.emit();\n      }\n    });\n  }\n  /** The shifted index position of the tab body, where zero represents the active center tab. */\n  set position(position) {\n    this._positionIndex = position;\n    this._computePositionAnimationState();\n  }\n  /**\n   * After initialized, check if the content is centered and has an origin. If so, set the\n   * special position states that transition the tab from the left or right before centering.\n   */\n  ngOnInit() {\n    if (this._position == 'center' && this.origin != null) {\n      this._position = this._computePositionFromOrigin(this.origin);\n    }\n  }\n  ngOnDestroy() {\n    this._dirChangeSubscription.unsubscribe();\n    this._translateTabComplete.complete();\n  }\n  _onTranslateTabStarted(event) {\n    const isCentering = this._isCenterPosition(event.toState);\n    this._beforeCentering.emit(isCentering);\n    if (isCentering) {\n      this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n    }\n  }\n  /** The text direction of the containing app. */\n  _getLayoutDirection() {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n  /** Whether the provided position state is considered center, regardless of origin. */\n  _isCenterPosition(position) {\n    return position == 'center' || position == 'left-origin-center' || position == 'right-origin-center';\n  }\n  /** Computes the position state that will be used for the tab-body animation trigger. */\n  _computePositionAnimationState(dir = this._getLayoutDirection()) {\n    if (this._positionIndex < 0) {\n      this._position = dir == 'ltr' ? 'left' : 'right';\n    } else if (this._positionIndex > 0) {\n      this._position = dir == 'ltr' ? 'right' : 'left';\n    } else {\n      this._position = 'center';\n    }\n  }\n  /**\n   * Computes the position state based on the specified origin position. This is used if the\n   * tab is becoming visible immediately after creation.\n   */\n  _computePositionFromOrigin(origin) {\n    const dir = this._getLayoutDirection();\n    if (dir == 'ltr' && origin <= 0 || dir == 'rtl' && origin > 0) {\n      return 'left-origin-center';\n    }\n    return 'right-origin-center';\n  }\n}\n_MatTabBodyBase.decorators = [{\n  type: Directive\n}];\n_MatTabBodyBase.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: ChangeDetectorRef\n}];\n_MatTabBodyBase.propDecorators = {\n  _onCentering: [{\n    type: Output\n  }],\n  _beforeCentering: [{\n    type: Output\n  }],\n  _afterLeavingCenter: [{\n    type: Output\n  }],\n  _onCentered: [{\n    type: Output\n  }],\n  _content: [{\n    type: Input,\n    args: ['content']\n  }],\n  origin: [{\n    type: Input\n  }],\n  animationDuration: [{\n    type: Input\n  }],\n  position: [{\n    type: Input\n  }]\n};\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n  constructor(elementRef, dir, changeDetectorRef) {\n    super(elementRef, dir, changeDetectorRef);\n  }\n}\nMatTabBody.decorators = [{\n  type: Component,\n  args: [{\n    selector: 'mat-tab-body',\n    template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"\\n     cdkScrollable>\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n    encapsulation: ViewEncapsulation.None,\n    // tslint:disable-next-line:validate-decorators\n    changeDetection: ChangeDetectionStrategy.Default,\n    animations: [matTabsAnimations.translateTab],\n    host: {\n      'class': 'mat-tab-body'\n    },\n    styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"]\n  }]\n}];\nMatTabBody.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: ChangeDetectorRef\n}];\nMatTabBody.propDecorators = {\n  _portalHost: [{\n    type: ViewChild,\n    args: [CdkPortalOutlet]\n  }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {}\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nclass MatTabGroupMixinBase {\n  constructor(_elementRef) {\n    this._elementRef = _elementRef;\n  }\n}\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n  constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n    super(elementRef);\n    this._changeDetectorRef = _changeDetectorRef;\n    this._animationMode = _animationMode;\n    /** All of the tabs that belong to the group. */\n    this._tabs = new QueryList();\n    /** The tab index that should be selected after the content has been checked. */\n    this._indexToSelect = 0;\n    /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n    this._tabBodyWrapperHeight = 0;\n    /** Subscription to tabs being added/removed. */\n    this._tabsSubscription = Subscription.EMPTY;\n    /** Subscription to changes in the tab labels. */\n    this._tabLabelSubscription = Subscription.EMPTY;\n    this._selectedIndex = null;\n    /** Position of the tab header. */\n    this.headerPosition = 'above';\n    /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n    this.selectedIndexChange = new EventEmitter();\n    /** Event emitted when focus has changed within a tab group. */\n    this.focusChange = new EventEmitter();\n    /** Event emitted when the body animation has completed */\n    this.animationDone = new EventEmitter();\n    /** Event emitted when the tab selection has changed. */\n    this.selectedTabChange = new EventEmitter(true);\n    this._groupId = nextId++;\n    this.animationDuration = defaultConfig && defaultConfig.animationDuration ? defaultConfig.animationDuration : '500ms';\n    this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ? defaultConfig.disablePagination : false;\n    this.dynamicHeight = defaultConfig && defaultConfig.dynamicHeight != null ? defaultConfig.dynamicHeight : false;\n  }\n  /** Whether the tab group should grow to the size of the active tab. */\n  get dynamicHeight() {\n    return this._dynamicHeight;\n  }\n  set dynamicHeight(value) {\n    this._dynamicHeight = coerceBooleanProperty(value);\n  }\n  /** The index of the active tab. */\n  get selectedIndex() {\n    return this._selectedIndex;\n  }\n  set selectedIndex(value) {\n    this._indexToSelect = coerceNumberProperty(value, null);\n  }\n  /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n  get animationDuration() {\n    return this._animationDuration;\n  }\n  set animationDuration(value) {\n    this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n  }\n  /** Background color of the tab group. */\n  get backgroundColor() {\n    return this._backgroundColor;\n  }\n  set backgroundColor(value) {\n    const nativeElement = this._elementRef.nativeElement;\n    nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n    if (value) {\n      nativeElement.classList.add(`mat-background-${value}`);\n    }\n    this._backgroundColor = value;\n  }\n  /**\n   * After the content is checked, this component knows what tabs have been defined\n   * and what the selected index should be. This is where we can know exactly what position\n   * each tab should be in according to the new selected index, and additionally we know how\n   * a new selected tab should transition in (from the left or right).\n   */\n  ngAfterContentChecked() {\n    // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n    // the amount of tabs changes before the actual change detection runs.\n    const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n    // If there is a change in selected index, emit a change event. Should not trigger if\n    // the selected index has not yet been initialized.\n    if (this._selectedIndex != indexToSelect) {\n      const isFirstRun = this._selectedIndex == null;\n      if (!isFirstRun) {\n        this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n        // Preserve the height so page doesn't scroll up during tab change.\n        // Fixes https://stackblitz.com/edit/mat-tabs-scroll-page-top-on-tab-change\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.minHeight = wrapper.clientHeight + 'px';\n      }\n      // Changing these values after change detection has run\n      // since the checked content may contain references to them.\n      Promise.resolve().then(() => {\n        this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n        if (!isFirstRun) {\n          this.selectedIndexChange.emit(indexToSelect);\n          // Clear the min-height, this was needed during tab change to avoid\n          // unnecessary scrolling.\n          this._tabBodyWrapper.nativeElement.style.minHeight = '';\n        }\n      });\n    }\n    // Setup the position for each tab and optionally setup an origin on the next selected tab.\n    this._tabs.forEach((tab, index) => {\n      tab.position = index - indexToSelect;\n      // If there is already a selected tab, then set up an origin for the next selected tab\n      // if it doesn't have one already.\n      if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n        tab.origin = indexToSelect - this._selectedIndex;\n      }\n    });\n    if (this._selectedIndex !== indexToSelect) {\n      this._selectedIndex = indexToSelect;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  ngAfterContentInit() {\n    this._subscribeToAllTabChanges();\n    this._subscribeToTabLabels();\n    // Subscribe to changes in the amount of tabs, in order to be\n    // able to re-render the content as new tabs are added or removed.\n    this._tabsSubscription = this._tabs.changes.subscribe(() => {\n      const indexToSelect = this._clampTabIndex(this._indexToSelect);\n      // Maintain the previously-selected tab if a new tab is added or removed and there is no\n      // explicit change that selects a different tab.\n      if (indexToSelect === this._selectedIndex) {\n        const tabs = this._tabs.toArray();\n        for (let i = 0; i < tabs.length; i++) {\n          if (tabs[i].isActive) {\n            // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n            // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n            // adding a tab within the `selectedIndexChange` event.\n            this._indexToSelect = this._selectedIndex = i;\n            break;\n          }\n        }\n      }\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  /** Listens to changes in all of the tabs. */\n  _subscribeToAllTabChanges() {\n    // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n    // some that are inside of nested tab groups. We filter them out manually by checking that\n    // the closest group to the tab is the current one.\n    this._allTabs.changes.pipe(startWith(this._allTabs)).subscribe(tabs => {\n      this._tabs.reset(tabs.filter(tab => {\n        return tab._closestTabGroup === this || !tab._closestTabGroup;\n      }));\n      this._tabs.notifyOnChanges();\n    });\n  }\n  ngOnDestroy() {\n    this._tabs.destroy();\n    this._tabsSubscription.unsubscribe();\n    this._tabLabelSubscription.unsubscribe();\n  }\n  /** Re-aligns the ink bar to the selected tab element. */\n  realignInkBar() {\n    if (this._tabHeader) {\n      this._tabHeader._alignInkBarToSelectedTab();\n    }\n  }\n  /**\n   * Sets focus to a particular tab.\n   * @param index Index of the tab to be focused.\n   */\n  focusTab(index) {\n    const header = this._tabHeader;\n    if (header) {\n      header.focusIndex = index;\n    }\n  }\n  _focusChanged(index) {\n    this.focusChange.emit(this._createChangeEvent(index));\n  }\n  _createChangeEvent(index) {\n    const event = new MatTabChangeEvent();\n    event.index = index;\n    if (this._tabs && this._tabs.length) {\n      event.tab = this._tabs.toArray()[index];\n    }\n    return event;\n  }\n  /**\n   * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n   * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n   * binding to be updated, we need to subscribe to changes in it and trigger change detection\n   * manually.\n   */\n  _subscribeToTabLabels() {\n    if (this._tabLabelSubscription) {\n      this._tabLabelSubscription.unsubscribe();\n    }\n    this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges)).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n  /** Clamps the given index to the bounds of 0 and the tabs length. */\n  _clampTabIndex(index) {\n    // Note the `|| 0`, which ensures that values like NaN can't get through\n    // and which would otherwise throw the component into an infinite loop\n    // (since Math.max(NaN, 0) === NaN).\n    return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n  }\n  /** Returns a unique id for each tab label element */\n  _getTabLabelId(i) {\n    return `mat-tab-label-${this._groupId}-${i}`;\n  }\n  /** Returns a unique id for each tab content element */\n  _getTabContentId(i) {\n    return `mat-tab-content-${this._groupId}-${i}`;\n  }\n  /**\n   * Sets the height of the body wrapper to the height of the activating tab if dynamic\n   * height property is true.\n   */\n  _setTabBodyWrapperHeight(tabHeight) {\n    if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n      return;\n    }\n    const wrapper = this._tabBodyWrapper.nativeElement;\n    wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n    // This conditional forces the browser to paint the height so that\n    // the animation to the new height can have an origin.\n    if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n      wrapper.style.height = tabHeight + 'px';\n    }\n  }\n  /** Removes the height of the tab body wrapper. */\n  _removeTabBodyWrapperHeight() {\n    const wrapper = this._tabBodyWrapper.nativeElement;\n    this._tabBodyWrapperHeight = wrapper.clientHeight;\n    wrapper.style.height = '';\n    this.animationDone.emit();\n  }\n  /** Handle click events, setting new selected index if appropriate. */\n  _handleClick(tab, tabHeader, index) {\n    if (!tab.disabled) {\n      this.selectedIndex = tabHeader.focusIndex = index;\n    }\n  }\n  /** Retrieves the tabindex for the tab. */\n  _getTabIndex(tab, idx) {\n    if (tab.disabled) {\n      return null;\n    }\n    return this.selectedIndex === idx ? 0 : -1;\n  }\n  /** Callback for when the focused state of a tab has changed. */\n  _tabFocusChanged(focusOrigin, index) {\n    if (focusOrigin) {\n      this._tabHeader.focusIndex = index;\n    }\n  }\n}\n_MatTabGroupBase.decorators = [{\n  type: Directive\n}];\n_MatTabGroupBase.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_TABS_CONFIG]\n  }, {\n    type: Optional\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\n_MatTabGroupBase.propDecorators = {\n  dynamicHeight: [{\n    type: Input\n  }],\n  selectedIndex: [{\n    type: Input\n  }],\n  headerPosition: [{\n    type: Input\n  }],\n  animationDuration: [{\n    type: Input\n  }],\n  disablePagination: [{\n    type: Input\n  }],\n  backgroundColor: [{\n    type: Input\n  }],\n  selectedIndexChange: [{\n    type: Output\n  }],\n  focusChange: [{\n    type: Output\n  }],\n  animationDone: [{\n    type: Output\n  }],\n  selectedTabChange: [{\n    type: Output\n  }]\n};\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n  constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n    super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n  }\n}\nMatTabGroup.decorators = [{\n  type: Component,\n  args: [{\n    selector: 'mat-tab-group',\n    exportAs: 'matTabGroup',\n    template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\"\\n       (cdkFocusChange)=\\\"_tabFocusChanged($event, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex == i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n    encapsulation: ViewEncapsulation.None,\n    // tslint:disable-next-line:validate-decorators\n    changeDetection: ChangeDetectionStrategy.Default,\n    inputs: ['color', 'disableRipple'],\n    providers: [{\n      provide: MAT_TAB_GROUP,\n      useExisting: MatTabGroup\n    }],\n    host: {\n      'class': 'mat-tab-group',\n      '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n      '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\n    },\n    styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"]\n  }]\n}];\nMatTabGroup.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_TABS_CONFIG]\n  }, {\n    type: Optional\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\nMatTabGroup.propDecorators = {\n  _allTabs: [{\n    type: ContentChildren,\n    args: [MatTab, {\n      descendants: true\n    }]\n  }],\n  _tabBodyWrapper: [{\n    type: ViewChild,\n    args: ['tabBodyWrapper']\n  }],\n  _tabHeader: [{\n    type: ViewChild,\n    args: ['tabHeader']\n  }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nclass MatTabLabelWrapperBase {}\nconst _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase {\n  constructor(elementRef) {\n    super();\n    this.elementRef = elementRef;\n  }\n  /** Sets focus on the wrapper element */\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n  getOffsetLeft() {\n    return this.elementRef.nativeElement.offsetLeft;\n  }\n  getOffsetWidth() {\n    return this.elementRef.nativeElement.offsetWidth;\n  }\n}\nMatTabLabelWrapper.decorators = [{\n  type: Directive,\n  args: [{\n    selector: '[matTabLabelWrapper]',\n    inputs: ['disabled'],\n    host: {\n      '[class.mat-tab-disabled]': 'disabled',\n      '[attr.aria-disabled]': '!!disabled'\n    }\n  }]\n}];\nMatTabLabelWrapper.ctorParameters = () => [{\n  type: ElementRef\n}];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({\n  passive: true\n});\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nclass MatPaginatedTabHeader {\n  constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n    this._elementRef = _elementRef;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._viewportRuler = _viewportRuler;\n    this._dir = _dir;\n    this._ngZone = _ngZone;\n    this._platform = _platform;\n    this._animationMode = _animationMode;\n    /** The distance in pixels that the tab labels should be translated to the left. */\n    this._scrollDistance = 0;\n    /** Whether the header should scroll to the selected index after the view has been checked. */\n    this._selectedIndexChanged = false;\n    /** Emits when the component is destroyed. */\n    this._destroyed = new Subject();\n    /** Whether the controls for pagination should be displayed */\n    this._showPaginationControls = false;\n    /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n    this._disableScrollAfter = true;\n    /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n    this._disableScrollBefore = true;\n    /** Stream that will stop the automated scrolling. */\n    this._stopScrolling = new Subject();\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     */\n    this.disablePagination = false;\n    this._selectedIndex = 0;\n    /** Event emitted when the option is selected. */\n    this.selectFocusedIndex = new EventEmitter();\n    /** Event emitted when a label is focused. */\n    this.indexFocused = new EventEmitter();\n    // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n    _ngZone.runOutsideAngular(() => {\n      fromEvent(_elementRef.nativeElement, 'mouseleave').pipe(takeUntil(this._destroyed)).subscribe(() => {\n        this._stopInterval();\n      });\n    });\n  }\n  /** The index of the active tab. */\n  get selectedIndex() {\n    return this._selectedIndex;\n  }\n  set selectedIndex(value) {\n    value = coerceNumberProperty(value);\n    if (this._selectedIndex != value) {\n      this._selectedIndexChanged = true;\n      this._selectedIndex = value;\n      if (this._keyManager) {\n        this._keyManager.updateActiveItem(value);\n      }\n    }\n  }\n  ngAfterViewInit() {\n    // We need to handle these events manually, because we want to bind passive event listeners.\n    fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._handlePaginatorPress('before');\n    });\n    fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._handlePaginatorPress('after');\n    });\n  }\n  ngAfterContentInit() {\n    const dirChange = this._dir ? this._dir.change : of('ltr');\n    const resize = this._viewportRuler.change(150);\n    const realign = () => {\n      this.updatePagination();\n      this._alignInkBarToSelectedTab();\n    };\n    this._keyManager = new FocusKeyManager(this._items).withHorizontalOrientation(this._getLayoutDirection()).withHomeAndEnd().withWrap();\n    this._keyManager.updateActiveItem(this._selectedIndex);\n    // Defer the first call in order to allow for slower browsers to lay out the elements.\n    // This helps in cases where the user lands directly on a page with paginated tabs.\n    typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n    // On dir change or window resize, realign the ink bar and update the orientation of\n    // the key manager if the direction has changed.\n    merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      // We need to defer this to give the browser some time to recalculate\n      // the element dimensions. The call has to be wrapped in `NgZone.run`,\n      // because the viewport change handler runs outside of Angular.\n      this._ngZone.run(() => Promise.resolve().then(realign));\n      this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n    });\n    // If there is a change in the focus key manager we need to emit the `indexFocused`\n    // event in order to provide a public event that notifies about focus changes. Also we realign\n    // the tabs container by scrolling the new focused tab into the visible section.\n    this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n      this.indexFocused.emit(newFocusIndex);\n      this._setTabFocus(newFocusIndex);\n    });\n  }\n  ngAfterContentChecked() {\n    // If the number of tab labels have changed, check if scrolling should be enabled\n    if (this._tabLabelCount != this._items.length) {\n      this.updatePagination();\n      this._tabLabelCount = this._items.length;\n      this._changeDetectorRef.markForCheck();\n    }\n    // If the selected index has changed, scroll to the label and check if the scrolling controls\n    // should be disabled.\n    if (this._selectedIndexChanged) {\n      this._scrollToLabel(this._selectedIndex);\n      this._checkScrollingControls();\n      this._alignInkBarToSelectedTab();\n      this._selectedIndexChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n    // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n    // then translate the header to reflect this.\n    if (this._scrollDistanceChanged) {\n      this._updateTabScrollPosition();\n      this._scrollDistanceChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._stopScrolling.complete();\n  }\n  /** Handles keyboard events on the header. */\n  _handleKeydown(event) {\n    // We don't handle any key bindings with a modifier key.\n    if (hasModifierKey(event)) {\n      return;\n    }\n    switch (event.keyCode) {\n      case ENTER:\n      case SPACE:\n        if (this.focusIndex !== this.selectedIndex) {\n          this.selectFocusedIndex.emit(this.focusIndex);\n          this._itemSelected(event);\n        }\n        break;\n      default:\n        this._keyManager.onKeydown(event);\n    }\n  }\n  /**\n   * Callback for when the MutationObserver detects that the content has changed.\n   */\n  _onContentChanges() {\n    const textContent = this._elementRef.nativeElement.textContent;\n    // We need to diff the text content of the header, because the MutationObserver callback\n    // will fire even if the text content didn't change which is inefficient and is prone\n    // to infinite loops if a poorly constructed expression is passed in (see #14249).\n    if (textContent !== this._currentTextContent) {\n      this._currentTextContent = textContent || '';\n      // The content observer runs outside the `NgZone` by default, which\n      // means that we need to bring the callback back in ourselves.\n      this._ngZone.run(() => {\n        this.updatePagination();\n        this._alignInkBarToSelectedTab();\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n  /**\n   * Updates the view whether pagination should be enabled or not.\n   *\n   * WARNING: Calling this method can be very costly in terms of performance. It should be called\n   * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n   * page.\n   */\n  updatePagination() {\n    this._checkPaginationEnabled();\n    this._checkScrollingControls();\n    this._updateTabScrollPosition();\n  }\n  /** Tracks which element has focus; used for keyboard navigation */\n  get focusIndex() {\n    return this._keyManager ? this._keyManager.activeItemIndex : 0;\n  }\n  /** When the focus index is set, we must manually send focus to the correct label */\n  set focusIndex(value) {\n    if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n      return;\n    }\n    this._keyManager.setActiveItem(value);\n  }\n  /**\n   * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n   * providing a valid index and return true.\n   */\n  _isValidIndex(index) {\n    if (!this._items) {\n      return true;\n    }\n    const tab = this._items ? this._items.toArray()[index] : null;\n    return !!tab && !tab.disabled;\n  }\n  /**\n   * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n   * scrolling is enabled.\n   */\n  _setTabFocus(tabIndex) {\n    if (this._showPaginationControls) {\n      this._scrollToLabel(tabIndex);\n    }\n    if (this._items && this._items.length) {\n      this._items.toArray()[tabIndex].focus();\n      // Do not let the browser manage scrolling to focus the element, this will be handled\n      // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n      // should be the full width minus the offset width.\n      const containerEl = this._tabListContainer.nativeElement;\n      const dir = this._getLayoutDirection();\n      if (dir == 'ltr') {\n        containerEl.scrollLeft = 0;\n      } else {\n        containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n      }\n    }\n  }\n  /** The layout direction of the containing app. */\n  _getLayoutDirection() {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n  /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n  _updateTabScrollPosition() {\n    if (this.disablePagination) {\n      return;\n    }\n    const scrollDistance = this.scrollDistance;\n    const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n    // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n    // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n    // and ripples will exceed the boundaries of the visible tab bar.\n    // See: https://github.com/angular/components/issues/10276\n    // We round the `transform` here, because transforms with sub-pixel precision cause some\n    // browsers to blur the content of the element.\n    this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n    // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n    // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n    // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n    // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n    if (this._platform.TRIDENT || this._platform.EDGE) {\n      this._tabListContainer.nativeElement.scrollLeft = 0;\n    }\n  }\n  /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n  get scrollDistance() {\n    return this._scrollDistance;\n  }\n  set scrollDistance(value) {\n    this._scrollTo(value);\n  }\n  /**\n   * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n   * the end of the list, respectively). The distance to scroll is computed to be a third of the\n   * length of the tab list view window.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _scrollHeader(direction) {\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    // Move the scroll distance one-third the length of the tab list's viewport.\n    const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n    return this._scrollTo(this._scrollDistance + scrollAmount);\n  }\n  /** Handles click events on the pagination arrows. */\n  _handlePaginatorClick(direction) {\n    this._stopInterval();\n    this._scrollHeader(direction);\n  }\n  /**\n   * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _scrollToLabel(labelIndex) {\n    if (this.disablePagination) {\n      return;\n    }\n    const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n    if (!selectedLabel) {\n      return;\n    }\n    // The view length is the visible width of the tab labels.\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    const {\n      offsetLeft,\n      offsetWidth\n    } = selectedLabel.elementRef.nativeElement;\n    let labelBeforePos, labelAfterPos;\n    if (this._getLayoutDirection() == 'ltr') {\n      labelBeforePos = offsetLeft;\n      labelAfterPos = labelBeforePos + offsetWidth;\n    } else {\n      labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n      labelBeforePos = labelAfterPos - offsetWidth;\n    }\n    const beforeVisiblePos = this.scrollDistance;\n    const afterVisiblePos = this.scrollDistance + viewLength;\n    if (labelBeforePos < beforeVisiblePos) {\n      // Scroll header to move label to the before direction\n      this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n    } else if (labelAfterPos > afterVisiblePos) {\n      // Scroll header to move label to the after direction\n      this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n    }\n  }\n  /**\n   * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n   * tab list is wider than the size of the header container, then the pagination controls should\n   * be shown.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _checkPaginationEnabled() {\n    if (this.disablePagination) {\n      this._showPaginationControls = false;\n    } else {\n      const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n      if (!isEnabled) {\n        this.scrollDistance = 0;\n      }\n      if (isEnabled !== this._showPaginationControls) {\n        this._changeDetectorRef.markForCheck();\n      }\n      this._showPaginationControls = isEnabled;\n    }\n  }\n  /**\n   * Evaluate whether the before and after controls should be enabled or disabled.\n   * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n   * before button. If the header is at the end of the list (scroll distance is equal to the\n   * maximum distance we can scroll), then disable the after button.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _checkScrollingControls() {\n    if (this.disablePagination) {\n      this._disableScrollAfter = this._disableScrollBefore = true;\n    } else {\n      // Check if the pagination arrows should be activated.\n      this._disableScrollBefore = this.scrollDistance == 0;\n      this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n   * is equal to the difference in width between the tab list container and tab header container.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _getMaxScrollDistance() {\n    const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    return lengthOfTabList - viewLength || 0;\n  }\n  /** Tells the ink-bar to align itself to the current label wrapper */\n  _alignInkBarToSelectedTab() {\n    const selectedItem = this._items && this._items.length ? this._items.toArray()[this.selectedIndex] : null;\n    const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n    if (selectedLabelWrapper) {\n      this._inkBar.alignToElement(selectedLabelWrapper);\n    } else {\n      this._inkBar.hide();\n    }\n  }\n  /** Stops the currently-running paginator interval.  */\n  _stopInterval() {\n    this._stopScrolling.next();\n  }\n  /**\n   * Handles the user pressing down on one of the paginators.\n   * Starts scrolling the header after a certain amount of time.\n   * @param direction In which direction the paginator should be scrolled.\n   */\n  _handlePaginatorPress(direction, mouseEvent) {\n    // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n    // null check the `button`, but we do it so we don't break tests that use fake events.\n    if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n      return;\n    }\n    // Avoid overlapping timers.\n    this._stopInterval();\n    // Start a timer after the delay and keep firing based on the interval.\n    timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n    // Keep the timer going until something tells it to stop or the component is destroyed.\n    .pipe(takeUntil(merge(this._stopScrolling, this._destroyed))).subscribe(() => {\n      const {\n        maxScrollDistance,\n        distance\n      } = this._scrollHeader(direction);\n      // Stop the timer if we've reached the start or the end.\n      if (distance === 0 || distance >= maxScrollDistance) {\n        this._stopInterval();\n      }\n    });\n  }\n  /**\n   * Scrolls the header to a given position.\n   * @param position Position to which to scroll.\n   * @returns Information on the current scroll distance and the maximum.\n   */\n  _scrollTo(position) {\n    if (this.disablePagination) {\n      return {\n        maxScrollDistance: 0,\n        distance: 0\n      };\n    }\n    const maxScrollDistance = this._getMaxScrollDistance();\n    this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n    // Mark that the scroll distance has changed so that after the view is checked, the CSS\n    // transformation can move the header.\n    this._scrollDistanceChanged = true;\n    this._checkScrollingControls();\n    return {\n      maxScrollDistance,\n      distance: this._scrollDistance\n    };\n  }\n}\nMatPaginatedTabHeader.decorators = [{\n  type: Directive\n}];\nMatPaginatedTabHeader.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: ViewportRuler\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: NgZone\n}, {\n  type: Platform\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\nMatPaginatedTabHeader.propDecorators = {\n  disablePagination: [{\n    type: Input\n  }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n  constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    this._disableRipple = false;\n  }\n  /** Whether the ripple effect is disabled or not. */\n  get disableRipple() {\n    return this._disableRipple;\n  }\n  set disableRipple(value) {\n    this._disableRipple = coerceBooleanProperty(value);\n  }\n  _itemSelected(event) {\n    event.preventDefault();\n  }\n}\n_MatTabHeaderBase.decorators = [{\n  type: Directive\n}];\n_MatTabHeaderBase.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: ViewportRuler\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: NgZone\n}, {\n  type: Platform\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\n_MatTabHeaderBase.propDecorators = {\n  disableRipple: [{\n    type: Input\n  }]\n};\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n  constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n  }\n}\nMatTabHeader.decorators = [{\n  type: Component,\n  args: [{\n    selector: 'mat-tab-header',\n    template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n    inputs: ['selectedIndex'],\n    outputs: ['selectFocusedIndex', 'indexFocused'],\n    encapsulation: ViewEncapsulation.None,\n    // tslint:disable-next-line:validate-decorators\n    changeDetection: ChangeDetectionStrategy.Default,\n    host: {\n      'class': 'mat-tab-header',\n      '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n      '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n    },\n    styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"]\n  }]\n}];\nMatTabHeader.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: ViewportRuler\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: NgZone\n}, {\n  type: Platform\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\nMatTabHeader.propDecorators = {\n  _items: [{\n    type: ContentChildren,\n    args: [MatTabLabelWrapper, {\n      descendants: false\n    }]\n  }],\n  _inkBar: [{\n    type: ViewChild,\n    args: [MatInkBar, {\n      static: true\n    }]\n  }],\n  _tabListContainer: [{\n    type: ViewChild,\n    args: ['tabListContainer', {\n      static: true\n    }]\n  }],\n  _tabList: [{\n    type: ViewChild,\n    args: ['tabList', {\n      static: true\n    }]\n  }],\n  _nextPaginator: [{\n    type: ViewChild,\n    args: ['nextPaginator']\n  }],\n  _previousPaginator: [{\n    type: ViewChild,\n    args: ['previousPaginator']\n  }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n  constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    this._disableRipple = false;\n    /** Theme color of the nav bar. */\n    this.color = 'primary';\n  }\n  /** Background color of the tab nav. */\n  get backgroundColor() {\n    return this._backgroundColor;\n  }\n  set backgroundColor(value) {\n    const classList = this._elementRef.nativeElement.classList;\n    classList.remove(`mat-background-${this.backgroundColor}`);\n    if (value) {\n      classList.add(`mat-background-${value}`);\n    }\n    this._backgroundColor = value;\n  }\n  /** Whether the ripple effect is disabled or not. */\n  get disableRipple() {\n    return this._disableRipple;\n  }\n  set disableRipple(value) {\n    this._disableRipple = coerceBooleanProperty(value);\n  }\n  _itemSelected() {\n    // noop\n  }\n  ngAfterContentInit() {\n    // We need this to run before the `changes` subscription in parent to ensure that the\n    // selectedIndex is up-to-date by the time the super class starts looking for it.\n    this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      this.updateActiveLink();\n    });\n    super.ngAfterContentInit();\n  }\n  /** Notifies the component that the active link has been changed. */\n  updateActiveLink() {\n    if (!this._items) {\n      return;\n    }\n    const items = this._items.toArray();\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].active) {\n        this.selectedIndex = i;\n        this._changeDetectorRef.markForCheck();\n        return;\n      }\n    }\n    // The ink bar should hide itself if no items are active.\n    this.selectedIndex = -1;\n    this._inkBar.hide();\n  }\n}\n_MatTabNavBase.decorators = [{\n  type: Directive\n}];\n_MatTabNavBase.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: NgZone\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: ViewportRuler\n}, {\n  type: Platform\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\n_MatTabNavBase.propDecorators = {\n  backgroundColor: [{\n    type: Input\n  }],\n  disableRipple: [{\n    type: Input\n  }],\n  color: [{\n    type: Input\n  }]\n};\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n  constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n    super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n  }\n}\nMatTabNav.decorators = [{\n  type: Component,\n  args: [{\n    selector: '[mat-tab-nav-bar]',\n    exportAs: 'matTabNavBar, matTabNav',\n    inputs: ['color'],\n    template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n    host: {\n      'class': 'mat-tab-nav-bar mat-tab-header',\n      '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n      '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n      '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n      '[class.mat-accent]': 'color === \"accent\"',\n      '[class.mat-warn]': 'color === \"warn\"'\n    },\n    encapsulation: ViewEncapsulation.None,\n    // tslint:disable-next-line:validate-decorators\n    changeDetection: ChangeDetectionStrategy.Default,\n    styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"]\n  }]\n}];\nMatTabNav.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: NgZone\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: ViewportRuler\n}, {\n  type: Platform\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\nMatTabNav.propDecorators = {\n  _items: [{\n    type: ContentChildren,\n    args: [forwardRef(() => MatTabLink), {\n      descendants: true\n    }]\n  }],\n  _inkBar: [{\n    type: ViewChild,\n    args: [MatInkBar, {\n      static: true\n    }]\n  }],\n  _tabListContainer: [{\n    type: ViewChild,\n    args: ['tabListContainer', {\n      static: true\n    }]\n  }],\n  _tabList: [{\n    type: ViewChild,\n    args: ['tabList', {\n      static: true\n    }]\n  }],\n  _nextPaginator: [{\n    type: ViewChild,\n    args: ['nextPaginator']\n  }],\n  _previousPaginator: [{\n    type: ViewChild,\n    args: ['previousPaginator']\n  }]\n};\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {}\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n/** Base class with all of the `MatTabLink` functionality. */\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n  constructor(_tabNavBar, /** @docs-private */elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n    super();\n    this._tabNavBar = _tabNavBar;\n    this.elementRef = elementRef;\n    this._focusMonitor = _focusMonitor;\n    /** Whether the tab link is active or not. */\n    this._isActive = false;\n    this.rippleConfig = globalRippleOptions || {};\n    this.tabIndex = parseInt(tabIndex) || 0;\n    if (animationMode === 'NoopAnimations') {\n      this.rippleConfig.animation = {\n        enterDuration: 0,\n        exitDuration: 0\n      };\n    }\n  }\n  /** Whether the link is active. */\n  get active() {\n    return this._isActive;\n  }\n  set active(value) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._isActive) {\n      this._isActive = value;\n      this._tabNavBar.updateActiveLink();\n    }\n  }\n  /**\n   * Whether ripples are disabled on interaction.\n   * @docs-private\n   */\n  get rippleDisabled() {\n    return this.disabled || this.disableRipple || this._tabNavBar.disableRipple || !!this.rippleConfig.disabled;\n  }\n  /** Focuses the tab link. */\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n  ngAfterViewInit() {\n    this._focusMonitor.monitor(this.elementRef);\n  }\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this.elementRef);\n  }\n}\n_MatTabLinkBase.decorators = [{\n  type: Directive\n}];\n_MatTabLinkBase.ctorParameters = () => [{\n  type: _MatTabNavBase\n}, {\n  type: ElementRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Attribute,\n    args: ['tabindex']\n  }]\n}, {\n  type: FocusMonitor\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\n_MatTabLinkBase.propDecorators = {\n  active: [{\n    type: Input\n  }]\n};\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n  constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n    super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n    this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n    this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n  }\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._tabLinkRipple._removeTriggerEvents();\n  }\n}\nMatTabLink.decorators = [{\n  type: Directive,\n  args: [{\n    selector: '[mat-tab-link], [matTabLink]',\n    exportAs: 'matTabLink',\n    inputs: ['disabled', 'disableRipple', 'tabIndex'],\n    host: {\n      'class': 'mat-tab-link mat-focus-indicator',\n      '[attr.aria-current]': 'active ? \"page\" : null',\n      '[attr.aria-disabled]': 'disabled',\n      '[attr.tabIndex]': 'tabIndex',\n      '[class.mat-tab-disabled]': 'disabled',\n      '[class.mat-tab-label-active]': 'active'\n    }\n  }]\n}];\nMatTabLink.ctorParameters = () => [{\n  type: MatTabNav\n}, {\n  type: ElementRef\n}, {\n  type: NgZone\n}, {\n  type: Platform\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Attribute,\n    args: ['tabindex']\n  }]\n}, {\n  type: FocusMonitor\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTabsModule {}\nMatTabsModule.decorators = [{\n  type: NgModule,\n  args: [{\n    imports: [CommonModule, MatCommonModule, PortalModule, MatRippleModule, ObserversModule, A11yModule],\n    // Don't export all components because some are only to be used internally.\n    exports: [MatCommonModule, MatTabGroup, MatTabLabel, MatTab, MatTabNav, MatTabLink, MatTabContent],\n    declarations: [MatTabGroup, MatTabLabel, MatTab, MatInkBar, MatTabLabelWrapper, MatTabNav, MatTabLink, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabContent]\n  }]\n}];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵangular_material_src_material_tabs_tabs_a, MAT_TAB_LABEL as ɵangular_material_src_material_tabs_tabs_b, MAT_TAB_CONTENT as ɵangular_material_src_material_tabs_tabs_c, MatPaginatedTabHeader as ɵangular_material_src_material_tabs_tabs_d };","map":{"version":3,"names":["FocusKeyManager","FocusMonitor","A11yModule","ObserversModule","CdkPortal","TemplatePortal","CdkPortalOutlet","PortalModule","DOCUMENT","CommonModule","InjectionToken","Directive","ElementRef","NgZone","Inject","Optional","TemplateRef","Component","ChangeDetectionStrategy","ViewEncapsulation","ViewContainerRef","ContentChild","ViewChild","Input","ComponentFactoryResolver","forwardRef","EventEmitter","ChangeDetectorRef","Output","QueryList","ContentChildren","Attribute","NgModule","mixinDisabled","mixinColor","mixinDisableRipple","mixinTabIndex","MAT_RIPPLE_GLOBAL_OPTIONS","RippleRenderer","MatCommonModule","MatRippleModule","ANIMATION_MODULE_TYPE","Subject","Subscription","merge","fromEvent","of","timer","Directionality","trigger","state","style","transition","animate","startWith","distinctUntilChanged","takeUntil","coerceBooleanProperty","coerceNumberProperty","ViewportRuler","normalizePassiveListenerOptions","Platform","hasModifierKey","SPACE","ENTER","_MAT_INK_BAR_POSITIONER","providedIn","factory","_MAT_INK_BAR_POSITIONER_FACTORY","method","element","left","offsetLeft","width","offsetWidth","MatInkBar","constructor","_elementRef","_ngZone","_inkBarPositioner","_animationMode","alignToElement","show","requestAnimationFrame","runOutsideAngular","_setStyles","nativeElement","visibility","hide","positions","inkBar","decorators","type","args","selector","host","ctorParameters","undefined","String","MAT_TAB_CONTENT","MatTabContent","template","providers","provide","useExisting","MAT_TAB_LABEL","MatTabLabel","MatTabBase","_MatTabMixinBase","MAT_TAB_GROUP","MatTab","_viewContainerRef","_closestTabGroup","textLabel","_contentPortal","_stateChanges","position","origin","isActive","templateLabel","_templateLabel","value","_setTemplateLabelInput","content","ngOnChanges","changes","hasOwnProperty","next","ngOnDestroy","complete","ngOnInit","_explicitContent","_implicitContent","inputs","changeDetection","Default","encapsulation","None","exportAs","propDecorators","read","static","ariaLabel","ariaLabelledby","matTabsAnimations","translateTab","transform","minHeight","MatTabBodyPortal","componentFactoryResolver","viewContainerRef","_host","_document","_centeringSub","EMPTY","_leavingSub","_beforeCentering","pipe","_isCenterPosition","_position","subscribe","isCentering","hasAttached","attach","_content","_afterLeavingCenter","detach","unsubscribe","MatTabBody","_MatTabBodyBase","_dir","changeDetectorRef","_dirChangeSubscription","_translateTabComplete","_onCentering","_onCentered","animationDuration","change","dir","_computePositionAnimationState","markForCheck","x","y","fromState","toState","event","emit","_positionIndex","_computePositionFromOrigin","_onTranslateTabStarted","clientHeight","_getLayoutDirection","elementRef","animations","styles","_portalHost","MAT_TABS_CONFIG","nextId","MatTabChangeEvent","MatTabGroupMixinBase","_MatTabGroupMixinBase","_MatTabGroupBase","_changeDetectorRef","defaultConfig","_tabs","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_selectedIndex","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","disablePagination","dynamicHeight","_dynamicHeight","selectedIndex","_animationDuration","test","backgroundColor","_backgroundColor","classList","remove","add","ngAfterContentChecked","indexToSelect","_clampTabIndex","isFirstRun","_createChangeEvent","wrapper","_tabBodyWrapper","Promise","resolve","then","forEach","tab","index","ngAfterContentInit","_subscribeToAllTabChanges","_subscribeToTabLabels","tabs","toArray","i","length","_allTabs","reset","filter","notifyOnChanges","destroy","realignInkBar","_tabHeader","_alignInkBarToSelectedTab","focusTab","header","focusIndex","_focusChanged","map","Math","min","max","_getTabLabelId","_getTabContentId","_setTabBodyWrapperHeight","tabHeight","height","offsetHeight","_removeTabBodyWrapperHeight","_handleClick","tabHeader","disabled","_getTabIndex","idx","_tabFocusChanged","focusOrigin","MatTabGroup","animationMode","descendants","MatTabLabelWrapperBase","_MatTabLabelWrapperMixinBase","MatTabLabelWrapper","focus","getOffsetLeft","getOffsetWidth","passiveEventListenerOptions","passive","EXAGGERATED_OVERSCROLL","HEADER_SCROLL_DELAY","HEADER_SCROLL_INTERVAL","MatPaginatedTabHeader","_viewportRuler","_platform","_scrollDistance","_selectedIndexChanged","_destroyed","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","selectFocusedIndex","indexFocused","_stopInterval","_keyManager","updateActiveItem","ngAfterViewInit","_previousPaginator","_handlePaginatorPress","_nextPaginator","dirChange","resize","realign","updatePagination","_items","withHorizontalOrientation","withHomeAndEnd","withWrap","run","newFocusIndex","_setTabFocus","_tabLabelCount","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","_handleKeydown","keyCode","_itemSelected","onKeydown","_onContentChanges","textContent","_currentTextContent","_checkPaginationEnabled","activeItemIndex","_isValidIndex","setActiveItem","tabIndex","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","_tabList","round","TRIDENT","EDGE","_scrollTo","_scrollHeader","direction","viewLength","scrollAmount","_handlePaginatorClick","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","_getMaxScrollDistance","lengthOfTabList","selectedItem","selectedLabelWrapper","_inkBar","mouseEvent","button","maxScrollDistance","distance","_MatTabHeaderBase","viewportRuler","ngZone","platform","_disableRipple","disableRipple","preventDefault","MatTabHeader","outputs","_MatTabNavBase","color","updateActiveLink","items","active","MatTabNav","MatTabLink","MatTabLinkMixinBase","_MatTabLinkMixinBase","_MatTabLinkBase","_tabNavBar","globalRippleOptions","_focusMonitor","_isActive","rippleConfig","parseInt","animation","enterDuration","exitDuration","newValue","rippleDisabled","monitor","stopMonitoring","tabNavBar","focusMonitor","_tabLinkRipple","setupTriggerEvents","_removeTriggerEvents","MatTabsModule","imports","exports","declarations","ɵangular_material_src_material_tabs_tabs_a","ɵangular_material_src_material_tabs_tabs_b","ɵangular_material_src_material_tabs_tabs_c","ɵangular_material_src_material_tabs_tabs_d"],"sources":["D:/alodelivery test/node_modules/@angular/material/fesm2015/tabs.js"],"sourcesContent":["import { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, NgZone, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewContainerRef, ContentChild, ViewChild, Input, ComponentFactoryResolver, forwardRef, EventEmitter, ChangeDetectorRef, Output, QueryList, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, merge, fromEvent, of, timer } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token for the MatInkBar's Positioner. */\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    const method = (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    });\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\nclass MatInkBar {\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n    alignToElement(element) {\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => this._setStyles(element));\n            });\n        }\n        else {\n            this._setStyles(element);\n        }\n    }\n    /** Shows the ink bar. */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /** Hides the ink bar. */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @param element\n     */\n    _setStyles(element) {\n        const positions = this._inkBarPositioner(element);\n        const inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    }\n}\nMatInkBar.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-ink-bar',\n                host: {\n                    'class': 'mat-ink-bar',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n                },\n            },] }\n];\nMatInkBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_CONTENT = new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\nclass MatTabContent {\n    constructor(\n    /** Content for the tab. */ template) {\n        this.template = template;\n    }\n}\nMatTabContent.decorators = [\n    { type: Directive, args: [{\n                selector: '[matTabContent]',\n                providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }],\n            },] }\n];\nMatTabContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_LABEL = new InjectionToken('MatTabLabel');\n/** Used to flag tab labels for use with the portal directive */\nclass MatTabLabel extends CdkPortal {\n}\nMatTabLabel.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-tab-label], [matTabLabel]',\n                providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }],\n            },] }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nclass MatTabBase {\n}\nconst _MatTabMixinBase = mixinDisabled(MatTabBase);\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab extends _MatTabMixinBase {\n    constructor(_viewContainerRef, _closestTabGroup) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        this._closestTabGroup = _closestTabGroup;\n        /** Plain text label for the tab, used when there is no template label. */\n        this.textLabel = '';\n        /** Portal that will be the hosted content of the tab */\n        this._contentPortal = null;\n        /** Emits whenever the internal state of the tab changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n    get templateLabel() { return this._templateLabel; }\n    set templateLabel(value) { this._setTemplateLabelInput(value); }\n    /** @docs-private */\n    get content() {\n        return this._contentPortal;\n    }\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setTemplateLabelInput(value) {\n        // Only update the templateLabel via query if there is actually\n        // a MatTabLabel found. This works around an issue where a user may have\n        // manually set `templateLabel` during creation mode, which would then get clobbered\n        // by `undefined` when this query resolves.\n        if (value) {\n            this._templateLabel = value;\n        }\n    }\n}\nMatTab.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-tab',\n                template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\",\n                inputs: ['disabled'],\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matTab'\n            },] }\n];\nMatTab.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TAB_GROUP,] }, { type: Optional }] }\n];\nMatTab.propDecorators = {\n    templateLabel: [{ type: ContentChild, args: [MAT_TAB_LABEL,] }],\n    _explicitContent: [{ type: ContentChild, args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true },] }],\n    _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    textLabel: [{ type: Input, args: ['label',] }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nconst matTabsAnimations = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    constructor(componentFactoryResolver, viewContainerRef, _host, _document) {\n        super(componentFactoryResolver, viewContainerRef, _document);\n        this._host = _host;\n        /** Subscription to events for when the tab body begins centering. */\n        this._centeringSub = Subscription.EMPTY;\n        /** Subscription to events for when the tab body finishes leaving from center position. */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        });\n        this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n    /** Clean up centering subscription. */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.decorators = [\n    { type: Directive, args: [{\n                selector: '[matTabBodyHost]'\n            },] }\n];\nMatTabBodyPortal.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef(() => MatTabBody),] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\nclass _MatTabBodyBase {\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /** Subscription to the directionality change observable. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Emits when an animation on the tab is complete. */\n        this._translateTabComplete = new Subject();\n        /** Event emitted when the tab begins to animate towards the center as the active tab. */\n        this._onCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._beforeCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._afterLeavingCenter = new EventEmitter();\n        /** Event emitted when the tab completes its animation towards the center. */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /** Duration for the tab's animation. */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            });\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe(event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        });\n    }\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    }\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    _onTranslateTabStarted(event) {\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /** The text direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the provided position state is considered center, regardless of origin. */\n    _isCenterPosition(position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    }\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    _computePositionFromOrigin(origin) {\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.decorators = [\n    { type: Directive }\n];\n_MatTabBodyBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\n_MatTabBodyBase.propDecorators = {\n    _onCentering: [{ type: Output }],\n    _beforeCentering: [{ type: Output }],\n    _afterLeavingCenter: [{ type: Output }],\n    _onCentered: [{ type: Output }],\n    _content: [{ type: Input, args: ['content',] }],\n    origin: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    position: [{ type: Input }]\n};\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"\\n     cdkScrollable>\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matTabsAnimations.translateTab],\n                host: {\n                    'class': 'mat-tab-body',\n                },\n                styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"]\n            },] }\n];\nMatTabBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\nMatTabBody.propDecorators = {\n    _portalHost: [{ type: ViewChild, args: [CdkPortalOutlet,] }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {\n}\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nclass MatTabGroupMixinBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** All of the tabs that belong to the group. */\n        this._tabs = new QueryList();\n        /** The tab index that should be selected after the content has been checked. */\n        this._indexToSelect = 0;\n        /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n        this._tabBodyWrapperHeight = 0;\n        /** Subscription to tabs being added/removed. */\n        this._tabsSubscription = Subscription.EMPTY;\n        /** Subscription to changes in the tab labels. */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._selectedIndex = null;\n        /** Position of the tab header. */\n        this.headerPosition = 'above';\n        /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n        this.selectedIndexChange = new EventEmitter();\n        /** Event emitted when focus has changed within a tab group. */\n        this.focusChange = new EventEmitter();\n        /** Event emitted when the body animation has completed */\n        this.animationDone = new EventEmitter();\n        /** Event emitted when the tab selection has changed. */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n        this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ?\n            defaultConfig.disablePagination : false;\n        this.dynamicHeight = defaultConfig && defaultConfig.dynamicHeight != null ?\n            defaultConfig.dynamicHeight : false;\n    }\n    /** Whether the tab group should grow to the size of the active tab. */\n    get dynamicHeight() { return this._dynamicHeight; }\n    set dynamicHeight(value) { this._dynamicHeight = coerceBooleanProperty(value); }\n    /** The index of the active tab. */\n    get selectedIndex() { return this._selectedIndex; }\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() { return this._animationDuration; }\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    /** Background color of the tab group. */\n    get backgroundColor() { return this._backgroundColor; }\n    set backgroundColor(value) {\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n                // Preserve the height so page doesn't scroll up during tab change.\n                // Fixes https://stackblitz.com/edit/mat-tabs-scroll-page-top-on-tab-change\n                const wrapper = this._tabBodyWrapper.nativeElement;\n                wrapper.style.minHeight = wrapper.clientHeight + 'px';\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                    // Clear the min-height, this was needed during tab change to avoid\n                    // unnecessary scrolling.\n                    this._tabBodyWrapper.nativeElement.style.minHeight = '';\n                }\n            });\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngAfterContentInit() {\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe(() => {\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this._tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Listens to changes in all of the tabs. */\n    _subscribeToAllTabChanges() {\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes\n            .pipe(startWith(this._allTabs))\n            .subscribe((tabs) => {\n            this._tabs.reset(tabs.filter(tab => {\n                return tab._closestTabGroup === this || !tab._closestTabGroup;\n            }));\n            this._tabs.notifyOnChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /** Re-aligns the ink bar to the selected tab element. */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    /**\n     * Sets focus to a particular tab.\n     * @param index Index of the tab to be focused.\n     */\n    focusTab(index) {\n        const header = this._tabHeader;\n        if (header) {\n            header.focusIndex = index;\n        }\n    }\n    _focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    _createChangeEvent(index) {\n        const event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges))\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /** Returns a unique id for each tab label element */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /** Returns a unique id for each tab content element */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /** Removes the height of the tab body wrapper. */\n    _removeTabBodyWrapperHeight() {\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /** Handle click events, setting new selected index if appropriate. */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /** Retrieves the tabindex for the tab. */\n    _getTabIndex(tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n    /** Callback for when the focused state of a tab has changed. */\n    _tabFocusChanged(focusOrigin, index) {\n        if (focusOrigin) {\n            this._tabHeader.focusIndex = index;\n        }\n    }\n}\n_MatTabGroupBase.decorators = [\n    { type: Directive }\n];\n_MatTabGroupBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabGroupBase.propDecorators = {\n    dynamicHeight: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    headerPosition: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    disablePagination: [{ type: Input }],\n    backgroundColor: [{ type: Input }],\n    selectedIndexChange: [{ type: Output }],\n    focusChange: [{ type: Output }],\n    animationDone: [{ type: Output }],\n    selectedTabChange: [{ type: Output }]\n};\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-tab-group',\n                exportAs: 'matTabGroup',\n                template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\"\\n       (cdkFocusChange)=\\\"_tabFocusChanged($event, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex == i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                inputs: ['color', 'disableRipple'],\n                providers: [{\n                        provide: MAT_TAB_GROUP,\n                        useExisting: MatTabGroup\n                    }],\n                host: {\n                    'class': 'mat-tab-group',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n                },\n                styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"]\n            },] }\n];\nMatTabGroup.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabGroup.propDecorators = {\n    _allTabs: [{ type: ContentChildren, args: [MatTab, { descendants: true },] }],\n    _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper',] }],\n    _tabHeader: [{ type: ViewChild, args: ['tabHeader',] }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nclass MatTabLabelWrapperBase {\n}\nconst _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase {\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /** Sets focus on the wrapper element */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.decorators = [\n    { type: Directive, args: [{\n                selector: '[matTabLabelWrapper]',\n                inputs: ['disabled'],\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[attr.aria-disabled]': '!!disabled',\n                }\n            },] }\n];\nMatTabLabelWrapper.ctorParameters = () => [\n    { type: ElementRef }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nclass MatPaginatedTabHeader {\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /** The distance in pixels that the tab labels should be translated to the left. */\n        this._scrollDistance = 0;\n        /** Whether the header should scroll to the selected index after the view has been checked. */\n        this._selectedIndexChanged = false;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Whether the controls for pagination should be displayed */\n        this._showPaginationControls = false;\n        /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n        this._disableScrollAfter = true;\n        /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n        this._disableScrollBefore = true;\n        /** Stream that will stop the automated scrolling. */\n        this._stopScrolling = new Subject();\n        /**\n         * Whether pagination should be disabled. This can be used to avoid unnecessary\n         * layout recalculations if it's known that pagination won't be required.\n         */\n        this.disablePagination = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the option is selected. */\n        this.selectFocusedIndex = new EventEmitter();\n        /** Event emitted when a label is focused. */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular(() => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => {\n                this._stopInterval();\n            });\n        });\n    }\n    /** The index of the active tab. */\n    get selectedIndex() { return this._selectedIndex; }\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItem(value);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('before');\n        });\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('after');\n        });\n    }\n    ngAfterContentInit() {\n        const dirChange = this._dir ? this._dir.change : of('ltr');\n        const resize = this._viewportRuler.change(150);\n        const realign = () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        };\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withHomeAndEnd()\n            .withWrap();\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe(() => {\n            // We need to defer this to give the browser some time to recalculate\n            // the element dimensions. The call has to be wrapped in `NgZone.run`,\n            // because the viewport change handler runs outside of Angular.\n            this._ngZone.run(() => Promise.resolve().then(realign));\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        });\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        });\n    }\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /** Handles keyboard events on the header. */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case ENTER:\n            case SPACE:\n                if (this.focusIndex !== this.selectedIndex) {\n                    this.selectFocusedIndex.emit(this.focusIndex);\n                    this._itemSelected(event);\n                }\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    _onContentChanges() {\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run(() => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : 0;\n    }\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this._tabListContainer.nativeElement;\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /** The layout direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    _updateTabScrollPosition() {\n        if (this.disablePagination) {\n            return;\n        }\n        const scrollDistance = this.scrollDistance;\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        if (this._platform.TRIDENT || this._platform.EDGE) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance() { return this._scrollDistance; }\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollHeader(direction) {\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /** Handles click events on the pagination arrows. */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollToLabel(labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        let labelBeforePos, labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkPaginationEnabled() {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkScrollingControls() {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _getMaxScrollDistance() {\n        const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    }\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    _alignInkBarToSelectedTab() {\n        const selectedItem = this._items && this._items.length ?\n            this._items.toArray()[this.selectedIndex] : null;\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /** Stops the currently-running paginator interval.  */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe(() => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        });\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.decorators = [\n    { type: Directive }\n];\nMatPaginatedTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPaginatedTabHeader.propDecorators = {\n    disablePagination: [{ type: Input }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.decorators = [\n    { type: Directive }\n];\n_MatTabHeaderBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabHeaderBase.propDecorators = {\n    disableRipple: [{ type: Input }]\n};\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                outputs: ['selectFocusedIndex', 'indexFocused'],\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                },\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"]\n            },] }\n];\nMatTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabHeader.propDecorators = {\n    _items: [{ type: ContentChildren, args: [MatTabLabelWrapper, { descendants: false },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /** Theme color of the nav bar. */\n        this.color = 'primary';\n    }\n    /** Background color of the tab nav. */\n    get backgroundColor() { return this._backgroundColor; }\n    set backgroundColor(value) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    _itemSelected() {\n        // noop\n    }\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this.updateActiveLink();\n        });\n        super.ngAfterContentInit();\n    }\n    /** Notifies the component that the active link has been changed. */\n    updateActiveLink() {\n        if (!this._items) {\n            return;\n        }\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n}\n_MatTabNavBase.decorators = [\n    { type: Directive }\n];\n_MatTabNavBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabNavBase.propDecorators = {\n    backgroundColor: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    color: [{ type: Input }]\n};\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.decorators = [\n    { type: Component, args: [{\n                selector: '[mat-tab-nav-bar]',\n                exportAs: 'matTabNavBar, matTabNav',\n                inputs: ['color'],\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-tab-nav-bar mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                },\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"]\n            },] }\n];\nMatTabNav.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabNav.propDecorators = {\n    _items: [{ type: ContentChildren, args: [forwardRef(() => MatTabLink), { descendants: true },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {\n}\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n/** Base class with all of the `MatTabLink` functionality. */\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    constructor(_tabNavBar, \n    /** @docs-private */ elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /** Whether the tab link is active or not. */\n        this._isActive = false;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /** Whether the link is active. */\n    get active() { return this._isActive; }\n    set active(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._isActive) {\n            this._isActive = value;\n            this._tabNavBar.updateActiveLink();\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled;\n    }\n    /** Focuses the tab link. */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this.elementRef);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n}\n_MatTabLinkBase.decorators = [\n    { type: Directive }\n];\n_MatTabLinkBase.ctorParameters = () => [\n    { type: _MatTabNavBase },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabLinkBase.propDecorators = {\n    active: [{ type: Input }]\n};\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-tab-link], [matTabLink]',\n                exportAs: 'matTabLink',\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                host: {\n                    'class': 'mat-tab-link mat-focus-indicator',\n                    '[attr.aria-current]': 'active ? \"page\" : null',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabIndex]': 'tabIndex',\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[class.mat-tab-label-active]': 'active',\n                }\n            },] }\n];\nMatTabLink.ctorParameters = () => [\n    { type: MatTabNav },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTabsModule {\n}\nMatTabsModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PortalModule,\n                    MatRippleModule,\n                    ObserversModule,\n                    A11yModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MatCommonModule,\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabContent,\n                ],\n                declarations: [\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatInkBar,\n                    MatTabLabelWrapper,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabBody,\n                    MatTabBodyPortal,\n                    MatTabHeader,\n                    MatTabContent,\n                ],\n            },] }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵangular_material_src_material_tabs_tabs_a, MAT_TAB_LABEL as ɵangular_material_src_material_tabs_tabs_b, MAT_TAB_CONTENT as ɵangular_material_src_material_tabs_tabs_c, MatPaginatedTabHeader as ɵangular_material_src_material_tabs_tabs_d };\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,YAAY,EAAEC,UAAU,QAAQ,mBAAmB;AAC7E,SAASC,eAAe,QAAQ,wBAAwB;AACxD,SAASC,SAAS,EAAEC,cAAc,EAAEC,eAAe,EAAEC,YAAY,QAAQ,qBAAqB;AAC9F,SAASC,QAAQ,EAAEC,YAAY,QAAQ,iBAAiB;AACxD,SAASC,cAAc,EAAEC,SAAS,EAAEC,UAAU,EAAEC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,EAAEC,uBAAuB,EAAEC,iBAAiB,EAAEC,gBAAgB,EAAEC,YAAY,EAAEC,SAAS,EAAEC,KAAK,EAAEC,wBAAwB,EAAEC,UAAU,EAAEC,YAAY,EAAEC,iBAAiB,EAAEC,MAAM,EAAEC,SAAS,EAAEC,eAAe,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,eAAe;AACrV,SAASC,aAAa,EAAEC,UAAU,EAAEC,kBAAkB,EAAEC,aAAa,EAAEC,yBAAyB,EAAEC,cAAc,EAAEC,eAAe,EAAEC,eAAe,QAAQ,wBAAwB;AAClL,SAASC,qBAAqB,QAAQ,sCAAsC;AAC5E,SAASC,OAAO,EAAEC,YAAY,EAAEC,KAAK,EAAEC,SAAS,EAAEC,EAAE,EAAEC,KAAK,QAAQ,MAAM;AACzE,SAASC,cAAc,QAAQ,mBAAmB;AAClD,SAASC,OAAO,EAAEC,KAAK,EAAEC,KAAK,EAAEC,UAAU,EAAEC,OAAO,QAAQ,qBAAqB;AAChF,SAASC,SAAS,EAAEC,oBAAoB,EAAEC,SAAS,QAAQ,gBAAgB;AAC3E,SAASC,qBAAqB,EAAEC,oBAAoB,QAAQ,uBAAuB;AACnF,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,+BAA+B,EAAEC,QAAQ,QAAQ,uBAAuB;AACjF,SAASC,cAAc,EAAEC,KAAK,EAAEC,KAAK,QAAQ,uBAAuB;;AAEpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,uBAAuB,GAAG,IAAIvD,cAAc,CAAC,qBAAqB,EAAE;EACtEwD,UAAU,EAAE,MAAM;EAClBC,OAAO,EAAEC;AACb,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA,SAASA,+BAA+BA,CAAA,EAAG;EACvC,MAAMC,MAAM,GAAIC,OAAO,KAAM;IACzBC,IAAI,EAAED,OAAO,GAAG,CAACA,OAAO,CAACE,UAAU,IAAI,CAAC,IAAI,IAAI,GAAG,GAAG;IACtDC,KAAK,EAAEH,OAAO,GAAG,CAACA,OAAO,CAACI,WAAW,IAAI,CAAC,IAAI,IAAI,GAAG;EACzD,CAAC,CAAC;EACF,OAAOL,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA,MAAMM,SAAS,CAAC;EACZC,WAAWA,CAACC,WAAW,EAAEC,OAAO,EAAEC,iBAAiB,EAAEC,cAAc,EAAE;IACjE,IAAI,CAACH,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACC,cAAc,GAAGA,cAAc;EACxC;EACA;AACJ;AACA;AACA;AACA;EACIC,cAAcA,CAACX,OAAO,EAAE;IACpB,IAAI,CAACY,IAAI,CAAC,CAAC;IACX,IAAI,OAAOC,qBAAqB,KAAK,WAAW,EAAE;MAC9C,IAAI,CAACL,OAAO,CAACM,iBAAiB,CAAC,MAAM;QACjCD,qBAAqB,CAAC,MAAM,IAAI,CAACE,UAAU,CAACf,OAAO,CAAC,CAAC;MACzD,CAAC,CAAC;IACN,CAAC,MACI;MACD,IAAI,CAACe,UAAU,CAACf,OAAO,CAAC;IAC5B;EACJ;EACA;EACAY,IAAIA,CAAA,EAAG;IACH,IAAI,CAACL,WAAW,CAACS,aAAa,CAACnC,KAAK,CAACoC,UAAU,GAAG,SAAS;EAC/D;EACA;EACAC,IAAIA,CAAA,EAAG;IACH,IAAI,CAACX,WAAW,CAACS,aAAa,CAACnC,KAAK,CAACoC,UAAU,GAAG,QAAQ;EAC9D;EACA;AACJ;AACA;AACA;EACIF,UAAUA,CAACf,OAAO,EAAE;IAChB,MAAMmB,SAAS,GAAG,IAAI,CAACV,iBAAiB,CAACT,OAAO,CAAC;IACjD,MAAMoB,MAAM,GAAG,IAAI,CAACb,WAAW,CAACS,aAAa;IAC7CI,MAAM,CAACvC,KAAK,CAACoB,IAAI,GAAGkB,SAAS,CAAClB,IAAI;IAClCmB,MAAM,CAACvC,KAAK,CAACsB,KAAK,GAAGgB,SAAS,CAAChB,KAAK;EACxC;AACJ;AACAE,SAAS,CAACgB,UAAU,GAAG,CACnB;EAAEC,IAAI,EAAEjF,SAAS;EAAEkF,IAAI,EAAE,CAAC;IACdC,QAAQ,EAAE,aAAa;IACvBC,IAAI,EAAE;MACF,OAAO,EAAE,aAAa;MACtB,iCAAiC,EAAG;IACxC;EACJ,CAAC;AAAG,CAAC,CAChB;AACDpB,SAAS,CAACqB,cAAc,GAAG,MAAM,CAC7B;EAAEJ,IAAI,EAAEhF;AAAW,CAAC,EACpB;EAAEgF,IAAI,EAAE/E;AAAO,CAAC,EAChB;EAAE+E,IAAI,EAAEK,SAAS;EAAEN,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE9E,MAAM;IAAE+E,IAAI,EAAE,CAAC5B,uBAAuB;EAAG,CAAC;AAAE,CAAC,EACrF;EAAE2B,IAAI,EAAEM,MAAM;EAAEP,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE7E;EAAS,CAAC,EAAE;IAAE6E,IAAI,EAAE9E,MAAM;IAAE+E,IAAI,EAAE,CAACpD,qBAAqB;EAAG,CAAC;AAAE,CAAC,CACvG;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM0D,eAAe,GAAG,IAAIzF,cAAc,CAAC,eAAe,CAAC;AAC3D;AACA,MAAM0F,aAAa,CAAC;EAChBxB,WAAWA,CAAA,CACX,2BAA4ByB,QAAQ,EAAE;IAClC,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EAC5B;AACJ;AACAD,aAAa,CAACT,UAAU,GAAG,CACvB;EAAEC,IAAI,EAAEjF,SAAS;EAAEkF,IAAI,EAAE,CAAC;IACdC,QAAQ,EAAE,iBAAiB;IAC3BQ,SAAS,EAAE,CAAC;MAAEC,OAAO,EAAEJ,eAAe;MAAEK,WAAW,EAAEJ;IAAc,CAAC;EACxE,CAAC;AAAG,CAAC,CAChB;AACDA,aAAa,CAACJ,cAAc,GAAG,MAAM,CACjC;EAAEJ,IAAI,EAAE5E;AAAY,CAAC,CACxB;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMyF,aAAa,GAAG,IAAI/F,cAAc,CAAC,aAAa,CAAC;AACvD;AACA,MAAMgG,WAAW,SAAStG,SAAS,CAAC;AAEpCsG,WAAW,CAACf,UAAU,GAAG,CACrB;EAAEC,IAAI,EAAEjF,SAAS;EAAEkF,IAAI,EAAE,CAAC;IACdC,QAAQ,EAAE,gCAAgC;IAC1CQ,SAAS,EAAE,CAAC;MAAEC,OAAO,EAAEE,aAAa;MAAED,WAAW,EAAEE;IAAY,CAAC;EACpE,CAAC;AAAG,CAAC,CAChB;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,UAAU,CAAC;AAEjB,MAAMC,gBAAgB,GAAG3E,aAAa,CAAC0E,UAAU,CAAC;AAClD;AACA;AACA;AACA;AACA,MAAME,aAAa,GAAG,IAAInG,cAAc,CAAC,eAAe,CAAC;AACzD,MAAMoG,MAAM,SAASF,gBAAgB,CAAC;EAClChC,WAAWA,CAACmC,iBAAiB,EAAEC,gBAAgB,EAAE;IAC7C,KAAK,CAAC,CAAC;IACP,IAAI,CAACD,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACC,gBAAgB,GAAGA,gBAAgB;IACxC;IACA,IAAI,CAACC,SAAS,GAAG,EAAE;IACnB;IACA,IAAI,CAACC,cAAc,GAAG,IAAI;IAC1B;IACA,IAAI,CAACC,aAAa,GAAG,IAAIzE,OAAO,CAAC,CAAC;IAClC;AACR;AACA;AACA;IACQ,IAAI,CAAC0E,QAAQ,GAAG,IAAI;IACpB;AACR;AACA;AACA;IACQ,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB;AACR;AACA;IACQ,IAAI,CAACC,QAAQ,GAAG,KAAK;EACzB;EACA;EACA,IAAIC,aAAaA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACC,cAAc;EAAE;EAClD,IAAID,aAAaA,CAACE,KAAK,EAAE;IAAE,IAAI,CAACC,sBAAsB,CAACD,KAAK,CAAC;EAAE;EAC/D;EACA,IAAIE,OAAOA,CAAA,EAAG;IACV,OAAO,IAAI,CAACT,cAAc;EAC9B;EACAU,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAIA,OAAO,CAACC,cAAc,CAAC,WAAW,CAAC,IAAID,OAAO,CAACC,cAAc,CAAC,UAAU,CAAC,EAAE;MAC3E,IAAI,CAACX,aAAa,CAACY,IAAI,CAAC,CAAC;IAC7B;EACJ;EACAC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACb,aAAa,CAACc,QAAQ,CAAC,CAAC;EACjC;EACAC,QAAQA,CAAA,EAAG;IACP,IAAI,CAAChB,cAAc,GAAG,IAAI7G,cAAc,CAAC,IAAI,CAAC8H,gBAAgB,IAAI,IAAI,CAACC,gBAAgB,EAAE,IAAI,CAACrB,iBAAiB,CAAC;EACpH;EACA;AACJ;AACA;AACA;AACA;AACA;EACIW,sBAAsBA,CAACD,KAAK,EAAE;IAC1B;IACA;IACA;IACA;IACA,IAAIA,KAAK,EAAE;MACP,IAAI,CAACD,cAAc,GAAGC,KAAK;IAC/B;EACJ;AACJ;AACAX,MAAM,CAACnB,UAAU,GAAG,CAChB;EAAEC,IAAI,EAAE3E,SAAS;EAAE4E,IAAI,EAAE,CAAC;IACdC,QAAQ,EAAE,SAAS;IACnBO,QAAQ,EAAE,+QAA+Q;IACzRgC,MAAM,EAAE,CAAC,UAAU,CAAC;IACpB;IACAC,eAAe,EAAEpH,uBAAuB,CAACqH,OAAO;IAChDC,aAAa,EAAErH,iBAAiB,CAACsH,IAAI;IACrCC,QAAQ,EAAE;EACd,CAAC;AAAG,CAAC,CAChB;AACD5B,MAAM,CAACd,cAAc,GAAG,MAAM,CAC1B;EAAEJ,IAAI,EAAExE;AAAiB,CAAC,EAC1B;EAAEwE,IAAI,EAAEK,SAAS;EAAEN,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE9E,MAAM;IAAE+E,IAAI,EAAE,CAACgB,aAAa;EAAG,CAAC,EAAE;IAAEjB,IAAI,EAAE7E;EAAS,CAAC;AAAE,CAAC,CAClG;AACD+F,MAAM,CAAC6B,cAAc,GAAG;EACpBpB,aAAa,EAAE,CAAC;IAAE3B,IAAI,EAAEvE,YAAY;IAAEwE,IAAI,EAAE,CAACY,aAAa;EAAG,CAAC,CAAC;EAC/D0B,gBAAgB,EAAE,CAAC;IAAEvC,IAAI,EAAEvE,YAAY;IAAEwE,IAAI,EAAE,CAACM,eAAe,EAAE;MAAEyC,IAAI,EAAE5H,WAAW;MAAE6H,MAAM,EAAE;IAAK,CAAC;EAAG,CAAC,CAAC;EACzGT,gBAAgB,EAAE,CAAC;IAAExC,IAAI,EAAEtE,SAAS;IAAEuE,IAAI,EAAE,CAAC7E,WAAW,EAAE;MAAE6H,MAAM,EAAE;IAAK,CAAC;EAAG,CAAC,CAAC;EAC/E5B,SAAS,EAAE,CAAC;IAAErB,IAAI,EAAErE,KAAK;IAAEsE,IAAI,EAAE,CAAC,OAAO;EAAG,CAAC,CAAC;EAC9CiD,SAAS,EAAE,CAAC;IAAElD,IAAI,EAAErE,KAAK;IAAEsE,IAAI,EAAE,CAAC,YAAY;EAAG,CAAC,CAAC;EACnDkD,cAAc,EAAE,CAAC;IAAEnD,IAAI,EAAErE,KAAK;IAAEsE,IAAI,EAAE,CAAC,iBAAiB;EAAG,CAAC;AAChE,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMmD,iBAAiB,GAAG;EACtB;EACAC,YAAY,EAAEhG,OAAO,CAAC,cAAc,EAAE;EAClC;EACAC,KAAK,CAAC,uDAAuD,EAAEC,KAAK,CAAC;IAAE+F,SAAS,EAAE;EAAO,CAAC,CAAC,CAAC;EAC5F;EACA;EACA;EACA;EACAhG,KAAK,CAAC,MAAM,EAAEC,KAAK,CAAC;IAAE+F,SAAS,EAAE,0BAA0B;IAAEC,SAAS,EAAE;EAAM,CAAC,CAAC,CAAC,EACjFjG,KAAK,CAAC,OAAO,EAAEC,KAAK,CAAC;IAAE+F,SAAS,EAAE,yBAAyB;IAAEC,SAAS,EAAE;EAAM,CAAC,CAAC,CAAC,EACjF/F,UAAU,CAAC,wDAAwD,EAAEC,OAAO,CAAC,sDAAsD,CAAC,CAAC,EACrID,UAAU,CAAC,4BAA4B,EAAE,CACrCD,KAAK,CAAC;IAAE+F,SAAS,EAAE;EAA2B,CAAC,CAAC,EAChD7F,OAAO,CAAC,sDAAsD,CAAC,CAClE,CAAC,EACFD,UAAU,CAAC,6BAA6B,EAAE,CACtCD,KAAK,CAAC;IAAE+F,SAAS,EAAE;EAA0B,CAAC,CAAC,EAC/C7F,OAAO,CAAC,sDAAsD,CAAC,CAClE,CAAC,CACL;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM+F,gBAAgB,SAAS9I,eAAe,CAAC;EAC3CsE,WAAWA,CAACyE,wBAAwB,EAAEC,gBAAgB,EAAEC,KAAK,EAAEC,SAAS,EAAE;IACtE,KAAK,CAACH,wBAAwB,EAAEC,gBAAgB,EAAEE,SAAS,CAAC;IAC5D,IAAI,CAACD,KAAK,GAAGA,KAAK;IAClB;IACA,IAAI,CAACE,aAAa,GAAG9G,YAAY,CAAC+G,KAAK;IACvC;IACA,IAAI,CAACC,WAAW,GAAGhH,YAAY,CAAC+G,KAAK;EACzC;EACA;EACAxB,QAAQA,CAAA,EAAG;IACP,KAAK,CAACA,QAAQ,CAAC,CAAC;IAChB,IAAI,CAACuB,aAAa,GAAG,IAAI,CAACF,KAAK,CAACK,gBAAgB,CAC3CC,IAAI,CAACvG,SAAS,CAAC,IAAI,CAACiG,KAAK,CAACO,iBAAiB,CAAC,IAAI,CAACP,KAAK,CAACQ,SAAS,CAAC,CAAC,CAAC,CACnEC,SAAS,CAAEC,WAAW,IAAK;MAC5B,IAAIA,WAAW,IAAI,CAAC,IAAI,CAACC,WAAW,CAAC,CAAC,EAAE;QACpC,IAAI,CAACC,MAAM,CAAC,IAAI,CAACZ,KAAK,CAACa,QAAQ,CAAC;MACpC;IACJ,CAAC,CAAC;IACF,IAAI,CAACT,WAAW,GAAG,IAAI,CAACJ,KAAK,CAACc,mBAAmB,CAACL,SAAS,CAAC,MAAM;MAC9D,IAAI,CAACM,MAAM,CAAC,CAAC;IACjB,CAAC,CAAC;EACN;EACA;EACAtC,WAAWA,CAAA,EAAG;IACV,KAAK,CAACA,WAAW,CAAC,CAAC;IACnB,IAAI,CAACyB,aAAa,CAACc,WAAW,CAAC,CAAC;IAChC,IAAI,CAACZ,WAAW,CAACY,WAAW,CAAC,CAAC;EAClC;AACJ;AACAnB,gBAAgB,CAACzD,UAAU,GAAG,CAC1B;EAAEC,IAAI,EAAEjF,SAAS;EAAEkF,IAAI,EAAE,CAAC;IACdC,QAAQ,EAAE;EACd,CAAC;AAAG,CAAC,CAChB;AACDsD,gBAAgB,CAACpD,cAAc,GAAG,MAAM,CACpC;EAAEJ,IAAI,EAAEpE;AAAyB,CAAC,EAClC;EAAEoE,IAAI,EAAExE;AAAiB,CAAC,EAC1B;EAAEwE,IAAI,EAAE4E,UAAU;EAAE7E,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE9E,MAAM;IAAE+E,IAAI,EAAE,CAACpE,UAAU,CAAC,MAAM+I,UAAU,CAAC;EAAG,CAAC;AAAE,CAAC,EAC3F;EAAE5E,IAAI,EAAEK,SAAS;EAAEN,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE9E,MAAM;IAAE+E,IAAI,EAAE,CAACrF,QAAQ;EAAG,CAAC;AAAE,CAAC,CACzE;AACD;AACA;AACA;AACA;AACA,MAAMiK,eAAe,CAAC;EAClB7F,WAAWA,CAACC,WAAW,EAAE6F,IAAI,EAAEC,iBAAiB,EAAE;IAC9C,IAAI,CAAC9F,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAAC6F,IAAI,GAAGA,IAAI;IAChB;IACA,IAAI,CAACE,sBAAsB,GAAGjI,YAAY,CAAC+G,KAAK;IAChD;IACA,IAAI,CAACmB,qBAAqB,GAAG,IAAInI,OAAO,CAAC,CAAC;IAC1C;IACA,IAAI,CAACoI,YAAY,GAAG,IAAIpJ,YAAY,CAAC,CAAC;IACtC;IACA,IAAI,CAACkI,gBAAgB,GAAG,IAAIlI,YAAY,CAAC,CAAC;IAC1C;IACA,IAAI,CAAC2I,mBAAmB,GAAG,IAAI3I,YAAY,CAAC,CAAC;IAC7C;IACA,IAAI,CAACqJ,WAAW,GAAG,IAAIrJ,YAAY,CAAC,IAAI,CAAC;IACzC;IACA;IACA;IACA,IAAI,CAACsJ,iBAAiB,GAAG,OAAO;IAChC,IAAIN,IAAI,EAAE;MACN,IAAI,CAACE,sBAAsB,GAAGF,IAAI,CAACO,MAAM,CAACjB,SAAS,CAAEkB,GAAG,IAAK;QACzD,IAAI,CAACC,8BAA8B,CAACD,GAAG,CAAC;QACxCP,iBAAiB,CAACS,YAAY,CAAC,CAAC;MACpC,CAAC,CAAC;IACN;IACA;IACA;IACA,IAAI,CAACP,qBAAqB,CAAChB,IAAI,CAACtG,oBAAoB,CAAC,CAAC8H,CAAC,EAAEC,CAAC,KAAK;MAC3D,OAAOD,CAAC,CAACE,SAAS,KAAKD,CAAC,CAACC,SAAS,IAAIF,CAAC,CAACG,OAAO,KAAKF,CAAC,CAACE,OAAO;IACjE,CAAC,CAAC,CAAC,CAACxB,SAAS,CAACyB,KAAK,IAAI;MACnB;MACA,IAAI,IAAI,CAAC3B,iBAAiB,CAAC2B,KAAK,CAACD,OAAO,CAAC,IAAI,IAAI,CAAC1B,iBAAiB,CAAC,IAAI,CAACC,SAAS,CAAC,EAAE;QACjF,IAAI,CAACgB,WAAW,CAACW,IAAI,CAAC,CAAC;MAC3B;MACA,IAAI,IAAI,CAAC5B,iBAAiB,CAAC2B,KAAK,CAACF,SAAS,CAAC,IAAI,CAAC,IAAI,CAACzB,iBAAiB,CAAC,IAAI,CAACC,SAAS,CAAC,EAAE;QACpF,IAAI,CAACM,mBAAmB,CAACqB,IAAI,CAAC,CAAC;MACnC;IACJ,CAAC,CAAC;EACN;EACA;EACA,IAAItE,QAAQA,CAACA,QAAQ,EAAE;IACnB,IAAI,CAACuE,cAAc,GAAGvE,QAAQ;IAC9B,IAAI,CAAC+D,8BAA8B,CAAC,CAAC;EACzC;EACA;AACJ;AACA;AACA;EACIjD,QAAQA,CAAA,EAAG;IACP,IAAI,IAAI,CAAC6B,SAAS,IAAI,QAAQ,IAAI,IAAI,CAAC1C,MAAM,IAAI,IAAI,EAAE;MACnD,IAAI,CAAC0C,SAAS,GAAG,IAAI,CAAC6B,0BAA0B,CAAC,IAAI,CAACvE,MAAM,CAAC;IACjE;EACJ;EACAW,WAAWA,CAAA,EAAG;IACV,IAAI,CAAC4C,sBAAsB,CAACL,WAAW,CAAC,CAAC;IACzC,IAAI,CAACM,qBAAqB,CAAC5C,QAAQ,CAAC,CAAC;EACzC;EACA4D,sBAAsBA,CAACJ,KAAK,EAAE;IAC1B,MAAMxB,WAAW,GAAG,IAAI,CAACH,iBAAiB,CAAC2B,KAAK,CAACD,OAAO,CAAC;IACzD,IAAI,CAAC5B,gBAAgB,CAAC8B,IAAI,CAACzB,WAAW,CAAC;IACvC,IAAIA,WAAW,EAAE;MACb,IAAI,CAACa,YAAY,CAACY,IAAI,CAAC,IAAI,CAAC7G,WAAW,CAACS,aAAa,CAACwG,YAAY,CAAC;IACvE;EACJ;EACA;EACAC,mBAAmBA,CAAA,EAAG;IAClB,OAAO,IAAI,CAACrB,IAAI,IAAI,IAAI,CAACA,IAAI,CAACjD,KAAK,KAAK,KAAK,GAAG,KAAK,GAAG,KAAK;EACjE;EACA;EACAqC,iBAAiBA,CAAC1C,QAAQ,EAAE;IACxB,OAAOA,QAAQ,IAAI,QAAQ,IACvBA,QAAQ,IAAI,oBAAoB,IAChCA,QAAQ,IAAI,qBAAqB;EACzC;EACA;EACA+D,8BAA8BA,CAACD,GAAG,GAAG,IAAI,CAACa,mBAAmB,CAAC,CAAC,EAAE;IAC7D,IAAI,IAAI,CAACJ,cAAc,GAAG,CAAC,EAAE;MACzB,IAAI,CAAC5B,SAAS,GAAGmB,GAAG,IAAI,KAAK,GAAG,MAAM,GAAG,OAAO;IACpD,CAAC,MACI,IAAI,IAAI,CAACS,cAAc,GAAG,CAAC,EAAE;MAC9B,IAAI,CAAC5B,SAAS,GAAGmB,GAAG,IAAI,KAAK,GAAG,OAAO,GAAG,MAAM;IACpD,CAAC,MACI;MACD,IAAI,CAACnB,SAAS,GAAG,QAAQ;IAC7B;EACJ;EACA;AACJ;AACA;AACA;EACI6B,0BAA0BA,CAACvE,MAAM,EAAE;IAC/B,MAAM6D,GAAG,GAAG,IAAI,CAACa,mBAAmB,CAAC,CAAC;IACtC,IAAKb,GAAG,IAAI,KAAK,IAAI7D,MAAM,IAAI,CAAC,IAAM6D,GAAG,IAAI,KAAK,IAAI7D,MAAM,GAAG,CAAE,EAAE;MAC/D,OAAO,oBAAoB;IAC/B;IACA,OAAO,qBAAqB;EAChC;AACJ;AACAoD,eAAe,CAAC9E,UAAU,GAAG,CACzB;EAAEC,IAAI,EAAEjF;AAAU,CAAC,CACtB;AACD8J,eAAe,CAACzE,cAAc,GAAG,MAAM,CACnC;EAAEJ,IAAI,EAAEhF;AAAW,CAAC,EACpB;EAAEgF,IAAI,EAAE5C,cAAc;EAAE2C,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE7E;EAAS,CAAC;AAAE,CAAC,EAC1D;EAAE6E,IAAI,EAAEjE;AAAkB,CAAC,CAC9B;AACD8I,eAAe,CAAC9B,cAAc,GAAG;EAC7BmC,YAAY,EAAE,CAAC;IAAElF,IAAI,EAAEhE;EAAO,CAAC,CAAC;EAChCgI,gBAAgB,EAAE,CAAC;IAAEhE,IAAI,EAAEhE;EAAO,CAAC,CAAC;EACpCyI,mBAAmB,EAAE,CAAC;IAAEzE,IAAI,EAAEhE;EAAO,CAAC,CAAC;EACvCmJ,WAAW,EAAE,CAAC;IAAEnF,IAAI,EAAEhE;EAAO,CAAC,CAAC;EAC/BwI,QAAQ,EAAE,CAAC;IAAExE,IAAI,EAAErE,KAAK;IAAEsE,IAAI,EAAE,CAAC,SAAS;EAAG,CAAC,CAAC;EAC/CwB,MAAM,EAAE,CAAC;IAAEzB,IAAI,EAAErE;EAAM,CAAC,CAAC;EACzByJ,iBAAiB,EAAE,CAAC;IAAEpF,IAAI,EAAErE;EAAM,CAAC,CAAC;EACpC6F,QAAQ,EAAE,CAAC;IAAExB,IAAI,EAAErE;EAAM,CAAC;AAC9B,CAAC;AACD;AACA;AACA;AACA;AACA,MAAMiJ,UAAU,SAASC,eAAe,CAAC;EACrC7F,WAAWA,CAACoH,UAAU,EAAEd,GAAG,EAAEP,iBAAiB,EAAE;IAC5C,KAAK,CAACqB,UAAU,EAAEd,GAAG,EAAEP,iBAAiB,CAAC;EAC7C;AACJ;AACAH,UAAU,CAAC7E,UAAU,GAAG,CACpB;EAAEC,IAAI,EAAE3E,SAAS;EAAE4E,IAAI,EAAE,CAAC;IACdC,QAAQ,EAAE,cAAc;IACxBO,QAAQ,EAAE,mXAAmX;IAC7XmC,aAAa,EAAErH,iBAAiB,CAACsH,IAAI;IACrC;IACAH,eAAe,EAAEpH,uBAAuB,CAACqH,OAAO;IAChD0D,UAAU,EAAE,CAACjD,iBAAiB,CAACC,YAAY,CAAC;IAC5ClD,IAAI,EAAE;MACF,OAAO,EAAE;IACb,CAAC;IACDmG,MAAM,EAAE,CAAC,wHAAwH;EACrI,CAAC;AAAG,CAAC,CAChB;AACD1B,UAAU,CAACxE,cAAc,GAAG,MAAM,CAC9B;EAAEJ,IAAI,EAAEhF;AAAW,CAAC,EACpB;EAAEgF,IAAI,EAAE5C,cAAc;EAAE2C,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE7E;EAAS,CAAC;AAAE,CAAC,EAC1D;EAAE6E,IAAI,EAAEjE;AAAkB,CAAC,CAC9B;AACD6I,UAAU,CAAC7B,cAAc,GAAG;EACxBwD,WAAW,EAAE,CAAC;IAAEvG,IAAI,EAAEtE,SAAS;IAAEuE,IAAI,EAAE,CAACvF,eAAe;EAAG,CAAC;AAC/D,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM8L,eAAe,GAAG,IAAI1L,cAAc,CAAC,iBAAiB,CAAC;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI2L,MAAM,GAAG,CAAC;AACd;AACA,MAAMC,iBAAiB,CAAC;AAExB;AACA;AACA,MAAMC,oBAAoB,CAAC;EACvB3H,WAAWA,CAACC,WAAW,EAAE;IACrB,IAAI,CAACA,WAAW,GAAGA,WAAW;EAClC;AACJ;AACA,MAAM2H,qBAAqB,GAAGtK,UAAU,CAACC,kBAAkB,CAACoK,oBAAoB,CAAC,EAAE,SAAS,CAAC;AAC7F;AACA;AACA;AACA;AACA,MAAME,gBAAgB,SAASD,qBAAqB,CAAC;EACjD5H,WAAWA,CAACoH,UAAU,EAAEU,kBAAkB,EAAEC,aAAa,EAAE3H,cAAc,EAAE;IACvE,KAAK,CAACgH,UAAU,CAAC;IACjB,IAAI,CAACU,kBAAkB,GAAGA,kBAAkB;IAC5C,IAAI,CAAC1H,cAAc,GAAGA,cAAc;IACpC;IACA,IAAI,CAAC4H,KAAK,GAAG,IAAI/K,SAAS,CAAC,CAAC;IAC5B;IACA,IAAI,CAACgL,cAAc,GAAG,CAAC;IACvB;IACA,IAAI,CAACC,qBAAqB,GAAG,CAAC;IAC9B;IACA,IAAI,CAACC,iBAAiB,GAAGpK,YAAY,CAAC+G,KAAK;IAC3C;IACA,IAAI,CAACsD,qBAAqB,GAAGrK,YAAY,CAAC+G,KAAK;IAC/C,IAAI,CAACuD,cAAc,GAAG,IAAI;IAC1B;IACA,IAAI,CAACC,cAAc,GAAG,OAAO;IAC7B;IACA,IAAI,CAACC,mBAAmB,GAAG,IAAIzL,YAAY,CAAC,CAAC;IAC7C;IACA,IAAI,CAAC0L,WAAW,GAAG,IAAI1L,YAAY,CAAC,CAAC;IACrC;IACA,IAAI,CAAC2L,aAAa,GAAG,IAAI3L,YAAY,CAAC,CAAC;IACvC;IACA,IAAI,CAAC4L,iBAAiB,GAAG,IAAI5L,YAAY,CAAC,IAAI,CAAC;IAC/C,IAAI,CAAC6L,QAAQ,GAAGlB,MAAM,EAAE;IACxB,IAAI,CAACrB,iBAAiB,GAAG2B,aAAa,IAAIA,aAAa,CAAC3B,iBAAiB,GACrE2B,aAAa,CAAC3B,iBAAiB,GAAG,OAAO;IAC7C,IAAI,CAACwC,iBAAiB,GAAGb,aAAa,IAAIA,aAAa,CAACa,iBAAiB,IAAI,IAAI,GAC7Eb,aAAa,CAACa,iBAAiB,GAAG,KAAK;IAC3C,IAAI,CAACC,aAAa,GAAGd,aAAa,IAAIA,aAAa,CAACc,aAAa,IAAI,IAAI,GACrEd,aAAa,CAACc,aAAa,GAAG,KAAK;EAC3C;EACA;EACA,IAAIA,aAAaA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACC,cAAc;EAAE;EAClD,IAAID,aAAaA,CAAChG,KAAK,EAAE;IAAE,IAAI,CAACiG,cAAc,GAAGjK,qBAAqB,CAACgE,KAAK,CAAC;EAAE;EAC/E;EACA,IAAIkG,aAAaA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACV,cAAc;EAAE;EAClD,IAAIU,aAAaA,CAAClG,KAAK,EAAE;IACrB,IAAI,CAACoF,cAAc,GAAGnJ,oBAAoB,CAAC+D,KAAK,EAAE,IAAI,CAAC;EAC3D;EACA;EACA,IAAIuD,iBAAiBA,CAAA,EAAG;IAAE,OAAO,IAAI,CAAC4C,kBAAkB;EAAE;EAC1D,IAAI5C,iBAAiBA,CAACvD,KAAK,EAAE;IACzB,IAAI,CAACmG,kBAAkB,GAAG,OAAO,CAACC,IAAI,CAACpG,KAAK,CAAC,GAAGA,KAAK,GAAG,IAAI,GAAGA,KAAK;EACxE;EACA;EACA,IAAIqG,eAAeA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACC,gBAAgB;EAAE;EACtD,IAAID,eAAeA,CAACrG,KAAK,EAAE;IACvB,MAAMnC,aAAa,GAAG,IAAI,CAACT,WAAW,CAACS,aAAa;IACpDA,aAAa,CAAC0I,SAAS,CAACC,MAAM,CAAE,kBAAiB,IAAI,CAACH,eAAgB,EAAC,CAAC;IACxE,IAAIrG,KAAK,EAAE;MACPnC,aAAa,CAAC0I,SAAS,CAACE,GAAG,CAAE,kBAAiBzG,KAAM,EAAC,CAAC;IAC1D;IACA,IAAI,CAACsG,gBAAgB,GAAGtG,KAAK;EACjC;EACA;AACJ;AACA;AACA;AACA;AACA;EACI0G,qBAAqBA,CAAA,EAAG;IACpB;IACA;IACA,MAAMC,aAAa,GAAG,IAAI,CAACvB,cAAc,GAAG,IAAI,CAACwB,cAAc,CAAC,IAAI,CAACxB,cAAc,CAAC;IACpF;IACA;IACA,IAAI,IAAI,CAACI,cAAc,IAAImB,aAAa,EAAE;MACtC,MAAME,UAAU,GAAG,IAAI,CAACrB,cAAc,IAAI,IAAI;MAC9C,IAAI,CAACqB,UAAU,EAAE;QACb,IAAI,CAAChB,iBAAiB,CAAC5B,IAAI,CAAC,IAAI,CAAC6C,kBAAkB,CAACH,aAAa,CAAC,CAAC;QACnE;QACA;QACA,MAAMI,OAAO,GAAG,IAAI,CAACC,eAAe,CAACnJ,aAAa;QAClDkJ,OAAO,CAACrL,KAAK,CAACgG,SAAS,GAAGqF,OAAO,CAAC1C,YAAY,GAAG,IAAI;MACzD;MACA;MACA;MACA4C,OAAO,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;QACzB,IAAI,CAAChC,KAAK,CAACiC,OAAO,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAKD,GAAG,CAACxH,QAAQ,GAAGyH,KAAK,KAAKX,aAAa,CAAC;QAC1E,IAAI,CAACE,UAAU,EAAE;UACb,IAAI,CAACnB,mBAAmB,CAACzB,IAAI,CAAC0C,aAAa,CAAC;UAC5C;UACA;UACA,IAAI,CAACK,eAAe,CAACnJ,aAAa,CAACnC,KAAK,CAACgG,SAAS,GAAG,EAAE;QAC3D;MACJ,CAAC,CAAC;IACN;IACA;IACA,IAAI,CAACyD,KAAK,CAACiC,OAAO,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;MAC/BD,GAAG,CAAC1H,QAAQ,GAAG2H,KAAK,GAAGX,aAAa;MACpC;MACA;MACA,IAAI,IAAI,CAACnB,cAAc,IAAI,IAAI,IAAI6B,GAAG,CAAC1H,QAAQ,IAAI,CAAC,IAAI,CAAC0H,GAAG,CAACzH,MAAM,EAAE;QACjEyH,GAAG,CAACzH,MAAM,GAAG+G,aAAa,GAAG,IAAI,CAACnB,cAAc;MACpD;IACJ,CAAC,CAAC;IACF,IAAI,IAAI,CAACA,cAAc,KAAKmB,aAAa,EAAE;MACvC,IAAI,CAACnB,cAAc,GAAGmB,aAAa;MACnC,IAAI,CAAC1B,kBAAkB,CAACtB,YAAY,CAAC,CAAC;IAC1C;EACJ;EACA4D,kBAAkBA,CAAA,EAAG;IACjB,IAAI,CAACC,yBAAyB,CAAC,CAAC;IAChC,IAAI,CAACC,qBAAqB,CAAC,CAAC;IAC5B;IACA;IACA,IAAI,CAACnC,iBAAiB,GAAG,IAAI,CAACH,KAAK,CAAC/E,OAAO,CAACmC,SAAS,CAAC,MAAM;MACxD,MAAMoE,aAAa,GAAG,IAAI,CAACC,cAAc,CAAC,IAAI,CAACxB,cAAc,CAAC;MAC9D;MACA;MACA,IAAIuB,aAAa,KAAK,IAAI,CAACnB,cAAc,EAAE;QACvC,MAAMkC,IAAI,GAAG,IAAI,CAACvC,KAAK,CAACwC,OAAO,CAAC,CAAC;QACjC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;UAClC,IAAIF,IAAI,CAACE,CAAC,CAAC,CAAC/H,QAAQ,EAAE;YAClB;YACA;YACA;YACA,IAAI,CAACuF,cAAc,GAAG,IAAI,CAACI,cAAc,GAAGoC,CAAC;YAC7C;UACJ;QACJ;MACJ;MACA,IAAI,CAAC3C,kBAAkB,CAACtB,YAAY,CAAC,CAAC;IAC1C,CAAC,CAAC;EACN;EACA;EACA6D,yBAAyBA,CAAA,EAAG;IACxB;IACA;IACA;IACA,IAAI,CAACM,QAAQ,CAAC1H,OAAO,CAChBgC,IAAI,CAACvG,SAAS,CAAC,IAAI,CAACiM,QAAQ,CAAC,CAAC,CAC9BvF,SAAS,CAAEmF,IAAI,IAAK;MACrB,IAAI,CAACvC,KAAK,CAAC4C,KAAK,CAACL,IAAI,CAACM,MAAM,CAACX,GAAG,IAAI;QAChC,OAAOA,GAAG,CAAC9H,gBAAgB,KAAK,IAAI,IAAI,CAAC8H,GAAG,CAAC9H,gBAAgB;MACjE,CAAC,CAAC,CAAC;MACH,IAAI,CAAC4F,KAAK,CAAC8C,eAAe,CAAC,CAAC;IAChC,CAAC,CAAC;EACN;EACA1H,WAAWA,CAAA,EAAG;IACV,IAAI,CAAC4E,KAAK,CAAC+C,OAAO,CAAC,CAAC;IACpB,IAAI,CAAC5C,iBAAiB,CAACxC,WAAW,CAAC,CAAC;IACpC,IAAI,CAACyC,qBAAqB,CAACzC,WAAW,CAAC,CAAC;EAC5C;EACA;EACAqF,aAAaA,CAAA,EAAG;IACZ,IAAI,IAAI,CAACC,UAAU,EAAE;MACjB,IAAI,CAACA,UAAU,CAACC,yBAAyB,CAAC,CAAC;IAC/C;EACJ;EACA;AACJ;AACA;AACA;EACIC,QAAQA,CAAChB,KAAK,EAAE;IACZ,MAAMiB,MAAM,GAAG,IAAI,CAACH,UAAU;IAC9B,IAAIG,MAAM,EAAE;MACRA,MAAM,CAACC,UAAU,GAAGlB,KAAK;IAC7B;EACJ;EACAmB,aAAaA,CAACnB,KAAK,EAAE;IACjB,IAAI,CAAC3B,WAAW,CAAC1B,IAAI,CAAC,IAAI,CAAC6C,kBAAkB,CAACQ,KAAK,CAAC,CAAC;EACzD;EACAR,kBAAkBA,CAACQ,KAAK,EAAE;IACtB,MAAMtD,KAAK,GAAG,IAAIa,iBAAiB,CAAD,CAAC;IACnCb,KAAK,CAACsD,KAAK,GAAGA,KAAK;IACnB,IAAI,IAAI,CAACnC,KAAK,IAAI,IAAI,CAACA,KAAK,CAAC0C,MAAM,EAAE;MACjC7D,KAAK,CAACqD,GAAG,GAAG,IAAI,CAAClC,KAAK,CAACwC,OAAO,CAAC,CAAC,CAACL,KAAK,CAAC;IAC3C;IACA,OAAOtD,KAAK;EAChB;EACA;AACJ;AACA;AACA;AACA;AACA;EACIyD,qBAAqBA,CAAA,EAAG;IACpB,IAAI,IAAI,CAAClC,qBAAqB,EAAE;MAC5B,IAAI,CAACA,qBAAqB,CAACzC,WAAW,CAAC,CAAC;IAC5C;IACA,IAAI,CAACyC,qBAAqB,GAAGpK,KAAK,CAAC,GAAG,IAAI,CAACgK,KAAK,CAACuD,GAAG,CAACrB,GAAG,IAAIA,GAAG,CAAC3H,aAAa,CAAC,CAAC,CAC1E6C,SAAS,CAAC,MAAM,IAAI,CAAC0C,kBAAkB,CAACtB,YAAY,CAAC,CAAC,CAAC;EAChE;EACA;EACAiD,cAAcA,CAACU,KAAK,EAAE;IAClB;IACA;IACA;IACA,OAAOqB,IAAI,CAACC,GAAG,CAAC,IAAI,CAACzD,KAAK,CAAC0C,MAAM,GAAG,CAAC,EAAEc,IAAI,CAACE,GAAG,CAACvB,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;EACnE;EACA;EACAwB,cAAcA,CAAClB,CAAC,EAAE;IACd,OAAQ,iBAAgB,IAAI,CAAC9B,QAAS,IAAG8B,CAAE,EAAC;EAChD;EACA;EACAmB,gBAAgBA,CAACnB,CAAC,EAAE;IAChB,OAAQ,mBAAkB,IAAI,CAAC9B,QAAS,IAAG8B,CAAE,EAAC;EAClD;EACA;AACJ;AACA;AACA;EACIoB,wBAAwBA,CAACC,SAAS,EAAE;IAChC,IAAI,CAAC,IAAI,CAAChD,cAAc,IAAI,CAAC,IAAI,CAACZ,qBAAqB,EAAE;MACrD;IACJ;IACA,MAAM0B,OAAO,GAAG,IAAI,CAACC,eAAe,CAACnJ,aAAa;IAClDkJ,OAAO,CAACrL,KAAK,CAACwN,MAAM,GAAG,IAAI,CAAC7D,qBAAqB,GAAG,IAAI;IACxD;IACA;IACA,IAAI,IAAI,CAAC2B,eAAe,CAACnJ,aAAa,CAACsL,YAAY,EAAE;MACjDpC,OAAO,CAACrL,KAAK,CAACwN,MAAM,GAAGD,SAAS,GAAG,IAAI;IAC3C;EACJ;EACA;EACAG,2BAA2BA,CAAA,EAAG;IAC1B,MAAMrC,OAAO,GAAG,IAAI,CAACC,eAAe,CAACnJ,aAAa;IAClD,IAAI,CAACwH,qBAAqB,GAAG0B,OAAO,CAAC1C,YAAY;IACjD0C,OAAO,CAACrL,KAAK,CAACwN,MAAM,GAAG,EAAE;IACzB,IAAI,CAACtD,aAAa,CAAC3B,IAAI,CAAC,CAAC;EAC7B;EACA;EACAoF,YAAYA,CAAChC,GAAG,EAAEiC,SAAS,EAAEhC,KAAK,EAAE;IAChC,IAAI,CAACD,GAAG,CAACkC,QAAQ,EAAE;MACf,IAAI,CAACrD,aAAa,GAAGoD,SAAS,CAACd,UAAU,GAAGlB,KAAK;IACrD;EACJ;EACA;EACAkC,YAAYA,CAACnC,GAAG,EAAEoC,GAAG,EAAE;IACnB,IAAIpC,GAAG,CAACkC,QAAQ,EAAE;MACd,OAAO,IAAI;IACf;IACA,OAAO,IAAI,CAACrD,aAAa,KAAKuD,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;EAC9C;EACA;EACAC,gBAAgBA,CAACC,WAAW,EAAErC,KAAK,EAAE;IACjC,IAAIqC,WAAW,EAAE;MACb,IAAI,CAACvB,UAAU,CAACI,UAAU,GAAGlB,KAAK;IACtC;EACJ;AACJ;AACAtC,gBAAgB,CAAC9G,UAAU,GAAG,CAC1B;EAAEC,IAAI,EAAEjF;AAAU,CAAC,CACtB;AACD8L,gBAAgB,CAACzG,cAAc,GAAG,MAAM,CACpC;EAAEJ,IAAI,EAAEhF;AAAW,CAAC,EACpB;EAAEgF,IAAI,EAAEjE;AAAkB,CAAC,EAC3B;EAAEiE,IAAI,EAAEK,SAAS;EAAEN,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE9E,MAAM;IAAE+E,IAAI,EAAE,CAACuG,eAAe;EAAG,CAAC,EAAE;IAAExG,IAAI,EAAE7E;EAAS,CAAC;AAAE,CAAC,EACjG;EAAE6E,IAAI,EAAEM,MAAM;EAAEP,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE7E;EAAS,CAAC,EAAE;IAAE6E,IAAI,EAAE9E,MAAM;IAAE+E,IAAI,EAAE,CAACpD,qBAAqB;EAAG,CAAC;AAAE,CAAC,CACvG;AACDgK,gBAAgB,CAAC9D,cAAc,GAAG;EAC9B8E,aAAa,EAAE,CAAC;IAAE7H,IAAI,EAAErE;EAAM,CAAC,CAAC;EAChCoM,aAAa,EAAE,CAAC;IAAE/H,IAAI,EAAErE;EAAM,CAAC,CAAC;EAChC2L,cAAc,EAAE,CAAC;IAAEtH,IAAI,EAAErE;EAAM,CAAC,CAAC;EACjCyJ,iBAAiB,EAAE,CAAC;IAAEpF,IAAI,EAAErE;EAAM,CAAC,CAAC;EACpCiM,iBAAiB,EAAE,CAAC;IAAE5H,IAAI,EAAErE;EAAM,CAAC,CAAC;EACpCuM,eAAe,EAAE,CAAC;IAAElI,IAAI,EAAErE;EAAM,CAAC,CAAC;EAClC4L,mBAAmB,EAAE,CAAC;IAAEvH,IAAI,EAAEhE;EAAO,CAAC,CAAC;EACvCwL,WAAW,EAAE,CAAC;IAAExH,IAAI,EAAEhE;EAAO,CAAC,CAAC;EAC/ByL,aAAa,EAAE,CAAC;IAAEzH,IAAI,EAAEhE;EAAO,CAAC,CAAC;EACjC0L,iBAAiB,EAAE,CAAC;IAAE1H,IAAI,EAAEhE;EAAO,CAAC;AACxC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,MAAMyP,WAAW,SAAS5E,gBAAgB,CAAC;EACvC7H,WAAWA,CAACoH,UAAU,EAAErB,iBAAiB,EAAEgC,aAAa,EAAE2E,aAAa,EAAE;IACrE,KAAK,CAACtF,UAAU,EAAErB,iBAAiB,EAAEgC,aAAa,EAAE2E,aAAa,CAAC;EACtE;AACJ;AACAD,WAAW,CAAC1L,UAAU,GAAG,CACrB;EAAEC,IAAI,EAAE3E,SAAS;EAAE4E,IAAI,EAAE,CAAC;IACdC,QAAQ,EAAE,eAAe;IACzB4C,QAAQ,EAAE,aAAa;IACvBrC,QAAQ,EAAE,+0EAA+0E;IACz1EmC,aAAa,EAAErH,iBAAiB,CAACsH,IAAI;IACrC;IACAH,eAAe,EAAEpH,uBAAuB,CAACqH,OAAO;IAChDF,MAAM,EAAE,CAAC,OAAO,EAAE,eAAe,CAAC;IAClC/B,SAAS,EAAE,CAAC;MACJC,OAAO,EAAEM,aAAa;MACtBL,WAAW,EAAE6K;IACjB,CAAC,CAAC;IACNtL,IAAI,EAAE;MACF,OAAO,EAAE,eAAe;MACxB,sCAAsC,EAAE,eAAe;MACvD,uCAAuC,EAAE;IAC7C,CAAC;IACDmG,MAAM,EAAE,CAAC,s/CAAs/C;EACngD,CAAC;AAAG,CAAC,CAChB;AACDmF,WAAW,CAACrL,cAAc,GAAG,MAAM,CAC/B;EAAEJ,IAAI,EAAEhF;AAAW,CAAC,EACpB;EAAEgF,IAAI,EAAEjE;AAAkB,CAAC,EAC3B;EAAEiE,IAAI,EAAEK,SAAS;EAAEN,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE9E,MAAM;IAAE+E,IAAI,EAAE,CAACuG,eAAe;EAAG,CAAC,EAAE;IAAExG,IAAI,EAAE7E;EAAS,CAAC;AAAE,CAAC,EACjG;EAAE6E,IAAI,EAAEM,MAAM;EAAEP,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE7E;EAAS,CAAC,EAAE;IAAE6E,IAAI,EAAE9E,MAAM;IAAE+E,IAAI,EAAE,CAACpD,qBAAqB;EAAG,CAAC;AAAE,CAAC,CACvG;AACD4O,WAAW,CAAC1I,cAAc,GAAG;EACzB4G,QAAQ,EAAE,CAAC;IAAE3J,IAAI,EAAE9D,eAAe;IAAE+D,IAAI,EAAE,CAACiB,MAAM,EAAE;MAAEyK,WAAW,EAAE;IAAK,CAAC;EAAG,CAAC,CAAC;EAC7E9C,eAAe,EAAE,CAAC;IAAE7I,IAAI,EAAEtE,SAAS;IAAEuE,IAAI,EAAE,CAAC,gBAAgB;EAAG,CAAC,CAAC;EACjEgK,UAAU,EAAE,CAAC;IAAEjK,IAAI,EAAEtE,SAAS;IAAEuE,IAAI,EAAE,CAAC,WAAW;EAAG,CAAC;AAC1D,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM2L,sBAAsB,CAAC;AAE7B,MAAMC,4BAA4B,GAAGxP,aAAa,CAACuP,sBAAsB,CAAC;AAC1E;AACA;AACA;AACA;AACA,MAAME,kBAAkB,SAASD,4BAA4B,CAAC;EAC1D7M,WAAWA,CAACoH,UAAU,EAAE;IACpB,KAAK,CAAC,CAAC;IACP,IAAI,CAACA,UAAU,GAAGA,UAAU;EAChC;EACA;EACA2F,KAAKA,CAAA,EAAG;IACJ,IAAI,CAAC3F,UAAU,CAAC1G,aAAa,CAACqM,KAAK,CAAC,CAAC;EACzC;EACAC,aAAaA,CAAA,EAAG;IACZ,OAAO,IAAI,CAAC5F,UAAU,CAAC1G,aAAa,CAACd,UAAU;EACnD;EACAqN,cAAcA,CAAA,EAAG;IACb,OAAO,IAAI,CAAC7F,UAAU,CAAC1G,aAAa,CAACZ,WAAW;EACpD;AACJ;AACAgN,kBAAkB,CAAC/L,UAAU,GAAG,CAC5B;EAAEC,IAAI,EAAEjF,SAAS;EAAEkF,IAAI,EAAE,CAAC;IACdC,QAAQ,EAAE,sBAAsB;IAChCuC,MAAM,EAAE,CAAC,UAAU,CAAC;IACpBtC,IAAI,EAAE;MACF,0BAA0B,EAAE,UAAU;MACtC,sBAAsB,EAAE;IAC5B;EACJ,CAAC;AAAG,CAAC,CAChB;AACD2L,kBAAkB,CAAC1L,cAAc,GAAG,MAAM,CACtC;EAAEJ,IAAI,EAAEhF;AAAW,CAAC,CACvB;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMkR,2BAA2B,GAAGlO,+BAA+B,CAAC;EAAEmO,OAAO,EAAE;AAAK,CAAC,CAAC;AACtF;AACA;AACA;AACA;AACA,MAAMC,sBAAsB,GAAG,EAAE;AACjC;AACA;AACA;AACA;AACA,MAAMC,mBAAmB,GAAG,GAAG;AAC/B;AACA;AACA;AACA;AACA,MAAMC,sBAAsB,GAAG,GAAG;AAClC;AACA;AACA;AACA;AACA,MAAMC,qBAAqB,CAAC;EACxBvN,WAAWA,CAACC,WAAW,EAAE6H,kBAAkB,EAAE0F,cAAc,EAAE1H,IAAI,EAAE5F,OAAO,EAAEuN,SAAS,EAAErN,cAAc,EAAE;IACnG,IAAI,CAACH,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAAC6H,kBAAkB,GAAGA,kBAAkB;IAC5C,IAAI,CAAC0F,cAAc,GAAGA,cAAc;IACpC,IAAI,CAAC1H,IAAI,GAAGA,IAAI;IAChB,IAAI,CAAC5F,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACuN,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACrN,cAAc,GAAGA,cAAc;IACpC;IACA,IAAI,CAACsN,eAAe,GAAG,CAAC;IACxB;IACA,IAAI,CAACC,qBAAqB,GAAG,KAAK;IAClC;IACA,IAAI,CAACC,UAAU,GAAG,IAAI9P,OAAO,CAAC,CAAC;IAC/B;IACA,IAAI,CAAC+P,uBAAuB,GAAG,KAAK;IACpC;IACA,IAAI,CAACC,mBAAmB,GAAG,IAAI;IAC/B;IACA,IAAI,CAACC,oBAAoB,GAAG,IAAI;IAChC;IACA,IAAI,CAACC,cAAc,GAAG,IAAIlQ,OAAO,CAAC,CAAC;IACnC;AACR;AACA;AACA;IACQ,IAAI,CAAC8K,iBAAiB,GAAG,KAAK;IAC9B,IAAI,CAACP,cAAc,GAAG,CAAC;IACvB;IACA,IAAI,CAAC4F,kBAAkB,GAAG,IAAInR,YAAY,CAAC,CAAC;IAC5C;IACA,IAAI,CAACoR,YAAY,GAAG,IAAIpR,YAAY,CAAC,CAAC;IACtC;IACAoD,OAAO,CAACM,iBAAiB,CAAC,MAAM;MAC5BvC,SAAS,CAACgC,WAAW,CAACS,aAAa,EAAE,YAAY,CAAC,CAC7CuE,IAAI,CAACrG,SAAS,CAAC,IAAI,CAACgP,UAAU,CAAC,CAAC,CAChCxI,SAAS,CAAC,MAAM;QACjB,IAAI,CAAC+I,aAAa,CAAC,CAAC;MACxB,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EACA;EACA,IAAIpF,aAAaA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACV,cAAc;EAAE;EAClD,IAAIU,aAAaA,CAAClG,KAAK,EAAE;IACrBA,KAAK,GAAG/D,oBAAoB,CAAC+D,KAAK,CAAC;IACnC,IAAI,IAAI,CAACwF,cAAc,IAAIxF,KAAK,EAAE;MAC9B,IAAI,CAAC8K,qBAAqB,GAAG,IAAI;MACjC,IAAI,CAACtF,cAAc,GAAGxF,KAAK;MAC3B,IAAI,IAAI,CAACuL,WAAW,EAAE;QAClB,IAAI,CAACA,WAAW,CAACC,gBAAgB,CAACxL,KAAK,CAAC;MAC5C;IACJ;EACJ;EACAyL,eAAeA,CAAA,EAAG;IACd;IACArQ,SAAS,CAAC,IAAI,CAACsQ,kBAAkB,CAAC7N,aAAa,EAAE,YAAY,EAAEwM,2BAA2B,CAAC,CACtFjI,IAAI,CAACrG,SAAS,CAAC,IAAI,CAACgP,UAAU,CAAC,CAAC,CAChCxI,SAAS,CAAC,MAAM;MACjB,IAAI,CAACoJ,qBAAqB,CAAC,QAAQ,CAAC;IACxC,CAAC,CAAC;IACFvQ,SAAS,CAAC,IAAI,CAACwQ,cAAc,CAAC/N,aAAa,EAAE,YAAY,EAAEwM,2BAA2B,CAAC,CAClFjI,IAAI,CAACrG,SAAS,CAAC,IAAI,CAACgP,UAAU,CAAC,CAAC,CAChCxI,SAAS,CAAC,MAAM;MACjB,IAAI,CAACoJ,qBAAqB,CAAC,OAAO,CAAC;IACvC,CAAC,CAAC;EACN;EACApE,kBAAkBA,CAAA,EAAG;IACjB,MAAMsE,SAAS,GAAG,IAAI,CAAC5I,IAAI,GAAG,IAAI,CAACA,IAAI,CAACO,MAAM,GAAGnI,EAAE,CAAC,KAAK,CAAC;IAC1D,MAAMyQ,MAAM,GAAG,IAAI,CAACnB,cAAc,CAACnH,MAAM,CAAC,GAAG,CAAC;IAC9C,MAAMuI,OAAO,GAAGA,CAAA,KAAM;MAClB,IAAI,CAACC,gBAAgB,CAAC,CAAC;MACvB,IAAI,CAAC3D,yBAAyB,CAAC,CAAC;IACpC,CAAC;IACD,IAAI,CAACkD,WAAW,GAAG,IAAIhT,eAAe,CAAC,IAAI,CAAC0T,MAAM,CAAC,CAC9CC,yBAAyB,CAAC,IAAI,CAAC5H,mBAAmB,CAAC,CAAC,CAAC,CACrD6H,cAAc,CAAC,CAAC,CAChBC,QAAQ,CAAC,CAAC;IACf,IAAI,CAACb,WAAW,CAACC,gBAAgB,CAAC,IAAI,CAAChG,cAAc,CAAC;IACtD;IACA;IACA,OAAO9H,qBAAqB,KAAK,WAAW,GAAGA,qBAAqB,CAACqO,OAAO,CAAC,GAAGA,OAAO,CAAC,CAAC;IACzF;IACA;IACA5Q,KAAK,CAAC0Q,SAAS,EAAEC,MAAM,EAAE,IAAI,CAACG,MAAM,CAAC7L,OAAO,CAAC,CAACgC,IAAI,CAACrG,SAAS,CAAC,IAAI,CAACgP,UAAU,CAAC,CAAC,CAACxI,SAAS,CAAC,MAAM;MAC3F;MACA;MACA;MACA,IAAI,CAAClF,OAAO,CAACgP,GAAG,CAAC,MAAMpF,OAAO,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC4E,OAAO,CAAC,CAAC;MACvD,IAAI,CAACR,WAAW,CAACW,yBAAyB,CAAC,IAAI,CAAC5H,mBAAmB,CAAC,CAAC,CAAC;IAC1E,CAAC,CAAC;IACF;IACA;IACA;IACA,IAAI,CAACiH,WAAW,CAAC/H,MAAM,CAACpB,IAAI,CAACrG,SAAS,CAAC,IAAI,CAACgP,UAAU,CAAC,CAAC,CAACxI,SAAS,CAAC+J,aAAa,IAAI;MAChF,IAAI,CAACjB,YAAY,CAACpH,IAAI,CAACqI,aAAa,CAAC;MACrC,IAAI,CAACC,YAAY,CAACD,aAAa,CAAC;IACpC,CAAC,CAAC;EACN;EACA5F,qBAAqBA,CAAA,EAAG;IACpB;IACA,IAAI,IAAI,CAAC8F,cAAc,IAAI,IAAI,CAACP,MAAM,CAACpE,MAAM,EAAE;MAC3C,IAAI,CAACmE,gBAAgB,CAAC,CAAC;MACvB,IAAI,CAACQ,cAAc,GAAG,IAAI,CAACP,MAAM,CAACpE,MAAM;MACxC,IAAI,CAAC5C,kBAAkB,CAACtB,YAAY,CAAC,CAAC;IAC1C;IACA;IACA;IACA,IAAI,IAAI,CAACmH,qBAAqB,EAAE;MAC5B,IAAI,CAAC2B,cAAc,CAAC,IAAI,CAACjH,cAAc,CAAC;MACxC,IAAI,CAACkH,uBAAuB,CAAC,CAAC;MAC9B,IAAI,CAACrE,yBAAyB,CAAC,CAAC;MAChC,IAAI,CAACyC,qBAAqB,GAAG,KAAK;MAClC,IAAI,CAAC7F,kBAAkB,CAACtB,YAAY,CAAC,CAAC;IAC1C;IACA;IACA;IACA,IAAI,IAAI,CAACgJ,sBAAsB,EAAE;MAC7B,IAAI,CAACC,wBAAwB,CAAC,CAAC;MAC/B,IAAI,CAACD,sBAAsB,GAAG,KAAK;MACnC,IAAI,CAAC1H,kBAAkB,CAACtB,YAAY,CAAC,CAAC;IAC1C;EACJ;EACApD,WAAWA,CAAA,EAAG;IACV,IAAI,CAACwK,UAAU,CAACzK,IAAI,CAAC,CAAC;IACtB,IAAI,CAACyK,UAAU,CAACvK,QAAQ,CAAC,CAAC;IAC1B,IAAI,CAAC2K,cAAc,CAAC3K,QAAQ,CAAC,CAAC;EAClC;EACA;EACAqM,cAAcA,CAAC7I,KAAK,EAAE;IAClB;IACA,IAAI3H,cAAc,CAAC2H,KAAK,CAAC,EAAE;MACvB;IACJ;IACA,QAAQA,KAAK,CAAC8I,OAAO;MACjB,KAAKvQ,KAAK;MACV,KAAKD,KAAK;QACN,IAAI,IAAI,CAACkM,UAAU,KAAK,IAAI,CAACtC,aAAa,EAAE;UACxC,IAAI,CAACkF,kBAAkB,CAACnH,IAAI,CAAC,IAAI,CAACuE,UAAU,CAAC;UAC7C,IAAI,CAACuE,aAAa,CAAC/I,KAAK,CAAC;QAC7B;QACA;MACJ;QACI,IAAI,CAACuH,WAAW,CAACyB,SAAS,CAAChJ,KAAK,CAAC;IACzC;EACJ;EACA;AACJ;AACA;EACIiJ,iBAAiBA,CAAA,EAAG;IAChB,MAAMC,WAAW,GAAG,IAAI,CAAC9P,WAAW,CAACS,aAAa,CAACqP,WAAW;IAC9D;IACA;IACA;IACA,IAAIA,WAAW,KAAK,IAAI,CAACC,mBAAmB,EAAE;MAC1C,IAAI,CAACA,mBAAmB,GAAGD,WAAW,IAAI,EAAE;MAC5C;MACA;MACA,IAAI,CAAC7P,OAAO,CAACgP,GAAG,CAAC,MAAM;QACnB,IAAI,CAACL,gBAAgB,CAAC,CAAC;QACvB,IAAI,CAAC3D,yBAAyB,CAAC,CAAC;QAChC,IAAI,CAACpD,kBAAkB,CAACtB,YAAY,CAAC,CAAC;MAC1C,CAAC,CAAC;IACN;EACJ;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIqI,gBAAgBA,CAAA,EAAG;IACf,IAAI,CAACoB,uBAAuB,CAAC,CAAC;IAC9B,IAAI,CAACV,uBAAuB,CAAC,CAAC;IAC9B,IAAI,CAACE,wBAAwB,CAAC,CAAC;EACnC;EACA;EACA,IAAIpE,UAAUA,CAAA,EAAG;IACb,OAAO,IAAI,CAAC+C,WAAW,GAAG,IAAI,CAACA,WAAW,CAAC8B,eAAe,GAAG,CAAC;EAClE;EACA;EACA,IAAI7E,UAAUA,CAACxI,KAAK,EAAE;IAClB,IAAI,CAAC,IAAI,CAACsN,aAAa,CAACtN,KAAK,CAAC,IAAI,IAAI,CAACwI,UAAU,KAAKxI,KAAK,IAAI,CAAC,IAAI,CAACuL,WAAW,EAAE;MAC9E;IACJ;IACA,IAAI,CAACA,WAAW,CAACgC,aAAa,CAACvN,KAAK,CAAC;EACzC;EACA;AACJ;AACA;AACA;EACIsN,aAAaA,CAAChG,KAAK,EAAE;IACjB,IAAI,CAAC,IAAI,CAAC2E,MAAM,EAAE;MACd,OAAO,IAAI;IACf;IACA,MAAM5E,GAAG,GAAG,IAAI,CAAC4E,MAAM,GAAG,IAAI,CAACA,MAAM,CAACtE,OAAO,CAAC,CAAC,CAACL,KAAK,CAAC,GAAG,IAAI;IAC7D,OAAO,CAAC,CAACD,GAAG,IAAI,CAACA,GAAG,CAACkC,QAAQ;EACjC;EACA;AACJ;AACA;AACA;EACIgD,YAAYA,CAACiB,QAAQ,EAAE;IACnB,IAAI,IAAI,CAACxC,uBAAuB,EAAE;MAC9B,IAAI,CAACyB,cAAc,CAACe,QAAQ,CAAC;IACjC;IACA,IAAI,IAAI,CAACvB,MAAM,IAAI,IAAI,CAACA,MAAM,CAACpE,MAAM,EAAE;MACnC,IAAI,CAACoE,MAAM,CAACtE,OAAO,CAAC,CAAC,CAAC6F,QAAQ,CAAC,CAACtD,KAAK,CAAC,CAAC;MACvC;MACA;MACA;MACA,MAAMuD,WAAW,GAAG,IAAI,CAACC,iBAAiB,CAAC7P,aAAa;MACxD,MAAM4F,GAAG,GAAG,IAAI,CAACa,mBAAmB,CAAC,CAAC;MACtC,IAAIb,GAAG,IAAI,KAAK,EAAE;QACdgK,WAAW,CAACE,UAAU,GAAG,CAAC;MAC9B,CAAC,MACI;QACDF,WAAW,CAACE,UAAU,GAAGF,WAAW,CAACG,WAAW,GAAGH,WAAW,CAACxQ,WAAW;MAC9E;IACJ;EACJ;EACA;EACAqH,mBAAmBA,CAAA,EAAG;IAClB,OAAO,IAAI,CAACrB,IAAI,IAAI,IAAI,CAACA,IAAI,CAACjD,KAAK,KAAK,KAAK,GAAG,KAAK,GAAG,KAAK;EACjE;EACA;EACA4M,wBAAwBA,CAAA,EAAG;IACvB,IAAI,IAAI,CAAC7G,iBAAiB,EAAE;MACxB;IACJ;IACA,MAAM8H,cAAc,GAAG,IAAI,CAACA,cAAc;IAC1C,MAAMC,UAAU,GAAG,IAAI,CAACxJ,mBAAmB,CAAC,CAAC,KAAK,KAAK,GAAG,CAACuJ,cAAc,GAAGA,cAAc;IAC1F;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,CAACE,QAAQ,CAAClQ,aAAa,CAACnC,KAAK,CAAC+F,SAAS,GAAI,cAAakH,IAAI,CAACqF,KAAK,CAACF,UAAU,CAAE,KAAI;IACvF;IACA;IACA;IACA;IACA,IAAI,IAAI,CAAClD,SAAS,CAACqD,OAAO,IAAI,IAAI,CAACrD,SAAS,CAACsD,IAAI,EAAE;MAC/C,IAAI,CAACR,iBAAiB,CAAC7P,aAAa,CAAC8P,UAAU,GAAG,CAAC;IACvD;EACJ;EACA;EACA,IAAIE,cAAcA,CAAA,EAAG;IAAE,OAAO,IAAI,CAAChD,eAAe;EAAE;EACpD,IAAIgD,cAAcA,CAAC7N,KAAK,EAAE;IACtB,IAAI,CAACmO,SAAS,CAACnO,KAAK,CAAC;EACzB;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIoO,aAAaA,CAACC,SAAS,EAAE;IACrB,MAAMC,UAAU,GAAG,IAAI,CAACZ,iBAAiB,CAAC7P,aAAa,CAACZ,WAAW;IACnE;IACA,MAAMsR,YAAY,GAAG,CAACF,SAAS,IAAI,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,IAAIC,UAAU,GAAG,CAAC;IACtE,OAAO,IAAI,CAACH,SAAS,CAAC,IAAI,CAACtD,eAAe,GAAG0D,YAAY,CAAC;EAC9D;EACA;EACAC,qBAAqBA,CAACH,SAAS,EAAE;IAC7B,IAAI,CAAC/C,aAAa,CAAC,CAAC;IACpB,IAAI,CAAC8C,aAAa,CAACC,SAAS,CAAC;EACjC;EACA;AACJ;AACA;AACA;AACA;AACA;EACI5B,cAAcA,CAACgC,UAAU,EAAE;IACvB,IAAI,IAAI,CAAC1I,iBAAiB,EAAE;MACxB;IACJ;IACA,MAAM2I,aAAa,GAAG,IAAI,CAACzC,MAAM,GAAG,IAAI,CAACA,MAAM,CAACtE,OAAO,CAAC,CAAC,CAAC8G,UAAU,CAAC,GAAG,IAAI;IAC5E,IAAI,CAACC,aAAa,EAAE;MAChB;IACJ;IACA;IACA,MAAMJ,UAAU,GAAG,IAAI,CAACZ,iBAAiB,CAAC7P,aAAa,CAACZ,WAAW;IACnE,MAAM;MAAEF,UAAU;MAAEE;IAAY,CAAC,GAAGyR,aAAa,CAACnK,UAAU,CAAC1G,aAAa;IAC1E,IAAI8Q,cAAc,EAAEC,aAAa;IACjC,IAAI,IAAI,CAACtK,mBAAmB,CAAC,CAAC,IAAI,KAAK,EAAE;MACrCqK,cAAc,GAAG5R,UAAU;MAC3B6R,aAAa,GAAGD,cAAc,GAAG1R,WAAW;IAChD,CAAC,MACI;MACD2R,aAAa,GAAG,IAAI,CAACb,QAAQ,CAAClQ,aAAa,CAACZ,WAAW,GAAGF,UAAU;MACpE4R,cAAc,GAAGC,aAAa,GAAG3R,WAAW;IAChD;IACA,MAAM4R,gBAAgB,GAAG,IAAI,CAAChB,cAAc;IAC5C,MAAMiB,eAAe,GAAG,IAAI,CAACjB,cAAc,GAAGS,UAAU;IACxD,IAAIK,cAAc,GAAGE,gBAAgB,EAAE;MACnC;MACA,IAAI,CAAChB,cAAc,IAAIgB,gBAAgB,GAAGF,cAAc,GAAGpE,sBAAsB;IACrF,CAAC,MACI,IAAIqE,aAAa,GAAGE,eAAe,EAAE;MACtC;MACA,IAAI,CAACjB,cAAc,IAAIe,aAAa,GAAGE,eAAe,GAAGvE,sBAAsB;IACnF;EACJ;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI6C,uBAAuBA,CAAA,EAAG;IACtB,IAAI,IAAI,CAACrH,iBAAiB,EAAE;MACxB,IAAI,CAACiF,uBAAuB,GAAG,KAAK;IACxC,CAAC,MACI;MACD,MAAM+D,SAAS,GAAG,IAAI,CAAChB,QAAQ,CAAClQ,aAAa,CAAC+P,WAAW,GAAG,IAAI,CAACxQ,WAAW,CAACS,aAAa,CAACZ,WAAW;MACtG,IAAI,CAAC8R,SAAS,EAAE;QACZ,IAAI,CAAClB,cAAc,GAAG,CAAC;MAC3B;MACA,IAAIkB,SAAS,KAAK,IAAI,CAAC/D,uBAAuB,EAAE;QAC5C,IAAI,CAAC/F,kBAAkB,CAACtB,YAAY,CAAC,CAAC;MAC1C;MACA,IAAI,CAACqH,uBAAuB,GAAG+D,SAAS;IAC5C;EACJ;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIrC,uBAAuBA,CAAA,EAAG;IACtB,IAAI,IAAI,CAAC3G,iBAAiB,EAAE;MACxB,IAAI,CAACkF,mBAAmB,GAAG,IAAI,CAACC,oBAAoB,GAAG,IAAI;IAC/D,CAAC,MACI;MACD;MACA,IAAI,CAACA,oBAAoB,GAAG,IAAI,CAAC2C,cAAc,IAAI,CAAC;MACpD,IAAI,CAAC5C,mBAAmB,GAAG,IAAI,CAAC4C,cAAc,IAAI,IAAI,CAACmB,qBAAqB,CAAC,CAAC;MAC9E,IAAI,CAAC/J,kBAAkB,CAACtB,YAAY,CAAC,CAAC;IAC1C;EACJ;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIqL,qBAAqBA,CAAA,EAAG;IACpB,MAAMC,eAAe,GAAG,IAAI,CAAClB,QAAQ,CAAClQ,aAAa,CAAC+P,WAAW;IAC/D,MAAMU,UAAU,GAAG,IAAI,CAACZ,iBAAiB,CAAC7P,aAAa,CAACZ,WAAW;IACnE,OAAQgS,eAAe,GAAGX,UAAU,IAAK,CAAC;EAC9C;EACA;EACAjG,yBAAyBA,CAAA,EAAG;IACxB,MAAM6G,YAAY,GAAG,IAAI,CAACjD,MAAM,IAAI,IAAI,CAACA,MAAM,CAACpE,MAAM,GAClD,IAAI,CAACoE,MAAM,CAACtE,OAAO,CAAC,CAAC,CAAC,IAAI,CAACzB,aAAa,CAAC,GAAG,IAAI;IACpD,MAAMiJ,oBAAoB,GAAGD,YAAY,GAAGA,YAAY,CAAC3K,UAAU,CAAC1G,aAAa,GAAG,IAAI;IACxF,IAAIsR,oBAAoB,EAAE;MACtB,IAAI,CAACC,OAAO,CAAC5R,cAAc,CAAC2R,oBAAoB,CAAC;IACrD,CAAC,MACI;MACD,IAAI,CAACC,OAAO,CAACrR,IAAI,CAAC,CAAC;IACvB;EACJ;EACA;EACAuN,aAAaA,CAAA,EAAG;IACZ,IAAI,CAACH,cAAc,CAAC7K,IAAI,CAAC,CAAC;EAC9B;EACA;AACJ;AACA;AACA;AACA;EACIqL,qBAAqBA,CAAC0C,SAAS,EAAEgB,UAAU,EAAE;IACzC;IACA;IACA,IAAIA,UAAU,IAAIA,UAAU,CAACC,MAAM,IAAI,IAAI,IAAID,UAAU,CAACC,MAAM,KAAK,CAAC,EAAE;MACpE;IACJ;IACA;IACA,IAAI,CAAChE,aAAa,CAAC,CAAC;IACpB;IACAhQ,KAAK,CAACkP,mBAAmB,EAAEC,sBAAsB;IAC7C;IAAA,CACCrI,IAAI,CAACrG,SAAS,CAACZ,KAAK,CAAC,IAAI,CAACgQ,cAAc,EAAE,IAAI,CAACJ,UAAU,CAAC,CAAC,CAAC,CAC5DxI,SAAS,CAAC,MAAM;MACjB,MAAM;QAAEgN,iBAAiB;QAAEC;MAAS,CAAC,GAAG,IAAI,CAACpB,aAAa,CAACC,SAAS,CAAC;MACrE;MACA,IAAImB,QAAQ,KAAK,CAAC,IAAIA,QAAQ,IAAID,iBAAiB,EAAE;QACjD,IAAI,CAACjE,aAAa,CAAC,CAAC;MACxB;IACJ,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;AACA;EACI6C,SAASA,CAACxO,QAAQ,EAAE;IAChB,IAAI,IAAI,CAACoG,iBAAiB,EAAE;MACxB,OAAO;QAAEwJ,iBAAiB,EAAE,CAAC;QAAEC,QAAQ,EAAE;MAAE,CAAC;IAChD;IACA,MAAMD,iBAAiB,GAAG,IAAI,CAACP,qBAAqB,CAAC,CAAC;IACtD,IAAI,CAACnE,eAAe,GAAGlC,IAAI,CAACE,GAAG,CAAC,CAAC,EAAEF,IAAI,CAACC,GAAG,CAAC2G,iBAAiB,EAAE5P,QAAQ,CAAC,CAAC;IACzE;IACA;IACA,IAAI,CAACgN,sBAAsB,GAAG,IAAI;IAClC,IAAI,CAACD,uBAAuB,CAAC,CAAC;IAC9B,OAAO;MAAE6C,iBAAiB;MAAEC,QAAQ,EAAE,IAAI,CAAC3E;IAAgB,CAAC;EAChE;AACJ;AACAH,qBAAqB,CAACxM,UAAU,GAAG,CAC/B;EAAEC,IAAI,EAAEjF;AAAU,CAAC,CACtB;AACDwR,qBAAqB,CAACnM,cAAc,GAAG,MAAM,CACzC;EAAEJ,IAAI,EAAEhF;AAAW,CAAC,EACpB;EAAEgF,IAAI,EAAEjE;AAAkB,CAAC,EAC3B;EAAEiE,IAAI,EAAEjC;AAAc,CAAC,EACvB;EAAEiC,IAAI,EAAE5C,cAAc;EAAE2C,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE7E;EAAS,CAAC;AAAE,CAAC,EAC1D;EAAE6E,IAAI,EAAE/E;AAAO,CAAC,EAChB;EAAE+E,IAAI,EAAE/B;AAAS,CAAC,EAClB;EAAE+B,IAAI,EAAEM,MAAM;EAAEP,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE7E;EAAS,CAAC,EAAE;IAAE6E,IAAI,EAAE9E,MAAM;IAAE+E,IAAI,EAAE,CAACpD,qBAAqB;EAAG,CAAC;AAAE,CAAC,CACvG;AACD0P,qBAAqB,CAACxJ,cAAc,GAAG;EACnC6E,iBAAiB,EAAE,CAAC;IAAE5H,IAAI,EAAErE;EAAM,CAAC;AACvC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM2V,iBAAiB,SAAS/E,qBAAqB,CAAC;EAClDvN,WAAWA,CAACoH,UAAU,EAAErB,iBAAiB,EAAEwM,aAAa,EAAEjM,GAAG,EAAEkM,MAAM,EAAEC,QAAQ,EAAE/F,aAAa,EAAE;IAC5F,KAAK,CAACtF,UAAU,EAAErB,iBAAiB,EAAEwM,aAAa,EAAEjM,GAAG,EAAEkM,MAAM,EAAEC,QAAQ,EAAE/F,aAAa,CAAC;IACzF,IAAI,CAACgG,cAAc,GAAG,KAAK;EAC/B;EACA;EACA,IAAIC,aAAaA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACD,cAAc;EAAE;EAClD,IAAIC,aAAaA,CAAC9P,KAAK,EAAE;IAAE,IAAI,CAAC6P,cAAc,GAAG7T,qBAAqB,CAACgE,KAAK,CAAC;EAAE;EAC/E+M,aAAaA,CAAC/I,KAAK,EAAE;IACjBA,KAAK,CAAC+L,cAAc,CAAC,CAAC;EAC1B;AACJ;AACAN,iBAAiB,CAACvR,UAAU,GAAG,CAC3B;EAAEC,IAAI,EAAEjF;AAAU,CAAC,CACtB;AACDuW,iBAAiB,CAAClR,cAAc,GAAG,MAAM,CACrC;EAAEJ,IAAI,EAAEhF;AAAW,CAAC,EACpB;EAAEgF,IAAI,EAAEjE;AAAkB,CAAC,EAC3B;EAAEiE,IAAI,EAAEjC;AAAc,CAAC,EACvB;EAAEiC,IAAI,EAAE5C,cAAc;EAAE2C,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE7E;EAAS,CAAC;AAAE,CAAC,EAC1D;EAAE6E,IAAI,EAAE/E;AAAO,CAAC,EAChB;EAAE+E,IAAI,EAAE/B;AAAS,CAAC,EAClB;EAAE+B,IAAI,EAAEM,MAAM;EAAEP,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE7E;EAAS,CAAC,EAAE;IAAE6E,IAAI,EAAE9E,MAAM;IAAE+E,IAAI,EAAE,CAACpD,qBAAqB;EAAG,CAAC;AAAE,CAAC,CACvG;AACDyU,iBAAiB,CAACvO,cAAc,GAAG;EAC/B4O,aAAa,EAAE,CAAC;IAAE3R,IAAI,EAAErE;EAAM,CAAC;AACnC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMkW,YAAY,SAASP,iBAAiB,CAAC;EACzCtS,WAAWA,CAACoH,UAAU,EAAErB,iBAAiB,EAAEwM,aAAa,EAAEjM,GAAG,EAAEkM,MAAM,EAAEC,QAAQ,EAAE/F,aAAa,EAAE;IAC5F,KAAK,CAACtF,UAAU,EAAErB,iBAAiB,EAAEwM,aAAa,EAAEjM,GAAG,EAAEkM,MAAM,EAAEC,QAAQ,EAAE/F,aAAa,CAAC;EAC7F;AACJ;AACAmG,YAAY,CAAC9R,UAAU,GAAG,CACtB;EAAEC,IAAI,EAAE3E,SAAS;EAAE4E,IAAI,EAAE,CAAC;IACdC,QAAQ,EAAE,gBAAgB;IAC1BO,QAAQ,EAAE,46CAA46C;IACt7CgC,MAAM,EAAE,CAAC,eAAe,CAAC;IACzBqP,OAAO,EAAE,CAAC,oBAAoB,EAAE,cAAc,CAAC;IAC/ClP,aAAa,EAAErH,iBAAiB,CAACsH,IAAI;IACrC;IACAH,eAAe,EAAEpH,uBAAuB,CAACqH,OAAO;IAChDxC,IAAI,EAAE;MACF,OAAO,EAAE,gBAAgB;MACzB,oDAAoD,EAAE,yBAAyB;MAC/E,4BAA4B,EAAE;IAClC,CAAC;IACDmG,MAAM,EAAE,CAAC,4mFAA4mF;EACznF,CAAC;AAAG,CAAC,CAChB;AACDuL,YAAY,CAACzR,cAAc,GAAG,MAAM,CAChC;EAAEJ,IAAI,EAAEhF;AAAW,CAAC,EACpB;EAAEgF,IAAI,EAAEjE;AAAkB,CAAC,EAC3B;EAAEiE,IAAI,EAAEjC;AAAc,CAAC,EACvB;EAAEiC,IAAI,EAAE5C,cAAc;EAAE2C,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE7E;EAAS,CAAC;AAAE,CAAC,EAC1D;EAAE6E,IAAI,EAAE/E;AAAO,CAAC,EAChB;EAAE+E,IAAI,EAAE/B;AAAS,CAAC,EAClB;EAAE+B,IAAI,EAAEM,MAAM;EAAEP,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE7E;EAAS,CAAC,EAAE;IAAE6E,IAAI,EAAE9E,MAAM;IAAE+E,IAAI,EAAE,CAACpD,qBAAqB;EAAG,CAAC;AAAE,CAAC,CACvG;AACDgV,YAAY,CAAC9O,cAAc,GAAG;EAC1B+K,MAAM,EAAE,CAAC;IAAE9N,IAAI,EAAE9D,eAAe;IAAE+D,IAAI,EAAE,CAAC6L,kBAAkB,EAAE;MAAEH,WAAW,EAAE;IAAM,CAAC;EAAG,CAAC,CAAC;EACxFsF,OAAO,EAAE,CAAC;IAAEjR,IAAI,EAAEtE,SAAS;IAAEuE,IAAI,EAAE,CAAClB,SAAS,EAAE;MAAEkE,MAAM,EAAE;IAAK,CAAC;EAAG,CAAC,CAAC;EACpEsM,iBAAiB,EAAE,CAAC;IAAEvP,IAAI,EAAEtE,SAAS;IAAEuE,IAAI,EAAE,CAAC,kBAAkB,EAAE;MAAEgD,MAAM,EAAE;IAAK,CAAC;EAAG,CAAC,CAAC;EACvF2M,QAAQ,EAAE,CAAC;IAAE5P,IAAI,EAAEtE,SAAS;IAAEuE,IAAI,EAAE,CAAC,SAAS,EAAE;MAAEgD,MAAM,EAAE;IAAK,CAAC;EAAG,CAAC,CAAC;EACrEwK,cAAc,EAAE,CAAC;IAAEzN,IAAI,EAAEtE,SAAS;IAAEuE,IAAI,EAAE,CAAC,eAAe;EAAG,CAAC,CAAC;EAC/DsN,kBAAkB,EAAE,CAAC;IAAEvN,IAAI,EAAEtE,SAAS;IAAEuE,IAAI,EAAE,CAAC,mBAAmB;EAAG,CAAC;AAC1E,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM8R,cAAc,SAASxF,qBAAqB,CAAC;EAC/CvN,WAAWA,CAACoH,UAAU,EAAEd,GAAG,EAAEkM,MAAM,EAAEzM,iBAAiB,EAAEwM,aAAa,EAAEE,QAAQ,EAAE/F,aAAa,EAAE;IAC5F,KAAK,CAACtF,UAAU,EAAErB,iBAAiB,EAAEwM,aAAa,EAAEjM,GAAG,EAAEkM,MAAM,EAAEC,QAAQ,EAAE/F,aAAa,CAAC;IACzF,IAAI,CAACgG,cAAc,GAAG,KAAK;IAC3B;IACA,IAAI,CAACM,KAAK,GAAG,SAAS;EAC1B;EACA;EACA,IAAI9J,eAAeA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACC,gBAAgB;EAAE;EACtD,IAAID,eAAeA,CAACrG,KAAK,EAAE;IACvB,MAAMuG,SAAS,GAAG,IAAI,CAACnJ,WAAW,CAACS,aAAa,CAAC0I,SAAS;IAC1DA,SAAS,CAACC,MAAM,CAAE,kBAAiB,IAAI,CAACH,eAAgB,EAAC,CAAC;IAC1D,IAAIrG,KAAK,EAAE;MACPuG,SAAS,CAACE,GAAG,CAAE,kBAAiBzG,KAAM,EAAC,CAAC;IAC5C;IACA,IAAI,CAACsG,gBAAgB,GAAGtG,KAAK;EACjC;EACA;EACA,IAAI8P,aAAaA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACD,cAAc;EAAE;EAClD,IAAIC,aAAaA,CAAC9P,KAAK,EAAE;IAAE,IAAI,CAAC6P,cAAc,GAAG7T,qBAAqB,CAACgE,KAAK,CAAC;EAAE;EAC/E+M,aAAaA,CAAA,EAAG;IACZ;EAAA;EAEJxF,kBAAkBA,CAAA,EAAG;IACjB;IACA;IACA,IAAI,CAAC0E,MAAM,CAAC7L,OAAO,CAACgC,IAAI,CAACvG,SAAS,CAAC,IAAI,CAAC,EAAEE,SAAS,CAAC,IAAI,CAACgP,UAAU,CAAC,CAAC,CAACxI,SAAS,CAAC,MAAM;MAClF,IAAI,CAAC6N,gBAAgB,CAAC,CAAC;IAC3B,CAAC,CAAC;IACF,KAAK,CAAC7I,kBAAkB,CAAC,CAAC;EAC9B;EACA;EACA6I,gBAAgBA,CAAA,EAAG;IACf,IAAI,CAAC,IAAI,CAACnE,MAAM,EAAE;MACd;IACJ;IACA,MAAMoE,KAAK,GAAG,IAAI,CAACpE,MAAM,CAACtE,OAAO,CAAC,CAAC;IACnC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyI,KAAK,CAACxI,MAAM,EAAED,CAAC,EAAE,EAAE;MACnC,IAAIyI,KAAK,CAACzI,CAAC,CAAC,CAAC0I,MAAM,EAAE;QACjB,IAAI,CAACpK,aAAa,GAAG0B,CAAC;QACtB,IAAI,CAAC3C,kBAAkB,CAACtB,YAAY,CAAC,CAAC;QACtC;MACJ;IACJ;IACA;IACA,IAAI,CAACuC,aAAa,GAAG,CAAC,CAAC;IACvB,IAAI,CAACkJ,OAAO,CAACrR,IAAI,CAAC,CAAC;EACvB;AACJ;AACAmS,cAAc,CAAChS,UAAU,GAAG,CACxB;EAAEC,IAAI,EAAEjF;AAAU,CAAC,CACtB;AACDgX,cAAc,CAAC3R,cAAc,GAAG,MAAM,CAClC;EAAEJ,IAAI,EAAEhF;AAAW,CAAC,EACpB;EAAEgF,IAAI,EAAE5C,cAAc;EAAE2C,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE7E;EAAS,CAAC;AAAE,CAAC,EAC1D;EAAE6E,IAAI,EAAE/E;AAAO,CAAC,EAChB;EAAE+E,IAAI,EAAEjE;AAAkB,CAAC,EAC3B;EAAEiE,IAAI,EAAEjC;AAAc,CAAC,EACvB;EAAEiC,IAAI,EAAE/B;AAAS,CAAC,EAClB;EAAE+B,IAAI,EAAEM,MAAM;EAAEP,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE7E;EAAS,CAAC,EAAE;IAAE6E,IAAI,EAAE9E,MAAM;IAAE+E,IAAI,EAAE,CAACpD,qBAAqB;EAAG,CAAC;AAAE,CAAC,CACvG;AACDkV,cAAc,CAAChP,cAAc,GAAG;EAC5BmF,eAAe,EAAE,CAAC;IAAElI,IAAI,EAAErE;EAAM,CAAC,CAAC;EAClCgW,aAAa,EAAE,CAAC;IAAE3R,IAAI,EAAErE;EAAM,CAAC,CAAC;EAChCqW,KAAK,EAAE,CAAC;IAAEhS,IAAI,EAAErE;EAAM,CAAC;AAC3B,CAAC;AACD;AACA;AACA;AACA;AACA,MAAMyW,SAAS,SAASL,cAAc,CAAC;EACnC/S,WAAWA,CAACoH,UAAU,EAAEd,GAAG,EAAEkM,MAAM,EAAEzM,iBAAiB,EAAEwM,aAAa,EAAEE,QAAQ,EAAE/F,aAAa,EAAE;IAC5F,KAAK,CAACtF,UAAU,EAAEd,GAAG,EAAEkM,MAAM,EAAEzM,iBAAiB,EAAEwM,aAAa,EAAEE,QAAQ,EAAE/F,aAAa,CAAC;EAC7F;AACJ;AACA0G,SAAS,CAACrS,UAAU,GAAG,CACnB;EAAEC,IAAI,EAAE3E,SAAS;EAAE4E,IAAI,EAAE,CAAC;IACdC,QAAQ,EAAE,mBAAmB;IAC7B4C,QAAQ,EAAE,yBAAyB;IACnCL,MAAM,EAAE,CAAC,OAAO,CAAC;IACjBhC,QAAQ,EAAE,o5CAAo5C;IAC95CN,IAAI,EAAE;MACF,OAAO,EAAE,gCAAgC;MACzC,oDAAoD,EAAE,yBAAyB;MAC/E,4BAA4B,EAAE,gCAAgC;MAC9D,qBAAqB,EAAE,wCAAwC;MAC/D,oBAAoB,EAAE,oBAAoB;MAC1C,kBAAkB,EAAE;IACxB,CAAC;IACDyC,aAAa,EAAErH,iBAAiB,CAACsH,IAAI;IACrC;IACAH,eAAe,EAAEpH,uBAAuB,CAACqH,OAAO;IAChD2D,MAAM,EAAE,CAAC,uvFAAuvF;EACpwF,CAAC;AAAG,CAAC,CAChB;AACD8L,SAAS,CAAChS,cAAc,GAAG,MAAM,CAC7B;EAAEJ,IAAI,EAAEhF;AAAW,CAAC,EACpB;EAAEgF,IAAI,EAAE5C,cAAc;EAAE2C,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE7E;EAAS,CAAC;AAAE,CAAC,EAC1D;EAAE6E,IAAI,EAAE/E;AAAO,CAAC,EAChB;EAAE+E,IAAI,EAAEjE;AAAkB,CAAC,EAC3B;EAAEiE,IAAI,EAAEjC;AAAc,CAAC,EACvB;EAAEiC,IAAI,EAAE/B;AAAS,CAAC,EAClB;EAAE+B,IAAI,EAAEM,MAAM;EAAEP,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE7E;EAAS,CAAC,EAAE;IAAE6E,IAAI,EAAE9E,MAAM;IAAE+E,IAAI,EAAE,CAACpD,qBAAqB;EAAG,CAAC;AAAE,CAAC,CACvG;AACDuV,SAAS,CAACrP,cAAc,GAAG;EACvB+K,MAAM,EAAE,CAAC;IAAE9N,IAAI,EAAE9D,eAAe;IAAE+D,IAAI,EAAE,CAACpE,UAAU,CAAC,MAAMwW,UAAU,CAAC,EAAE;MAAE1G,WAAW,EAAE;IAAK,CAAC;EAAG,CAAC,CAAC;EACjGsF,OAAO,EAAE,CAAC;IAAEjR,IAAI,EAAEtE,SAAS;IAAEuE,IAAI,EAAE,CAAClB,SAAS,EAAE;MAAEkE,MAAM,EAAE;IAAK,CAAC;EAAG,CAAC,CAAC;EACpEsM,iBAAiB,EAAE,CAAC;IAAEvP,IAAI,EAAEtE,SAAS;IAAEuE,IAAI,EAAE,CAAC,kBAAkB,EAAE;MAAEgD,MAAM,EAAE;IAAK,CAAC;EAAG,CAAC,CAAC;EACvF2M,QAAQ,EAAE,CAAC;IAAE5P,IAAI,EAAEtE,SAAS;IAAEuE,IAAI,EAAE,CAAC,SAAS,EAAE;MAAEgD,MAAM,EAAE;IAAK,CAAC;EAAG,CAAC,CAAC;EACrEwK,cAAc,EAAE,CAAC;IAAEzN,IAAI,EAAEtE,SAAS;IAAEuE,IAAI,EAAE,CAAC,eAAe;EAAG,CAAC,CAAC;EAC/DsN,kBAAkB,EAAE,CAAC;IAAEvN,IAAI,EAAEtE,SAAS;IAAEuE,IAAI,EAAE,CAAC,mBAAmB;EAAG,CAAC;AAC1E,CAAC;AACD;AACA,MAAMqS,mBAAmB,CAAC;AAE1B,MAAMC,oBAAoB,GAAG/V,aAAa,CAACD,kBAAkB,CAACF,aAAa,CAACiW,mBAAmB,CAAC,CAAC,CAAC;AAClG;AACA,MAAME,eAAe,SAASD,oBAAoB,CAAC;EAC/CvT,WAAWA,CAACyT,UAAU,EACtB,oBAAqBrM,UAAU,EAAEsM,mBAAmB,EAAErD,QAAQ,EAAEsD,aAAa,EAAEjH,aAAa,EAAE;IAC1F,KAAK,CAAC,CAAC;IACP,IAAI,CAAC+G,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACrM,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACuM,aAAa,GAAGA,aAAa;IAClC;IACA,IAAI,CAACC,SAAS,GAAG,KAAK;IACtB,IAAI,CAACC,YAAY,GAAGH,mBAAmB,IAAI,CAAC,CAAC;IAC7C,IAAI,CAACrD,QAAQ,GAAGyD,QAAQ,CAACzD,QAAQ,CAAC,IAAI,CAAC;IACvC,IAAI3D,aAAa,KAAK,gBAAgB,EAAE;MACpC,IAAI,CAACmH,YAAY,CAACE,SAAS,GAAG;QAAEC,aAAa,EAAE,CAAC;QAAEC,YAAY,EAAE;MAAE,CAAC;IACvE;EACJ;EACA;EACA,IAAId,MAAMA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACS,SAAS;EAAE;EACtC,IAAIT,MAAMA,CAACtQ,KAAK,EAAE;IACd,MAAMqR,QAAQ,GAAGrV,qBAAqB,CAACgE,KAAK,CAAC;IAC7C,IAAIqR,QAAQ,KAAK,IAAI,CAACN,SAAS,EAAE;MAC7B,IAAI,CAACA,SAAS,GAAG/Q,KAAK;MACtB,IAAI,CAAC4Q,UAAU,CAACR,gBAAgB,CAAC,CAAC;IACtC;EACJ;EACA;AACJ;AACA;AACA;EACI,IAAIkB,cAAcA,CAAA,EAAG;IACjB,OAAO,IAAI,CAAC/H,QAAQ,IAAI,IAAI,CAACuG,aAAa,IAAI,IAAI,CAACc,UAAU,CAACd,aAAa,IACvE,CAAC,CAAC,IAAI,CAACkB,YAAY,CAACzH,QAAQ;EACpC;EACA;EACAW,KAAKA,CAAA,EAAG;IACJ,IAAI,CAAC3F,UAAU,CAAC1G,aAAa,CAACqM,KAAK,CAAC,CAAC;EACzC;EACAuB,eAAeA,CAAA,EAAG;IACd,IAAI,CAACqF,aAAa,CAACS,OAAO,CAAC,IAAI,CAAChN,UAAU,CAAC;EAC/C;EACAhE,WAAWA,CAAA,EAAG;IACV,IAAI,CAACuQ,aAAa,CAACU,cAAc,CAAC,IAAI,CAACjN,UAAU,CAAC;EACtD;AACJ;AACAoM,eAAe,CAACzS,UAAU,GAAG,CACzB;EAAEC,IAAI,EAAEjF;AAAU,CAAC,CACtB;AACDyX,eAAe,CAACpS,cAAc,GAAG,MAAM,CACnC;EAAEJ,IAAI,EAAE+R;AAAe,CAAC,EACxB;EAAE/R,IAAI,EAAEhF;AAAW,CAAC,EACpB;EAAEgF,IAAI,EAAEK,SAAS;EAAEN,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE7E;EAAS,CAAC,EAAE;IAAE6E,IAAI,EAAE9E,MAAM;IAAE+E,IAAI,EAAE,CAACxD,yBAAyB;EAAG,CAAC;AAAE,CAAC,EAC3G;EAAEuD,IAAI,EAAEM,MAAM;EAAEP,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE7D,SAAS;IAAE8D,IAAI,EAAE,CAAC,UAAU;EAAG,CAAC;AAAE,CAAC,EACxE;EAAED,IAAI,EAAE3F;AAAa,CAAC,EACtB;EAAE2F,IAAI,EAAEM,MAAM;EAAEP,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE7E;EAAS,CAAC,EAAE;IAAE6E,IAAI,EAAE9E,MAAM;IAAE+E,IAAI,EAAE,CAACpD,qBAAqB;EAAG,CAAC;AAAE,CAAC,CACvG;AACD2V,eAAe,CAACzP,cAAc,GAAG;EAC7BoP,MAAM,EAAE,CAAC;IAAEnS,IAAI,EAAErE;EAAM,CAAC;AAC5B,CAAC;AACD;AACA;AACA;AACA,MAAM0W,UAAU,SAASG,eAAe,CAAC;EACrCxT,WAAWA,CAACsU,SAAS,EAAElN,UAAU,EAAEoL,MAAM,EAAEC,QAAQ,EAAEiB,mBAAmB,EAAErD,QAAQ,EAAEkE,YAAY,EAAE7H,aAAa,EAAE;IAC7G,KAAK,CAAC4H,SAAS,EAAElN,UAAU,EAAEsM,mBAAmB,EAAErD,QAAQ,EAAEkE,YAAY,EAAE7H,aAAa,CAAC;IACxF,IAAI,CAAC8H,cAAc,GAAG,IAAI9W,cAAc,CAAC,IAAI,EAAE8U,MAAM,EAAEpL,UAAU,EAAEqL,QAAQ,CAAC;IAC5E,IAAI,CAAC+B,cAAc,CAACC,kBAAkB,CAACrN,UAAU,CAAC1G,aAAa,CAAC;EACpE;EACA0C,WAAWA,CAAA,EAAG;IACV,KAAK,CAACA,WAAW,CAAC,CAAC;IACnB,IAAI,CAACoR,cAAc,CAACE,oBAAoB,CAAC,CAAC;EAC9C;AACJ;AACArB,UAAU,CAACtS,UAAU,GAAG,CACpB;EAAEC,IAAI,EAAEjF,SAAS;EAAEkF,IAAI,EAAE,CAAC;IACdC,QAAQ,EAAE,8BAA8B;IACxC4C,QAAQ,EAAE,YAAY;IACtBL,MAAM,EAAE,CAAC,UAAU,EAAE,eAAe,EAAE,UAAU,CAAC;IACjDtC,IAAI,EAAE;MACF,OAAO,EAAE,kCAAkC;MAC3C,qBAAqB,EAAE,wBAAwB;MAC/C,sBAAsB,EAAE,UAAU;MAClC,iBAAiB,EAAE,UAAU;MAC7B,0BAA0B,EAAE,UAAU;MACtC,8BAA8B,EAAE;IACpC;EACJ,CAAC;AAAG,CAAC,CAChB;AACDkS,UAAU,CAACjS,cAAc,GAAG,MAAM,CAC9B;EAAEJ,IAAI,EAAEoS;AAAU,CAAC,EACnB;EAAEpS,IAAI,EAAEhF;AAAW,CAAC,EACpB;EAAEgF,IAAI,EAAE/E;AAAO,CAAC,EAChB;EAAE+E,IAAI,EAAE/B;AAAS,CAAC,EAClB;EAAE+B,IAAI,EAAEK,SAAS;EAAEN,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE7E;EAAS,CAAC,EAAE;IAAE6E,IAAI,EAAE9E,MAAM;IAAE+E,IAAI,EAAE,CAACxD,yBAAyB;EAAG,CAAC;AAAE,CAAC,EAC3G;EAAEuD,IAAI,EAAEM,MAAM;EAAEP,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE7D,SAAS;IAAE8D,IAAI,EAAE,CAAC,UAAU;EAAG,CAAC;AAAE,CAAC,EACxE;EAAED,IAAI,EAAE3F;AAAa,CAAC,EACtB;EAAE2F,IAAI,EAAEM,MAAM;EAAEP,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE7E;EAAS,CAAC,EAAE;IAAE6E,IAAI,EAAE9E,MAAM;IAAE+E,IAAI,EAAE,CAACpD,qBAAqB;EAAG,CAAC;AAAE,CAAC,CACvG;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM8W,aAAa,CAAC;AAEpBA,aAAa,CAAC5T,UAAU,GAAG,CACvB;EAAEC,IAAI,EAAE5D,QAAQ;EAAE6D,IAAI,EAAE,CAAC;IACb2T,OAAO,EAAE,CACL/Y,YAAY,EACZ8B,eAAe,EACfhC,YAAY,EACZiC,eAAe,EACfrC,eAAe,EACfD,UAAU,CACb;IACD;IACAuZ,OAAO,EAAE,CACLlX,eAAe,EACf8O,WAAW,EACX3K,WAAW,EACXI,MAAM,EACNkR,SAAS,EACTC,UAAU,EACV7R,aAAa,CAChB;IACDsT,YAAY,EAAE,CACVrI,WAAW,EACX3K,WAAW,EACXI,MAAM,EACNnC,SAAS,EACT+M,kBAAkB,EAClBsG,SAAS,EACTC,UAAU,EACVzN,UAAU,EACVpB,gBAAgB,EAChBqO,YAAY,EACZrR,aAAa;EAErB,CAAC;AAAG,CAAC,CAChB;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAASgG,eAAe,EAAEvF,aAAa,EAAElC,SAAS,EAAEmC,MAAM,EAAE0D,UAAU,EAAEpB,gBAAgB,EAAEkD,iBAAiB,EAAElG,aAAa,EAAEiL,WAAW,EAAEoG,YAAY,EAAE/Q,WAAW,EAAEgL,kBAAkB,EAAEuG,UAAU,EAAED,SAAS,EAAEuB,aAAa,EAAEtV,uBAAuB,EAAEwG,eAAe,EAAEgC,gBAAgB,EAAEyK,iBAAiB,EAAEkB,eAAe,EAAET,cAAc,EAAE3O,iBAAiB,EAAE5E,+BAA+B,IAAIuV,0CAA0C,EAAElT,aAAa,IAAImT,0CAA0C,EAAEzT,eAAe,IAAI0T,0CAA0C,EAAE1H,qBAAqB,IAAI2H,0CAA0C"},"metadata":{},"sourceType":"module","externalDependencies":[]}