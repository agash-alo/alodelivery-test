{"ast":null,"code":"/**\r\n * Module that defines everything related to building Candlesticks.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Column } from \"./Column\";\nimport { Line } from \"../../core/elements/Line\";\nimport { registry } from \"../../core/Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Class used to creates Candlesticks.\r\n *\r\n * @see {@link ICandlestickEvents} for a list of available events\r\n * @see {@link ICandlestickAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\nvar Candlestick = /** @class */function (_super) {\n  __extends(Candlestick, _super);\n  /**\r\n   * Constructor\r\n   */\n  function Candlestick() {\n    var _this = _super.call(this) || this;\n    _this.className = \"Candlestick\";\n    _this.layout = \"none\";\n    return _this;\n  }\n  /**\r\n   * @ignore\r\n   */\n  Candlestick.prototype.createAssets = function () {\n    _super.prototype.createAssets.call(this);\n    this.lowLine = this.createChild(Line);\n    this.lowLine.shouldClone = false;\n    this.highLine = this.createChild(Line);\n    this.highLine.shouldClone = false;\n  };\n  /**\r\n   * Copies all parameters from another [[Candlestick]].\r\n   *\r\n   * @param source Source Candlestick\r\n   */\n  Candlestick.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n    if (this.lowLine) {\n      this.lowLine.copyFrom(source.lowLine);\n    }\n    if (this.highLine) {\n      this.highLine.copyFrom(source.highLine);\n    }\n  };\n  return Candlestick;\n}(Column);\nexport { Candlestick };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"Candlestick\"] = Candlestick;","map":{"version":3,"names":["__extends","Column","Line","registry","Candlestick","_super","_this","call","className","layout","prototype","createAssets","lowLine","createChild","shouldClone","highLine","copyFrom","source","registeredClasses"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/charts/elements/Candlestick.js"],"sourcesContent":["/**\r\n * Module that defines everything related to building Candlesticks.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Column } from \"./Column\";\r\nimport { Line } from \"../../core/elements/Line\";\r\nimport { registry } from \"../../core/Registry\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Class used to creates Candlesticks.\r\n *\r\n * @see {@link ICandlestickEvents} for a list of available events\r\n * @see {@link ICandlestickAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nvar Candlestick = /** @class */ (function (_super) {\r\n    __extends(Candlestick, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Candlestick() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"Candlestick\";\r\n        _this.layout = \"none\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    Candlestick.prototype.createAssets = function () {\r\n        _super.prototype.createAssets.call(this);\r\n        this.lowLine = this.createChild(Line);\r\n        this.lowLine.shouldClone = false;\r\n        this.highLine = this.createChild(Line);\r\n        this.highLine.shouldClone = false;\r\n    };\r\n    /**\r\n     * Copies all parameters from another [[Candlestick]].\r\n     *\r\n     * @param source Source Candlestick\r\n     */\r\n    Candlestick.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        if (this.lowLine) {\r\n            this.lowLine.copyFrom(source.lowLine);\r\n        }\r\n        if (this.highLine) {\r\n            this.highLine.copyFrom(source.highLine);\r\n        }\r\n    };\r\n    return Candlestick;\r\n}(Column));\r\nexport { Candlestick };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Candlestick\"] = Candlestick;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,IAAI,QAAQ,0BAA0B;AAC/C,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,WAAW,GAAG,aAAe,UAAUC,MAAM,EAAE;EAC/CL,SAAS,CAACI,WAAW,EAAEC,MAAM,CAAC;EAC9B;AACJ;AACA;EACI,SAASD,WAAWA,CAAA,EAAG;IACnB,IAAIE,KAAK,GAAGD,MAAM,CAACE,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI;IACrCD,KAAK,CAACE,SAAS,GAAG,aAAa;IAC/BF,KAAK,CAACG,MAAM,GAAG,MAAM;IACrB,OAAOH,KAAK;EAChB;EACA;AACJ;AACA;EACIF,WAAW,CAACM,SAAS,CAACC,YAAY,GAAG,YAAY;IAC7CN,MAAM,CAACK,SAAS,CAACC,YAAY,CAACJ,IAAI,CAAC,IAAI,CAAC;IACxC,IAAI,CAACK,OAAO,GAAG,IAAI,CAACC,WAAW,CAACX,IAAI,CAAC;IACrC,IAAI,CAACU,OAAO,CAACE,WAAW,GAAG,KAAK;IAChC,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACF,WAAW,CAACX,IAAI,CAAC;IACtC,IAAI,CAACa,QAAQ,CAACD,WAAW,GAAG,KAAK;EACrC,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIV,WAAW,CAACM,SAAS,CAACM,QAAQ,GAAG,UAAUC,MAAM,EAAE;IAC/CZ,MAAM,CAACK,SAAS,CAACM,QAAQ,CAACT,IAAI,CAAC,IAAI,EAAEU,MAAM,CAAC;IAC5C,IAAI,IAAI,CAACL,OAAO,EAAE;MACd,IAAI,CAACA,OAAO,CAACI,QAAQ,CAACC,MAAM,CAACL,OAAO,CAAC;IACzC;IACA,IAAI,IAAI,CAACG,QAAQ,EAAE;MACf,IAAI,CAACA,QAAQ,CAACC,QAAQ,CAACC,MAAM,CAACF,QAAQ,CAAC;IAC3C;EACJ,CAAC;EACD,OAAOX,WAAW;AACtB,CAAC,CAACH,MAAM,CAAE;AACV,SAASG,WAAW;AACpB;AACA;AACA;AACA;AACA;AACA;AACAD,QAAQ,CAACe,iBAAiB,CAAC,aAAa,CAAC,GAAGd,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}