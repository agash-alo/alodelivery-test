{"ast":null,"code":"/**\r\n * Functionality for adding images in SVG tree.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Sprite } from \"../Sprite\";\nimport { registry } from \"../Registry\";\nimport * as $dom from \"../utils/DOM\";\nimport * as $type from \"../utils/Type\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Used to add `<image>` elements to SVG.\r\n *\r\n * @see {@link IImageEvents} for a list of available events\r\n * @see {@link IImageAdapters} for a list of available Adapters\r\n */\nvar Image = /** @class */function (_super) {\n  __extends(Image, _super);\n  /**\r\n   * Constructor\r\n   */\n  function Image() {\n    var _this = _super.call(this) || this;\n    _this.className = \"Image\";\n    _this.element = _this.paper.add(\"image\");\n    _this.applyTheme();\n    _this.width = 50;\n    _this.height = 50;\n    return _this;\n  }\n  /**\r\n   * Draws an `<image>` element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Image.prototype.draw = function () {\n    _super.prototype.draw.call(this);\n    if (this.href) {\n      var width = this.innerWidth;\n      var height = this.innerHeight;\n      if ($type.isNumber(this.widthRatio)) {\n        width = height * this.widthRatio;\n        this.width = width;\n      }\n      if ($type.isNumber(this.heightRatio)) {\n        height = width * this.heightRatio;\n        this.height = height;\n      }\n      this.element.attr({\n        \"width\": width,\n        \"height\": height\n      });\n      this.element.attrNS($dom.XLINK, \"xlink:href\", this.href);\n    }\n  };\n  Object.defineProperty(Image.prototype, \"href\", {\n    /**\r\n     * @return Image URI\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"href\");\n    },\n    /**\r\n     * An image URI.\r\n     *\r\n     * @param value  Image URI\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"href\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Image.prototype, \"widthRatio\", {\n    /**\r\n     * @return Ratio\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"widthRatio\");\n    },\n    /**\r\n     * Sets image `width` relatively to its `height`.\r\n     *\r\n     * If image's `height = 100` and `widthRatio = 0.5` the actual width will be\r\n     * `50`.\r\n     *\r\n     * @param value  Ratio\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"widthRatio\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Image.prototype, \"heightRatio\", {\n    /**\r\n     * @return Ratio\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"heightRatio\");\n    },\n    /**\r\n     * Sets image `height` relatively to its `width`.\r\n     *\r\n     * If image's `width = 100` and `heightRatio = 0.5` the actual height will be\r\n     * `50`.\r\n     *\r\n     * @param value  Ratio\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"heightRatio\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Image.prototype, \"bbox\", {\n    /**\r\n     * Returns bounding box (square) for this element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\n    get: function () {\n      return {\n        x: 0,\n        y: 0,\n        width: this.pixelWidth,\n        height: this.pixelHeight\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Image;\n}(Sprite);\nexport { Image };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"Image\"] = Image;","map":{"version":3,"names":["__extends","Sprite","registry","$dom","$type","Image","_super","_this","call","className","element","paper","add","applyTheme","width","height","prototype","draw","href","innerWidth","innerHeight","isNumber","widthRatio","heightRatio","attr","attrNS","XLINK","Object","defineProperty","get","getPropertyValue","set","value","setPropertyValue","enumerable","configurable","x","y","pixelWidth","pixelHeight","registeredClasses"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/core/elements/Image.js"],"sourcesContent":["/**\r\n * Functionality for adding images in SVG tree.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../Sprite\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $dom from \"../utils/DOM\";\r\nimport * as $type from \"../utils/Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Used to add `<image>` elements to SVG.\r\n *\r\n * @see {@link IImageEvents} for a list of available events\r\n * @see {@link IImageAdapters} for a list of available Adapters\r\n */\r\nvar Image = /** @class */ (function (_super) {\r\n    __extends(Image, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Image() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"Image\";\r\n        _this.element = _this.paper.add(\"image\");\r\n        _this.applyTheme();\r\n        _this.width = 50;\r\n        _this.height = 50;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws an `<image>` element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Image.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        if (this.href) {\r\n            var width = this.innerWidth;\r\n            var height = this.innerHeight;\r\n            if ($type.isNumber(this.widthRatio)) {\r\n                width = height * this.widthRatio;\r\n                this.width = width;\r\n            }\r\n            if ($type.isNumber(this.heightRatio)) {\r\n                height = width * this.heightRatio;\r\n                this.height = height;\r\n            }\r\n            this.element.attr({\r\n                \"width\": width,\r\n                \"height\": height\r\n            });\r\n            this.element.attrNS($dom.XLINK, \"xlink:href\", this.href);\r\n        }\r\n    };\r\n    Object.defineProperty(Image.prototype, \"href\", {\r\n        /**\r\n         * @return Image URI\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"href\");\r\n        },\r\n        /**\r\n         * An image URI.\r\n         *\r\n         * @param value  Image URI\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"href\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Image.prototype, \"widthRatio\", {\r\n        /**\r\n         * @return Ratio\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"widthRatio\");\r\n        },\r\n        /**\r\n         * Sets image `width` relatively to its `height`.\r\n         *\r\n         * If image's `height = 100` and `widthRatio = 0.5` the actual width will be\r\n         * `50`.\r\n         *\r\n         * @param value  Ratio\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"widthRatio\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Image.prototype, \"heightRatio\", {\r\n        /**\r\n         * @return Ratio\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"heightRatio\");\r\n        },\r\n        /**\r\n         * Sets image `height` relatively to its `width`.\r\n         *\r\n         * If image's `width = 100` and `heightRatio = 0.5` the actual height will be\r\n         * `50`.\r\n         *\r\n         * @param value  Ratio\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"heightRatio\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Image.prototype, \"bbox\", {\r\n        /**\r\n         * Returns bounding box (square) for this element.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        get: function () {\r\n            return {\r\n                x: 0,\r\n                y: 0,\r\n                width: this.pixelWidth,\r\n                height: this.pixelHeight\r\n            };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Image;\r\n}(Sprite));\r\nexport { Image };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Image\"] = Image;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}