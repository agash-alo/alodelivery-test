{"ast":null,"code":"import { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { BaseObject } from \"../../Base\";\nimport { registry } from \"../../Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * A base class for color modifiers.\r\n *\r\n * @ignore Exclude from docs\r\n */\nvar ColorModifier = /** @class */function (_super) {\n  __extends(ColorModifier, _super);\n  /**\r\n   * Constructor\r\n   */\n  function ColorModifier() {\n    var _this = _super.call(this) || this;\n    _this.className = \"ColorModifier\";\n    _this.applyTheme();\n    return _this;\n  }\n  /**\r\n   * Modifies color value.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param value  Original color\r\n   * @return Modified\r\n   */\n  ColorModifier.prototype.modify = function (value) {\n    return value;\n  };\n  return ColorModifier;\n}(BaseObject);\nexport { ColorModifier };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"ColorModifier\"] = ColorModifier;","map":{"version":3,"names":["__extends","BaseObject","registry","ColorModifier","_super","_this","call","className","applyTheme","prototype","modify","value","registeredClasses"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/ColorModifier.js"],"sourcesContent":["import { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../../Base\";\r\nimport { registry } from \"../../Registry\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A base class for color modifiers.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nvar ColorModifier = /** @class */ (function (_super) {\r\n    __extends(ColorModifier, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ColorModifier() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ColorModifier\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Modifies color value.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param value  Original color\r\n     * @return Modified\r\n     */\r\n    ColorModifier.prototype.modify = function (value) {\r\n        return value;\r\n    };\r\n    return ColorModifier;\r\n}(BaseObject));\r\nexport { ColorModifier };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ColorModifier\"] = ColorModifier;\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,UAAU,QAAQ,YAAY;AACvC,SAASC,QAAQ,QAAQ,gBAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,aAAa,GAAG,aAAe,UAAUC,MAAM,EAAE;EACjDJ,SAAS,CAACG,aAAa,EAAEC,MAAM,CAAC;EAChC;AACJ;AACA;EACI,SAASD,aAAaA,CAAA,EAAG;IACrB,IAAIE,KAAK,GAAGD,MAAM,CAACE,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI;IACrCD,KAAK,CAACE,SAAS,GAAG,eAAe;IACjCF,KAAK,CAACG,UAAU,CAAC,CAAC;IAClB,OAAOH,KAAK;EAChB;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIF,aAAa,CAACM,SAAS,CAACC,MAAM,GAAG,UAAUC,KAAK,EAAE;IAC9C,OAAOA,KAAK;EAChB,CAAC;EACD,OAAOR,aAAa;AACxB,CAAC,CAACF,UAAU,CAAE;AACd,SAASE,aAAa;AACtB;AACA;AACA;AACA;AACA;AACA;AACAD,QAAQ,CAACU,iBAAiB,CAAC,eAAe,CAAC,GAAGT,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}