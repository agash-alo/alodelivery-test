{"ast":null,"code":"/**\r\n * Resize button module.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Button } from \"./Button\";\nimport { Sprite } from \"../Sprite\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\nimport { registry } from \"../Registry\";\nimport * as $path from \"../rendering/Path\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Creates a draggable resize/grip button.\r\n *\r\n * @see {@link IResizeButtonEvents} for a list of available events\r\n * @see {@link IResizeButtonAdapters} for a list of available Adapters\r\n */\nvar ResizeButton = /** @class */function (_super) {\n  __extends(ResizeButton, _super);\n  /**\r\n   * Constructor\r\n   */\n  function ResizeButton() {\n    var _this =\n    // Init\n    _super.call(this) || this;\n    _this.className = \"ResizeButton\";\n    // Set defaults\n    _this.orientation = \"horizontal\";\n    _this.layout = \"absolute\";\n    _this.horizontalCenter = \"middle\";\n    _this.verticalCenter = \"middle\";\n    _this.draggable = true;\n    _this.padding(8, 8, 8, 8);\n    _this.background.cornerRadius(20, 20, 20, 20);\n    // Create an icon\n    var icon = new Sprite();\n    icon.element = _this.paper.add(\"path\");\n    var path = $path.moveTo({\n      x: -2,\n      y: -6\n    });\n    path += $path.lineTo({\n      x: -2,\n      y: 6\n    });\n    path += $path.moveTo({\n      x: 2,\n      y: -6\n    });\n    path += $path.lineTo({\n      x: 2,\n      y: 6\n    });\n    icon.path = path;\n    icon.pixelPerfect = true;\n    icon.padding(0, 4, 0, 4);\n    icon.stroke = new InterfaceColorSet().getFor(\"alternativeText\");\n    icon.strokeOpacity = 0.7;\n    //icon.align = \"center\";\n    //icon.valign = \"middle\";\n    _this.icon = icon;\n    _this.label.dispose();\n    _this.label = undefined;\n    // Apply theme\n    _this.applyTheme();\n    return _this;\n  }\n  Object.defineProperty(ResizeButton.prototype, \"orientation\", {\n    /**\r\n     * Use for setting of direction (orientation) of the resize button.\r\n     *\r\n     * Available options: \"horizontal\", \"vertical\".\r\n     *\r\n     * @param value Orientation\r\n     */\n    set: function (value) {\n      var icon = this.icon;\n      if (icon) {\n        if (value == \"horizontal\") {\n          icon.rotation = 0;\n        } else {\n          icon.rotation = -90;\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return ResizeButton;\n}(Button);\nexport { ResizeButton };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"ResizeButton\"] = ResizeButton;","map":{"version":3,"names":["__extends","Button","Sprite","InterfaceColorSet","registry","$path","ResizeButton","_super","_this","call","className","orientation","layout","horizontalCenter","verticalCenter","draggable","padding","background","cornerRadius","icon","element","paper","add","path","moveTo","x","y","lineTo","pixelPerfect","stroke","getFor","strokeOpacity","label","dispose","undefined","applyTheme","Object","defineProperty","prototype","set","value","rotation","enumerable","configurable","registeredClasses"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/core/elements/ResizeButton.js"],"sourcesContent":["/**\r\n * Resize button module.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Button } from \"./Button\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $path from \"../rendering/Path\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a draggable resize/grip button.\r\n *\r\n * @see {@link IResizeButtonEvents} for a list of available events\r\n * @see {@link IResizeButtonAdapters} for a list of available Adapters\r\n */\r\nvar ResizeButton = /** @class */ (function (_super) {\r\n    __extends(ResizeButton, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ResizeButton() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"ResizeButton\";\r\n        // Set defaults\r\n        _this.orientation = \"horizontal\";\r\n        _this.layout = \"absolute\";\r\n        _this.horizontalCenter = \"middle\";\r\n        _this.verticalCenter = \"middle\";\r\n        _this.draggable = true;\r\n        _this.padding(8, 8, 8, 8);\r\n        _this.background.cornerRadius(20, 20, 20, 20);\r\n        // Create an icon\r\n        var icon = new Sprite();\r\n        icon.element = _this.paper.add(\"path\");\r\n        var path = $path.moveTo({ x: -2, y: -6 });\r\n        path += $path.lineTo({ x: -2, y: 6 });\r\n        path += $path.moveTo({ x: 2, y: -6 });\r\n        path += $path.lineTo({ x: 2, y: 6 });\r\n        icon.path = path;\r\n        icon.pixelPerfect = true;\r\n        icon.padding(0, 4, 0, 4);\r\n        icon.stroke = new InterfaceColorSet().getFor(\"alternativeText\");\r\n        icon.strokeOpacity = 0.7;\r\n        //icon.align = \"center\";\r\n        //icon.valign = \"middle\";\r\n        _this.icon = icon;\r\n        _this.label.dispose();\r\n        _this.label = undefined;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ResizeButton.prototype, \"orientation\", {\r\n        /**\r\n         * Use for setting of direction (orientation) of the resize button.\r\n         *\r\n         * Available options: \"horizontal\", \"vertical\".\r\n         *\r\n         * @param value Orientation\r\n         */\r\n        set: function (value) {\r\n            var icon = this.icon;\r\n            if (icon) {\r\n                if (value == \"horizontal\") {\r\n                    icon.rotation = 0;\r\n                }\r\n                else {\r\n                    icon.rotation = -90;\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ResizeButton;\r\n}(Button));\r\nexport { ResizeButton };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ResizeButton\"] = ResizeButton;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,MAAM,QAAQ,WAAW;AAClC,SAASC,iBAAiB,QAAQ,oCAAoC;AACtE,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAO,KAAKC,KAAK,MAAM,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,YAAY,GAAG,aAAe,UAAUC,MAAM,EAAE;EAChDP,SAAS,CAACM,YAAY,EAAEC,MAAM,CAAC;EAC/B;AACJ;AACA;EACI,SAASD,YAAYA,CAAA,EAAG;IACpB,IAAIE,KAAK;IACT;IACAD,MAAM,CAACE,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI;IACzBD,KAAK,CAACE,SAAS,GAAG,cAAc;IAChC;IACAF,KAAK,CAACG,WAAW,GAAG,YAAY;IAChCH,KAAK,CAACI,MAAM,GAAG,UAAU;IACzBJ,KAAK,CAACK,gBAAgB,GAAG,QAAQ;IACjCL,KAAK,CAACM,cAAc,GAAG,QAAQ;IAC/BN,KAAK,CAACO,SAAS,GAAG,IAAI;IACtBP,KAAK,CAACQ,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACzBR,KAAK,CAACS,UAAU,CAACC,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAC7C;IACA,IAAIC,IAAI,GAAG,IAAIjB,MAAM,CAAC,CAAC;IACvBiB,IAAI,CAACC,OAAO,GAAGZ,KAAK,CAACa,KAAK,CAACC,GAAG,CAAC,MAAM,CAAC;IACtC,IAAIC,IAAI,GAAGlB,KAAK,CAACmB,MAAM,CAAC;MAAEC,CAAC,EAAE,CAAC,CAAC;MAAEC,CAAC,EAAE,CAAC;IAAE,CAAC,CAAC;IACzCH,IAAI,IAAIlB,KAAK,CAACsB,MAAM,CAAC;MAAEF,CAAC,EAAE,CAAC,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC,CAAC;IACrCH,IAAI,IAAIlB,KAAK,CAACmB,MAAM,CAAC;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE,CAAC;IAAE,CAAC,CAAC;IACrCH,IAAI,IAAIlB,KAAK,CAACsB,MAAM,CAAC;MAAEF,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC,CAAC;IACpCP,IAAI,CAACI,IAAI,GAAGA,IAAI;IAChBJ,IAAI,CAACS,YAAY,GAAG,IAAI;IACxBT,IAAI,CAACH,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACxBG,IAAI,CAACU,MAAM,GAAG,IAAI1B,iBAAiB,CAAC,CAAC,CAAC2B,MAAM,CAAC,iBAAiB,CAAC;IAC/DX,IAAI,CAACY,aAAa,GAAG,GAAG;IACxB;IACA;IACAvB,KAAK,CAACW,IAAI,GAAGA,IAAI;IACjBX,KAAK,CAACwB,KAAK,CAACC,OAAO,CAAC,CAAC;IACrBzB,KAAK,CAACwB,KAAK,GAAGE,SAAS;IACvB;IACA1B,KAAK,CAAC2B,UAAU,CAAC,CAAC;IAClB,OAAO3B,KAAK;EAChB;EACA4B,MAAM,CAACC,cAAc,CAAC/B,YAAY,CAACgC,SAAS,EAAE,aAAa,EAAE;IACzD;AACR;AACA;AACA;AACA;AACA;AACA;IACQC,GAAG,EAAE,SAAAA,CAAUC,KAAK,EAAE;MAClB,IAAIrB,IAAI,GAAG,IAAI,CAACA,IAAI;MACpB,IAAIA,IAAI,EAAE;QACN,IAAIqB,KAAK,IAAI,YAAY,EAAE;UACvBrB,IAAI,CAACsB,QAAQ,GAAG,CAAC;QACrB,CAAC,MACI;UACDtB,IAAI,CAACsB,QAAQ,GAAG,CAAC,EAAE;QACvB;MACJ;IACJ,CAAC;IACDC,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF,OAAOrC,YAAY;AACvB,CAAC,CAACL,MAAM,CAAE;AACV,SAASK,YAAY;AACrB;AACA;AACA;AACA;AACA;AACA;AACAF,QAAQ,CAACwC,iBAAiB,CAAC,cAAc,CAAC,GAAGtC,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}