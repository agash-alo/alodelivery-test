{"ast":null,"code":"/**\r\n * Module, defining Axis Renderer for vertical 3D axes.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { AxisRendererY } from \"../axes/AxisRendererY\";\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\nimport * as $path from \"../../core/rendering/Path\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Renderer for vertical 3D axis.\r\n *\r\n * @see {@link IAxisRendererY3DEvents} for a list of available events\r\n * @see {@link IAxisRendererY3DAdapters} for a list of available Adapters\r\n */\nvar AxisRendererY3D = /** @class */function (_super) {\n  __extends(AxisRendererY3D, _super);\n  /**\r\n   * Constructor.\r\n   *\r\n   * @param axis Related axis\r\n   */\n  function AxisRendererY3D() {\n    var _this = _super.call(this) || this;\n    /**\r\n     * A related chart.\r\n     *\r\n     * @todo Description\r\n     */\n    _this._chart = new MutableValueDisposer();\n    _this.className = \"AxisRendererY3D\";\n    _this._disposers.push(_this._chart);\n    _this.applyTheme();\n    return _this;\n  }\n  /**\r\n   * Updates and positions a grid element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param grid         Grid element\r\n   * @param position     Starting position\r\n   * @param endPosition  End position\r\n   */\n  AxisRendererY3D.prototype.updateGridElement = function (grid, position, endPosition) {\n    position = position + (endPosition - position) * grid.location;\n    var point = this.positionToPoint(position);\n    if (grid.element) {\n      var dx = this.chart.dx3D || 0;\n      var dy = this.chart.dy3D || 0;\n      var w = this.getWidth();\n      grid.path = $path.moveTo({\n        x: 0,\n        y: 0\n      }) + $path.lineTo({\n        x: dx,\n        y: dy\n      }) + $path.lineTo({\n        x: w + dx,\n        y: dy\n      });\n    }\n    this.positionItem(grid, point);\n    this.toggleVisibility(grid, position, 0, 1);\n  };\n  /**\r\n   * Updates and positions the base grid element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  AxisRendererY3D.prototype.updateBaseGridElement = function () {\n    _super.prototype.updateBaseGridElement.call(this);\n    var dx = this.chart.dx3D || 0;\n    var dy = this.chart.dy3D || 0;\n    var w = this.getWidth();\n    this.baseGrid.path = $path.moveTo({\n      x: 0,\n      y: 0\n    }) + $path.lineTo({\n      x: w,\n      y: 0\n    }) + $path.lineTo({\n      x: w + dx,\n      y: dy\n    });\n  };\n  Object.defineProperty(AxisRendererY3D.prototype, \"chart\", {\n    /**\r\n     * @ignore Exclude from docs\r\n     * @return Chart\r\n     */\n    get: function () {\n      return this._chart.get();\n    },\n    /**\r\n     * Chart, associated with the Axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param value  Chart\r\n     */\n    set: function (chart) {\n      if (chart) {\n        this._chart.set(chart, chart.events.on(\"propertychanged\", this.handle3DChanged, this, false));\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Invoked when 3D-related settings change, like depth or angle.\r\n   *\r\n   * @param event Event\r\n   */\n  AxisRendererY3D.prototype.handle3DChanged = function (event) {\n    if (event.property == \"depth\" || event.property == \"angle\") {\n      this.invalidate();\n    }\n  };\n  return AxisRendererY3D;\n}(AxisRendererY);\nexport { AxisRendererY3D };","map":{"version":3,"names":["__extends","AxisRendererY","MutableValueDisposer","$path","AxisRendererY3D","_super","_this","call","_chart","className","_disposers","push","applyTheme","prototype","updateGridElement","grid","position","endPosition","location","point","positionToPoint","element","dx","chart","dx3D","dy","dy3D","w","getWidth","path","moveTo","x","y","lineTo","positionItem","toggleVisibility","updateBaseGridElement","baseGrid","Object","defineProperty","get","set","events","on","handle3DChanged","enumerable","configurable","event","property","invalidate"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererY3D.js"],"sourcesContent":["/**\r\n * Module, defining Axis Renderer for vertical 3D axes.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AxisRendererY } from \"../axes/AxisRendererY\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Renderer for vertical 3D axis.\r\n *\r\n * @see {@link IAxisRendererY3DEvents} for a list of available events\r\n * @see {@link IAxisRendererY3DAdapters} for a list of available Adapters\r\n */\r\nvar AxisRendererY3D = /** @class */ (function (_super) {\r\n    __extends(AxisRendererY3D, _super);\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param axis Related axis\r\n     */\r\n    function AxisRendererY3D() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * A related chart.\r\n         *\r\n         * @todo Description\r\n         */\r\n        _this._chart = new MutableValueDisposer();\r\n        _this.className = \"AxisRendererY3D\";\r\n        _this._disposers.push(_this._chart);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Updates and positions a grid element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param grid         Grid element\r\n     * @param position     Starting position\r\n     * @param endPosition  End position\r\n     */\r\n    AxisRendererY3D.prototype.updateGridElement = function (grid, position, endPosition) {\r\n        position = position + (endPosition - position) * grid.location;\r\n        var point = this.positionToPoint(position);\r\n        if (grid.element) {\r\n            var dx = this.chart.dx3D || 0;\r\n            var dy = this.chart.dy3D || 0;\r\n            var w = this.getWidth();\r\n            grid.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: dx, y: dy }) + $path.lineTo({ x: w + dx, y: dy });\r\n        }\r\n        this.positionItem(grid, point);\r\n        this.toggleVisibility(grid, position, 0, 1);\r\n    };\r\n    /**\r\n     * Updates and positions the base grid element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRendererY3D.prototype.updateBaseGridElement = function () {\r\n        _super.prototype.updateBaseGridElement.call(this);\r\n        var dx = this.chart.dx3D || 0;\r\n        var dy = this.chart.dy3D || 0;\r\n        var w = this.getWidth();\r\n        this.baseGrid.path = $path.moveTo({ x: 0, y: 0 })\r\n            + $path.lineTo({ x: w, y: 0 })\r\n            + $path.lineTo({ x: w + dx, y: dy });\r\n    };\r\n    Object.defineProperty(AxisRendererY3D.prototype, \"chart\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Chart\r\n         */\r\n        get: function () {\r\n            return this._chart.get();\r\n        },\r\n        /**\r\n         * Chart, associated with the Axis.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value  Chart\r\n         */\r\n        set: function (chart) {\r\n            if (chart) {\r\n                this._chart.set(chart, chart.events.on(\"propertychanged\", this.handle3DChanged, this, false));\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Invoked when 3D-related settings change, like depth or angle.\r\n     *\r\n     * @param event Event\r\n     */\r\n    AxisRendererY3D.prototype.handle3DChanged = function (event) {\r\n        if (event.property == \"depth\" || event.property == \"angle\") {\r\n            this.invalidate();\r\n        }\r\n    };\r\n    return AxisRendererY3D;\r\n}(AxisRendererY));\r\nexport { AxisRendererY3D };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}