{"ast":null,"code":"/**\r\n * Functionality for drawing quadratic curves.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Line } from \"./Line\";\nimport { color } from \"../utils/Color\";\nimport * as $path from \"../rendering/Path\";\nimport * as $math from \"../utils/Math\";\nimport * as $type from \"../utils/Type\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Draws a waved line.\r\n *\r\n * @see {@link IQuadraticCurveEvents} for a list of available events\r\n * @see {@link IQuadraticCurveAdapters} for a list of available Adapters\r\n */\nvar QuadraticCurve = /** @class */function (_super) {\n  __extends(QuadraticCurve, _super);\n  /**\r\n   * Constructor\r\n   */\n  function QuadraticCurve() {\n    var _this = _super.call(this) || this;\n    _this.className = \"QuadraticCurve\";\n    _this.element = _this.paper.add(\"path\");\n    _this.pixelPerfect = false;\n    _this.fill = color();\n    _this.applyTheme();\n    return _this;\n  }\n  /**\r\n   * Draws the waved line.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  QuadraticCurve.prototype.draw = function () {\n    //super.draw();\n    if ($type.isNumber(this.x1 + this.x2 + this.y1 + this.y2 + this.cpx + this.cpy)) {\n      var p1 = {\n        x: this.x1,\n        y: this.y1\n      };\n      var p2 = {\n        x: this.x2,\n        y: this.y2\n      };\n      var cp = {\n        x: this.cpx,\n        y: this.cpy\n      };\n      var d = $path.moveTo(p1) + $path.quadraticCurveTo(p2, cp);\n      this.path = d;\n    }\n  };\n  Object.defineProperty(QuadraticCurve.prototype, \"cpx\", {\n    /**\r\n     * @return X\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"cpx\");\n    },\n    /**\r\n     * X coordinate of control point.\r\n     *\r\n     * @param value X\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"cpx\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(QuadraticCurve.prototype, \"cpy\", {\n    /**\r\n     * @return Y\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"cpy\");\n    },\n    /**\r\n     * Y coordinate of control point.\r\n     *\r\n     * @param value Y\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"cpy\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Converts relative position along the line (0-1) into pixel coordinates.\r\n   *\r\n   * @param position  Position (0-1)\r\n   * @return Coordinates\r\n   */\n  QuadraticCurve.prototype.positionToPoint = function (position) {\n    var p1 = {\n      x: this.x1,\n      y: this.y1\n    };\n    var cp = {\n      x: this.cpx,\n      y: this.cpy\n    };\n    var p2 = {\n      x: this.x2,\n      y: this.y2\n    };\n    var point1 = $math.getPointOnQuadraticCurve(p1, p2, cp, position);\n    var point2 = $math.getPointOnQuadraticCurve(p1, p2, cp, position + 0.001);\n    return {\n      x: point1.x,\n      y: point1.y,\n      angle: $math.getAngle(point1, point2)\n    };\n  };\n  return QuadraticCurve;\n}(Line);\nexport { QuadraticCurve };","map":{"version":3,"names":["__extends","Line","color","$path","$math","$type","QuadraticCurve","_super","_this","call","className","element","paper","add","pixelPerfect","fill","applyTheme","prototype","draw","isNumber","x1","x2","y1","y2","cpx","cpy","p1","x","y","p2","cp","d","moveTo","quadraticCurveTo","path","Object","defineProperty","get","getPropertyValue","set","value","setPropertyValue","enumerable","configurable","positionToPoint","position","point1","getPointOnQuadraticCurve","point2","angle","getAngle"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/core/elements/QuadraticCurve.js"],"sourcesContent":["/**\r\n * Functionality for drawing quadratic curves.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Line } from \"./Line\";\r\nimport { color } from \"../utils/Color\";\r\nimport * as $path from \"../rendering/Path\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $type from \"../utils/Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Draws a waved line.\r\n *\r\n * @see {@link IQuadraticCurveEvents} for a list of available events\r\n * @see {@link IQuadraticCurveAdapters} for a list of available Adapters\r\n */\r\nvar QuadraticCurve = /** @class */ (function (_super) {\r\n    __extends(QuadraticCurve, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function QuadraticCurve() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"QuadraticCurve\";\r\n        _this.element = _this.paper.add(\"path\");\r\n        _this.pixelPerfect = false;\r\n        _this.fill = color();\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the waved line.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    QuadraticCurve.prototype.draw = function () {\r\n        //super.draw();\r\n        if ($type.isNumber(this.x1 + this.x2 + this.y1 + this.y2 + this.cpx + this.cpy)) {\r\n            var p1 = { x: this.x1, y: this.y1 };\r\n            var p2 = { x: this.x2, y: this.y2 };\r\n            var cp = { x: this.cpx, y: this.cpy };\r\n            var d = $path.moveTo(p1) + $path.quadraticCurveTo(p2, cp);\r\n            this.path = d;\r\n        }\r\n    };\r\n    Object.defineProperty(QuadraticCurve.prototype, \"cpx\", {\r\n        /**\r\n         * @return X\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"cpx\");\r\n        },\r\n        /**\r\n         * X coordinate of control point.\r\n         *\r\n         * @param value X\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"cpx\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(QuadraticCurve.prototype, \"cpy\", {\r\n        /**\r\n         * @return Y\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"cpy\");\r\n        },\r\n        /**\r\n         * Y coordinate of control point.\r\n         *\r\n         * @param value Y\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"cpy\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Converts relative position along the line (0-1) into pixel coordinates.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @return Coordinates\r\n     */\r\n    QuadraticCurve.prototype.positionToPoint = function (position) {\r\n        var p1 = { x: this.x1, y: this.y1 };\r\n        var cp = { x: this.cpx, y: this.cpy };\r\n        var p2 = { x: this.x2, y: this.y2 };\r\n        var point1 = $math.getPointOnQuadraticCurve(p1, p2, cp, position);\r\n        var point2 = $math.getPointOnQuadraticCurve(p1, p2, cp, position + 0.001);\r\n        return { x: point1.x, y: point1.y, angle: $math.getAngle(point1, point2) };\r\n    };\r\n    return QuadraticCurve;\r\n}(Line));\r\nexport { QuadraticCurve };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}