{"ast":null,"code":"/**\r\n * Column series module.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { XYSeries, XYSeriesDataItem } from \"./XYSeries\";\nimport { visualProperties } from \"../../core/Sprite\";\nimport { Container } from \"../../core/Container\";\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\nimport { Dictionary } from \"../../core/utils/Dictionary\";\nimport { ValueAxis } from \"../axes/ValueAxis\";\nimport { CategoryAxis } from \"../axes/CategoryAxis\";\nimport { registry } from \"../../core/Registry\";\nimport { Column } from \"../elements/Column\";\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\nimport { percent, Percent } from \"../../core/utils/Percent\";\nimport * as $math from \"../../core/utils/Math\";\nimport * as $object from \"../../core/utils/Object\";\nimport * as $iter from \"../../core/utils/Iterator\";\nimport * as $array from \"../../core/utils/Array\";\nimport * as $type from \"../../core/utils/Type\";\nimport { Disposer } from \"../../core/utils/Disposer\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Defines a [[DataItem]] for [[ColumnSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\nvar ColumnSeriesDataItem = /** @class */function (_super) {\n  __extends(ColumnSeriesDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n  function ColumnSeriesDataItem() {\n    var _this = _super.call(this) || this;\n    _this.className = \"ColumnSeriesDataItem\";\n    _this.locations[\"dateX\"] = 0.5;\n    _this.locations[\"dateY\"] = 0.5;\n    _this.locations[\"categoryX\"] = 0.5;\n    _this.locations[\"categoryY\"] = 0.5;\n    _this.applyTheme();\n    return _this;\n  }\n  Object.defineProperty(ColumnSeriesDataItem.prototype, \"column\", {\n    /**\r\n     * @return Column\r\n     */\n    get: function () {\n      return this._column;\n    },\n    /**\r\n     * A column used to draw a column for this data item.\r\n     *\r\n     * @param column\r\n     */\n    set: function (column) {\n      this.setColumn(column);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  ColumnSeriesDataItem.prototype.setColumn = function (column) {\n    var _this = this;\n    if (this._column && column != this._column) {\n      $array.remove(this.sprites, this._column);\n    }\n    this._column = column;\n    if (column) {\n      var prevDataItem = column.dataItem;\n      if (prevDataItem && prevDataItem != this) {\n        prevDataItem.column = undefined;\n      }\n      this.addSprite(column);\n      this._disposers.push(new Disposer(function () {\n        // TODO investigate why component is undefined\n        // https://codepen.io/team/amcharts/pen/dac4be245d658233a6d7e5597df2208b?editors=0010\n        if (_this.component) {\n          _this.component.columns.removeValue(column);\n        }\n      }));\n    }\n  };\n  Object.defineProperty(ColumnSeriesDataItem.prototype, \"width\", {\n    get: function () {\n      var width = this.properties.width;\n      if (this._adapterO) {\n        width = this._adapterO.apply(\"width\", width);\n      }\n      return width;\n    },\n    set: function (value) {\n      if (this.properties.width != value) {\n        this.properties.width = value;\n        if (this.component) {\n          this.component.validateDataElement(this);\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ColumnSeriesDataItem.prototype, \"height\", {\n    get: function () {\n      var height = this.properties.height;\n      if (this._adapterO) {\n        height = this._adapterO.apply(\"height\", height);\n      }\n      return height;\n    },\n    set: function (value) {\n      if (this.properties.height != value) {\n        this.properties.height = value;\n        if (this.component) {\n          this.component.validateDataElement(this);\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ColumnSeriesDataItem.prototype, \"rangesColumns\", {\n    /**\r\n     * A dictionary storing axes ranges columns by axis uid\r\n     */\n    get: function () {\n      if (!this._rangesColumns) {\n        this._rangesColumns = new Dictionary();\n      }\n      return this._rangesColumns;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return ColumnSeriesDataItem;\n}(XYSeriesDataItem);\nexport { ColumnSeriesDataItem };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Defines [[Series]] for a column graph.\r\n *\r\n * @see {@link IColumnSeriesEvents} for a list of available Events\r\n * @see {@link IColumnSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\nvar ColumnSeries = /** @class */function (_super) {\n  __extends(ColumnSeries, _super);\n  /**\r\n   * Constructor\r\n   */\n  function ColumnSeries() {\n    var _this = _super.call(this) || this;\n    /**\r\n     * Start location within cell for columns.\r\n     */\n    _this._startLocation = 0;\n    /**\r\n     * End location within cell for columns.\r\n     */\n    _this._endLocation = 1;\n    _this.className = \"ColumnSeries\";\n    _this.width = percent(100);\n    _this.height = percent(100);\n    _this.strokeOpacity = 0;\n    _this.fillOpacity = 1;\n    _this.clustered = true;\n    var columnsContainer = _this.mainContainer.createChild(Container);\n    columnsContainer.shouldClone = false;\n    columnsContainer.isMeasured = false;\n    columnsContainer.layout = \"none\";\n    _this._columnsContainer = columnsContainer;\n    _this.columns.template.pixelPerfect = false;\n    _this.tooltipColorSource = _this.columns.template;\n    _this.applyTheme();\n    return _this;\n  }\n  Object.defineProperty(ColumnSeries.prototype, \"columnsContainer\", {\n    /**\r\n     * A container that columns are created in.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\n    get: function () {\n      return this._columnsContainer;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Sets defaults that instantiate some objects that rely on parent, so they\r\n   * cannot be set in constructor.\r\n   */\n  ColumnSeries.prototype.applyInternalDefaults = function () {\n    _super.prototype.applyInternalDefaults.call(this);\n    if (!$type.hasValue(this.readerTitle)) {\n      this.readerTitle = this.language.translate(\"Column Series\");\n    }\n  };\n  /**\r\n   * Returns a new/empty DataItem of the type appropriate for this object.\r\n   *\r\n   * @see {@link DataItem}\r\n   * @return Data Item\r\n   */\n  ColumnSeries.prototype.createDataItem = function () {\n    return new ColumnSeriesDataItem();\n  };\n  /**\r\n   * (Re)validates the whole series, effectively causing it to redraw.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  ColumnSeries.prototype.validate = function () {\n    //@todo Check if we can do better than use `instanceof`\n    // find start/end locations based on clustered/stacked settings\n    // go through chart series instead of base axis series, because axis series doesn't maintain order\n    var _this = this;\n    this.group.node.removeAttribute(\"fill\");\n    if (this.chart && this.xAxis && this.yAxis) {\n      var baseAxisSeries = this.chart.series;\n      var clusterCount_1 = 0;\n      var index_1 = 0;\n      var sortedByAxis_1 = [];\n      $iter.each(baseAxisSeries.iterator(), function (series) {\n        if (series instanceof ColumnSeries) {\n          if (_this.baseAxis == series.baseAxis) {\n            var index_2;\n            if (_this.baseAxis == _this.xAxis) {\n              index_2 = _this.chart.yAxes.indexOf(series.yAxis);\n            } else {\n              index_2 = _this.chart.xAxes.indexOf(series.xAxis);\n            }\n            sortedByAxis_1.push({\n              series: series,\n              axis: index_2\n            });\n          }\n        }\n      });\n      sortedByAxis_1.sort(function (a, b) {\n        return a.axis - b.axis;\n      });\n      var prevAxisIndex_1;\n      $array.each(sortedByAxis_1, function (sortedItem) {\n        var series = sortedItem.series;\n        if (series instanceof ColumnSeries) {\n          if (!series.stacked && series.clustered || prevAxisIndex_1 != sortedItem.axis && series.clustered) {\n            clusterCount_1++;\n          }\n          if (series == _this) {\n            index_1 = clusterCount_1 - 1;\n          }\n        }\n        prevAxisIndex_1 = sortedItem.axis;\n      });\n      if (!this.clustered) {\n        index_1 = 0;\n        clusterCount_1 = 1;\n      }\n      var renderer = this.baseAxis.renderer;\n      var cellStartLocation = renderer.cellStartLocation;\n      var cellEndLocation = renderer.cellEndLocation;\n      this._startLocation = cellStartLocation + index_1 / clusterCount_1 * (cellEndLocation - cellStartLocation);\n      this._endLocation = cellStartLocation + (index_1 + 1) / clusterCount_1 * (cellEndLocation - cellStartLocation);\n      var xAxis = this.xAxis;\n      var yAxis = this.yAxis;\n      if (xAxis instanceof CategoryAxis && yAxis instanceof ValueAxis) {\n        if (xAxis.sortBySeries == this) {\n          this.sortCategoryAxis(xAxis, \"valueY\");\n        }\n      }\n      if (yAxis instanceof CategoryAxis && xAxis instanceof ValueAxis) {\n        if (yAxis.sortBySeries == this) {\n          this.sortCategoryAxis(yAxis, \"valueX\");\n        }\n      }\n    }\n    _super.prototype.validate.call(this);\n    for (var i = 0; i < this.startIndex; i++) {\n      var dataItem = this.dataItems.getIndex(i);\n      this.disableUnusedColumns(dataItem);\n    }\n    for (var i = this.dataItems.length - 1; i > this.endIndex; i--) {\n      var dataItem = this.dataItems.getIndex(i);\n      this.disableUnusedColumns(dataItem);\n    }\n    this._propertiesChanged = false;\n  };\n  ColumnSeries.prototype.sortCategoryAxis = function (axis, key) {\n    var _this = this;\n    this.dataItems.values.sort(function (x, y) {\n      return y.values[key].workingValue - x.values[key].workingValue;\n    });\n    var i = 0;\n    this.dataItems.each(function (dataItem) {\n      dataItem._index = i;\n      i++;\n    });\n    axis.dataItems.each(function (dataItem) {\n      var axis = dataItem.component;\n      var currentPosition = axis.categoryToPosition(dataItem.category) - dataItem.deltaPosition;\n      var seriesDataItem = axis.getSeriesDataItemByCategory(dataItem.category, _this);\n      if (seriesDataItem) {\n        var index = _this.dataItems.indexOf(seriesDataItem);\n        dataItem._index = index;\n        var deltaPosition = $math.round((index + 0.5) / _this.dataItems.length - currentPosition, 3);\n        if (dataItem.deltaAnimation && !dataItem.deltaAnimation.isDisposed() && dataItem.deltaAnimation.animationOptions[0].to == deltaPosition) {\n          // void\n        } else if (deltaPosition != $math.round(dataItem.deltaPosition, 3)) {\n          if (dataItem.deltaAnimation) {\n            dataItem.deltaAnimation.stop();\n          }\n          dataItem.deltaAnimation = dataItem.animate({\n            property: \"deltaPosition\",\n            from: -deltaPosition,\n            to: 0\n          }, axis.interpolationDuration, axis.interpolationEasing);\n          _this._disposers.push(dataItem.deltaAnimation);\n        }\n      }\n    });\n    axis.dataItems.values.sort(function (x, y) {\n      return x.index - y.index;\n    });\n  };\n  /**\r\n   * Validates data item's element, effectively redrawing it.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItem  Data item\r\n   */\n  ColumnSeries.prototype.validateDataElement = function (dataItem) {\n    // important oder here, first real, then super. we need this to know size\n    if (this.chart && this.xAxis && this.yAxis) {\n      this.validateDataElementReal(dataItem);\n      _super.prototype.validateDataElement.call(this, dataItem);\n    }\n  };\n  /**\r\n   * Returns relative start location for the data item.\r\n   *\r\n   * @param dataItem  Data item\r\n   * @return Location (0-1)\r\n   */\n  ColumnSeries.prototype.getStartLocation = function (dataItem) {\n    var startLocation = this._startLocation;\n    if (this.baseAxis == this.xAxis) {\n      startLocation += dataItem.locations[this.xOpenField] - 0.5;\n    } else {\n      startLocation += dataItem.locations[this.yOpenField] - 0.5;\n    }\n    return startLocation;\n  };\n  /**\r\n   * [handleDataItemWorkingValueChange description]\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  /*\r\n  public handleDataItemWorkingValueChange(dataItem?: this[\"_dataItem\"], name?: string): void {\r\n     if (this.simplifiedProcessing) {\r\n         this.validateDataElement(dataItem);\r\n     }\r\n     else {\r\n         super.handleDataItemWorkingValueChange(dataItem, name);\r\n     }\r\n  }*/\n  /**\r\n   * Returns relative end location for the data item.\r\n   *\r\n   * @param dataItem  Data item\r\n   * @return Location (0-1)\r\n   */\n  ColumnSeries.prototype.getEndLocation = function (dataItem) {\n    var endLocation = this._endLocation;\n    if (this.baseAxis == this.xAxis) {\n      endLocation += dataItem.locations[this.xField] - 0.5;\n    } else {\n      endLocation += dataItem.locations[this.yField] - 0.5;\n    }\n    return endLocation;\n  };\n  /**\r\n   * Validates data item's elements.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItem  Data item\r\n   */\n  ColumnSeries.prototype.validateDataElementReal = function (dataItem) {\n    var _this = this;\n    //\tif (dataItem.hasValue([this.xField, this.yField])) { // todo: this doesn't work with categories, think of a better way\n    var l;\n    var r;\n    var t;\n    var b;\n    var startLocation = this.getStartLocation(dataItem);\n    var endLocation = this.getEndLocation(dataItem);\n    var xField = this.xField;\n    var xOpenField = this.xOpenField;\n    var yField = this.yField;\n    var yOpenField = this.yOpenField;\n    var template = this.columns.template;\n    var percentWidth = template.percentWidth;\n    var percentHeight = template.percentHeight;\n    var pixelWidth = template.pixelWidth;\n    var pixelHeight = template.pixelHeight;\n    var maxWidth = template.maxWidth;\n    var maxHeight = template.maxHeight;\n    var paddingLeft = template.pixelPaddingLeft;\n    var paddingRight = template.pixelPaddingRight;\n    var paddingTop = template.pixelPaddingTop;\n    var paddingBottom = template.pixelPaddingBottom;\n    var outOfBounds = false;\n    var diw = dataItem.width;\n    if ($type.hasValue(diw)) {\n      if ($type.isNumber(diw)) {\n        pixelWidth = diw;\n      }\n      if (diw instanceof Percent) {\n        percentWidth = diw.value * 100;\n      }\n    }\n    var dih = dataItem.height;\n    if ($type.hasValue(dih)) {\n      if ($type.isNumber(dih)) {\n        pixelHeight = dih;\n      }\n      if (dih instanceof Percent) {\n        percentHeight = dih.value * 100;\n      }\n    }\n    // two category axes\n    if (this.xAxis instanceof CategoryAxis && this.yAxis instanceof CategoryAxis) {\n      if (!dataItem.hasValue(this._xValueFields) || !dataItem.hasValue(this._yValueFields)) {\n        return;\n      }\n      startLocation = 0;\n      endLocation = 1;\n      if (!$type.isNaN(percentWidth)) {\n        var offset = $math.round((endLocation - startLocation) * (1 - percentWidth / 100) / 2, 5);\n        startLocation += offset;\n        endLocation -= offset;\n      }\n      l = this.xAxis.getX(dataItem, xOpenField, startLocation);\n      r = this.xAxis.getX(dataItem, xField, endLocation);\n      // in case width is set in pixels\n      if ($type.isNaN(percentWidth)) {\n        var offset = (r - l - pixelWidth) / 2;\n        l += offset;\n        r -= offset;\n      }\n      // in case max width is set in pixels\n      if (!$type.isNaN(maxWidth) && maxWidth < Math.abs(r - l)) {\n        var offset = (r - l - maxWidth) / 2;\n        l += offset;\n        r -= offset;\n      }\n      startLocation = 0;\n      endLocation = 1;\n      if (!$type.isNaN(percentHeight)) {\n        var offset = $math.round((1 - percentHeight / 100) / 2, 5);\n        startLocation += offset;\n        endLocation -= offset;\n      }\n      t = this.yAxis.getY(dataItem, yOpenField, startLocation);\n      b = this.yAxis.getY(dataItem, yField, endLocation);\n      // in case width is set in pixels\n      if ($type.isNaN(percentHeight)) {\n        var offset = (b - t - pixelHeight) / 2;\n        b += offset;\n        t -= offset;\n      }\n      // in case max width is set in pixels\n      if (!$type.isNaN(maxHeight) && maxHeight < Math.abs(b - t)) {\n        var offset = (b - t - maxHeight) / 2;\n        b += offset;\n        t -= offset;\n      }\n      r = this.fixHorizontalCoordinate(r);\n      l = this.fixHorizontalCoordinate(l);\n      t = this.fixVerticalCoordinate(t);\n      b = this.fixVerticalCoordinate(b);\n    } else if (this.baseAxis == this.xAxis) {\n      if (!dataItem.hasValue(this._yValueFields)) {\n        return;\n      }\n      // in case width is set in percent\n      if (!$type.isNaN(percentWidth)) {\n        var offset = $math.round((endLocation - startLocation) * (1 - percentWidth / 100) / 2, 5);\n        startLocation += offset;\n        endLocation -= offset;\n      }\n      l = this.xAxis.getX(dataItem, xOpenField, startLocation);\n      r = this.xAxis.getX(dataItem, xField, endLocation);\n      // in case width is set in pixels\n      if ($type.isNaN(percentWidth)) {\n        var offset = (r - l - pixelWidth) / 2;\n        l += offset;\n        r -= offset;\n      }\n      // in case width is set in pixels\n      if (!$type.isNaN(maxWidth) && maxWidth < Math.abs(r - l)) {\n        var offset = (r - l - maxWidth) / 2;\n        l += offset;\n        r -= offset;\n      }\n      var bottomLocation = dataItem.locations[yOpenField];\n      var topLocation = dataItem.locations[yField];\n      // otherwise gantt chart will start items in the middle of a cell\n      if (this.yAxis instanceof ValueAxis) {\n        if (this.dataFields[this.yField] != this.dataFields[this.yOpenField]) {\n          bottomLocation = 0;\n          topLocation = 0;\n        }\n      }\n      b = this.yAxis.getY(dataItem, yOpenField, bottomLocation);\n      t = this.yAxis.getY(dataItem, yField, topLocation);\n      // used to save location for bullets, but it's not a good approach\n      // dataItem.locations[xField] = startLocation + (endLocation - startLocation) / 2;\n      var axisLenght = Math.ceil(this.yAxis.axisLength);\n      if (t < 0 && b < 0 || t > axisLenght && b > axisLenght) {\n        outOfBounds = true;\n      }\n      t = this.fixVerticalCoordinate(t);\n      b = this.fixVerticalCoordinate(b);\n      if (Math.abs(r - l) - paddingLeft - paddingRight == 0) {\n        outOfBounds = true;\n      }\n    }\n    // horizontal bars\n    else {\n      if (!dataItem.hasValue(this._xValueFields)) {\n        return;\n      }\n      if (!$type.isNaN(percentHeight)) {\n        var offset = $math.round((endLocation - startLocation) * (1 - percentHeight / 100) / 2, 5);\n        startLocation += offset;\n        endLocation -= offset;\n      }\n      t = this.yAxis.getY(dataItem, yOpenField, startLocation);\n      b = this.yAxis.getY(dataItem, yField, endLocation);\n      // in case height is set in pixels\n      if ($type.isNaN(percentHeight)) {\n        var offset = (b - t - pixelHeight) / 2;\n        b -= offset;\n        t += offset;\n      }\n      // in case height is set in pixels\n      if (!$type.isNaN(maxHeight) && maxHeight < Math.abs(b - t)) {\n        var offset = (b - t - maxHeight) / 2;\n        b -= offset;\n        t += offset;\n      }\n      var rightLocation = dataItem.locations[xField];\n      var leftLocation = dataItem.locations[xOpenField];\n      // otherwise gantt chart will start items in the middle of a cell\n      if (this.xAxis instanceof ValueAxis) {\n        if (this.dataFields[this.xField] != this.dataFields[this.xOpenField]) {\n          rightLocation = 0;\n          leftLocation = 0;\n        }\n      }\n      r = this.xAxis.getX(dataItem, xField, rightLocation);\n      l = this.xAxis.getX(dataItem, xOpenField, leftLocation);\n      // used to save location for bullets, but it's not a good approach\n      // dataItem.locations[yField] = startLocation + (endLocation - startLocation) / 2;\n      var axisLenght = Math.ceil(this.xAxis.axisLength);\n      if (r < 0 && l < 0 || r > axisLenght && l > axisLenght) {\n        outOfBounds = true;\n      }\n      r = this.fixHorizontalCoordinate(r);\n      l = this.fixHorizontalCoordinate(l);\n      if (Math.abs(t - b) - paddingTop - paddingBottom == 0) {\n        outOfBounds = true;\n      }\n    }\n    var w = Math.abs(r - l);\n    var h = Math.abs(b - t);\n    var x = Math.min(l, r);\n    var y = Math.min(t, b);\n    if (!outOfBounds) {\n      var column_1;\n      if (!dataItem.column) {\n        column_1 = this.columns.create();\n        //$object.forceCopyProperties(this.columns.template, column, visualProperties);\n        $object.copyProperties(this, column_1, visualProperties); // need this because 3d columns are not in the same container\n        $object.copyProperties(this.columns.template, column_1, visualProperties); // second time, no force, so that columns.template would override series properties\n        dataItem.addSprite(column_1);\n        dataItem.column = column_1;\n        column_1.paper = this.paper; // sometimes pattern is not drawn if is set with adapter without this.\n        // accessibility\n        if (this.itemsFocusable()) {\n          if (!$type.hasValue(this.role)) {\n            this.role = \"menu\";\n          }\n          if (!$type.hasValue(column_1.role)) {\n            column_1.role = \"menuitem\";\n          }\n          column_1.focusable = true;\n        } else {\n          if (!$type.hasValue(this.role)) {\n            this.role = \"list\";\n          }\n          if (!$type.hasValue(column_1.role)) {\n            column_1.role = \"listitem\";\n          }\n          column_1.focusable = false;\n        }\n        if (column_1.focusable) {\n          column_1.events.on(\"focus\", function (ev) {\n            column_1.readerTitle = _this.populateString(_this.itemReaderText, dataItem);\n          }, undefined, false);\n          column_1.events.on(\"blur\", function (ev) {\n            column_1.readerTitle = \"\";\n          }, undefined, false);\n        }\n        if (column_1.hoverable) {\n          column_1.events.on(\"over\", function (ev) {\n            column_1.readerTitle = _this.populateString(_this.itemReaderText, dataItem);\n          }, undefined, false);\n          column_1.events.on(\"out\", function (ev) {\n            column_1.readerTitle = \"\";\n          }, undefined, false);\n        }\n        column_1.parent = this.columnsContainer;\n        column_1.virtualParent = this;\n      } else {\n        column_1 = dataItem.column;\n        if (this._propertiesChanged) {\n          $object.copyProperties(this, column_1, visualProperties);\n          $object.copyProperties(this.columns.template, column_1, visualProperties);\n          $array.each(visualProperties, function (property) {\n            column_1[property] = column_1[property];\n          });\n        }\n      }\n      column_1.width = w;\n      column_1.height = h;\n      column_1.x = x;\n      column_1.y = y;\n      column_1.realX = l;\n      column_1.realY = t;\n      column_1.realWidth = r - l;\n      column_1.realHeight = b - t;\n      this.setColumnStates(column_1);\n      if (column_1.invalid) {\n        column_1.validate(); // validate as if it was used previously, it will flicker with previous dimensions\n      }\n\n      column_1.__disabled = false;\n      //column.returnAfterTemp();\n      $iter.each(this.axisRanges.iterator(), function (axisRange) {\n        var rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);\n        if (!rangeColumn) {\n          rangeColumn = _this.columns.create();\n          //$object.forceCopyProperties(this.columns.template, rangeColumn, visualProperties);\n          $object.copyProperties(axisRange.contents, rangeColumn, visualProperties); // need this because 3d columns are not in the same container\n          dataItem.addSprite(rangeColumn);\n          dataItem.rangesColumns.setKey(axisRange.uid, rangeColumn);\n          rangeColumn.paper = _this.paper; // sometimes pattern is not drawn if is set with adapter without this.\n        }\n\n        rangeColumn.parent = axisRange.contents;\n        rangeColumn.width = w;\n        rangeColumn.height = h;\n        rangeColumn.x = x;\n        rangeColumn.y = y;\n        _this.setColumnStates(rangeColumn);\n        if (rangeColumn.invalid) {\n          rangeColumn.validate(); // validate as if it was used previously, it will flicker with previous dimensions\n        }\n\n        rangeColumn.__disabled = false;\n        //rangeColumn.returnAfterTemp();\n      });\n    } else {\n      this.disableUnusedColumns(dataItem);\n    }\n    dataItem.itemWidth = w;\n    dataItem.itemHeight = h;\n  };\n  /**\r\n   * @ignore\r\n   */\n  ColumnSeries.prototype.disableUnusedColumns = function (dataItem) {\n    if (dataItem) {\n      if (dataItem.column) {\n        // otherwise might flicker when enabling\n        dataItem.column.width = 0;\n        dataItem.column.height = 0;\n        dataItem.column.__disabled = true;\n      }\n      $iter.each(this.axisRanges.iterator(), function (axisRange) {\n        var rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);\n        if (rangeColumn) {\n          // otherwise might flicker when enabling\n          rangeColumn.width = 0;\n          rangeColumn.height = 0;\n          rangeColumn.__disabled = true;\n        }\n      });\n    }\n  };\n  /**\r\n   * Apply different state/coloring to columns based on the change value.\r\n   *\r\n   * @param sprite  Sprite to apply state to\r\n   * @todo Do not apply accessibility to wicks of the candlesticks\r\n   */\n  ColumnSeries.prototype.setColumnStates = function (sprite) {\n    if (this._dropFromOpenState || this._dropFromPreviousState || this._riseFromOpenState || this._riseFromPreviousState) {\n      var dataItem = sprite.dataItem;\n      if (this.xAxis instanceof ValueAxis || this.yAxis instanceof ValueAxis) {\n        var open_1;\n        var value = void 0;\n        var change = void 0;\n        if (this.baseAxis == this.yAxis) {\n          if (this.xOpenField && this.xField && this.xAxis instanceof ValueAxis) {\n            open_1 = dataItem.getValue(this.xOpenField);\n            value = dataItem.getValue(this.xField);\n          }\n          change = dataItem.getValue(this.xAxis.axisFieldName + \"X\", \"previousChange\");\n        } else {\n          if (this.yOpenField && this.yField && this.yAxis instanceof ValueAxis) {\n            open_1 = dataItem.getValue(this.yOpenField);\n            value = dataItem.getValue(this.yField);\n          }\n          change = dataItem.getValue(this.yAxis.axisFieldName + \"Y\", \"previousChange\");\n        }\n        if (value < open_1) {\n          dataItem.droppedFromOpen = true;\n          sprite.defaultState.copyFrom(this._dropFromOpenState);\n          sprite.setState(this._dropFromOpenState, 0);\n        } else {\n          dataItem.droppedFromOpen = false;\n          sprite.defaultState.copyFrom(this._riseFromOpenState);\n          sprite.setState(this._riseFromOpenState, 0);\n        }\n        if (change < 0) {\n          dataItem.droppedFromPrevious = true;\n          sprite.defaultState.copyFrom(this._dropFromPreviousState);\n          sprite.setState(this._dropFromPreviousState, 0);\n        } else {\n          dataItem.droppedFromPrevious = false;\n          sprite.defaultState.copyFrom(this._riseFromPreviousState);\n          sprite.setState(this._riseFromPreviousState, 0);\n        }\n      }\n    }\n  };\n  Object.defineProperty(ColumnSeries.prototype, \"columns\", {\n    /**\r\n     * A list of column elements in the series.\r\n     *\r\n     * @return Columns\r\n     */\n    get: function () {\n      if (!this._columns) {\n        this._columns = new ListTemplate(this.createColumnTemplate());\n        this._disposers.push(new ListDisposer(this._columns));\n        this._disposers.push(this._columns.template);\n      }\n      return this._columns;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Creates and returns a column element to use as a template.\r\n   *\r\n   * @return Column template\r\n   */\n  ColumnSeries.prototype.createColumnTemplate = function () {\n    return new Column();\n  };\n  Object.defineProperty(ColumnSeries.prototype, \"clustered\", {\n    /**\r\n     * @return Clustered?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"clustered\");\n    },\n    /**\r\n     * Cluster this series columns?\r\n     *\r\n     * Setting to `false` will make columns overlap with other series.\r\n     *\r\n     * @default true\r\n     * @param value  Clustered?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"clustered\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ColumnSeries.prototype, \"dropFromOpenState\", {\n    /**\r\n     * @return State\r\n     */\n    get: function () {\n      if (!this._dropFromOpenState) {\n        this._dropFromOpenState = this.states.create(\"dropFromOpenState\");\n      }\n      return this._dropFromOpenState;\n    },\n    /**\r\n     * A state to apply to a column when close value is lower than open value.\r\n     *\r\n     * Can be used to differentiate appearance based on value relations.\r\n     *\r\n     * NOTE: this will work only if at least one axis is [[ValueAxis]].\r\n     *\r\n     * @readonly You can modify state object, but can't overwrite it\r\n     * @param  value  State\r\n     */\n    set: function (value) {\n      this._dropFromOpenState = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ColumnSeries.prototype, \"dropFromPreviousState\", {\n    /**\r\n     * @return State\r\n     */\n    get: function () {\n      if (!this._dropFromPreviousState) {\n        this._dropFromPreviousState = this.states.create(\"dropFromPreviousState\");\n      }\n      return this._dropFromPreviousState;\n    },\n    /**\r\n     * A state to apply to a column when its value is lower value of a previous\r\n     * column.\r\n     *\r\n     * Can be used to differentiate appearance based on value relations.\r\n     *\r\n     * @readonly You can modify state object, but can't overwrite it\r\n     * @param  value  State\r\n     */\n    set: function (value) {\n      this._dropFromPreviousState = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ColumnSeries.prototype, \"riseFromOpenState\", {\n    /**\r\n     * @return State\r\n     */\n    get: function () {\n      if (!this._riseFromOpenState) {\n        this._riseFromOpenState = this.states.create(\"riseFromOpenState\");\n      }\n      return this._riseFromOpenState;\n    },\n    /**\r\n     * A state to apply to a column when close value is same or higher than open\r\n     * value.\r\n     *\r\n     * Can be used to differentiate appearance based on value relations.\r\n     *\r\n     * NOTE: this will work only if at least one axis is [[ValueAxis]].\r\n     *\r\n     * @readonly You can modify state object, but can't overwrite it\r\n     * @param  value  State\r\n     */\n    set: function (value) {\n      this._riseFromOpenState = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ColumnSeries.prototype, \"riseFromPreviousState\", {\n    /**\r\n     * @return State\r\n     */\n    get: function () {\n      if (!this._riseFromPreviousState) {\n        this._riseFromPreviousState = this.states.create(\"riseFromPreviousState\");\n      }\n      return this._riseFromPreviousState;\n    },\n    /**\r\n     * A state to apply to a column when its value is same or higher than value\r\n     * of a previous column.\r\n     *\r\n     * Can be used to differentiate appearance based on value relations.\r\n     *\r\n     * @readonly You can modify state object, but can't overwrite it\r\n     * @param  value  State\r\n     */\n    set: function (value) {\n      this._riseFromPreviousState = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Updates value of the related legend item.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItem  Data item\r\n   */\n  ColumnSeries.prototype.updateLegendValue = function (dataItem, notRange) {\n    var _this = this;\n    _super.prototype.updateLegendValue.call(this, dataItem, notRange);\n    if (this.legendDataItem) {\n      var marker = this.legendDataItem.marker;\n      var fromOpenState_1;\n      var fromPreviousState_1;\n      if (dataItem) {\n        if (dataItem.droppedFromOpen) {\n          fromOpenState_1 = this._dropFromOpenState;\n        } else {\n          fromOpenState_1 = this._riseFromOpenState;\n        }\n        if (dataItem.droppedFromPrevious) {\n          fromPreviousState_1 = this._dropFromPreviousState;\n        } else {\n          fromPreviousState_1 = this._riseFromPreviousState;\n        }\n      }\n      $iter.each(marker.children.iterator(), function (child) {\n        if (dataItem) {\n          child.setState(fromPreviousState_1);\n          child.setState(fromOpenState_1);\n        } else {\n          // todo: think what to do here, maybe apply above states based on totals?\n          child.setState(_this._riseFromPreviousState);\n          child.setState(_this._riseFromOpenState);\n        }\n      });\n    }\n  };\n  /**\r\n   * Creates elements in related legend container, that mimics the look of this\r\n   * Series.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param marker  Legend item container\r\n   */\n  ColumnSeries.prototype.createLegendMarker = function (marker) {\n    var w = marker.pixelWidth;\n    var h = marker.pixelHeight;\n    marker.removeChildren();\n    var column = marker.createChild(RoundedRectangle);\n    column.shouldClone = false;\n    $object.copyProperties(this, column, visualProperties);\n    column.copyFrom(this.columns.template);\n    column.padding(0, 0, 0, 0); // if columns will have padding (which is often), legend marker will be very narrow\n    column.width = w;\n    column.height = h;\n    var legendDataItem = marker.dataItem;\n    legendDataItem.color = this.fill;\n    legendDataItem.colorOrig = this.fill;\n  };\n  /**\r\n   * Copies all properties from another instance of [[ColumnSeries]].\r\n   *\r\n   * @param source  Source series\r\n   */\n  ColumnSeries.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n    this.columns.template.copyFrom(source.columns.template);\n  };\n  /**\r\n  * returns bullet x location\r\n  * @ignore\r\n  */\n  ColumnSeries.prototype.getBulletLocationX = function (bullet, field) {\n    if (this.baseAxis == this.xAxis) {\n      var bulletLocationX = bullet.locationX;\n      if (!$type.isNumber(bulletLocationX)) {\n        bulletLocationX = 0.5;\n      }\n      var endLocation = this.getEndLocation(bullet.dataItem);\n      var startLocation = this.getStartLocation(bullet.dataItem);\n      return endLocation - (endLocation - startLocation) * bulletLocationX;\n    } else {\n      return _super.prototype.getBulletLocationX.call(this, bullet, field);\n    }\n  };\n  /**\r\n  * returns bullet y location\r\n  * @ignore\r\n  */\n  ColumnSeries.prototype.getBulletLocationY = function (bullet, field) {\n    if (this.baseAxis == this.yAxis) {\n      var bulletLocationY = bullet.locationY;\n      if (!$type.isNumber(bulletLocationY)) {\n        bulletLocationY = 0.5;\n      }\n      var endLocation = this.getEndLocation(bullet.dataItem);\n      var startLocation = this.getStartLocation(bullet.dataItem);\n      return endLocation - (endLocation - startLocation) * bulletLocationY;\n    } else {\n      return _super.prototype.getBulletLocationY.call(this, bullet, field);\n    }\n  };\n  ColumnSeries.prototype.getAdjustedXLocation = function (dataItem, field, bulletLocationX) {\n    //if (this.baseAxis == this.xAxis) {\n    if (!$type.isNumber(bulletLocationX)) {\n      if (dataItem) {\n        bulletLocationX = dataItem.locations[field];\n      } else {\n        bulletLocationX = 0.5;\n      }\n    }\n    return this._endLocation - (this._endLocation - this._startLocation) * (1 - bulletLocationX);\n    //}\n    //else {\n    //\treturn super.getAdjustedXLocation(dataItem, field);\n    //}\n  };\n\n  ColumnSeries.prototype.getAdjustedYLocation = function (dataItem, field, bulletLocationY) {\n    //if (this.baseAxis == this.yAxis) {\n    if (!$type.isNumber(bulletLocationY)) {\n      if (dataItem) {\n        bulletLocationY = dataItem.locations[field];\n      } else {\n        bulletLocationY = 0.5;\n      }\n    }\n    return this._endLocation - (this._endLocation - this._startLocation) * bulletLocationY;\n    //}\n    //else {\n    //\treturn super.getAdjustedYLocation(dataItem, field);\n    //}\n  };\n  /**\r\n   * @ignore Exclude from docs\r\n   */\n  ColumnSeries.prototype.fixVerticalCoordinate = function (coordinate) {\n    var paddingBottom = this.columns.template.pixelPaddingBottom;\n    var paddingTop = this.columns.template.pixelPaddingTop;\n    var minY = -paddingTop;\n    var maxY = this.yAxis.axisLength + paddingBottom;\n    return $math.fitToRange(coordinate, minY, maxY);\n  };\n  /**\r\n   * @ignore Exclude from docs\r\n   */\n  ColumnSeries.prototype.fixHorizontalCoordinate = function (coordinate) {\n    var paddingLeft = this.columns.template.pixelPaddingLeft;\n    var paddingRight = this.columns.template.pixelPaddingRight;\n    var minX = -paddingLeft;\n    var maxX = this.xAxis.axisLength + paddingRight;\n    return $math.fitToRange(coordinate, minX, maxX);\n  };\n  /**\r\n   * @ignore\r\n   */\n  ColumnSeries.prototype.disposeData = function () {\n    _super.prototype.disposeData.call(this);\n    this.columns.clear();\n  };\n  return ColumnSeries;\n}(XYSeries);\nexport { ColumnSeries };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"ColumnSeries\"] = ColumnSeries;\nregistry.registeredClasses[\"ColumnSeriesDataItem\"] = ColumnSeriesDataItem;","map":{"version":3,"names":["__extends","XYSeries","XYSeriesDataItem","visualProperties","Container","ListTemplate","ListDisposer","Dictionary","ValueAxis","CategoryAxis","registry","Column","RoundedRectangle","percent","Percent","$math","$object","$iter","$array","$type","Disposer","ColumnSeriesDataItem","_super","_this","call","className","locations","applyTheme","Object","defineProperty","prototype","get","_column","set","column","setColumn","enumerable","configurable","remove","sprites","prevDataItem","dataItem","undefined","addSprite","_disposers","push","component","columns","removeValue","width","properties","_adapterO","apply","value","validateDataElement","height","_rangesColumns","ColumnSeries","_startLocation","_endLocation","strokeOpacity","fillOpacity","clustered","columnsContainer","mainContainer","createChild","shouldClone","isMeasured","layout","_columnsContainer","template","pixelPerfect","tooltipColorSource","applyInternalDefaults","hasValue","readerTitle","language","translate","createDataItem","validate","group","node","removeAttribute","chart","xAxis","yAxis","baseAxisSeries","series","clusterCount_1","index_1","sortedByAxis_1","each","iterator","baseAxis","index_2","yAxes","indexOf","xAxes","axis","sort","a","b","prevAxisIndex_1","sortedItem","stacked","renderer","cellStartLocation","cellEndLocation","sortBySeries","sortCategoryAxis","i","startIndex","dataItems","getIndex","disableUnusedColumns","length","endIndex","_propertiesChanged","key","values","x","y","workingValue","_index","currentPosition","categoryToPosition","category","deltaPosition","seriesDataItem","getSeriesDataItemByCategory","index","round","deltaAnimation","isDisposed","animationOptions","to","stop","animate","property","from","interpolationDuration","interpolationEasing","validateDataElementReal","getStartLocation","startLocation","xOpenField","yOpenField","getEndLocation","endLocation","xField","yField","l","r","t","percentWidth","percentHeight","pixelWidth","pixelHeight","maxWidth","maxHeight","paddingLeft","pixelPaddingLeft","paddingRight","pixelPaddingRight","paddingTop","pixelPaddingTop","paddingBottom","pixelPaddingBottom","outOfBounds","diw","isNumber","dih","_xValueFields","_yValueFields","isNaN","offset","getX","Math","abs","getY","fixHorizontalCoordinate","fixVerticalCoordinate","bottomLocation","topLocation","dataFields","axisLenght","ceil","axisLength","rightLocation","leftLocation","w","h","min","column_1","create","copyProperties","paper","itemsFocusable","role","focusable","events","on","ev","populateString","itemReaderText","hoverable","parent","virtualParent","realX","realY","realWidth","realHeight","setColumnStates","invalid","__disabled","axisRanges","axisRange","rangeColumn","rangesColumns","getKey","uid","contents","setKey","itemWidth","itemHeight","sprite","_dropFromOpenState","_dropFromPreviousState","_riseFromOpenState","_riseFromPreviousState","open_1","change","getValue","axisFieldName","droppedFromOpen","defaultState","copyFrom","setState","droppedFromPrevious","_columns","createColumnTemplate","getPropertyValue","setPropertyValue","states","updateLegendValue","notRange","legendDataItem","marker","fromOpenState_1","fromPreviousState_1","children","child","createLegendMarker","removeChildren","padding","color","fill","colorOrig","source","getBulletLocationX","bullet","field","bulletLocationX","locationX","getBulletLocationY","bulletLocationY","locationY","getAdjustedXLocation","getAdjustedYLocation","coordinate","minY","maxY","fitToRange","minX","maxX","disposeData","clear","registeredClasses"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/charts/series/ColumnSeries.js"],"sourcesContent":["/**\r\n * Column series module.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { XYSeries, XYSeriesDataItem } from \"./XYSeries\";\r\nimport { visualProperties } from \"../../core/Sprite\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Dictionary } from \"../../core/utils/Dictionary\";\r\nimport { ValueAxis } from \"../axes/ValueAxis\";\r\nimport { CategoryAxis } from \"../axes/CategoryAxis\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Column } from \"../elements/Column\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[ColumnSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar ColumnSeriesDataItem = /** @class */ (function (_super) {\r\n    __extends(ColumnSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ColumnSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ColumnSeriesDataItem\";\r\n        _this.locations[\"dateX\"] = 0.5;\r\n        _this.locations[\"dateY\"] = 0.5;\r\n        _this.locations[\"categoryX\"] = 0.5;\r\n        _this.locations[\"categoryY\"] = 0.5;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ColumnSeriesDataItem.prototype, \"column\", {\r\n        /**\r\n         * @return Column\r\n         */\r\n        get: function () {\r\n            return this._column;\r\n        },\r\n        /**\r\n         * A column used to draw a column for this data item.\r\n         *\r\n         * @param column\r\n         */\r\n        set: function (column) {\r\n            this.setColumn(column);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ColumnSeriesDataItem.prototype.setColumn = function (column) {\r\n        var _this = this;\r\n        if (this._column && column != this._column) {\r\n            $array.remove(this.sprites, this._column);\r\n        }\r\n        this._column = column;\r\n        if (column) {\r\n            var prevDataItem = column.dataItem;\r\n            if (prevDataItem && prevDataItem != this) {\r\n                prevDataItem.column = undefined;\r\n            }\r\n            this.addSprite(column);\r\n            this._disposers.push(new Disposer(function () {\r\n                // TODO investigate why component is undefined\r\n                // https://codepen.io/team/amcharts/pen/dac4be245d658233a6d7e5597df2208b?editors=0010\r\n                if (_this.component) {\r\n                    _this.component.columns.removeValue(column);\r\n                }\r\n            }));\r\n        }\r\n    };\r\n    Object.defineProperty(ColumnSeriesDataItem.prototype, \"width\", {\r\n        get: function () {\r\n            var width = this.properties.width;\r\n            if (this._adapterO) {\r\n                width = this._adapterO.apply(\"width\", width);\r\n            }\r\n            return width;\r\n        },\r\n        set: function (value) {\r\n            if (this.properties.width != value) {\r\n                this.properties.width = value;\r\n                if (this.component) {\r\n                    this.component.validateDataElement(this);\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnSeriesDataItem.prototype, \"height\", {\r\n        get: function () {\r\n            var height = this.properties.height;\r\n            if (this._adapterO) {\r\n                height = this._adapterO.apply(\"height\", height);\r\n            }\r\n            return height;\r\n        },\r\n        set: function (value) {\r\n            if (this.properties.height != value) {\r\n                this.properties.height = value;\r\n                if (this.component) {\r\n                    this.component.validateDataElement(this);\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnSeriesDataItem.prototype, \"rangesColumns\", {\r\n        /**\r\n         * A dictionary storing axes ranges columns by axis uid\r\n         */\r\n        get: function () {\r\n            if (!this._rangesColumns) {\r\n                this._rangesColumns = new Dictionary();\r\n            }\r\n            return this._rangesColumns;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ColumnSeriesDataItem;\r\n}(XYSeriesDataItem));\r\nexport { ColumnSeriesDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a column graph.\r\n *\r\n * @see {@link IColumnSeriesEvents} for a list of available Events\r\n * @see {@link IColumnSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nvar ColumnSeries = /** @class */ (function (_super) {\r\n    __extends(ColumnSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ColumnSeries() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Start location within cell for columns.\r\n         */\r\n        _this._startLocation = 0;\r\n        /**\r\n         * End location within cell for columns.\r\n         */\r\n        _this._endLocation = 1;\r\n        _this.className = \"ColumnSeries\";\r\n        _this.width = percent(100);\r\n        _this.height = percent(100);\r\n        _this.strokeOpacity = 0;\r\n        _this.fillOpacity = 1;\r\n        _this.clustered = true;\r\n        var columnsContainer = _this.mainContainer.createChild(Container);\r\n        columnsContainer.shouldClone = false;\r\n        columnsContainer.isMeasured = false;\r\n        columnsContainer.layout = \"none\";\r\n        _this._columnsContainer = columnsContainer;\r\n        _this.columns.template.pixelPerfect = false;\r\n        _this.tooltipColorSource = _this.columns.template;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ColumnSeries.prototype, \"columnsContainer\", {\r\n        /**\r\n         * A container that columns are created in.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        get: function () {\r\n            return this._columnsContainer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    ColumnSeries.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Column Series\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    ColumnSeries.prototype.createDataItem = function () {\r\n        return new ColumnSeriesDataItem();\r\n    };\r\n    /**\r\n     * (Re)validates the whole series, effectively causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ColumnSeries.prototype.validate = function () {\r\n        //@todo Check if we can do better than use `instanceof`\r\n        // find start/end locations based on clustered/stacked settings\r\n        // go through chart series instead of base axis series, because axis series doesn't maintain order\r\n        var _this = this;\r\n        this.group.node.removeAttribute(\"fill\");\r\n        if (this.chart && this.xAxis && this.yAxis) {\r\n            var baseAxisSeries = this.chart.series;\r\n            var clusterCount_1 = 0;\r\n            var index_1 = 0;\r\n            var sortedByAxis_1 = [];\r\n            $iter.each(baseAxisSeries.iterator(), function (series) {\r\n                if (series instanceof ColumnSeries) {\r\n                    if (_this.baseAxis == series.baseAxis) {\r\n                        var index_2;\r\n                        if (_this.baseAxis == _this.xAxis) {\r\n                            index_2 = _this.chart.yAxes.indexOf(series.yAxis);\r\n                        }\r\n                        else {\r\n                            index_2 = _this.chart.xAxes.indexOf(series.xAxis);\r\n                        }\r\n                        sortedByAxis_1.push({ series: series, axis: index_2 });\r\n                    }\r\n                }\r\n            });\r\n            sortedByAxis_1.sort(function (a, b) { return a.axis - b.axis; });\r\n            var prevAxisIndex_1;\r\n            $array.each(sortedByAxis_1, function (sortedItem) {\r\n                var series = sortedItem.series;\r\n                if (series instanceof ColumnSeries) {\r\n                    if ((!series.stacked && series.clustered) || (prevAxisIndex_1 != sortedItem.axis && series.clustered)) {\r\n                        clusterCount_1++;\r\n                    }\r\n                    if (series == _this) {\r\n                        index_1 = clusterCount_1 - 1;\r\n                    }\r\n                }\r\n                prevAxisIndex_1 = sortedItem.axis;\r\n            });\r\n            if (!this.clustered) {\r\n                index_1 = 0;\r\n                clusterCount_1 = 1;\r\n            }\r\n            var renderer = this.baseAxis.renderer;\r\n            var cellStartLocation = renderer.cellStartLocation;\r\n            var cellEndLocation = renderer.cellEndLocation;\r\n            this._startLocation = cellStartLocation + (index_1 / clusterCount_1) * (cellEndLocation - cellStartLocation);\r\n            this._endLocation = cellStartLocation + (index_1 + 1) / clusterCount_1 * (cellEndLocation - cellStartLocation);\r\n            var xAxis = this.xAxis;\r\n            var yAxis = this.yAxis;\r\n            if (xAxis instanceof CategoryAxis && yAxis instanceof ValueAxis) {\r\n                if (xAxis.sortBySeries == this) {\r\n                    this.sortCategoryAxis(xAxis, \"valueY\");\r\n                }\r\n            }\r\n            if (yAxis instanceof CategoryAxis && xAxis instanceof ValueAxis) {\r\n                if (yAxis.sortBySeries == this) {\r\n                    this.sortCategoryAxis(yAxis, \"valueX\");\r\n                }\r\n            }\r\n        }\r\n        _super.prototype.validate.call(this);\r\n        for (var i = 0; i < this.startIndex; i++) {\r\n            var dataItem = this.dataItems.getIndex(i);\r\n            this.disableUnusedColumns(dataItem);\r\n        }\r\n        for (var i = this.dataItems.length - 1; i > this.endIndex; i--) {\r\n            var dataItem = this.dataItems.getIndex(i);\r\n            this.disableUnusedColumns(dataItem);\r\n        }\r\n        this._propertiesChanged = false;\r\n    };\r\n    ColumnSeries.prototype.sortCategoryAxis = function (axis, key) {\r\n        var _this = this;\r\n        this.dataItems.values.sort(function (x, y) {\r\n            return y.values[key].workingValue - x.values[key].workingValue;\r\n        });\r\n        var i = 0;\r\n        this.dataItems.each(function (dataItem) {\r\n            dataItem._index = i;\r\n            i++;\r\n        });\r\n        axis.dataItems.each(function (dataItem) {\r\n            var axis = dataItem.component;\r\n            var currentPosition = axis.categoryToPosition(dataItem.category) - dataItem.deltaPosition;\r\n            var seriesDataItem = axis.getSeriesDataItemByCategory(dataItem.category, _this);\r\n            if (seriesDataItem) {\r\n                var index = _this.dataItems.indexOf(seriesDataItem);\r\n                dataItem._index = index;\r\n                var deltaPosition = $math.round((index + 0.5) / _this.dataItems.length - currentPosition, 3);\r\n                if (dataItem.deltaAnimation && !dataItem.deltaAnimation.isDisposed() && dataItem.deltaAnimation.animationOptions[0].to == deltaPosition) {\r\n                    // void\r\n                }\r\n                else if (deltaPosition != $math.round(dataItem.deltaPosition, 3)) {\r\n                    if (dataItem.deltaAnimation) {\r\n                        dataItem.deltaAnimation.stop();\r\n                    }\r\n                    dataItem.deltaAnimation = dataItem.animate({ property: \"deltaPosition\", from: -deltaPosition, to: 0 }, axis.interpolationDuration, axis.interpolationEasing);\r\n                    _this._disposers.push(dataItem.deltaAnimation);\r\n                }\r\n            }\r\n        });\r\n        axis.dataItems.values.sort(function (x, y) {\r\n            return x.index - y.index;\r\n        });\r\n    };\r\n    /**\r\n     * Validates data item's element, effectively redrawing it.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    ColumnSeries.prototype.validateDataElement = function (dataItem) {\r\n        // important oder here, first real, then super. we need this to know size\r\n        if (this.chart && this.xAxis && this.yAxis) {\r\n            this.validateDataElementReal(dataItem);\r\n            _super.prototype.validateDataElement.call(this, dataItem);\r\n        }\r\n    };\r\n    /**\r\n     * Returns relative start location for the data item.\r\n     *\r\n     * @param dataItem  Data item\r\n     * @return Location (0-1)\r\n     */\r\n    ColumnSeries.prototype.getStartLocation = function (dataItem) {\r\n        var startLocation = this._startLocation;\r\n        if (this.baseAxis == this.xAxis) {\r\n            startLocation += dataItem.locations[this.xOpenField] - 0.5;\r\n        }\r\n        else {\r\n            startLocation += dataItem.locations[this.yOpenField] - 0.5;\r\n        }\r\n        return startLocation;\r\n    };\r\n    /**\r\n     * [handleDataItemWorkingValueChange description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    /*\r\n   public handleDataItemWorkingValueChange(dataItem?: this[\"_dataItem\"], name?: string): void {\r\n       if (this.simplifiedProcessing) {\r\n           this.validateDataElement(dataItem);\r\n       }\r\n       else {\r\n           super.handleDataItemWorkingValueChange(dataItem, name);\r\n       }\r\n   }*/\r\n    /**\r\n     * Returns relative end location for the data item.\r\n     *\r\n     * @param dataItem  Data item\r\n     * @return Location (0-1)\r\n     */\r\n    ColumnSeries.prototype.getEndLocation = function (dataItem) {\r\n        var endLocation = this._endLocation;\r\n        if (this.baseAxis == this.xAxis) {\r\n            endLocation += dataItem.locations[this.xField] - 0.5;\r\n        }\r\n        else {\r\n            endLocation += dataItem.locations[this.yField] - 0.5;\r\n        }\r\n        return endLocation;\r\n    };\r\n    /**\r\n     * Validates data item's elements.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    ColumnSeries.prototype.validateDataElementReal = function (dataItem) {\r\n        var _this = this;\r\n        //\tif (dataItem.hasValue([this.xField, this.yField])) { // todo: this doesn't work with categories, think of a better way\r\n        var l;\r\n        var r;\r\n        var t;\r\n        var b;\r\n        var startLocation = this.getStartLocation(dataItem);\r\n        var endLocation = this.getEndLocation(dataItem);\r\n        var xField = this.xField;\r\n        var xOpenField = this.xOpenField;\r\n        var yField = this.yField;\r\n        var yOpenField = this.yOpenField;\r\n        var template = this.columns.template;\r\n        var percentWidth = template.percentWidth;\r\n        var percentHeight = template.percentHeight;\r\n        var pixelWidth = template.pixelWidth;\r\n        var pixelHeight = template.pixelHeight;\r\n        var maxWidth = template.maxWidth;\r\n        var maxHeight = template.maxHeight;\r\n        var paddingLeft = template.pixelPaddingLeft;\r\n        var paddingRight = template.pixelPaddingRight;\r\n        var paddingTop = template.pixelPaddingTop;\r\n        var paddingBottom = template.pixelPaddingBottom;\r\n        var outOfBounds = false;\r\n        var diw = dataItem.width;\r\n        if ($type.hasValue(diw)) {\r\n            if ($type.isNumber(diw)) {\r\n                pixelWidth = diw;\r\n            }\r\n            if (diw instanceof Percent) {\r\n                percentWidth = diw.value * 100;\r\n            }\r\n        }\r\n        var dih = dataItem.height;\r\n        if ($type.hasValue(dih)) {\r\n            if ($type.isNumber(dih)) {\r\n                pixelHeight = dih;\r\n            }\r\n            if (dih instanceof Percent) {\r\n                percentHeight = dih.value * 100;\r\n            }\r\n        }\r\n        // two category axes\r\n        if ((this.xAxis instanceof CategoryAxis) && (this.yAxis instanceof CategoryAxis)) {\r\n            if (!dataItem.hasValue(this._xValueFields) || !dataItem.hasValue(this._yValueFields)) {\r\n                return;\r\n            }\r\n            startLocation = 0;\r\n            endLocation = 1;\r\n            if (!$type.isNaN(percentWidth)) {\r\n                var offset = $math.round((endLocation - startLocation) * (1 - percentWidth / 100) / 2, 5);\r\n                startLocation += offset;\r\n                endLocation -= offset;\r\n            }\r\n            l = this.xAxis.getX(dataItem, xOpenField, startLocation);\r\n            r = this.xAxis.getX(dataItem, xField, endLocation);\r\n            // in case width is set in pixels\r\n            if ($type.isNaN(percentWidth)) {\r\n                var offset = ((r - l) - pixelWidth) / 2;\r\n                l += offset;\r\n                r -= offset;\r\n            }\r\n            // in case max width is set in pixels\r\n            if (!$type.isNaN(maxWidth) && maxWidth < Math.abs(r - l)) {\r\n                var offset = ((r - l) - maxWidth) / 2;\r\n                l += offset;\r\n                r -= offset;\r\n            }\r\n            startLocation = 0;\r\n            endLocation = 1;\r\n            if (!$type.isNaN(percentHeight)) {\r\n                var offset = $math.round((1 - percentHeight / 100) / 2, 5);\r\n                startLocation += offset;\r\n                endLocation -= offset;\r\n            }\r\n            t = this.yAxis.getY(dataItem, yOpenField, startLocation);\r\n            b = this.yAxis.getY(dataItem, yField, endLocation);\r\n            // in case width is set in pixels\r\n            if ($type.isNaN(percentHeight)) {\r\n                var offset = ((b - t) - pixelHeight) / 2;\r\n                b += offset;\r\n                t -= offset;\r\n            }\r\n            // in case max width is set in pixels\r\n            if (!$type.isNaN(maxHeight) && maxHeight < Math.abs(b - t)) {\r\n                var offset = ((b - t) - maxHeight) / 2;\r\n                b += offset;\r\n                t -= offset;\r\n            }\r\n            r = this.fixHorizontalCoordinate(r);\r\n            l = this.fixHorizontalCoordinate(l);\r\n            t = this.fixVerticalCoordinate(t);\r\n            b = this.fixVerticalCoordinate(b);\r\n        }\r\n        else if (this.baseAxis == this.xAxis) {\r\n            if (!dataItem.hasValue(this._yValueFields)) {\r\n                return;\r\n            }\r\n            // in case width is set in percent\r\n            if (!$type.isNaN(percentWidth)) {\r\n                var offset = $math.round((endLocation - startLocation) * (1 - percentWidth / 100) / 2, 5);\r\n                startLocation += offset;\r\n                endLocation -= offset;\r\n            }\r\n            l = this.xAxis.getX(dataItem, xOpenField, startLocation);\r\n            r = this.xAxis.getX(dataItem, xField, endLocation);\r\n            // in case width is set in pixels\r\n            if ($type.isNaN(percentWidth)) {\r\n                var offset = ((r - l) - pixelWidth) / 2;\r\n                l += offset;\r\n                r -= offset;\r\n            }\r\n            // in case width is set in pixels\r\n            if (!$type.isNaN(maxWidth) && maxWidth < Math.abs(r - l)) {\r\n                var offset = ((r - l) - maxWidth) / 2;\r\n                l += offset;\r\n                r -= offset;\r\n            }\r\n            var bottomLocation = dataItem.locations[yOpenField];\r\n            var topLocation = dataItem.locations[yField];\r\n            // otherwise gantt chart will start items in the middle of a cell\r\n            if (this.yAxis instanceof ValueAxis) {\r\n                if (this.dataFields[this.yField] != this.dataFields[this.yOpenField]) {\r\n                    bottomLocation = 0;\r\n                    topLocation = 0;\r\n                }\r\n            }\r\n            b = this.yAxis.getY(dataItem, yOpenField, bottomLocation);\r\n            t = this.yAxis.getY(dataItem, yField, topLocation);\r\n            // used to save location for bullets, but it's not a good approach\r\n            // dataItem.locations[xField] = startLocation + (endLocation - startLocation) / 2;\r\n            var axisLenght = Math.ceil(this.yAxis.axisLength);\r\n            if ((t < 0 && b < 0) || (t > axisLenght && b > axisLenght)) {\r\n                outOfBounds = true;\r\n            }\r\n            t = this.fixVerticalCoordinate(t);\r\n            b = this.fixVerticalCoordinate(b);\r\n            if (Math.abs(r - l) - paddingLeft - paddingRight == 0) {\r\n                outOfBounds = true;\r\n            }\r\n        }\r\n        // horizontal bars\r\n        else {\r\n            if (!dataItem.hasValue(this._xValueFields)) {\r\n                return;\r\n            }\r\n            if (!$type.isNaN(percentHeight)) {\r\n                var offset = $math.round((endLocation - startLocation) * (1 - percentHeight / 100) / 2, 5);\r\n                startLocation += offset;\r\n                endLocation -= offset;\r\n            }\r\n            t = this.yAxis.getY(dataItem, yOpenField, startLocation);\r\n            b = this.yAxis.getY(dataItem, yField, endLocation);\r\n            // in case height is set in pixels\r\n            if ($type.isNaN(percentHeight)) {\r\n                var offset = ((b - t) - pixelHeight) / 2;\r\n                b -= offset;\r\n                t += offset;\r\n            }\r\n            // in case height is set in pixels\r\n            if (!$type.isNaN(maxHeight) && maxHeight < Math.abs(b - t)) {\r\n                var offset = ((b - t) - maxHeight) / 2;\r\n                b -= offset;\r\n                t += offset;\r\n            }\r\n            var rightLocation = dataItem.locations[xField];\r\n            var leftLocation = dataItem.locations[xOpenField];\r\n            // otherwise gantt chart will start items in the middle of a cell\r\n            if (this.xAxis instanceof ValueAxis) {\r\n                if (this.dataFields[this.xField] != this.dataFields[this.xOpenField]) {\r\n                    rightLocation = 0;\r\n                    leftLocation = 0;\r\n                }\r\n            }\r\n            r = this.xAxis.getX(dataItem, xField, rightLocation);\r\n            l = this.xAxis.getX(dataItem, xOpenField, leftLocation);\r\n            // used to save location for bullets, but it's not a good approach\r\n            // dataItem.locations[yField] = startLocation + (endLocation - startLocation) / 2;\r\n            var axisLenght = Math.ceil(this.xAxis.axisLength);\r\n            if ((r < 0 && l < 0) || (r > axisLenght && l > axisLenght)) {\r\n                outOfBounds = true;\r\n            }\r\n            r = this.fixHorizontalCoordinate(r);\r\n            l = this.fixHorizontalCoordinate(l);\r\n            if (Math.abs(t - b) - paddingTop - paddingBottom == 0) {\r\n                outOfBounds = true;\r\n            }\r\n        }\r\n        var w = Math.abs(r - l);\r\n        var h = Math.abs(b - t);\r\n        var x = Math.min(l, r);\r\n        var y = Math.min(t, b);\r\n        if (!outOfBounds) {\r\n            var column_1;\r\n            if (!dataItem.column) {\r\n                column_1 = this.columns.create();\r\n                //$object.forceCopyProperties(this.columns.template, column, visualProperties);\r\n                $object.copyProperties(this, column_1, visualProperties); // need this because 3d columns are not in the same container\r\n                $object.copyProperties(this.columns.template, column_1, visualProperties); // second time, no force, so that columns.template would override series properties\r\n                dataItem.addSprite(column_1);\r\n                dataItem.column = column_1;\r\n                column_1.paper = this.paper; // sometimes pattern is not drawn if is set with adapter without this.\r\n                // accessibility\r\n                if (this.itemsFocusable()) {\r\n                    if (!$type.hasValue(this.role)) {\r\n                        this.role = \"menu\";\r\n                    }\r\n                    if (!$type.hasValue(column_1.role)) {\r\n                        column_1.role = \"menuitem\";\r\n                    }\r\n                    column_1.focusable = true;\r\n                }\r\n                else {\r\n                    if (!$type.hasValue(this.role)) {\r\n                        this.role = \"list\";\r\n                    }\r\n                    if (!$type.hasValue(column_1.role)) {\r\n                        column_1.role = \"listitem\";\r\n                    }\r\n                    column_1.focusable = false;\r\n                }\r\n                if (column_1.focusable) {\r\n                    column_1.events.on(\"focus\", function (ev) {\r\n                        column_1.readerTitle = _this.populateString(_this.itemReaderText, dataItem);\r\n                    }, undefined, false);\r\n                    column_1.events.on(\"blur\", function (ev) {\r\n                        column_1.readerTitle = \"\";\r\n                    }, undefined, false);\r\n                }\r\n                if (column_1.hoverable) {\r\n                    column_1.events.on(\"over\", function (ev) {\r\n                        column_1.readerTitle = _this.populateString(_this.itemReaderText, dataItem);\r\n                    }, undefined, false);\r\n                    column_1.events.on(\"out\", function (ev) {\r\n                        column_1.readerTitle = \"\";\r\n                    }, undefined, false);\r\n                }\r\n                column_1.parent = this.columnsContainer;\r\n                column_1.virtualParent = this;\r\n            }\r\n            else {\r\n                column_1 = dataItem.column;\r\n                if (this._propertiesChanged) {\r\n                    $object.copyProperties(this, column_1, visualProperties);\r\n                    $object.copyProperties(this.columns.template, column_1, visualProperties);\r\n                    $array.each(visualProperties, function (property) {\r\n                        column_1[property] = column_1[property];\r\n                    });\r\n                }\r\n            }\r\n            column_1.width = w;\r\n            column_1.height = h;\r\n            column_1.x = x;\r\n            column_1.y = y;\r\n            column_1.realX = l;\r\n            column_1.realY = t;\r\n            column_1.realWidth = r - l;\r\n            column_1.realHeight = b - t;\r\n            this.setColumnStates(column_1);\r\n            if (column_1.invalid) {\r\n                column_1.validate(); // validate as if it was used previously, it will flicker with previous dimensions\r\n            }\r\n            column_1.__disabled = false;\r\n            //column.returnAfterTemp();\r\n            $iter.each(this.axisRanges.iterator(), function (axisRange) {\r\n                var rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);\r\n                if (!rangeColumn) {\r\n                    rangeColumn = _this.columns.create();\r\n                    //$object.forceCopyProperties(this.columns.template, rangeColumn, visualProperties);\r\n                    $object.copyProperties(axisRange.contents, rangeColumn, visualProperties); // need this because 3d columns are not in the same container\r\n                    dataItem.addSprite(rangeColumn);\r\n                    dataItem.rangesColumns.setKey(axisRange.uid, rangeColumn);\r\n                    rangeColumn.paper = _this.paper; // sometimes pattern is not drawn if is set with adapter without this.\r\n                }\r\n                rangeColumn.parent = axisRange.contents;\r\n                rangeColumn.width = w;\r\n                rangeColumn.height = h;\r\n                rangeColumn.x = x;\r\n                rangeColumn.y = y;\r\n                _this.setColumnStates(rangeColumn);\r\n                if (rangeColumn.invalid) {\r\n                    rangeColumn.validate(); // validate as if it was used previously, it will flicker with previous dimensions\r\n                }\r\n                rangeColumn.__disabled = false;\r\n                //rangeColumn.returnAfterTemp();\r\n            });\r\n        }\r\n        else {\r\n            this.disableUnusedColumns(dataItem);\r\n        }\r\n        dataItem.itemWidth = w;\r\n        dataItem.itemHeight = h;\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    ColumnSeries.prototype.disableUnusedColumns = function (dataItem) {\r\n        if (dataItem) {\r\n            if (dataItem.column) {\r\n                // otherwise might flicker when enabling\r\n                dataItem.column.width = 0;\r\n                dataItem.column.height = 0;\r\n                dataItem.column.__disabled = true;\r\n            }\r\n            $iter.each(this.axisRanges.iterator(), function (axisRange) {\r\n                var rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);\r\n                if (rangeColumn) {\r\n                    // otherwise might flicker when enabling\r\n                    rangeColumn.width = 0;\r\n                    rangeColumn.height = 0;\r\n                    rangeColumn.__disabled = true;\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Apply different state/coloring to columns based on the change value.\r\n     *\r\n     * @param sprite  Sprite to apply state to\r\n     * @todo Do not apply accessibility to wicks of the candlesticks\r\n     */\r\n    ColumnSeries.prototype.setColumnStates = function (sprite) {\r\n        if (this._dropFromOpenState || this._dropFromPreviousState || this._riseFromOpenState || this._riseFromPreviousState) {\r\n            var dataItem = sprite.dataItem;\r\n            if (this.xAxis instanceof ValueAxis || this.yAxis instanceof ValueAxis) {\r\n                var open_1;\r\n                var value = void 0;\r\n                var change = void 0;\r\n                if (this.baseAxis == this.yAxis) {\r\n                    if (this.xOpenField && this.xField && this.xAxis instanceof ValueAxis) {\r\n                        open_1 = dataItem.getValue(this.xOpenField);\r\n                        value = dataItem.getValue(this.xField);\r\n                    }\r\n                    change = dataItem.getValue(this.xAxis.axisFieldName + \"X\", \"previousChange\");\r\n                }\r\n                else {\r\n                    if (this.yOpenField && this.yField && this.yAxis instanceof ValueAxis) {\r\n                        open_1 = dataItem.getValue(this.yOpenField);\r\n                        value = dataItem.getValue(this.yField);\r\n                    }\r\n                    change = dataItem.getValue(this.yAxis.axisFieldName + \"Y\", \"previousChange\");\r\n                }\r\n                if (value < open_1) {\r\n                    dataItem.droppedFromOpen = true;\r\n                    sprite.defaultState.copyFrom(this._dropFromOpenState);\r\n                    sprite.setState(this._dropFromOpenState, 0);\r\n                }\r\n                else {\r\n                    dataItem.droppedFromOpen = false;\r\n                    sprite.defaultState.copyFrom(this._riseFromOpenState);\r\n                    sprite.setState(this._riseFromOpenState, 0);\r\n                }\r\n                if (change < 0) {\r\n                    dataItem.droppedFromPrevious = true;\r\n                    sprite.defaultState.copyFrom(this._dropFromPreviousState);\r\n                    sprite.setState((this._dropFromPreviousState), 0);\r\n                }\r\n                else {\r\n                    dataItem.droppedFromPrevious = false;\r\n                    sprite.defaultState.copyFrom(this._riseFromPreviousState);\r\n                    sprite.setState((this._riseFromPreviousState), 0);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(ColumnSeries.prototype, \"columns\", {\r\n        /**\r\n         * A list of column elements in the series.\r\n         *\r\n         * @return Columns\r\n         */\r\n        get: function () {\r\n            if (!this._columns) {\r\n                this._columns = new ListTemplate(this.createColumnTemplate());\r\n                this._disposers.push(new ListDisposer(this._columns));\r\n                this._disposers.push(this._columns.template);\r\n            }\r\n            return this._columns;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates and returns a column element to use as a template.\r\n     *\r\n     * @return Column template\r\n     */\r\n    ColumnSeries.prototype.createColumnTemplate = function () {\r\n        return new Column();\r\n    };\r\n    Object.defineProperty(ColumnSeries.prototype, \"clustered\", {\r\n        /**\r\n         * @return Clustered?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"clustered\");\r\n        },\r\n        /**\r\n         * Cluster this series columns?\r\n         *\r\n         * Setting to `false` will make columns overlap with other series.\r\n         *\r\n         * @default true\r\n         * @param value  Clustered?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"clustered\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnSeries.prototype, \"dropFromOpenState\", {\r\n        /**\r\n         * @return State\r\n         */\r\n        get: function () {\r\n            if (!this._dropFromOpenState) {\r\n                this._dropFromOpenState = this.states.create(\"dropFromOpenState\");\r\n            }\r\n            return this._dropFromOpenState;\r\n        },\r\n        /**\r\n         * A state to apply to a column when close value is lower than open value.\r\n         *\r\n         * Can be used to differentiate appearance based on value relations.\r\n         *\r\n         * NOTE: this will work only if at least one axis is [[ValueAxis]].\r\n         *\r\n         * @readonly You can modify state object, but can't overwrite it\r\n         * @param  value  State\r\n         */\r\n        set: function (value) {\r\n            this._dropFromOpenState = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnSeries.prototype, \"dropFromPreviousState\", {\r\n        /**\r\n         * @return State\r\n         */\r\n        get: function () {\r\n            if (!this._dropFromPreviousState) {\r\n                this._dropFromPreviousState = this.states.create(\"dropFromPreviousState\");\r\n            }\r\n            return this._dropFromPreviousState;\r\n        },\r\n        /**\r\n         * A state to apply to a column when its value is lower value of a previous\r\n         * column.\r\n         *\r\n         * Can be used to differentiate appearance based on value relations.\r\n         *\r\n         * @readonly You can modify state object, but can't overwrite it\r\n         * @param  value  State\r\n         */\r\n        set: function (value) {\r\n            this._dropFromPreviousState = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnSeries.prototype, \"riseFromOpenState\", {\r\n        /**\r\n         * @return State\r\n         */\r\n        get: function () {\r\n            if (!this._riseFromOpenState) {\r\n                this._riseFromOpenState = this.states.create(\"riseFromOpenState\");\r\n            }\r\n            return this._riseFromOpenState;\r\n        },\r\n        /**\r\n         * A state to apply to a column when close value is same or higher than open\r\n         * value.\r\n         *\r\n         * Can be used to differentiate appearance based on value relations.\r\n         *\r\n         * NOTE: this will work only if at least one axis is [[ValueAxis]].\r\n         *\r\n         * @readonly You can modify state object, but can't overwrite it\r\n         * @param  value  State\r\n         */\r\n        set: function (value) {\r\n            this._riseFromOpenState = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnSeries.prototype, \"riseFromPreviousState\", {\r\n        /**\r\n         * @return State\r\n         */\r\n        get: function () {\r\n            if (!this._riseFromPreviousState) {\r\n                this._riseFromPreviousState = this.states.create(\"riseFromPreviousState\");\r\n            }\r\n            return this._riseFromPreviousState;\r\n        },\r\n        /**\r\n         * A state to apply to a column when its value is same or higher than value\r\n         * of a previous column.\r\n         *\r\n         * Can be used to differentiate appearance based on value relations.\r\n         *\r\n         * @readonly You can modify state object, but can't overwrite it\r\n         * @param  value  State\r\n         */\r\n        set: function (value) {\r\n            this._riseFromPreviousState = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates value of the related legend item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    ColumnSeries.prototype.updateLegendValue = function (dataItem, notRange) {\r\n        var _this = this;\r\n        _super.prototype.updateLegendValue.call(this, dataItem, notRange);\r\n        if (this.legendDataItem) {\r\n            var marker = this.legendDataItem.marker;\r\n            var fromOpenState_1;\r\n            var fromPreviousState_1;\r\n            if (dataItem) {\r\n                if (dataItem.droppedFromOpen) {\r\n                    fromOpenState_1 = this._dropFromOpenState;\r\n                }\r\n                else {\r\n                    fromOpenState_1 = this._riseFromOpenState;\r\n                }\r\n                if (dataItem.droppedFromPrevious) {\r\n                    fromPreviousState_1 = this._dropFromPreviousState;\r\n                }\r\n                else {\r\n                    fromPreviousState_1 = this._riseFromPreviousState;\r\n                }\r\n            }\r\n            $iter.each(marker.children.iterator(), function (child) {\r\n                if (dataItem) {\r\n                    child.setState(fromPreviousState_1);\r\n                    child.setState(fromOpenState_1);\r\n                }\r\n                else {\r\n                    // todo: think what to do here, maybe apply above states based on totals?\r\n                    child.setState(_this._riseFromPreviousState);\r\n                    child.setState(_this._riseFromOpenState);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Creates elements in related legend container, that mimics the look of this\r\n     * Series.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param marker  Legend item container\r\n     */\r\n    ColumnSeries.prototype.createLegendMarker = function (marker) {\r\n        var w = marker.pixelWidth;\r\n        var h = marker.pixelHeight;\r\n        marker.removeChildren();\r\n        var column = marker.createChild(RoundedRectangle);\r\n        column.shouldClone = false;\r\n        $object.copyProperties(this, column, visualProperties);\r\n        column.copyFrom(this.columns.template);\r\n        column.padding(0, 0, 0, 0); // if columns will have padding (which is often), legend marker will be very narrow\r\n        column.width = w;\r\n        column.height = h;\r\n        var legendDataItem = marker.dataItem;\r\n        legendDataItem.color = this.fill;\r\n        legendDataItem.colorOrig = this.fill;\r\n    };\r\n    /**\r\n     * Copies all properties from another instance of [[ColumnSeries]].\r\n     *\r\n     * @param source  Source series\r\n     */\r\n    ColumnSeries.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.columns.template.copyFrom(source.columns.template);\r\n    };\r\n    /**\r\n    * returns bullet x location\r\n    * @ignore\r\n    */\r\n    ColumnSeries.prototype.getBulletLocationX = function (bullet, field) {\r\n        if (this.baseAxis == this.xAxis) {\r\n            var bulletLocationX = bullet.locationX;\r\n            if (!$type.isNumber(bulletLocationX)) {\r\n                bulletLocationX = 0.5;\r\n            }\r\n            var endLocation = this.getEndLocation(bullet.dataItem);\r\n            var startLocation = this.getStartLocation(bullet.dataItem);\r\n            return endLocation - (endLocation - startLocation) * bulletLocationX;\r\n        }\r\n        else {\r\n            return _super.prototype.getBulletLocationX.call(this, bullet, field);\r\n        }\r\n    };\r\n    /**\r\n    * returns bullet y location\r\n    * @ignore\r\n    */\r\n    ColumnSeries.prototype.getBulletLocationY = function (bullet, field) {\r\n        if (this.baseAxis == this.yAxis) {\r\n            var bulletLocationY = bullet.locationY;\r\n            if (!$type.isNumber(bulletLocationY)) {\r\n                bulletLocationY = 0.5;\r\n            }\r\n            var endLocation = this.getEndLocation(bullet.dataItem);\r\n            var startLocation = this.getStartLocation(bullet.dataItem);\r\n            return endLocation - (endLocation - startLocation) * bulletLocationY;\r\n        }\r\n        else {\r\n            return _super.prototype.getBulletLocationY.call(this, bullet, field);\r\n        }\r\n    };\r\n    ColumnSeries.prototype.getAdjustedXLocation = function (dataItem, field, bulletLocationX) {\r\n        //if (this.baseAxis == this.xAxis) {\r\n        if (!$type.isNumber(bulletLocationX)) {\r\n            if (dataItem) {\r\n                bulletLocationX = dataItem.locations[field];\r\n            }\r\n            else {\r\n                bulletLocationX = 0.5;\r\n            }\r\n        }\r\n        return this._endLocation - (this._endLocation - this._startLocation) * (1 - bulletLocationX);\r\n        //}\r\n        //else {\r\n        //\treturn super.getAdjustedXLocation(dataItem, field);\r\n        //}\r\n    };\r\n    ColumnSeries.prototype.getAdjustedYLocation = function (dataItem, field, bulletLocationY) {\r\n        //if (this.baseAxis == this.yAxis) {\r\n        if (!$type.isNumber(bulletLocationY)) {\r\n            if (dataItem) {\r\n                bulletLocationY = dataItem.locations[field];\r\n            }\r\n            else {\r\n                bulletLocationY = 0.5;\r\n            }\r\n        }\r\n        return this._endLocation - (this._endLocation - this._startLocation) * bulletLocationY;\r\n        //}\r\n        //else {\r\n        //\treturn super.getAdjustedYLocation(dataItem, field);\r\n        //}\r\n    };\r\n    /**\r\n     * @ignore Exclude from docs\r\n     */\r\n    ColumnSeries.prototype.fixVerticalCoordinate = function (coordinate) {\r\n        var paddingBottom = this.columns.template.pixelPaddingBottom;\r\n        var paddingTop = this.columns.template.pixelPaddingTop;\r\n        var minY = -paddingTop;\r\n        var maxY = this.yAxis.axisLength + paddingBottom;\r\n        return $math.fitToRange(coordinate, minY, maxY);\r\n    };\r\n    /**\r\n     * @ignore Exclude from docs\r\n     */\r\n    ColumnSeries.prototype.fixHorizontalCoordinate = function (coordinate) {\r\n        var paddingLeft = this.columns.template.pixelPaddingLeft;\r\n        var paddingRight = this.columns.template.pixelPaddingRight;\r\n        var minX = -paddingLeft;\r\n        var maxX = this.xAxis.axisLength + paddingRight;\r\n        return $math.fitToRange(coordinate, minX, maxX);\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    ColumnSeries.prototype.disposeData = function () {\r\n        _super.prototype.disposeData.call(this);\r\n        this.columns.clear();\r\n    };\r\n    return ColumnSeries;\r\n}(XYSeries));\r\nexport { ColumnSeries };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ColumnSeries\"] = ColumnSeries;\r\nregistry.registeredClasses[\"ColumnSeriesDataItem\"] = ColumnSeriesDataItem;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}