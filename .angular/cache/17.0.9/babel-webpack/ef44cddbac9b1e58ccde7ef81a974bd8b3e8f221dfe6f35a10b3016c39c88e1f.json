{"ast":null,"code":"/**\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Sprite } from \"../../core/Sprite\";\nimport { registry } from \"../../core/Registry\";\nimport { color } from \"../../core/utils/Color\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Used to draw Axis line.\r\n *\r\n * @see {@link IAxisLineEvents} for a list of available events\r\n * @see {@link IAxisLineAdapters} for a list of available Adapters\r\n */\nvar AxisLine = /** @class */function (_super) {\n  __extends(AxisLine, _super);\n  /**\r\n   * Constructor\r\n   */\n  function AxisLine() {\n    var _this = _super.call(this) || this;\n    _this.className = \"AxisLine\";\n    _this.element = _this.paper.add(\"path\");\n    var interfaceColors = new InterfaceColorSet();\n    _this.stroke = interfaceColors.getFor(\"grid\");\n    _this.strokeOpacity = 0.15;\n    _this.pixelPerfect = true;\n    _this.fill = color();\n    _this.applyTheme();\n    _this.interactionsEnabled = false;\n    return _this;\n    //this.element.moveTo({ x: 0, y: 0 });\n  }\n\n  return AxisLine;\n}(Sprite);\nexport { AxisLine };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"AxisLine\"] = AxisLine;","map":{"version":3,"names":["__extends","Sprite","registry","color","InterfaceColorSet","AxisLine","_super","_this","call","className","element","paper","add","interfaceColors","stroke","getFor","strokeOpacity","pixelPerfect","fill","applyTheme","interactionsEnabled","registeredClasses"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLine.js"],"sourcesContent":["/**\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Used to draw Axis line.\r\n *\r\n * @see {@link IAxisLineEvents} for a list of available events\r\n * @see {@link IAxisLineAdapters} for a list of available Adapters\r\n */\r\nvar AxisLine = /** @class */ (function (_super) {\r\n    __extends(AxisLine, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function AxisLine() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"AxisLine\";\r\n        _this.element = _this.paper.add(\"path\");\r\n        var interfaceColors = new InterfaceColorSet();\r\n        _this.stroke = interfaceColors.getFor(\"grid\");\r\n        _this.strokeOpacity = 0.15;\r\n        _this.pixelPerfect = true;\r\n        _this.fill = color();\r\n        _this.applyTheme();\r\n        _this.interactionsEnabled = false;\r\n        return _this;\r\n        //this.element.moveTo({ x: 0, y: 0 });\r\n    }\r\n    return AxisLine;\r\n}(Sprite));\r\nexport { AxisLine };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisLine\"] = AxisLine;\r\n"],"mappings":"AAAA;AACA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,SAASC,KAAK,QAAQ,wBAAwB;AAC9C,SAASC,iBAAiB,QAAQ,oCAAoC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,QAAQ,GAAG,aAAe,UAAUC,MAAM,EAAE;EAC5CN,SAAS,CAACK,QAAQ,EAAEC,MAAM,CAAC;EAC3B;AACJ;AACA;EACI,SAASD,QAAQA,CAAA,EAAG;IAChB,IAAIE,KAAK,GAAGD,MAAM,CAACE,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI;IACrCD,KAAK,CAACE,SAAS,GAAG,UAAU;IAC5BF,KAAK,CAACG,OAAO,GAAGH,KAAK,CAACI,KAAK,CAACC,GAAG,CAAC,MAAM,CAAC;IACvC,IAAIC,eAAe,GAAG,IAAIT,iBAAiB,CAAC,CAAC;IAC7CG,KAAK,CAACO,MAAM,GAAGD,eAAe,CAACE,MAAM,CAAC,MAAM,CAAC;IAC7CR,KAAK,CAACS,aAAa,GAAG,IAAI;IAC1BT,KAAK,CAACU,YAAY,GAAG,IAAI;IACzBV,KAAK,CAACW,IAAI,GAAGf,KAAK,CAAC,CAAC;IACpBI,KAAK,CAACY,UAAU,CAAC,CAAC;IAClBZ,KAAK,CAACa,mBAAmB,GAAG,KAAK;IACjC,OAAOb,KAAK;IACZ;EACJ;;EACA,OAAOF,QAAQ;AACnB,CAAC,CAACJ,MAAM,CAAE;AACV,SAASI,QAAQ;AACjB;AACA;AACA;AACA;AACA;AACA;AACAH,QAAQ,CAACmB,iBAAiB,CAAC,UAAU,CAAC,GAAGhB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}