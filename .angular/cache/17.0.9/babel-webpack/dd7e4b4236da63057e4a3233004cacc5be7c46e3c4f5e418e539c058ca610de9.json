{"ast":null,"code":"import { __decorate } from 'tslib';\nimport { Pipe, forwardRef, EventEmitter, ChangeDetectorRef, Input, Output, HostListener, Component, ChangeDetectionStrategy, ElementRef, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nclass ListItem {\n  constructor(source) {\n    if (typeof source === 'string' || typeof source === 'number') {\n      this.id = this.text = source;\n      this.isDisabled = false;\n    }\n    if (typeof source === 'object') {\n      this.id = source.id;\n      this.text = source.text;\n      this.tooltip = source.tooltip;\n      this.isDisabled = source.isDisabled;\n    }\n  }\n}\nlet ListFilterPipe = class ListFilterPipe {\n  transform(items, filter) {\n    if (!items || !filter) {\n      return items;\n    }\n    return items.filter(item => this.applyFilter(item, filter));\n  }\n  applyFilter(item, filter) {\n    if (typeof item.text === 'string' && typeof filter.text === 'string') {\n      return !(filter.text && item.text && item.text.toLowerCase().indexOf(filter.text.toLowerCase()) === -1);\n    } else {\n      return !(filter.text && item.text && item.text.toString().toLowerCase().indexOf(filter.text.toString().toLowerCase()) === -1);\n    }\n  }\n};\nListFilterPipe = __decorate([Pipe({\n  name: 'multiSelectFilter',\n  pure: false\n})], ListFilterPipe);\nconst DROPDOWN_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MultiSelectComponent),\n  multi: true\n};\nconst noop = () => {};\nconst Éµ0 = noop;\nlet MultiSelectComponent = class MultiSelectComponent {\n  constructor(listFilterPipe, cdr) {\n    this.listFilterPipe = listFilterPipe;\n    this.cdr = cdr;\n    this._data = [];\n    this.selectedItems = [];\n    this.isDropdownOpen = true;\n    this._placeholder = \"Select\";\n    this._sourceDataType = null; // to keep note of the source data type. could be array of string/number/object\n    this._sourceDataFields = []; // store source data fields names\n    this.filter = new ListItem(this.data);\n    this.defaultSettings = {\n      singleSelection: false,\n      idField: \"id\",\n      textField: \"text\",\n      tooltipField: \"tooltip\",\n      disabledField: \"isDisabled\",\n      enableCheckAll: true,\n      selectAllText: \"Select All\",\n      unSelectAllText: \"UnSelect All\",\n      allowSearchFilter: false,\n      limitSelection: -1,\n      clearSearchFilter: true,\n      maxHeight: 197,\n      itemsShowLimit: 999999999999,\n      searchPlaceholderText: \"Search\",\n      noDataAvailablePlaceholderText: \"No data available\",\n      noFilteredDataAvailablePlaceholderText: \"No filtered data available\",\n      closeDropDownOnSelection: false,\n      showSelectedItemsAtTop: false,\n      defaultOpen: false,\n      allowRemoteDataSearch: false\n    };\n    this.disabled = false;\n    this.onFilterChange = new EventEmitter();\n    this.onDropDownClose = new EventEmitter();\n    this.onSelect = new EventEmitter();\n    this.onDeSelect = new EventEmitter();\n    this.onSelectAll = new EventEmitter();\n    this.onDeSelectAll = new EventEmitter();\n    this.onTouchedCallback = noop;\n    this.onChangeCallback = noop;\n  }\n  set placeholder(value) {\n    if (value) {\n      this._placeholder = value;\n    } else {\n      this._placeholder = \"Select\";\n    }\n  }\n  set settings(value) {\n    if (value) {\n      this._settings = Object.assign(this.defaultSettings, value);\n    } else {\n      this._settings = Object.assign(this.defaultSettings);\n    }\n  }\n  set data(value) {\n    if (!value) {\n      this._data = [];\n    } else {\n      const firstItem = value[0];\n      this._sourceDataType = typeof firstItem;\n      this._sourceDataFields = this.getFields(firstItem);\n      this._data = value.map(item => this.deobjectify(item));\n    }\n  }\n  onFilterTextChange($event) {\n    this.onFilterChange.emit($event);\n  }\n  onItemClick($event, item) {\n    if (this.disabled || item.isDisabled) {\n      return false;\n    }\n    const found = this.isSelected(item);\n    const allowAdd = this._settings.limitSelection === -1 || this._settings.limitSelection > 0 && this.selectedItems.length < this._settings.limitSelection;\n    if (!found) {\n      if (allowAdd) {\n        this.addSelected(item);\n      }\n    } else {\n      this.removeSelected(item);\n    }\n    if (this._settings.singleSelection && this._settings.closeDropDownOnSelection) {\n      this.closeDropdown();\n    }\n  }\n  writeValue(value) {\n    if (value !== undefined && value !== null && value.length > 0) {\n      if (this._settings.singleSelection) {\n        try {\n          if (value.length >= 1) {\n            this.selectedItems = [this.deobjectify(value[0])];\n          }\n        } catch (e) {\n          // console.error(e.body.msg);\n        }\n      } else {\n        const _data = value.map(item => this.deobjectify(item));\n        if (this._settings.limitSelection > 0) {\n          this.selectedItems = _data.splice(0, this._settings.limitSelection);\n        } else {\n          this.selectedItems = _data;\n        }\n      }\n    } else {\n      this.selectedItems = [];\n    }\n    this.onChangeCallback(value);\n    this.cdr.markForCheck();\n  }\n  // From ControlValueAccessor interface\n  registerOnChange(fn) {\n    this.onChangeCallback = fn;\n  }\n  // From ControlValueAccessor interface\n  registerOnTouched(fn) {\n    this.onTouchedCallback = fn;\n  }\n  // Set touched on blur\n  onTouched() {\n    // this.closeDropdown();\n    this.onTouchedCallback();\n  }\n  trackByFn(index, item) {\n    return item.id;\n  }\n  isSelected(clickedItem) {\n    let found = false;\n    this.selectedItems.forEach(item => {\n      if (clickedItem.id === item.id) {\n        found = true;\n      }\n    });\n    return found;\n  }\n  isLimitSelectionReached() {\n    return this._settings.limitSelection === this.selectedItems.length;\n  }\n  isAllItemsSelected() {\n    // get disabld item count\n    let filteredItems = this.listFilterPipe.transform(this._data, this.filter);\n    const itemDisabledCount = filteredItems.filter(item => item.isDisabled).length;\n    // take disabled items into consideration when checking\n    if ((!this.data || this.data.length === 0) && this._settings.allowRemoteDataSearch) {\n      return false;\n    }\n    return filteredItems.length === this.selectedItems.length + itemDisabledCount;\n  }\n  showButton() {\n    if (!this._settings.singleSelection) {\n      if (this._settings.limitSelection > 0) {\n        return false;\n      }\n      // this._settings.enableCheckAll = this._settings.limitSelection === -1 ? true : false;\n      return true; // !this._settings.singleSelection && this._settings.enableCheckAll && this._data.length > 0;\n    } else {\n      // should be disabled in single selection mode\n      return false;\n    }\n  }\n  itemShowRemaining() {\n    return this.selectedItems.length - this._settings.itemsShowLimit;\n  }\n  addSelected(item) {\n    if (this._settings.singleSelection) {\n      this.selectedItems = [];\n      this.selectedItems.push(item);\n    } else {\n      this.selectedItems.push(item);\n    }\n    this.onChangeCallback(this.emittedValue(this.selectedItems));\n    this.onSelect.emit(this.emittedValue(item));\n  }\n  removeSelected(itemSel) {\n    this.selectedItems.forEach(item => {\n      if (itemSel.id === item.id) {\n        this.selectedItems.splice(this.selectedItems.indexOf(item), 1);\n      }\n    });\n    this.onChangeCallback(this.emittedValue(this.selectedItems));\n    this.onDeSelect.emit(this.emittedValue(itemSel));\n  }\n  emittedValue(val) {\n    const selected = [];\n    if (Array.isArray(val)) {\n      val.map(item => {\n        selected.push(this.objectify(item));\n      });\n    } else {\n      if (val) {\n        return this.objectify(val);\n      }\n    }\n    return selected;\n  }\n  objectify(val) {\n    if (this._sourceDataType === 'object') {\n      const obj = {};\n      obj[this._settings.idField] = val.id;\n      obj[this._settings.textField] = val.text;\n      if (this._sourceDataFields.includes(this._settings.disabledField)) {\n        obj[this._settings.disabledField] = val.isDisabled;\n      }\n      if (this._sourceDataFields.includes(this._settings.tooltipField)) {\n        obj[this._settings.tooltipField] = val.tooltip;\n      }\n      return obj;\n    }\n    if (this._sourceDataType === 'number') {\n      return Number(val.id);\n    } else {\n      return val.text;\n    }\n  }\n  deobjectify(item) {\n    if (typeof item === \"string\" || typeof item === \"number\") {\n      return new ListItem(item);\n    } else {\n      return new ListItem({\n        id: item[this._settings.idField],\n        text: item[this._settings.textField],\n        tooltip: item[this._settings.tooltipField],\n        isDisabled: item[this._settings.disabledField]\n      });\n    }\n  }\n  toggleDropdown(evt) {\n    evt.preventDefault();\n    if (this.disabled && this._settings.singleSelection) {\n      return;\n    }\n    this._settings.defaultOpen = !this._settings.defaultOpen;\n    if (!this._settings.defaultOpen) {\n      this.onDropDownClose.emit();\n    }\n  }\n  closeDropdown() {\n    this._settings.defaultOpen = false;\n    // clear search text\n    if (this._settings.clearSearchFilter) {\n      this.filter.text = \"\";\n    }\n    this.onDropDownClose.emit();\n  }\n  toggleSelectAll() {\n    if (this.disabled) {\n      return false;\n    }\n    if (!this.isAllItemsSelected()) {\n      // filter out disabled item first before slicing\n      this.selectedItems = this.listFilterPipe.transform(this._data, this.filter).filter(item => !item.isDisabled).slice();\n      this.onSelectAll.emit(this.emittedValue(this.selectedItems));\n    } else {\n      this.selectedItems = [];\n      this.onDeSelectAll.emit(this.emittedValue(this.selectedItems));\n    }\n    this.onChangeCallback(this.emittedValue(this.selectedItems));\n  }\n  getFields(inputData) {\n    const fields = [];\n    if (typeof inputData !== \"object\") {\n      return fields;\n    }\n    // tslint:disable-next-line:forin\n    for (const prop in inputData) {\n      fields.push(prop);\n    }\n    return fields;\n  }\n};\nMultiSelectComponent.ctorParameters = () => [{\n  type: ListFilterPipe\n}, {\n  type: ChangeDetectorRef\n}];\n__decorate([Input()], MultiSelectComponent.prototype, \"placeholder\", null);\n__decorate([Input()], MultiSelectComponent.prototype, \"disabled\", void 0);\n__decorate([Input()], MultiSelectComponent.prototype, \"settings\", null);\n__decorate([Input()], MultiSelectComponent.prototype, \"data\", null);\n__decorate([Output(\"onFilterChange\")], MultiSelectComponent.prototype, \"onFilterChange\", void 0);\n__decorate([Output(\"onDropDownClose\")], MultiSelectComponent.prototype, \"onDropDownClose\", void 0);\n__decorate([Output(\"onSelect\")], MultiSelectComponent.prototype, \"onSelect\", void 0);\n__decorate([Output(\"onDeSelect\")], MultiSelectComponent.prototype, \"onDeSelect\", void 0);\n__decorate([Output(\"onSelectAll\")], MultiSelectComponent.prototype, \"onSelectAll\", void 0);\n__decorate([Output(\"onDeSelectAll\")], MultiSelectComponent.prototype, \"onDeSelectAll\", void 0);\n__decorate([HostListener(\"blur\")], MultiSelectComponent.prototype, \"onTouched\", null);\nMultiSelectComponent = __decorate([Component({\n  selector: \"ng-multiselect-dropdown\",\n  template: \"<div tabindex=\\\"0\\\" (blur)=\\\"onTouched()\\\" class=\\\"multiselect-dropdown\\\" (clickOutside)=\\\"closeDropdown()\\\">\\n  <div [class.disabled]=\\\"disabled\\\">\\n    <span tabindex=\\\"-1\\\" class=\\\"dropdown-btn\\\" (click)=\\\"toggleDropdown($event)\\\">\\n      <span *ngIf=\\\"selectedItems.length == 0\\\">{{_placeholder}}</span>\\n      <span *ngFor=\\\"let item of selectedItems; trackBy: trackByFn;let k = index\\\" class=\\\"selected-item-container\\\" >\\n        <span class=\\\"selected-item\\\"  [hidden]=\\\"k  > (this._settings.itemsShowLimit-1)\\\" [attr.title]=\\\"item.tooltip\\\">\\n          <span >{{item.text}}&nbsp;</span>\\n          <a style=\\\"padding-left:2px;color:white\\\" (click)=\\\"onItemClick($event,item)\\\">x</a>\\n        </span>\\n\\n      </span>\\n      <span [ngClass]=\\\"{ 'dropdown-multiselect--active': _settings.defaultOpen }\\\" style=\\\"float:right !important;padding-right:4px\\\">\\n        <span style=\\\"padding-right: 15px;\\\" *ngIf=\\\"itemShowRemaining()>0\\\">+{{itemShowRemaining()}}</span>\\n        <span class=\\\"dropdown-multiselect__caret\\\"></span>\\n      </span>\\n    </span>\\n  </div>\\n  <div class=\\\"dropdown-list\\\" [hidden]=\\\"!_settings.defaultOpen\\\">\\n    <ul class=\\\"item1\\\">\\n      <li (click)=\\\"toggleSelectAll()\\\" *ngIf=\\\"(_data.length > 0 || _settings.allowRemoteDataSearch) && !_settings.singleSelection && _settings.enableCheckAll && _settings.limitSelection===-1\\\" class=\\\"multiselect-item-checkbox\\\" style=\\\"border-bottom: 1px solid #ccc;padding:10px\\\">\\n        <input type=\\\"checkbox\\\" aria-label=\\\"multiselect-select-all\\\" [checked]=\\\"isAllItemsSelected()\\\" [disabled]=\\\"disabled || isLimitSelectionReached()\\\" />\\n        <div>{{!isAllItemsSelected() ? _settings.selectAllText : _settings.unSelectAllText}}</div>\\n      </li>\\n      <li class=\\\"filter-textbox\\\" *ngIf=\\\"(_data.length>0 || _settings.allowRemoteDataSearch) && _settings.allowSearchFilter\\\">\\n        <input type=\\\"text\\\" aria-label=\\\"multiselect-search\\\" [readOnly]=\\\"disabled\\\" [placeholder]=\\\"_settings.searchPlaceholderText\\\" [(ngModel)]=\\\"filter.text\\\" (ngModelChange)=\\\"onFilterTextChange($event)\\\">\\n      </li>\\n    </ul>\\n    <ul class=\\\"item2\\\" [style.maxHeight]=\\\"_settings.maxHeight+'px'\\\">\\n      <li *ngFor=\\\"let item of _data | multiSelectFilter:filter; let i = index;\\\" (click)=\\\"onItemClick($event,item)\\\" class=\\\"multiselect-item-checkbox\\\" [attr.title]=\\\"item.tooltip\\\">\\n        <input type=\\\"checkbox\\\" [attr.aria-label]=\\\"item.text\\\" [checked]=\\\"isSelected(item)\\\" [disabled]=\\\"disabled || (isLimitSelectionReached() && !isSelected(item)) || item.isDisabled\\\" />\\n        <div>{{item.text}}</div>\\n      </li>\\n      <li class='no-filtered-data' *ngIf=\\\"_data.length != 0 && (_data | multiSelectFilter:filter).length == 0 && !_settings.allowRemoteDataSearch\\\">\\n        <h5>{{_settings.noFilteredDataAvailablePlaceholderText}}</h5>\\n      </li>\\n      <li class='no-data' *ngIf=\\\"_data.length == 0 && !_settings.allowRemoteDataSearch\\\">\\n        <h5>{{_settings.noDataAvailablePlaceholderText}}</h5>\\n      </li>\\n    </ul>\\n  </div>\\n</div>\\n\",\n  providers: [DROPDOWN_CONTROL_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [\".multiselect-dropdown{position:relative;width:100%;font-size:inherit;font-family:inherit}.multiselect-dropdown .dropdown-btn{display:inline-block;border:1px solid #adadad;width:100%;padding:6px 12px;margin-bottom:0;font-weight:400;line-height:1.52857143;text-align:left;vertical-align:middle;cursor:pointer;background-image:none;border-radius:4px}.multiselect-dropdown .dropdown-btn .selected-item-container{display:flex;float:left;max-width:93%}.multiselect-dropdown .dropdown-btn .selected-item-container .selected-item{border:1px solid #337ab7;margin-right:4px;margin-bottom:4px;background:#337ab7;padding:0 5px;color:#fff;border-radius:2px;float:left}.multiselect-dropdown .dropdown-btn .selected-item-container .selected-item span{overflow:hidden;text-overflow:ellipsis}.multiselect-dropdown .dropdown-btn .selected-item-container .selected-item a{text-decoration:none}.multiselect-dropdown .dropdown-btn .selected-item:hover{box-shadow:1px 1px #959595}.multiselect-dropdown .dropdown-btn .dropdown-multiselect__caret{line-height:16px;display:block;position:absolute;box-sizing:border-box;width:40px;height:38px;right:1px;top:0;padding:4px 8px;margin:0;text-decoration:none;text-align:center;cursor:pointer;transition:transform .2s}.multiselect-dropdown .dropdown-btn .dropdown-multiselect__caret:before{position:relative;right:0;top:65%;color:#999;margin-top:4px;border-style:solid;border-width:8px 8px 0;border-color:#999 transparent;content:\\\"\\\"}.multiselect-dropdown .dropdown-btn .dropdown-multiselect--active .dropdown-multiselect__caret{transform:rotateZ(180deg)}.multiselect-dropdown .disabled>span{background-color:#eceeef}.dropdown-list{position:absolute;padding-top:6px;width:100%;z-index:9999;border:1px solid #ccc;border-radius:3px;background:#fff;margin-top:10px;box-shadow:0 1px 5px #959595}.dropdown-list ul{padding:0;list-style:none;overflow:auto;margin:0}.dropdown-list li{padding:6px 10px;cursor:pointer;text-align:left}.dropdown-list .filter-textbox{border-bottom:1px solid #ccc;position:relative;padding:10px}.dropdown-list .filter-textbox input{border:0;width:100%;padding:0 0 0 26px}.dropdown-list .filter-textbox input:focus{outline:0}.multiselect-item-checkbox:hover{background-color:#e4e3e3}.multiselect-item-checkbox input[type=checkbox]{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.multiselect-item-checkbox input[type=checkbox]:focus+div:before,.multiselect-item-checkbox input[type=checkbox]:hover+div:before{border-color:#337ab7;background-color:#f2f2f2}.multiselect-item-checkbox input[type=checkbox]:active+div:before{transition-duration:0s}.multiselect-item-checkbox input[type=checkbox]+div{position:relative;padding-left:2em;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;margin:0;color:#000}.multiselect-item-checkbox input[type=checkbox]+div:before{box-sizing:content-box;content:\\\"\\\";color:#337ab7;position:absolute;top:50%;left:0;width:14px;height:14px;margin-top:-9px;border:2px solid #337ab7;text-align:center;transition:.4s}.multiselect-item-checkbox input[type=checkbox]+div:after{box-sizing:content-box;content:\\\"\\\";position:absolute;transform:scale(0);transform-origin:50%;transition:transform .2s ease-out;background-color:transparent;top:50%;left:4px;width:8px;height:3px;margin-top:-4px;border-style:solid;border-color:#fff;border-width:0 0 3px 3px;-o-border-image:none;border-image:none;transform:rotate(-45deg) scale(0)}.multiselect-item-checkbox input[type=checkbox]:disabled+div:before{border-color:#ccc}.multiselect-item-checkbox input[type=checkbox]:disabled:focus+div:before .multiselect-item-checkbox input[type=checkbox]:disabled:hover+div:before{background-color:inherit}.multiselect-item-checkbox input[type=checkbox]:disabled:checked+div:before{background-color:#ccc}.multiselect-item-checkbox input[type=checkbox]:checked+div:after{content:\\\"\\\";transition:transform .2s ease-out;transform:rotate(-45deg) scale(1)}.multiselect-item-checkbox input[type=checkbox]:checked+div:before{-webkit-animation:.2s ease-in borderscale;animation:.2s ease-in borderscale;background:#337ab7}@-webkit-keyframes borderscale{50%{box-shadow:0 0 0 2px #337ab7}}@keyframes borderscale{50%{box-shadow:0 0 0 2px #337ab7}}\"]\n})], MultiSelectComponent);\nlet ClickOutsideDirective = class ClickOutsideDirective {\n  constructor(_elementRef) {\n    this._elementRef = _elementRef;\n    this.clickOutside = new EventEmitter();\n  }\n  onClick(event, targetElement) {\n    if (!targetElement) {\n      return;\n    }\n    const clickedInside = this._elementRef.nativeElement.contains(targetElement);\n    if (!clickedInside) {\n      this.clickOutside.emit(event);\n    }\n  }\n};\nClickOutsideDirective.ctorParameters = () => [{\n  type: ElementRef\n}];\n__decorate([Output()], ClickOutsideDirective.prototype, \"clickOutside\", void 0);\n__decorate([HostListener('document:click', ['$event', '$event.target'])], ClickOutsideDirective.prototype, \"onClick\", null);\nClickOutsideDirective = __decorate([Directive({\n  selector: '[clickOutside]'\n})], ClickOutsideDirective);\nvar NgMultiSelectDropDownModule_1;\nlet NgMultiSelectDropDownModule = NgMultiSelectDropDownModule_1 = class NgMultiSelectDropDownModule {\n  static forRoot() {\n    return {\n      ngModule: NgMultiSelectDropDownModule_1\n    };\n  }\n};\nNgMultiSelectDropDownModule = NgMultiSelectDropDownModule_1 = __decorate([NgModule({\n  imports: [CommonModule, FormsModule],\n  declarations: [MultiSelectComponent, ClickOutsideDirective, ListFilterPipe],\n  providers: [ListFilterPipe],\n  exports: [MultiSelectComponent]\n})], NgMultiSelectDropDownModule);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MultiSelectComponent, NgMultiSelectDropDownModule, DROPDOWN_CONTROL_VALUE_ACCESSOR as Éµa, ListFilterPipe as Éµb, ClickOutsideDirective as Éµc };","map":{"version":3,"names":["__decorate","Pipe","forwardRef","EventEmitter","ChangeDetectorRef","Input","Output","HostListener","Component","ChangeDetectionStrategy","ElementRef","Directive","NgModule","NG_VALUE_ACCESSOR","FormsModule","CommonModule","ListItem","constructor","source","id","text","isDisabled","tooltip","ListFilterPipe","transform","items","filter","item","applyFilter","toLowerCase","indexOf","toString","name","pure","DROPDOWN_CONTROL_VALUE_ACCESSOR","provide","useExisting","MultiSelectComponent","multi","noop","Éµ0","listFilterPipe","cdr","_data","selectedItems","isDropdownOpen","_placeholder","_sourceDataType","_sourceDataFields","data","defaultSettings","singleSelection","idField","textField","tooltipField","disabledField","enableCheckAll","selectAllText","unSelectAllText","allowSearchFilter","limitSelection","clearSearchFilter","maxHeight","itemsShowLimit","searchPlaceholderText","noDataAvailablePlaceholderText","noFilteredDataAvailablePlaceholderText","closeDropDownOnSelection","showSelectedItemsAtTop","defaultOpen","allowRemoteDataSearch","disabled","onFilterChange","onDropDownClose","onSelect","onDeSelect","onSelectAll","onDeSelectAll","onTouchedCallback","onChangeCallback","placeholder","value","settings","_settings","Object","assign","firstItem","getFields","map","deobjectify","onFilterTextChange","$event","emit","onItemClick","found","isSelected","allowAdd","length","addSelected","removeSelected","closeDropdown","writeValue","undefined","e","splice","markForCheck","registerOnChange","fn","registerOnTouched","onTouched","trackByFn","index","clickedItem","forEach","isLimitSelectionReached","isAllItemsSelected","filteredItems","itemDisabledCount","showButton","itemShowRemaining","push","emittedValue","itemSel","val","selected","Array","isArray","objectify","obj","includes","Number","toggleDropdown","evt","preventDefault","toggleSelectAll","slice","inputData","fields","prop","ctorParameters","type","prototype","selector","template","providers","changeDetection","OnPush","styles","ClickOutsideDirective","_elementRef","clickOutside","onClick","event","targetElement","clickedInside","nativeElement","contains","NgMultiSelectDropDownModule_1","NgMultiSelectDropDownModule","forRoot","ngModule","imports","declarations","exports","Éµa","Éµb","Éµc"],"sources":["D:/alodelivery test/node_modules/ng-multiselect-dropdown/fesm2015/ng-multiselect-dropdown.js"],"sourcesContent":["import { __decorate } from 'tslib';\nimport { Pipe, forwardRef, EventEmitter, ChangeDetectorRef, Input, Output, HostListener, Component, ChangeDetectionStrategy, ElementRef, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nclass ListItem {\n    constructor(source) {\n        if (typeof source === 'string' || typeof source === 'number') {\n            this.id = this.text = source;\n            this.isDisabled = false;\n        }\n        if (typeof source === 'object') {\n            this.id = source.id;\n            this.text = source.text;\n            this.tooltip = source.tooltip;\n            this.isDisabled = source.isDisabled;\n        }\n    }\n}\n\nlet ListFilterPipe = class ListFilterPipe {\n    transform(items, filter) {\n        if (!items || !filter) {\n            return items;\n        }\n        return items.filter((item) => this.applyFilter(item, filter));\n    }\n    applyFilter(item, filter) {\n        if (typeof item.text === 'string' && typeof filter.text === 'string') {\n            return !(filter.text && item.text && item.text.toLowerCase().indexOf(filter.text.toLowerCase()) === -1);\n        }\n        else {\n            return !(filter.text && item.text && item.text.toString().toLowerCase().indexOf(filter.text.toString().toLowerCase()) === -1);\n        }\n    }\n};\nListFilterPipe = __decorate([\n    Pipe({\n        name: 'multiSelectFilter',\n        pure: false\n    })\n], ListFilterPipe);\n\nconst DROPDOWN_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MultiSelectComponent),\n    multi: true\n};\nconst noop = () => { };\nconst Éµ0 = noop;\nlet MultiSelectComponent = class MultiSelectComponent {\n    constructor(listFilterPipe, cdr) {\n        this.listFilterPipe = listFilterPipe;\n        this.cdr = cdr;\n        this._data = [];\n        this.selectedItems = [];\n        this.isDropdownOpen = true;\n        this._placeholder = \"Select\";\n        this._sourceDataType = null; // to keep note of the source data type. could be array of string/number/object\n        this._sourceDataFields = []; // store source data fields names\n        this.filter = new ListItem(this.data);\n        this.defaultSettings = {\n            singleSelection: false,\n            idField: \"id\",\n            textField: \"text\",\n            tooltipField: \"tooltip\",\n            disabledField: \"isDisabled\",\n            enableCheckAll: true,\n            selectAllText: \"Select All\",\n            unSelectAllText: \"UnSelect All\",\n            allowSearchFilter: false,\n            limitSelection: -1,\n            clearSearchFilter: true,\n            maxHeight: 197,\n            itemsShowLimit: 999999999999,\n            searchPlaceholderText: \"Search\",\n            noDataAvailablePlaceholderText: \"No data available\",\n            noFilteredDataAvailablePlaceholderText: \"No filtered data available\",\n            closeDropDownOnSelection: false,\n            showSelectedItemsAtTop: false,\n            defaultOpen: false,\n            allowRemoteDataSearch: false\n        };\n        this.disabled = false;\n        this.onFilterChange = new EventEmitter();\n        this.onDropDownClose = new EventEmitter();\n        this.onSelect = new EventEmitter();\n        this.onDeSelect = new EventEmitter();\n        this.onSelectAll = new EventEmitter();\n        this.onDeSelectAll = new EventEmitter();\n        this.onTouchedCallback = noop;\n        this.onChangeCallback = noop;\n    }\n    set placeholder(value) {\n        if (value) {\n            this._placeholder = value;\n        }\n        else {\n            this._placeholder = \"Select\";\n        }\n    }\n    set settings(value) {\n        if (value) {\n            this._settings = Object.assign(this.defaultSettings, value);\n        }\n        else {\n            this._settings = Object.assign(this.defaultSettings);\n        }\n    }\n    set data(value) {\n        if (!value) {\n            this._data = [];\n        }\n        else {\n            const firstItem = value[0];\n            this._sourceDataType = typeof firstItem;\n            this._sourceDataFields = this.getFields(firstItem);\n            this._data = value.map(item => this.deobjectify(item));\n        }\n    }\n    onFilterTextChange($event) {\n        this.onFilterChange.emit($event);\n    }\n    onItemClick($event, item) {\n        if (this.disabled || item.isDisabled) {\n            return false;\n        }\n        const found = this.isSelected(item);\n        const allowAdd = this._settings.limitSelection === -1 || (this._settings.limitSelection > 0 && this.selectedItems.length < this._settings.limitSelection);\n        if (!found) {\n            if (allowAdd) {\n                this.addSelected(item);\n            }\n        }\n        else {\n            this.removeSelected(item);\n        }\n        if (this._settings.singleSelection && this._settings.closeDropDownOnSelection) {\n            this.closeDropdown();\n        }\n    }\n    writeValue(value) {\n        if (value !== undefined && value !== null && value.length > 0) {\n            if (this._settings.singleSelection) {\n                try {\n                    if (value.length >= 1) {\n                        this.selectedItems = [this.deobjectify(value[0])];\n                    }\n                }\n                catch (e) {\n                    // console.error(e.body.msg);\n                }\n            }\n            else {\n                const _data = value.map((item) => this.deobjectify(item));\n                if (this._settings.limitSelection > 0) {\n                    this.selectedItems = _data.splice(0, this._settings.limitSelection);\n                }\n                else {\n                    this.selectedItems = _data;\n                }\n            }\n        }\n        else {\n            this.selectedItems = [];\n        }\n        this.onChangeCallback(value);\n        this.cdr.markForCheck();\n    }\n    // From ControlValueAccessor interface\n    registerOnChange(fn) {\n        this.onChangeCallback = fn;\n    }\n    // From ControlValueAccessor interface\n    registerOnTouched(fn) {\n        this.onTouchedCallback = fn;\n    }\n    // Set touched on blur\n    onTouched() {\n        // this.closeDropdown();\n        this.onTouchedCallback();\n    }\n    trackByFn(index, item) {\n        return item.id;\n    }\n    isSelected(clickedItem) {\n        let found = false;\n        this.selectedItems.forEach(item => {\n            if (clickedItem.id === item.id) {\n                found = true;\n            }\n        });\n        return found;\n    }\n    isLimitSelectionReached() {\n        return this._settings.limitSelection === this.selectedItems.length;\n    }\n    isAllItemsSelected() {\n        // get disabld item count\n        let filteredItems = this.listFilterPipe.transform(this._data, this.filter);\n        const itemDisabledCount = filteredItems.filter(item => item.isDisabled).length;\n        // take disabled items into consideration when checking\n        if ((!this.data || this.data.length === 0) && this._settings.allowRemoteDataSearch) {\n            return false;\n        }\n        return filteredItems.length === this.selectedItems.length + itemDisabledCount;\n    }\n    showButton() {\n        if (!this._settings.singleSelection) {\n            if (this._settings.limitSelection > 0) {\n                return false;\n            }\n            // this._settings.enableCheckAll = this._settings.limitSelection === -1 ? true : false;\n            return true; // !this._settings.singleSelection && this._settings.enableCheckAll && this._data.length > 0;\n        }\n        else {\n            // should be disabled in single selection mode\n            return false;\n        }\n    }\n    itemShowRemaining() {\n        return this.selectedItems.length - this._settings.itemsShowLimit;\n    }\n    addSelected(item) {\n        if (this._settings.singleSelection) {\n            this.selectedItems = [];\n            this.selectedItems.push(item);\n        }\n        else {\n            this.selectedItems.push(item);\n        }\n        this.onChangeCallback(this.emittedValue(this.selectedItems));\n        this.onSelect.emit(this.emittedValue(item));\n    }\n    removeSelected(itemSel) {\n        this.selectedItems.forEach(item => {\n            if (itemSel.id === item.id) {\n                this.selectedItems.splice(this.selectedItems.indexOf(item), 1);\n            }\n        });\n        this.onChangeCallback(this.emittedValue(this.selectedItems));\n        this.onDeSelect.emit(this.emittedValue(itemSel));\n    }\n    emittedValue(val) {\n        const selected = [];\n        if (Array.isArray(val)) {\n            val.map(item => {\n                selected.push(this.objectify(item));\n            });\n        }\n        else {\n            if (val) {\n                return this.objectify(val);\n            }\n        }\n        return selected;\n    }\n    objectify(val) {\n        if (this._sourceDataType === 'object') {\n            const obj = {};\n            obj[this._settings.idField] = val.id;\n            obj[this._settings.textField] = val.text;\n            if (this._sourceDataFields.includes(this._settings.disabledField)) {\n                obj[this._settings.disabledField] = val.isDisabled;\n            }\n            if (this._sourceDataFields.includes(this._settings.tooltipField)) {\n                obj[this._settings.tooltipField] = val.tooltip;\n            }\n            return obj;\n        }\n        if (this._sourceDataType === 'number') {\n            return Number(val.id);\n        }\n        else {\n            return val.text;\n        }\n    }\n    deobjectify(item) {\n        if (typeof item === \"string\" || typeof item === \"number\") {\n            return new ListItem(item);\n        }\n        else {\n            return new ListItem({\n                id: item[this._settings.idField],\n                text: item[this._settings.textField],\n                tooltip: item[this._settings.tooltipField],\n                isDisabled: item[this._settings.disabledField]\n            });\n        }\n    }\n    toggleDropdown(evt) {\n        evt.preventDefault();\n        if (this.disabled && this._settings.singleSelection) {\n            return;\n        }\n        this._settings.defaultOpen = !this._settings.defaultOpen;\n        if (!this._settings.defaultOpen) {\n            this.onDropDownClose.emit();\n        }\n    }\n    closeDropdown() {\n        this._settings.defaultOpen = false;\n        // clear search text\n        if (this._settings.clearSearchFilter) {\n            this.filter.text = \"\";\n        }\n        this.onDropDownClose.emit();\n    }\n    toggleSelectAll() {\n        if (this.disabled) {\n            return false;\n        }\n        if (!this.isAllItemsSelected()) {\n            // filter out disabled item first before slicing\n            this.selectedItems = this.listFilterPipe.transform(this._data, this.filter).filter(item => !item.isDisabled).slice();\n            this.onSelectAll.emit(this.emittedValue(this.selectedItems));\n        }\n        else {\n            this.selectedItems = [];\n            this.onDeSelectAll.emit(this.emittedValue(this.selectedItems));\n        }\n        this.onChangeCallback(this.emittedValue(this.selectedItems));\n    }\n    getFields(inputData) {\n        const fields = [];\n        if (typeof inputData !== \"object\") {\n            return fields;\n        }\n        // tslint:disable-next-line:forin\n        for (const prop in inputData) {\n            fields.push(prop);\n        }\n        return fields;\n    }\n};\nMultiSelectComponent.ctorParameters = () => [\n    { type: ListFilterPipe },\n    { type: ChangeDetectorRef }\n];\n__decorate([\n    Input()\n], MultiSelectComponent.prototype, \"placeholder\", null);\n__decorate([\n    Input()\n], MultiSelectComponent.prototype, \"disabled\", void 0);\n__decorate([\n    Input()\n], MultiSelectComponent.prototype, \"settings\", null);\n__decorate([\n    Input()\n], MultiSelectComponent.prototype, \"data\", null);\n__decorate([\n    Output(\"onFilterChange\")\n], MultiSelectComponent.prototype, \"onFilterChange\", void 0);\n__decorate([\n    Output(\"onDropDownClose\")\n], MultiSelectComponent.prototype, \"onDropDownClose\", void 0);\n__decorate([\n    Output(\"onSelect\")\n], MultiSelectComponent.prototype, \"onSelect\", void 0);\n__decorate([\n    Output(\"onDeSelect\")\n], MultiSelectComponent.prototype, \"onDeSelect\", void 0);\n__decorate([\n    Output(\"onSelectAll\")\n], MultiSelectComponent.prototype, \"onSelectAll\", void 0);\n__decorate([\n    Output(\"onDeSelectAll\")\n], MultiSelectComponent.prototype, \"onDeSelectAll\", void 0);\n__decorate([\n    HostListener(\"blur\")\n], MultiSelectComponent.prototype, \"onTouched\", null);\nMultiSelectComponent = __decorate([\n    Component({\n        selector: \"ng-multiselect-dropdown\",\n        template: \"<div tabindex=\\\"0\\\" (blur)=\\\"onTouched()\\\" class=\\\"multiselect-dropdown\\\" (clickOutside)=\\\"closeDropdown()\\\">\\n  <div [class.disabled]=\\\"disabled\\\">\\n    <span tabindex=\\\"-1\\\" class=\\\"dropdown-btn\\\" (click)=\\\"toggleDropdown($event)\\\">\\n      <span *ngIf=\\\"selectedItems.length == 0\\\">{{_placeholder}}</span>\\n      <span *ngFor=\\\"let item of selectedItems; trackBy: trackByFn;let k = index\\\" class=\\\"selected-item-container\\\" >\\n        <span class=\\\"selected-item\\\"  [hidden]=\\\"k  > (this._settings.itemsShowLimit-1)\\\" [attr.title]=\\\"item.tooltip\\\">\\n          <span >{{item.text}}&nbsp;</span>\\n          <a style=\\\"padding-left:2px;color:white\\\" (click)=\\\"onItemClick($event,item)\\\">x</a>\\n        </span>\\n\\n      </span>\\n      <span [ngClass]=\\\"{ 'dropdown-multiselect--active': _settings.defaultOpen }\\\" style=\\\"float:right !important;padding-right:4px\\\">\\n        <span style=\\\"padding-right: 15px;\\\" *ngIf=\\\"itemShowRemaining()>0\\\">+{{itemShowRemaining()}}</span>\\n        <span class=\\\"dropdown-multiselect__caret\\\"></span>\\n      </span>\\n    </span>\\n  </div>\\n  <div class=\\\"dropdown-list\\\" [hidden]=\\\"!_settings.defaultOpen\\\">\\n    <ul class=\\\"item1\\\">\\n      <li (click)=\\\"toggleSelectAll()\\\" *ngIf=\\\"(_data.length > 0 || _settings.allowRemoteDataSearch) && !_settings.singleSelection && _settings.enableCheckAll && _settings.limitSelection===-1\\\" class=\\\"multiselect-item-checkbox\\\" style=\\\"border-bottom: 1px solid #ccc;padding:10px\\\">\\n        <input type=\\\"checkbox\\\" aria-label=\\\"multiselect-select-all\\\" [checked]=\\\"isAllItemsSelected()\\\" [disabled]=\\\"disabled || isLimitSelectionReached()\\\" />\\n        <div>{{!isAllItemsSelected() ? _settings.selectAllText : _settings.unSelectAllText}}</div>\\n      </li>\\n      <li class=\\\"filter-textbox\\\" *ngIf=\\\"(_data.length>0 || _settings.allowRemoteDataSearch) && _settings.allowSearchFilter\\\">\\n        <input type=\\\"text\\\" aria-label=\\\"multiselect-search\\\" [readOnly]=\\\"disabled\\\" [placeholder]=\\\"_settings.searchPlaceholderText\\\" [(ngModel)]=\\\"filter.text\\\" (ngModelChange)=\\\"onFilterTextChange($event)\\\">\\n      </li>\\n    </ul>\\n    <ul class=\\\"item2\\\" [style.maxHeight]=\\\"_settings.maxHeight+'px'\\\">\\n      <li *ngFor=\\\"let item of _data | multiSelectFilter:filter; let i = index;\\\" (click)=\\\"onItemClick($event,item)\\\" class=\\\"multiselect-item-checkbox\\\" [attr.title]=\\\"item.tooltip\\\">\\n        <input type=\\\"checkbox\\\" [attr.aria-label]=\\\"item.text\\\" [checked]=\\\"isSelected(item)\\\" [disabled]=\\\"disabled || (isLimitSelectionReached() && !isSelected(item)) || item.isDisabled\\\" />\\n        <div>{{item.text}}</div>\\n      </li>\\n      <li class='no-filtered-data' *ngIf=\\\"_data.length != 0 && (_data | multiSelectFilter:filter).length == 0 && !_settings.allowRemoteDataSearch\\\">\\n        <h5>{{_settings.noFilteredDataAvailablePlaceholderText}}</h5>\\n      </li>\\n      <li class='no-data' *ngIf=\\\"_data.length == 0 && !_settings.allowRemoteDataSearch\\\">\\n        <h5>{{_settings.noDataAvailablePlaceholderText}}</h5>\\n      </li>\\n    </ul>\\n  </div>\\n</div>\\n\",\n        providers: [DROPDOWN_CONTROL_VALUE_ACCESSOR],\n        changeDetection: ChangeDetectionStrategy.OnPush,\n        styles: [\".multiselect-dropdown{position:relative;width:100%;font-size:inherit;font-family:inherit}.multiselect-dropdown .dropdown-btn{display:inline-block;border:1px solid #adadad;width:100%;padding:6px 12px;margin-bottom:0;font-weight:400;line-height:1.52857143;text-align:left;vertical-align:middle;cursor:pointer;background-image:none;border-radius:4px}.multiselect-dropdown .dropdown-btn .selected-item-container{display:flex;float:left;max-width:93%}.multiselect-dropdown .dropdown-btn .selected-item-container .selected-item{border:1px solid #337ab7;margin-right:4px;margin-bottom:4px;background:#337ab7;padding:0 5px;color:#fff;border-radius:2px;float:left}.multiselect-dropdown .dropdown-btn .selected-item-container .selected-item span{overflow:hidden;text-overflow:ellipsis}.multiselect-dropdown .dropdown-btn .selected-item-container .selected-item a{text-decoration:none}.multiselect-dropdown .dropdown-btn .selected-item:hover{box-shadow:1px 1px #959595}.multiselect-dropdown .dropdown-btn .dropdown-multiselect__caret{line-height:16px;display:block;position:absolute;box-sizing:border-box;width:40px;height:38px;right:1px;top:0;padding:4px 8px;margin:0;text-decoration:none;text-align:center;cursor:pointer;transition:transform .2s}.multiselect-dropdown .dropdown-btn .dropdown-multiselect__caret:before{position:relative;right:0;top:65%;color:#999;margin-top:4px;border-style:solid;border-width:8px 8px 0;border-color:#999 transparent;content:\\\"\\\"}.multiselect-dropdown .dropdown-btn .dropdown-multiselect--active .dropdown-multiselect__caret{transform:rotateZ(180deg)}.multiselect-dropdown .disabled>span{background-color:#eceeef}.dropdown-list{position:absolute;padding-top:6px;width:100%;z-index:9999;border:1px solid #ccc;border-radius:3px;background:#fff;margin-top:10px;box-shadow:0 1px 5px #959595}.dropdown-list ul{padding:0;list-style:none;overflow:auto;margin:0}.dropdown-list li{padding:6px 10px;cursor:pointer;text-align:left}.dropdown-list .filter-textbox{border-bottom:1px solid #ccc;position:relative;padding:10px}.dropdown-list .filter-textbox input{border:0;width:100%;padding:0 0 0 26px}.dropdown-list .filter-textbox input:focus{outline:0}.multiselect-item-checkbox:hover{background-color:#e4e3e3}.multiselect-item-checkbox input[type=checkbox]{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.multiselect-item-checkbox input[type=checkbox]:focus+div:before,.multiselect-item-checkbox input[type=checkbox]:hover+div:before{border-color:#337ab7;background-color:#f2f2f2}.multiselect-item-checkbox input[type=checkbox]:active+div:before{transition-duration:0s}.multiselect-item-checkbox input[type=checkbox]+div{position:relative;padding-left:2em;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;margin:0;color:#000}.multiselect-item-checkbox input[type=checkbox]+div:before{box-sizing:content-box;content:\\\"\\\";color:#337ab7;position:absolute;top:50%;left:0;width:14px;height:14px;margin-top:-9px;border:2px solid #337ab7;text-align:center;transition:.4s}.multiselect-item-checkbox input[type=checkbox]+div:after{box-sizing:content-box;content:\\\"\\\";position:absolute;transform:scale(0);transform-origin:50%;transition:transform .2s ease-out;background-color:transparent;top:50%;left:4px;width:8px;height:3px;margin-top:-4px;border-style:solid;border-color:#fff;border-width:0 0 3px 3px;-o-border-image:none;border-image:none;transform:rotate(-45deg) scale(0)}.multiselect-item-checkbox input[type=checkbox]:disabled+div:before{border-color:#ccc}.multiselect-item-checkbox input[type=checkbox]:disabled:focus+div:before .multiselect-item-checkbox input[type=checkbox]:disabled:hover+div:before{background-color:inherit}.multiselect-item-checkbox input[type=checkbox]:disabled:checked+div:before{background-color:#ccc}.multiselect-item-checkbox input[type=checkbox]:checked+div:after{content:\\\"\\\";transition:transform .2s ease-out;transform:rotate(-45deg) scale(1)}.multiselect-item-checkbox input[type=checkbox]:checked+div:before{-webkit-animation:.2s ease-in borderscale;animation:.2s ease-in borderscale;background:#337ab7}@-webkit-keyframes borderscale{50%{box-shadow:0 0 0 2px #337ab7}}@keyframes borderscale{50%{box-shadow:0 0 0 2px #337ab7}}\"]\n    })\n], MultiSelectComponent);\n\nlet ClickOutsideDirective = class ClickOutsideDirective {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n        this.clickOutside = new EventEmitter();\n    }\n    onClick(event, targetElement) {\n        if (!targetElement) {\n            return;\n        }\n        const clickedInside = this._elementRef.nativeElement.contains(targetElement);\n        if (!clickedInside) {\n            this.clickOutside.emit(event);\n        }\n    }\n};\nClickOutsideDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\n__decorate([\n    Output()\n], ClickOutsideDirective.prototype, \"clickOutside\", void 0);\n__decorate([\n    HostListener('document:click', ['$event', '$event.target'])\n], ClickOutsideDirective.prototype, \"onClick\", null);\nClickOutsideDirective = __decorate([\n    Directive({\n        selector: '[clickOutside]'\n    })\n], ClickOutsideDirective);\n\nvar NgMultiSelectDropDownModule_1;\nlet NgMultiSelectDropDownModule = NgMultiSelectDropDownModule_1 = class NgMultiSelectDropDownModule {\n    static forRoot() {\n        return {\n            ngModule: NgMultiSelectDropDownModule_1\n        };\n    }\n};\nNgMultiSelectDropDownModule = NgMultiSelectDropDownModule_1 = __decorate([\n    NgModule({\n        imports: [CommonModule, FormsModule],\n        declarations: [MultiSelectComponent, ClickOutsideDirective, ListFilterPipe],\n        providers: [ListFilterPipe],\n        exports: [MultiSelectComponent]\n    })\n], NgMultiSelectDropDownModule);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MultiSelectComponent, NgMultiSelectDropDownModule, DROPDOWN_CONTROL_VALUE_ACCESSOR as Éµa, ListFilterPipe as Éµb, ClickOutsideDirective as Éµc };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}