{"ast":null,"code":"import { __read, __spread } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { system } from \"../System\";\nimport { registry } from \"../Registry\";\nimport { Container } from \"../Container\";\nimport { Component } from \"../Component\";\nimport { Paper } from \"../rendering/Paper\";\nimport { SVGContainer, svgContainers } from \"../rendering/SVGContainer\";\nimport { FocusFilter } from \"../rendering/filters/FocusFilter\";\nimport { Preloader } from \"../elements/Preloader\";\nimport { AmChartsLogo } from \"../elements/AmChartsLogo\";\nimport { Tooltip } from \"../elements/Tooltip\";\nimport { Disposer, MultiDisposer } from \"../utils/Disposer\";\nimport { percent } from \"./Percent\";\nimport { options } from \"../Options\";\nimport * as $array from \"./Array\";\nimport * as $type from \"./Type\";\nimport * as $dom from \"./DOM\";\nimport * as $utils from \"./Utils\";\nimport * as $log from \"./Log\";\n/**\r\n * ============================================================================\r\n * INSTANTIATION FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Creates all HTML and SVG containers needed for the chart instance, as well\r\n * as the new [[Sprite]] (as specified in `classType` parameter).\r\n *\r\n * @param htmlElement  A container to creat elements in\r\n * @param classType    A class definition of the new element to create\r\n * @return Newly-created Sprite object\r\n */\nfunction createChild(htmlElement, classType) {\n  var htmlContainer = $dom.getElement(htmlElement);\n  // If there's no container available yet, we create a fake one\n  var tmpContainer = false;\n  if (!htmlContainer) {\n    htmlContainer = document.createElement(\"div\");\n    htmlContainer.style.width = \"200px\";\n    htmlContainer.style.height = \"200px\";\n    htmlContainer.style.top = \"0\";\n    htmlContainer.style.left = \"0\";\n    htmlContainer.style.visibility = \"hidden\";\n    htmlContainer.style.position = \"absolute\";\n    document.body.appendChild(htmlContainer);\n    tmpContainer = true;\n  }\n  if (htmlContainer) {\n    htmlContainer.innerHTML = \"\";\n    //htmlContainer.style.overflow = \"hidden\";\n    var svgDiv_1 = new SVGContainer(htmlContainer);\n    var paper = new Paper(svgDiv_1.SVGContainer, \"svg-\" + (svgContainers.length - 1));\n    // the approach with masks is chosen because overflow:visible is set on SVG element in order tooltips could go outside\n    // svg area - this is often needed when working with small charts.\n    // main container which holds content container and tooltips container\n    var container_1 = new Container();\n    container_1.htmlContainer = htmlContainer;\n    container_1.svgContainer = svgDiv_1;\n    container_1.width = percent(100);\n    container_1.height = percent(100);\n    container_1.background.fillOpacity = 0;\n    container_1.paper = paper;\n    paper.append(container_1.group);\n    // Set up moving to proper element container if it's not yet ready at call time\n    if (tmpContainer) {\n      $dom.ready(function () {\n        container_1.moveHtmlContainer(htmlElement);\n      });\n    }\n    // this is set from parent container, but this one doesn't have, so do it manually.\n    container_1.relativeWidth = 1;\n    container_1.relativeHeight = 1;\n    svgDiv_1.container = container_1;\n    // creating classType instance\n    var sprite_1 = container_1.createChild(classType);\n    sprite_1.topParent = container_1;\n    var uid = sprite_1.uid;\n    registry.invalidSprites[uid] = [];\n    registry.invalidDatas[uid] = [];\n    registry.invalidPositions[uid] = [];\n    registry.invalidLayouts[uid] = [];\n    container_1.baseId = uid;\n    sprite_1.isBaseSprite = true;\n    sprite_1.focusFilter = new FocusFilter();\n    registry.baseSprites.push(sprite_1);\n    registry.baseSpritesByUid[uid] = sprite_1;\n    sprite_1.maskRectangle = {\n      x: 0,\n      y: 0,\n      width: Math.max(svgDiv_1.width || 0, 0),\n      height: Math.max(svgDiv_1.height || 0, 0)\n    };\n    // this solves issues with display:none, as all children are measured as 0x0\n    container_1.events.on(\"maxsizechanged\", function (event) {\n      if (event.previousWidth == 0 || event.previousHeight == 0) {\n        container_1.deepInvalidate();\n      }\n      if (sprite_1.maskRectangle) {\n        sprite_1.maskRectangle = {\n          x: 0,\n          y: 0,\n          width: Math.max(svgDiv_1.width || 0, 0),\n          height: Math.max(svgDiv_1.height || 0, 0)\n        };\n      }\n    });\n    var loopTimer_1 = null;\n    // Checks to see whether the chart was properly disposed or not\n    var loop_1 = function () {\n      if (!sprite_1.isDisposed()) {\n        if ($dom.getRoot(sprite_1.dom) == null) {\n          if (options.autoDispose) {\n            container_1.htmlContainer = undefined;\n            svgDiv_1.htmlElement = undefined;\n            sprite_1.dispose();\n          } else {\n            $log.warn(\"Chart was not disposed\", sprite_1.uid);\n          }\n          loopTimer_1 = null;\n        } else {\n          loopTimer_1 = window.setTimeout(loop_1, 1000);\n        }\n      } else {\n        loopTimer_1 = null;\n      }\n    };\n    loop_1();\n    sprite_1.addDisposer(new Disposer(function () {\n      if (loopTimer_1 !== null) {\n        clearTimeout(loopTimer_1);\n      }\n      $array.remove(registry.baseSprites, sprite_1);\n      registry.baseSpritesByUid[sprite_1.uid] = undefined;\n    }));\n    // TODO figure out a better way of doing this\n    sprite_1.addDisposer(container_1);\n    // tooltip container\n    var tooltipContainer_1 = container_1.createChild(Container);\n    tooltipContainer_1.topParent = container_1;\n    tooltipContainer_1.width = percent(100);\n    tooltipContainer_1.height = percent(100);\n    tooltipContainer_1.isMeasured = false;\n    container_1.tooltipContainer = tooltipContainer_1;\n    sprite_1.tooltip = new Tooltip();\n    sprite_1.tooltip.hide(0);\n    sprite_1.tooltip.setBounds({\n      x: 0,\n      y: 0,\n      width: tooltipContainer_1.maxWidth,\n      height: tooltipContainer_1.maxHeight\n    });\n    tooltipContainer_1.events.on(\"maxsizechanged\", function () {\n      $type.getValue(sprite_1.tooltip).setBounds({\n        x: 0,\n        y: 0,\n        width: tooltipContainer_1.maxWidth,\n        height: tooltipContainer_1.maxHeight\n      });\n    }, undefined, false);\n    //@todo: maybe we don't need to create one by default but only on request?\n    var preloader_1 = new Preloader();\n    preloader_1.events.on(\"inited\", function () {\n      preloader_1.__disabled = true;\n    }, undefined, false);\n    container_1.preloader = preloader_1;\n    //if (!options.commercialLicense) {\n    if (sprite_1 instanceof Container && !sprite_1.hasLicense()) {\n      var logo_1 = tooltipContainer_1.createChild(AmChartsLogo);\n      tooltipContainer_1.events.on(\"maxsizechanged\", function (ev) {\n        if (tooltipContainer_1.maxWidth <= 100 || tooltipContainer_1.maxHeight <= 50) {\n          logo_1.hide();\n        } else if (logo_1.isHidden || logo_1.isHiding) {\n          logo_1.show();\n        }\n      }, undefined, false);\n      sprite_1.logo = logo_1;\n      logo_1.align = \"left\";\n      logo_1.valign = \"bottom\";\n    }\n    $utils.used(sprite_1.numberFormatter); // need to create one.\n    // Set this as an autonomouse instance\n    // Controls like Preloader, Export will use this.\n    container_1.isStandaloneInstance = true;\n    if (options.onlyShowOnViewport) {\n      if (!$dom.isElementInViewport(htmlContainer, options.viewportTarget)) {\n        sprite_1.__disabled = true;\n        sprite_1.tooltipContainer.__disabled = true;\n        var disposers = [$dom.addEventListener(window, \"DOMContentLoaded\", function () {\n          viewPortHandler(sprite_1);\n        }), $dom.addEventListener(window, \"load\", function () {\n          viewPortHandler(sprite_1);\n        }), $dom.addEventListener(window, \"resize\", function () {\n          viewPortHandler(sprite_1);\n        }), $dom.addEventListener(window, \"scroll\", function () {\n          viewPortHandler(sprite_1);\n        })];\n        if (options.viewportTarget) {\n          var targets = $type.isArray(options.viewportTarget) ? options.viewportTarget : options.viewportTarget ? [options.viewportTarget] : [];\n          for (var i = 0; i < targets.length; i++) {\n            var target = targets[i];\n            disposers.push($dom.addEventListener(target, \"resize\", function () {\n              viewPortHandler(sprite_1);\n            }));\n            disposers.push($dom.addEventListener(target, \"scroll\", function () {\n              viewPortHandler(sprite_1);\n            }));\n          }\n        }\n        var disposer = new MultiDisposer(disposers);\n        sprite_1.addDisposer(disposer);\n        sprite_1.vpDisposer = disposer;\n      } else if (options.queue) {\n        addToQueue(sprite_1);\n      }\n    } else if (options.queue) {\n      addToQueue(sprite_1);\n    }\n    return sprite_1;\n  } else {\n    system.log(\"html container not found\");\n    throw new Error(\"html container not found\");\n  }\n}\n/**\r\n * Disposes all of the currently active charts.\r\n */\nexport function disposeAllCharts() {\n  while (registry.baseSprites.length !== 0) {\n    registry.baseSprites.pop().dispose();\n  }\n}\nexport function addToQueue(sprite) {\n  if (registry.queue.indexOf(sprite) == -1) {\n    sprite.__disabled = true;\n    sprite.tooltipContainer.__disabled = true;\n    sprite.events.disableType(\"appeared\");\n    if (registry.queue.length == 0) {\n      registry.events.once(\"exitframe\", function () {\n        queueHandler(sprite);\n      });\n      system.requestFrame();\n    }\n    sprite.addDisposer(new Disposer(function () {\n      removeFromQueue(sprite);\n    }));\n    registry.queue.push(sprite);\n  }\n}\nexport function removeFromQueue(sprite) {\n  var index = registry.queue.indexOf(sprite);\n  if (index >= 0) {\n    registry.queue.splice(registry.queue.indexOf(sprite), 1);\n    var nextSprite = registry.queue[index];\n    if (nextSprite) {\n      queueHandler(nextSprite);\n    }\n  }\n}\n/**\r\n * Checks whether the chart was not initialized fully due to setting\r\n * of `onlyShowOnViewport`. If it hasn't and is now in the viewport\r\n * the chart will be initialized.\r\n *\r\n * @since 4.9.12\r\n * @param  sprite  Top-level chart object\r\n */\nexport function viewPortHandler(sprite) {\n  if (sprite.__disabled && $dom.isElementInViewport(sprite.htmlContainer, options.viewportTarget)) {\n    if (sprite.vpDisposer) {\n      sprite.vpDisposer.dispose();\n    }\n    addToQueue(sprite);\n  }\n}\nexport function queueHandler(sprite) {\n  if (sprite && sprite.tooltipContainer) {\n    sprite.__disabled = false;\n    sprite.tooltipContainer.__disabled = false;\n    sprite.events.enableType(\"appeared\");\n    sprite.dispatch(\"removedfromqueue\");\n    if (sprite.showOnInit) {\n      sprite.events.on(\"appeared\", function () {\n        removeFromQueue(sprite);\n      });\n    }\n    if (sprite.vpDisposer) {\n      sprite.vpDisposer.dispose();\n    }\n    if (sprite instanceof Container) {\n      sprite.invalidateLabels();\n    }\n    if (sprite.tooltipContainer) {\n      sprite.tooltipContainer.invalidateLayout();\n    }\n    if (sprite instanceof Component) {\n      sprite.invalidateData();\n      sprite.reinit();\n      sprite.events.once(\"datavalidated\", function () {\n        if (sprite.showOnInit) {\n          sprite.appear();\n        } else {\n          removeFromQueue(sprite);\n        }\n      });\n    } else {\n      sprite.reinit();\n      sprite.events.once(\"inited\", function () {\n        removeFromQueue(sprite);\n      });\n      if (sprite.showOnInit) {\n        sprite.appear();\n      }\n    }\n  }\n}\n/**\r\n * A shortcut to creating a chart instance.\r\n *\r\n * The first argument is either a reference to or an id of a DOM element to be\r\n * used as a container for the chart.\r\n *\r\n * The second argument is the type reference of the chart type. (for plain\r\n * JavaScript users this can also be a string indicating chart type)\r\n *\r\n * ```TypeScript\r\n * let chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n * ```\r\n * ```JavaScript\r\n * // Can pass in chart type reference like this:\r\n * var chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n *\r\n * // ... or chart class type as a string:\r\n * var chart = am4core.create(\"chartdiv\", \"PieChart\");\r\n * ```\r\n *\r\n * @param htmlElement  Reference or id of the target container element\r\n * @param classType    Class type of the target chart type\r\n * @return Chart instance\r\n */\nexport function create(htmlElement, classType) {\n  // This is a nasty hack for the benefit of vanilla JS users, who do not\n  // enjoy benefits of type-check anyway.\n  // We're allowing passing in a name of the class rather than type reference\n  // itself.\n  var classError;\n  if ($type.isString(classType)) {\n    if ($type.hasValue(registry.registeredClasses[classType])) {\n      classType = registry.registeredClasses[classType];\n    } else {\n      classType = registry.registeredClasses[\"Container\"];\n      classError = new Error(\"Class [\" + classType + \"] is not loaded.\");\n    }\n  }\n  // Create the chart\n  var chart = createChild(htmlElement, classType);\n  // Error?\n  if (classError) {\n    chart.raiseCriticalError(classError);\n  }\n  return chart;\n}\n/**\r\n * A shortcut to creating a chart from a config object.\r\n *\r\n * Example:\r\n *\r\n * ```TypeScript\r\n * let chart am4core.createFromConfig({ ... }, \"chartdiv\", am4charts.XYChart );\r\n * ```\r\n * ```JavaScript\r\n * var chart am4core.createFromConfig({ ... }, \"chartdiv\", \"XYChart\" );\r\n * ```\r\n *\r\n * If `chartType` parameter is not supplied it must be set in a config object,\r\n * via reference to chart type, e.g.:\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": am4charts.XYChart,\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": am4charts.XYChart,\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * Or via string: (if you are using JavaScript)\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * A `container` can either be a reference to an HTML container to put chart\r\n * in, or it's unique id.\r\n *\r\n * If `container` is not specified, it must be included in the config object:\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   \"container\": \"chartdiv\",\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   \"container\": \"chartdiv\",\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * @param config       Config object in property/value pairs\r\n * @param htmlElement  Container reference or ID\r\n * @param objectType   Chart type\r\n * @return A newly created chart instance\r\n * @todo Throw exception if type is not correct\r\n */\nexport function createFromConfig(config, htmlElement, classType) {\n  // Extract chart type from config if necessary\n  if (!$type.hasValue(classType)) {\n    classType = config.type;\n    delete config.type;\n  }\n  // Extract element from config if necessary\n  if (!$type.hasValue(htmlElement)) {\n    htmlElement = config.container;\n    delete config.container;\n  }\n  // Check if we need to extract actual type reference\n  var finalType;\n  var classError;\n  if ($type.isString(classType) && $type.hasValue(registry.registeredClasses[classType])) {\n    finalType = registry.registeredClasses[classType];\n  } else if (typeof classType !== \"function\") {\n    finalType = Container;\n    classError = new Error(\"Class [\" + classType + \"] is not loaded.\");\n  } else {\n    finalType = classType;\n  }\n  // Create the chart\n  var chart = createChild(htmlElement, finalType);\n  // Set config\n  if (classError) {\n    chart.raiseCriticalError(classError);\n  } else {\n    chart.config = config;\n  }\n  return chart;\n}\n/**\r\n * Useful in creating real queues form mult-chart creation.\r\n *\r\n * Accepts a reference to a function which crates and returns actual chart\r\n * object.\r\n *\r\n * It returns a `Promise` which you can use to catch chart instance once it's\r\n * created.\r\n *\r\n * ```TypeScript\r\n * am4core.createDeferred(function(div) {\r\n *   // Create first chart\r\n *   let chart = am4core.create(div, am4charts.XYChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv1\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n *\r\n * am4core.createDeferred(function(div) {\r\n *   // Create second chart\r\n *   let chart = am4core.create(div, am4charts.PieChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv2\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * am4core.createDeferred(function(div) {\r\n *   // Create first chart\r\n *   var chart = am4core.create(div, am4charts.XYChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv1\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n *\r\n * am4core.createDeferred(function(div) {\r\n *   // Create second chart\r\n *   var chart = am4core.create(div, am4charts.PieChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv2\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n * ```\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/performance/#Deferred_daisy_chained_instantiation} for more information\r\n * @since 4.10.0\r\n * @param  callback  Callback function that creates chart\r\n * @param  scope     Scope to call callback in\r\n * @param  ...rest   Parameters to pass into callback\r\n * @return           Promise with chart instance\r\n */\nexport function createDeferred(callback, scope) {\n  var rest = [];\n  for (var _i = 2; _i < arguments.length; _i++) {\n    rest[_i - 2] = arguments[_i];\n  }\n  return new Promise(function (resolve, reject) {\n    registry.deferred.push({\n      scope: scope,\n      callback: callback,\n      args: rest,\n      resolve: resolve\n    });\n    if (registry.deferred.length == 1) {\n      processNextDeferred();\n    }\n  });\n}\nfunction processNextDeferred() {\n  var _a;\n  var next = registry.deferred[0];\n  if (next) {\n    var sprite_2 = (_a = next.callback).call.apply(_a, __spread([next.scope], next.args));\n    sprite_2.events.on(\"ready\", function () {\n      next.resolve(sprite_2);\n      registry.deferred.shift();\n      if (options.deferredDelay) {\n        setTimeout(processNextDeferred, options.deferredDelay);\n      } else {\n        processNextDeferred();\n      }\n    });\n  }\n}\n/**\r\n * Applies a theme to System, and subsequently all chart instances created\r\n * from that point forward.\r\n *\r\n * amCharts supports multiple themes. Calling `useTheme` multiple times will\r\n * make the System apply multiple themes, rather than overwrite previously\r\n * set one.\r\n *\r\n * This enables combining features from multiple themes on the same chart.\r\n * E.g.:\r\n *\r\n * ```TypeScript\r\n * am4core.useTheme(am4themes.material);\r\n * am4core.useTheme(am4themes.animated);\r\n * ```\r\n * ```JavaScript\r\n * am4core.useTheme(am4themes.material);\r\n * am4core.useTheme(am4themes.animated);\r\n * ```\r\n *\r\n * The above will apply both the Material color and animation options to all\r\n * charts created.\r\n *\r\n * @param value  A reference to a theme\r\n */\nexport function useTheme(value) {\n  if (registry.themes.indexOf(value) === -1) {\n    registry.themes.push(value);\n  }\n}\n/**\r\n * Removes a theme from \"active themes\" list, so it won't get applied to any\r\n * charts created subsequently.\r\n *\r\n * @param value  A reference to a theme\r\n */\nexport function unuseTheme(value) {\n  $array.remove(registry.themes, value);\n}\n/**\r\n * Removes all \"active\" themes. Any charts created subsequently will not have\r\n * any theme applied to them.\r\n */\nexport function unuseAllThemes() {\n  registry.themes = [];\n}\n/**\r\n * Adds a license, e.g.:\r\n *\r\n * ```TypeScript\r\n * am4core.addLicense(\"xxxxxxxx\");\r\n * ```\r\n * ```JavaScript\r\n * am4core.addLicense(\"xxxxxxxx\");\r\n * ```\r\n *\r\n * Multiple licenses can be added to cover for multiple products.\r\n *\r\n * @since 4.5.16\r\n * @param  license  License key\r\n */\nexport function addLicense(license) {\n  options.licenses.push(license);\n}","map":{"version":3,"names":["__read","__spread","system","registry","Container","Component","Paper","SVGContainer","svgContainers","FocusFilter","Preloader","AmChartsLogo","Tooltip","Disposer","MultiDisposer","percent","options","$array","$type","$dom","$utils","$log","createChild","htmlElement","classType","htmlContainer","getElement","tmpContainer","document","createElement","style","width","height","top","left","visibility","position","body","appendChild","innerHTML","svgDiv_1","paper","length","container_1","svgContainer","background","fillOpacity","append","group","ready","moveHtmlContainer","relativeWidth","relativeHeight","container","sprite_1","topParent","uid","invalidSprites","invalidDatas","invalidPositions","invalidLayouts","baseId","isBaseSprite","focusFilter","baseSprites","push","baseSpritesByUid","maskRectangle","x","y","Math","max","events","on","event","previousWidth","previousHeight","deepInvalidate","loopTimer_1","loop_1","isDisposed","getRoot","dom","autoDispose","undefined","dispose","warn","window","setTimeout","addDisposer","clearTimeout","remove","tooltipContainer_1","isMeasured","tooltipContainer","tooltip","hide","setBounds","maxWidth","maxHeight","getValue","preloader_1","__disabled","preloader","hasLicense","logo_1","ev","isHidden","isHiding","show","logo","align","valign","used","numberFormatter","isStandaloneInstance","onlyShowOnViewport","isElementInViewport","viewportTarget","disposers","addEventListener","viewPortHandler","targets","isArray","i","target","disposer","vpDisposer","queue","addToQueue","log","Error","disposeAllCharts","pop","sprite","indexOf","disableType","once","queueHandler","requestFrame","removeFromQueue","index","splice","nextSprite","enableType","dispatch","showOnInit","invalidateLabels","invalidateLayout","invalidateData","reinit","appear","create","classError","isString","hasValue","registeredClasses","chart","raiseCriticalError","createFromConfig","config","type","finalType","createDeferred","callback","scope","rest","_i","arguments","Promise","resolve","reject","deferred","args","processNextDeferred","_a","next","sprite_2","call","apply","shift","deferredDelay","useTheme","value","themes","unuseTheme","unuseAllThemes","addLicense","license","licenses"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/core/utils/Instance.js"],"sourcesContent":["import { __read, __spread } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { system } from \"../System\";\r\nimport { registry } from \"../Registry\";\r\nimport { Container } from \"../Container\";\r\nimport { Component } from \"../Component\";\r\nimport { Paper } from \"../rendering/Paper\";\r\nimport { SVGContainer, svgContainers } from \"../rendering/SVGContainer\";\r\nimport { FocusFilter } from \"../rendering/filters/FocusFilter\";\r\nimport { Preloader } from \"../elements/Preloader\";\r\nimport { AmChartsLogo } from \"../elements/AmChartsLogo\";\r\nimport { Tooltip } from \"../elements/Tooltip\";\r\nimport { Disposer, MultiDisposer } from \"../utils/Disposer\";\r\nimport { percent } from \"./Percent\";\r\nimport { options } from \"../Options\";\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\nimport * as $dom from \"./DOM\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $log from \"./Log\";\r\n/**\r\n * ============================================================================\r\n * INSTANTIATION FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates all HTML and SVG containers needed for the chart instance, as well\r\n * as the new [[Sprite]] (as specified in `classType` parameter).\r\n *\r\n * @param htmlElement  A container to creat elements in\r\n * @param classType    A class definition of the new element to create\r\n * @return Newly-created Sprite object\r\n */\r\nfunction createChild(htmlElement, classType) {\r\n    var htmlContainer = $dom.getElement(htmlElement);\r\n    // If there's no container available yet, we create a fake one\r\n    var tmpContainer = false;\r\n    if (!htmlContainer) {\r\n        htmlContainer = document.createElement(\"div\");\r\n        htmlContainer.style.width = \"200px\";\r\n        htmlContainer.style.height = \"200px\";\r\n        htmlContainer.style.top = \"0\";\r\n        htmlContainer.style.left = \"0\";\r\n        htmlContainer.style.visibility = \"hidden\";\r\n        htmlContainer.style.position = \"absolute\";\r\n        document.body.appendChild(htmlContainer);\r\n        tmpContainer = true;\r\n    }\r\n    if (htmlContainer) {\r\n        htmlContainer.innerHTML = \"\";\r\n        //htmlContainer.style.overflow = \"hidden\";\r\n        var svgDiv_1 = new SVGContainer(htmlContainer);\r\n        var paper = new Paper(svgDiv_1.SVGContainer, \"svg-\" + (svgContainers.length - 1));\r\n        // the approach with masks is chosen because overflow:visible is set on SVG element in order tooltips could go outside\r\n        // svg area - this is often needed when working with small charts.\r\n        // main container which holds content container and tooltips container\r\n        var container_1 = new Container();\r\n        container_1.htmlContainer = htmlContainer;\r\n        container_1.svgContainer = svgDiv_1;\r\n        container_1.width = percent(100);\r\n        container_1.height = percent(100);\r\n        container_1.background.fillOpacity = 0;\r\n        container_1.paper = paper;\r\n        paper.append(container_1.group);\r\n        // Set up moving to proper element container if it's not yet ready at call time\r\n        if (tmpContainer) {\r\n            $dom.ready(function () {\r\n                container_1.moveHtmlContainer(htmlElement);\r\n            });\r\n        }\r\n        // this is set from parent container, but this one doesn't have, so do it manually.\r\n        container_1.relativeWidth = 1;\r\n        container_1.relativeHeight = 1;\r\n        svgDiv_1.container = container_1;\r\n        // creating classType instance\r\n        var sprite_1 = container_1.createChild(classType);\r\n        sprite_1.topParent = container_1;\r\n        var uid = sprite_1.uid;\r\n        registry.invalidSprites[uid] = [];\r\n        registry.invalidDatas[uid] = [];\r\n        registry.invalidPositions[uid] = [];\r\n        registry.invalidLayouts[uid] = [];\r\n        container_1.baseId = uid;\r\n        sprite_1.isBaseSprite = true;\r\n        sprite_1.focusFilter = new FocusFilter();\r\n        registry.baseSprites.push(sprite_1);\r\n        registry.baseSpritesByUid[uid] = sprite_1;\r\n        sprite_1.maskRectangle = { x: 0, y: 0, width: Math.max(svgDiv_1.width || 0, 0), height: Math.max(svgDiv_1.height || 0, 0) };\r\n        // this solves issues with display:none, as all children are measured as 0x0\r\n        container_1.events.on(\"maxsizechanged\", function (event) {\r\n            if (event.previousWidth == 0 || event.previousHeight == 0) {\r\n                container_1.deepInvalidate();\r\n            }\r\n            if (sprite_1.maskRectangle) {\r\n                sprite_1.maskRectangle = { x: 0, y: 0, width: Math.max(svgDiv_1.width || 0, 0), height: Math.max(svgDiv_1.height || 0, 0) };\r\n            }\r\n        });\r\n        var loopTimer_1 = null;\r\n        // Checks to see whether the chart was properly disposed or not\r\n        var loop_1 = function () {\r\n            if (!sprite_1.isDisposed()) {\r\n                if ($dom.getRoot(sprite_1.dom) == null) {\r\n                    if (options.autoDispose) {\r\n                        container_1.htmlContainer = undefined;\r\n                        svgDiv_1.htmlElement = undefined;\r\n                        sprite_1.dispose();\r\n                    }\r\n                    else {\r\n                        $log.warn(\"Chart was not disposed\", sprite_1.uid);\r\n                    }\r\n                    loopTimer_1 = null;\r\n                }\r\n                else {\r\n                    loopTimer_1 = window.setTimeout(loop_1, 1000);\r\n                }\r\n            }\r\n            else {\r\n                loopTimer_1 = null;\r\n            }\r\n        };\r\n        loop_1();\r\n        sprite_1.addDisposer(new Disposer(function () {\r\n            if (loopTimer_1 !== null) {\r\n                clearTimeout(loopTimer_1);\r\n            }\r\n            $array.remove(registry.baseSprites, sprite_1);\r\n            registry.baseSpritesByUid[sprite_1.uid] = undefined;\r\n        }));\r\n        // TODO figure out a better way of doing this\r\n        sprite_1.addDisposer(container_1);\r\n        // tooltip container\r\n        var tooltipContainer_1 = container_1.createChild(Container);\r\n        tooltipContainer_1.topParent = container_1;\r\n        tooltipContainer_1.width = percent(100);\r\n        tooltipContainer_1.height = percent(100);\r\n        tooltipContainer_1.isMeasured = false;\r\n        container_1.tooltipContainer = tooltipContainer_1;\r\n        sprite_1.tooltip = new Tooltip();\r\n        sprite_1.tooltip.hide(0);\r\n        sprite_1.tooltip.setBounds({ x: 0, y: 0, width: tooltipContainer_1.maxWidth, height: tooltipContainer_1.maxHeight });\r\n        tooltipContainer_1.events.on(\"maxsizechanged\", function () {\r\n            $type.getValue(sprite_1.tooltip).setBounds({ x: 0, y: 0, width: tooltipContainer_1.maxWidth, height: tooltipContainer_1.maxHeight });\r\n        }, undefined, false);\r\n        //@todo: maybe we don't need to create one by default but only on request?\r\n        var preloader_1 = new Preloader();\r\n        preloader_1.events.on(\"inited\", function () {\r\n            preloader_1.__disabled = true;\r\n        }, undefined, false);\r\n        container_1.preloader = preloader_1;\r\n        //if (!options.commercialLicense) {\r\n        if (sprite_1 instanceof Container && !sprite_1.hasLicense()) {\r\n            var logo_1 = tooltipContainer_1.createChild(AmChartsLogo);\r\n            tooltipContainer_1.events.on(\"maxsizechanged\", function (ev) {\r\n                if ((tooltipContainer_1.maxWidth <= 100) || (tooltipContainer_1.maxHeight <= 50)) {\r\n                    logo_1.hide();\r\n                }\r\n                else if (logo_1.isHidden || logo_1.isHiding) {\r\n                    logo_1.show();\r\n                }\r\n            }, undefined, false);\r\n            sprite_1.logo = logo_1;\r\n            logo_1.align = \"left\";\r\n            logo_1.valign = \"bottom\";\r\n        }\r\n        $utils.used(sprite_1.numberFormatter); // need to create one.\r\n        // Set this as an autonomouse instance\r\n        // Controls like Preloader, Export will use this.\r\n        container_1.isStandaloneInstance = true;\r\n        if (options.onlyShowOnViewport) {\r\n            if (!$dom.isElementInViewport(htmlContainer, options.viewportTarget)) {\r\n                sprite_1.__disabled = true;\r\n                sprite_1.tooltipContainer.__disabled = true;\r\n                var disposers = [\r\n                    $dom.addEventListener(window, \"DOMContentLoaded\", function () { viewPortHandler(sprite_1); }),\r\n                    $dom.addEventListener(window, \"load\", function () { viewPortHandler(sprite_1); }),\r\n                    $dom.addEventListener(window, \"resize\", function () { viewPortHandler(sprite_1); }),\r\n                    $dom.addEventListener(window, \"scroll\", function () { viewPortHandler(sprite_1); })\r\n                ];\r\n                if (options.viewportTarget) {\r\n                    var targets = $type.isArray(options.viewportTarget) ? options.viewportTarget : options.viewportTarget ? [options.viewportTarget] : [];\r\n                    for (var i = 0; i < targets.length; i++) {\r\n                        var target = targets[i];\r\n                        disposers.push($dom.addEventListener(target, \"resize\", function () { viewPortHandler(sprite_1); }));\r\n                        disposers.push($dom.addEventListener(target, \"scroll\", function () { viewPortHandler(sprite_1); }));\r\n                    }\r\n                }\r\n                var disposer = new MultiDisposer(disposers);\r\n                sprite_1.addDisposer(disposer);\r\n                sprite_1.vpDisposer = disposer;\r\n            }\r\n            else if (options.queue) {\r\n                addToQueue(sprite_1);\r\n            }\r\n        }\r\n        else if (options.queue) {\r\n            addToQueue(sprite_1);\r\n        }\r\n        return sprite_1;\r\n    }\r\n    else {\r\n        system.log(\"html container not found\");\r\n        throw new Error(\"html container not found\");\r\n    }\r\n}\r\n/**\r\n * Disposes all of the currently active charts.\r\n */\r\nexport function disposeAllCharts() {\r\n    while (registry.baseSprites.length !== 0) {\r\n        registry.baseSprites.pop().dispose();\r\n    }\r\n}\r\nexport function addToQueue(sprite) {\r\n    if (registry.queue.indexOf(sprite) == -1) {\r\n        sprite.__disabled = true;\r\n        sprite.tooltipContainer.__disabled = true;\r\n        sprite.events.disableType(\"appeared\");\r\n        if (registry.queue.length == 0) {\r\n            registry.events.once(\"exitframe\", function () {\r\n                queueHandler(sprite);\r\n            });\r\n            system.requestFrame();\r\n        }\r\n        sprite.addDisposer(new Disposer(function () {\r\n            removeFromQueue(sprite);\r\n        }));\r\n        registry.queue.push(sprite);\r\n    }\r\n}\r\nexport function removeFromQueue(sprite) {\r\n    var index = registry.queue.indexOf(sprite);\r\n    if (index >= 0) {\r\n        registry.queue.splice(registry.queue.indexOf(sprite), 1);\r\n        var nextSprite = registry.queue[index];\r\n        if (nextSprite) {\r\n            queueHandler(nextSprite);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Checks whether the chart was not initialized fully due to setting\r\n * of `onlyShowOnViewport`. If it hasn't and is now in the viewport\r\n * the chart will be initialized.\r\n *\r\n * @since 4.9.12\r\n * @param  sprite  Top-level chart object\r\n */\r\nexport function viewPortHandler(sprite) {\r\n    if (sprite.__disabled && $dom.isElementInViewport(sprite.htmlContainer, options.viewportTarget)) {\r\n        if (sprite.vpDisposer) {\r\n            sprite.vpDisposer.dispose();\r\n        }\r\n        addToQueue(sprite);\r\n    }\r\n}\r\nexport function queueHandler(sprite) {\r\n    if (sprite && sprite.tooltipContainer) {\r\n        sprite.__disabled = false;\r\n        sprite.tooltipContainer.__disabled = false;\r\n        sprite.events.enableType(\"appeared\");\r\n        sprite.dispatch(\"removedfromqueue\");\r\n        if (sprite.showOnInit) {\r\n            sprite.events.on(\"appeared\", function () {\r\n                removeFromQueue(sprite);\r\n            });\r\n        }\r\n        if (sprite.vpDisposer) {\r\n            sprite.vpDisposer.dispose();\r\n        }\r\n        if (sprite instanceof Container) {\r\n            sprite.invalidateLabels();\r\n        }\r\n        if (sprite.tooltipContainer) {\r\n            sprite.tooltipContainer.invalidateLayout();\r\n        }\r\n        if (sprite instanceof Component) {\r\n            sprite.invalidateData();\r\n            sprite.reinit();\r\n            sprite.events.once(\"datavalidated\", function () {\r\n                if (sprite.showOnInit) {\r\n                    sprite.appear();\r\n                }\r\n                else {\r\n                    removeFromQueue(sprite);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            sprite.reinit();\r\n            sprite.events.once(\"inited\", function () {\r\n                removeFromQueue(sprite);\r\n            });\r\n            if (sprite.showOnInit) {\r\n                sprite.appear();\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * A shortcut to creating a chart instance.\r\n *\r\n * The first argument is either a reference to or an id of a DOM element to be\r\n * used as a container for the chart.\r\n *\r\n * The second argument is the type reference of the chart type. (for plain\r\n * JavaScript users this can also be a string indicating chart type)\r\n *\r\n * ```TypeScript\r\n * let chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n * ```\r\n * ```JavaScript\r\n * // Can pass in chart type reference like this:\r\n * var chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n *\r\n * // ... or chart class type as a string:\r\n * var chart = am4core.create(\"chartdiv\", \"PieChart\");\r\n * ```\r\n *\r\n * @param htmlElement  Reference or id of the target container element\r\n * @param classType    Class type of the target chart type\r\n * @return Chart instance\r\n */\r\nexport function create(htmlElement, classType) {\r\n    // This is a nasty hack for the benefit of vanilla JS users, who do not\r\n    // enjoy benefits of type-check anyway.\r\n    // We're allowing passing in a name of the class rather than type reference\r\n    // itself.\r\n    var classError;\r\n    if ($type.isString(classType)) {\r\n        if ($type.hasValue(registry.registeredClasses[classType])) {\r\n            classType = registry.registeredClasses[classType];\r\n        }\r\n        else {\r\n            classType = registry.registeredClasses[\"Container\"];\r\n            classError = new Error(\"Class [\" + classType + \"] is not loaded.\");\r\n        }\r\n    }\r\n    // Create the chart\r\n    var chart = createChild(htmlElement, classType);\r\n    // Error?\r\n    if (classError) {\r\n        chart.raiseCriticalError(classError);\r\n    }\r\n    return chart;\r\n}\r\n/**\r\n * A shortcut to creating a chart from a config object.\r\n *\r\n * Example:\r\n *\r\n * ```TypeScript\r\n * let chart am4core.createFromConfig({ ... }, \"chartdiv\", am4charts.XYChart );\r\n * ```\r\n * ```JavaScript\r\n * var chart am4core.createFromConfig({ ... }, \"chartdiv\", \"XYChart\" );\r\n * ```\r\n *\r\n * If `chartType` parameter is not supplied it must be set in a config object,\r\n * via reference to chart type, e.g.:\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": am4charts.XYChart,\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": am4charts.XYChart,\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * Or via string: (if you are using JavaScript)\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * A `container` can either be a reference to an HTML container to put chart\r\n * in, or it's unique id.\r\n *\r\n * If `container` is not specified, it must be included in the config object:\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   \"container\": \"chartdiv\",\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   \"container\": \"chartdiv\",\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * @param config       Config object in property/value pairs\r\n * @param htmlElement  Container reference or ID\r\n * @param objectType   Chart type\r\n * @return A newly created chart instance\r\n * @todo Throw exception if type is not correct\r\n */\r\nexport function createFromConfig(config, htmlElement, classType) {\r\n    // Extract chart type from config if necessary\r\n    if (!$type.hasValue(classType)) {\r\n        classType = config.type;\r\n        delete config.type;\r\n    }\r\n    // Extract element from config if necessary\r\n    if (!$type.hasValue(htmlElement)) {\r\n        htmlElement = config.container;\r\n        delete config.container;\r\n    }\r\n    // Check if we need to extract actual type reference\r\n    var finalType;\r\n    var classError;\r\n    if ($type.isString(classType) && $type.hasValue(registry.registeredClasses[classType])) {\r\n        finalType = registry.registeredClasses[classType];\r\n    }\r\n    else if (typeof classType !== \"function\") {\r\n        finalType = Container;\r\n        classError = new Error(\"Class [\" + classType + \"] is not loaded.\");\r\n    }\r\n    else {\r\n        finalType = classType;\r\n    }\r\n    // Create the chart\r\n    var chart = createChild(htmlElement, finalType);\r\n    // Set config\r\n    if (classError) {\r\n        chart.raiseCriticalError(classError);\r\n    }\r\n    else {\r\n        chart.config = config;\r\n    }\r\n    return chart;\r\n}\r\n/**\r\n * Useful in creating real queues form mult-chart creation.\r\n *\r\n * Accepts a reference to a function which crates and returns actual chart\r\n * object.\r\n *\r\n * It returns a `Promise` which you can use to catch chart instance once it's\r\n * created.\r\n *\r\n * ```TypeScript\r\n * am4core.createDeferred(function(div) {\r\n *   // Create first chart\r\n *   let chart = am4core.create(div, am4charts.XYChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv1\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n *\r\n * am4core.createDeferred(function(div) {\r\n *   // Create second chart\r\n *   let chart = am4core.create(div, am4charts.PieChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv2\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * am4core.createDeferred(function(div) {\r\n *   // Create first chart\r\n *   var chart = am4core.create(div, am4charts.XYChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv1\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n *\r\n * am4core.createDeferred(function(div) {\r\n *   // Create second chart\r\n *   var chart = am4core.create(div, am4charts.PieChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv2\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n * ```\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/performance/#Deferred_daisy_chained_instantiation} for more information\r\n * @since 4.10.0\r\n * @param  callback  Callback function that creates chart\r\n * @param  scope     Scope to call callback in\r\n * @param  ...rest   Parameters to pass into callback\r\n * @return           Promise with chart instance\r\n */\r\nexport function createDeferred(callback, scope) {\r\n    var rest = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        rest[_i - 2] = arguments[_i];\r\n    }\r\n    return new Promise(function (resolve, reject) {\r\n        registry.deferred.push({\r\n            scope: scope,\r\n            callback: callback,\r\n            args: rest,\r\n            resolve: resolve\r\n        });\r\n        if (registry.deferred.length == 1) {\r\n            processNextDeferred();\r\n        }\r\n    });\r\n}\r\nfunction processNextDeferred() {\r\n    var _a;\r\n    var next = registry.deferred[0];\r\n    if (next) {\r\n        var sprite_2 = (_a = next.callback).call.apply(_a, __spread([next.scope], next.args));\r\n        sprite_2.events.on(\"ready\", function () {\r\n            next.resolve(sprite_2);\r\n            registry.deferred.shift();\r\n            if (options.deferredDelay) {\r\n                setTimeout(processNextDeferred, options.deferredDelay);\r\n            }\r\n            else {\r\n                processNextDeferred();\r\n            }\r\n        });\r\n    }\r\n}\r\n/**\r\n * Applies a theme to System, and subsequently all chart instances created\r\n * from that point forward.\r\n *\r\n * amCharts supports multiple themes. Calling `useTheme` multiple times will\r\n * make the System apply multiple themes, rather than overwrite previously\r\n * set one.\r\n *\r\n * This enables combining features from multiple themes on the same chart.\r\n * E.g.:\r\n *\r\n * ```TypeScript\r\n * am4core.useTheme(am4themes.material);\r\n * am4core.useTheme(am4themes.animated);\r\n * ```\r\n * ```JavaScript\r\n * am4core.useTheme(am4themes.material);\r\n * am4core.useTheme(am4themes.animated);\r\n * ```\r\n *\r\n * The above will apply both the Material color and animation options to all\r\n * charts created.\r\n *\r\n * @param value  A reference to a theme\r\n */\r\nexport function useTheme(value) {\r\n    if (registry.themes.indexOf(value) === -1) {\r\n        registry.themes.push(value);\r\n    }\r\n}\r\n/**\r\n * Removes a theme from \"active themes\" list, so it won't get applied to any\r\n * charts created subsequently.\r\n *\r\n * @param value  A reference to a theme\r\n */\r\nexport function unuseTheme(value) {\r\n    $array.remove(registry.themes, value);\r\n}\r\n/**\r\n * Removes all \"active\" themes. Any charts created subsequently will not have\r\n * any theme applied to them.\r\n */\r\nexport function unuseAllThemes() {\r\n    registry.themes = [];\r\n}\r\n/**\r\n * Adds a license, e.g.:\r\n *\r\n * ```TypeScript\r\n * am4core.addLicense(\"xxxxxxxx\");\r\n * ```\r\n * ```JavaScript\r\n * am4core.addLicense(\"xxxxxxxx\");\r\n * ```\r\n *\r\n * Multiple licenses can be added to cover for multiple products.\r\n *\r\n * @since 4.5.16\r\n * @param  license  License key\r\n */\r\nexport function addLicense(license) {\r\n    options.licenses.push(license);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}