{"ast":null,"code":"/**\r\n * ExportMenu provides functionality for building Export menu\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport exportCSS from \"./ExportCSS\";\nimport { Adapter } from \"../utils/Adapter\";\nimport { List } from \"../utils/List\";\nimport { getInteraction } from \"../interaction/Interaction\";\nimport { MutableValueDisposer } from \"../utils/Disposer\";\nimport { Language } from \"../utils/Language\";\nimport { Validatable } from \"../utils/Validatable\";\nimport { keyboard } from \"../utils/Keyboard\";\nimport * as $utils from \"../utils/Utils\";\nimport * as $iter from \"../utils/Iterator\";\nimport * as $dom from \"../utils/DOM\";\nimport * as $type from \"../utils/Type\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Creates a menu for Export operations.\r\n *\r\n * To add an export menu to a chart, set this to a new instance of\r\n * [[ExportMenu]].\r\n *\r\n * ```TypeScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"exporting\": {\r\n *     \"menu\": {}\r\n *   }\r\n * }\r\n * ```\r\n * @important\r\n */\nvar ExportMenu = /** @class */function (_super) {\n  __extends(ExportMenu, _super);\n  /**\r\n   * Constructor\r\n   */\n  function ExportMenu() {\n    var _this = _super.call(this) || this;\n    /**\r\n     * An [[Adapter]].\r\n     */\n    _this.adapter = new Adapter(_this);\n    /**\r\n     * How many milliseconds to hold menu/sub-menu open after it loses focus or\r\n     * hover, before auto-closing it.\r\n     *\r\n     * @default 1000\r\n     */\n    _this.closeDelay = 1000;\n    /**\r\n     * Close the menu automatically when some export operation is triggered.\r\n     *\r\n     * @default true\r\n     * @since 4.2.2\r\n     */\n    _this.closeOnClick = true;\n    /**\r\n     * An instance of [[Language]].\r\n     */\n    _this._language = new MutableValueDisposer();\n    /**\r\n     * What HTML tags to use to build menu.\r\n     */\n    _this._menuTag = \"ul\";\n    /**\r\n     * Which tag to use to enclose individual menu items.\r\n     */\n    _this._itemTag = \"li\";\n    /**\r\n     * Tag to wrap menu item labels in.\r\n     */\n    _this._labelTag = \"a\";\n    /**\r\n     * Tag to use for icons\r\n     */\n    _this._iconTag = \"img\";\n    /**\r\n     * Prefix for class names applied to menu elements.\r\n     */\n    _this._classPrefix = \"amexport\";\n    /**\r\n     * If set to `true` [[ExportMenu]] will load it's own external CSS when\r\n     * instantiated.\r\n     */\n    _this._defaultStyles = true;\n    /**\r\n     * Horizontal positioning.\r\n     */\n    _this._align = \"right\";\n    /**\r\n     * Vertical positioning.\r\n     */\n    _this._verticalAlign = \"top\";\n    /**\r\n     * A tabindex to apply to Export Menu.\r\n     */\n    _this._tabindex = 0;\n    /**\r\n     * Whether next menu close event should be ignored.\r\n     */\n    _this._ignoreNextClose = false;\n    /**\r\n     * Default menu items.\r\n     */\n    _this._items = [{\n      \"label\": \"...\",\n      \"menu\": [{\n        \"label\": \"Image\",\n        \"menu\": [{\n          \"type\": \"png\",\n          \"label\": \"PNG\"\n        }, {\n          \"type\": \"jpg\",\n          \"label\": \"JPG\"\n        }, {\n          \"type\": \"svg\",\n          \"label\": \"SVG\"\n        }, {\n          \"type\": \"pdf\",\n          \"label\": \"PDF\"\n        }]\n      }, {\n        \"label\": \"Data\",\n        \"menu\": [{\n          \"type\": \"json\",\n          \"label\": \"JSON\"\n        }, {\n          \"type\": \"csv\",\n          \"label\": \"CSV\"\n        }, {\n          \"type\": \"xlsx\",\n          \"label\": \"XLSX\"\n        }, {\n          \"type\": \"html\",\n          \"label\": \"HTML\"\n        }, {\n          \"type\": \"pdfdata\",\n          \"label\": \"PDF\"\n        }]\n      }, {\n        \"label\": \"Print\",\n        \"type\": \"print\"\n      }]\n    }];\n    _this.className = \"ExportMenu\";\n    _this._disposers.push(_this._language);\n    _this.invalidate();\n    _this.applyTheme();\n    return _this;\n  }\n  /**\r\n   * (Re)draws the Export menu.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  ExportMenu.prototype.validate = function () {\n    this.draw();\n    _super.prototype.validate.call(this);\n  };\n  /**\r\n   * Draws the menu based on current items.\r\n   *\r\n   * Normally, there's no need to call this explicitly. The chart, if it has\r\n   * export menu enabled, will automatically draw the menu.\r\n   */\n  ExportMenu.prototype.draw = function () {\n    var _this = this;\n    // Create top-level menu item, or clear it\n    if (!this._element) {\n      this._element = this.createMenuElement(0);\n    } else {\n      this._element.innerHTML = \"\";\n      this._element.className = this.getMenuItemClass(0);\n    }\n    // See if we're loading external CSS\n    // Hide it until CSS is loaded\n    if (this.defaultStyles) {\n      this._element.style.display = \"none\";\n    }\n    // Append to container\n    $type.getValue(this._container).appendChild(this._element);\n    // Apply adapter to menu items before processing\n    var items = this.adapter.apply(\"items\", {\n      items: this._items\n    }).items;\n    for (var len = items.length, i = 0; i < len; i++) {\n      this.drawBranch(this._element, items[i], 0);\n    }\n    // Apply adapter to finalized menu element\n    this._element = this.adapter.apply(\"menuElement\", {\n      menuElement: this._element\n    }).menuElement;\n    // Set up global \"down\" event\n    this._disposers.push(getInteraction().body.events.on(\"down\", function (ev) {\n      if (!ev.pointer.touch) {\n        _this._ignoreNextClose = false;\n      }\n      _this.close();\n    }));\n    // Set up global event on ESC press to close the menu\n    this._disposers.push(getInteraction().body.events.on(\"keydown\", function (ev) {\n      var key = keyboard.getEventKey(ev.event);\n      switch (key) {\n        case \"esc\":\n          _this.close();\n          break;\n        case \"up\":\n        case \"down\":\n        case \"left\":\n        case \"right\":\n          if (_this._currentSelection) {\n            ev.event.preventDefault();\n          }\n          _this.moveSelection(key);\n          break;\n      }\n    }));\n    if (this.defaultStyles) {\n      this.loadDefaultCSS();\n    }\n  };\n  /**\r\n   * Creates a new branch in export menu. This function is recursive for\r\n   * building multi-level menus.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param container Container to put branch elements in\r\n   * @param branch    Menu item\r\n   * @param level     Current nesting level\r\n   */\n  ExportMenu.prototype.drawBranch = function (container, branch, level) {\n    var _this = this;\n    // Apply adapter\n    branch = this.adapter.apply(\"branch\", {\n      branch: branch,\n      level: level\n    }).branch;\n    // Unsupported?\n    // ExportMenu does not check or know for specific browser/system\n    // capabilities. It must happen in some other code and applied via Adapter.\n    // Export itself will check compatibility, but there might be other plugins\n    // that influence it or even add any specific export functionality.\n    if (branch.unsupported === true) {\n      return;\n    }\n    // Init ascendants\n    if (!branch.ascendants) {\n      branch.ascendants = new List();\n    }\n    // Get type\n    var type = branch.type;\n    // Create an item\n    var element = this.createItemElement(level, type);\n    // Create label\n    var label;\n    // Create icon\n    if (branch.icon) {\n      label = this.createIconElement(level, type);\n      label.src = branch.icon;\n      if (branch.label || branch.title) {\n        label.title = branch.title || branch.label;\n      }\n    } else if (branch.svg) {\n      label = this.createSvgElement(level, type, branch.svg);\n      if (branch.label || branch.title) {\n        label.title = branch.title || branch.label;\n      }\n    } else {\n      label = this.createLabelElement(level, type);\n      label.innerHTML = branch.label ? this.language.translate(branch.label) : \"\";\n      if (branch.title) {\n        label.title = branch.title;\n      }\n    }\n    // Apply reader text to label\n    var readerLabel = this.getReaderLabel(branch, label.innerHTML);\n    label.setAttribute(\"aria-label\", readerLabel);\n    // Add Label\n    element.appendChild(label);\n    // Create interaction object\n    // TODO clean this up when it's disposed\n    branch.interactions = getInteraction().getInteraction(element);\n    branch.element = element;\n    // Create interaction manager we can set event listeners to\n    if (this.typeClickable(type)) {\n      //branch.interactions.clickable = true;\n      // TODO clean this up when it's disposed\n      branch.interactions.events.on(\"hit\", function (ev) {\n        if (_this.events.isEnabled(\"hit\") && !_this.isDisposed()) {\n          var event_1 = {\n            \"type\": \"hit\",\n            \"event\": ev.event,\n            \"target\": _this,\n            \"branch\": branch\n          };\n          _this.events.dispatchImmediately(\"hit\", event_1);\n        }\n      });\n      // TODO clean this up when it's disposed\n      branch.interactions.events.on(\"keyup\", function (ev) {\n        if (keyboard.isKey(ev.event, \"enter\")) {\n          if (_this.events.isEnabled(\"enter\")) {\n            var event_2 = {\n              \"type\": \"enter\",\n              \"event\": ev.event,\n              \"target\": _this,\n              \"branch\": branch\n            };\n            _this.events.dispatchImmediately(\"enter\", event_2);\n          }\n        }\n      });\n    }\n    {\n      var submenu_1 = this.getSubMenu(branch);\n      // Add ENTER event to open sub-menus\n      if (submenu_1 != null) {\n        // TODO clean this up when it's disposed\n        branch.interactions.events.on(\"keyup\", function (ev) {\n          if (keyboard.isKey(ev.event, \"enter\")) {\n            // This is item has sub-menu, activate the first child on ENTER\n            _this.selectBranch(submenu_1[0]);\n            // Attempt to set focus\n            _this.setFocus(submenu_1[0]);\n          }\n        });\n        branch.interactions.events.on(\"hit\", function (ev) {\n          _this.selectBranch(branch);\n        });\n      }\n    }\n    // Add events\n    // TODO clean this up when it's disposed\n    branch.interactions.events.on(\"over\", function (ev) {\n      if (ev.pointer.touch) {\n        // Cancel pending menu closure\n        _this._ignoreNextClose = true;\n      }\n      _this.selectBranch(branch);\n      if (_this.events.isEnabled(\"over\")) {\n        var event_3 = {\n          \"type\": \"over\",\n          \"event\": ev.event,\n          \"target\": _this,\n          \"branch\": branch\n        };\n        _this.events.dispatchImmediately(\"over\", event_3);\n      }\n    });\n    // TODO clean this up when it's disposed\n    branch.interactions.events.on(\"out\", function (ev) {\n      if (_this.isDisposed()) {\n        return;\n      }\n      if (!ev.pointer.touch) {\n        _this.delayUnselectBranch(branch);\n      }\n      if (_this.events.isEnabled(\"out\")) {\n        var event_4 = {\n          \"type\": \"out\",\n          \"event\": ev.event,\n          \"target\": _this,\n          \"branch\": branch\n        };\n        _this.events.dispatchImmediately(\"out\", event_4);\n      }\n    });\n    // TODO clean this up when it's disposed\n    branch.interactions.events.on(\"focus\", function (ev) {\n      _this.selectBranch(branch);\n    });\n    // TODO clean this up when it's disposed\n    branch.interactions.events.on(\"blur\", function (ev) {\n      _this.delayUnselectBranch(branch);\n    });\n    // Increment level\n    var local_level = level + 1;\n    // Has sub-menu?\n    if (branch.menu) {\n      var submenu = this.createMenuElement(local_level);\n      branch.submenuElement = submenu;\n      for (var len = branch.menu.length, i = 0; i < len; i++) {\n        var ascendants = new List();\n        branch.menu[i].ascendants = ascendants;\n        if (branch.ascendants.length) {\n          ascendants.copyFrom(branch.ascendants);\n        }\n        ascendants.push(branch);\n        this.drawBranch(submenu, branch.menu[i], local_level);\n      }\n      // Sub-menu is empty (all items are not supported)\n      // Do not draw this menu item at all\n      if (submenu.innerHTML == \"\") {\n        return;\n      }\n      element.appendChild(submenu);\n    }\n    // Should this item be hidden?\n    if (branch.hidden) {\n      this.hideBranch(branch);\n    }\n    // Add id?\n    if (branch.id) {\n      element.setAttribute(\"id\", branch.id);\n    }\n    // Background color?\n    if (branch.color) {\n      element.style.backgroundColor = branch.color.hex;\n    }\n    // Append to container\n    container.appendChild(element);\n  };\n  /**\r\n   * Creates a menu element to hold its elements in. Usually it's an `<ul>`\r\n   * tag.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param level  Current nesting level\r\n   * @return HTML element reference\r\n   */\n  ExportMenu.prototype.createMenuElement = function (level) {\n    var element = document.createElement(this.menuTag);\n    element.className = this.getMenuItemClass(level);\n    // Accessibility\n    if (level === 0) {\n      element.setAttribute(\"role\", \"menubar\");\n    } else {\n      element.setAttribute(\"role\", \"menu\");\n    }\n    return element;\n  };\n  /**\r\n   * Generates a class name for the menu element based on its nesting level.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param level  Current nesting level\r\n   * @return Class name(s)\r\n   */\n  ExportMenu.prototype.getMenuItemClass = function (level) {\n    var className = this.classPrefix + \"-menu \" + this.classPrefix + \"-menu-level-\" + level;\n    if (level === 0) {\n      className += \" \" + this.classPrefix + \"-menu-root \" + this.classPrefix + \"-\" + this.align + \" \" + this.classPrefix + \"-\" + this.verticalAlign;\n    }\n    return this.adapter.apply(\"menuClass\", {\n      className: className,\n      level: level\n    }).className;\n  };\n  /**\r\n   * Creates menu item. Usually `<li>` tag. Its label and sub-elements will go\r\n   * into this element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param level  Current nesting level\r\n   * @param type   Type of the menu item\r\n   * @return HTML element reference\r\n   */\n  ExportMenu.prototype.createItemElement = function (level, type) {\n    var element = document.createElement(this.itemTag);\n    var className = this.classPrefix + \"-item \" + this.classPrefix + \"-item-level-\" + level + \" \" + this.classPrefix + \"-item-\" + (type || \"blank\");\n    element.className = this.adapter.apply(\"itemClass\", {\n      className: className,\n      level: level,\n      type: type\n    }).className;\n    element.setAttribute(\"role\", \"menuitem\");\n    element.setAttribute(\"tabindex\", this.tabindex.toString());\n    return element;\n  };\n  /**\r\n   * Creates a \"label\" part of the menu item. It could be text or any HTML\r\n   * content.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param level  Current nesting level\r\n   * @param type   Type of the menu item\r\n   * @return An HTML Element\r\n   */\n  ExportMenu.prototype.createLabelElement = function (level, type) {\n    var element = document.createElement(this.labelTag);\n    var className = this.classPrefix + \"-label \" + this.classPrefix + \"-label-level-\" + level + \" \" + this.classPrefix + \"-item-\" + (type || \"blank\");\n    if (this.typeClickable(type)) {\n      className += \" \" + this.classPrefix + \"-clickable\";\n    }\n    element.className = this.adapter.apply(\"labelClass\", {\n      className: className,\n      level: level,\n      type: type\n    }).className;\n    // Accessible navigation\n    //element.setAttribute(\"tabindex\", this.tabindex.toString());\n    //element.setAttribute(\"role\", \"menuitem\");\n    return element;\n  };\n  /**\r\n   * Creates a \"icon\" part of the menu item.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param level  Current nesting level\r\n   * @param type   Type of the menu item\r\n   * @return An HTML Element\r\n   */\n  ExportMenu.prototype.createIconElement = function (level, type) {\n    var element = document.createElement(this.iconTag);\n    var className = this.classPrefix + \"-icon \" + this.classPrefix + \"-icon-level-\" + level + \" \" + this.classPrefix + \"-item-\" + (type || \"blank\");\n    if (this.typeClickable(type)) {\n      className += \" \" + this.classPrefix + \"-clickable\";\n    }\n    element.className = this.adapter.apply(\"labelClass\", {\n      className: className,\n      level: level,\n      type: type\n    }).className;\n    // Accessible navigation\n    element.setAttribute(\"tabindex\", this.tabindex.toString());\n    element.setAttribute(\"role\", \"menuitem\");\n    return element;\n  };\n  /**\r\n   * Creates a a custom element out of raw HTML.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param level  Current nesting level\r\n   * @param type   Type of the menu item\r\n   * @return An HTML Element\r\n   */\n  ExportMenu.prototype.createSvgElement = function (level, type, svg) {\n    var parser = new DOMParser();\n    var element = parser.parseFromString(svg, \"image/svg+xml\").documentElement;\n    var className = this.classPrefix + \"-icon \" + this.classPrefix + \"-icon-level-\" + level + \" \" + this.classPrefix + \"-item-\" + (type || \"blank\");\n    if (this.typeClickable(type)) {\n      className += \" \" + this.classPrefix + \"-clickable\";\n    }\n    element.setAttribute(\"class\", this.adapter.apply(\"labelClass\", {\n      className: className,\n      level: level,\n      type: type\n    }).className);\n    // Accessible navigation\n    element.setAttribute(\"tabindex\", this.tabindex.toString());\n    element.setAttribute(\"role\", \"menuitem\");\n    return element;\n  };\n  /**\r\n   * Destroys the menu and all its elements.\r\n   */\n  ExportMenu.prototype.dispose = function () {\n    if (!this._disposed) {\n      _super.prototype.dispose.call(this);\n      if (this._element && this._element.parentNode) {\n        this._element.parentNode.removeChild(this._element);\n      }\n    }\n  };\n  /**\r\n   * Checks whether menu item type is supposed to be clickable.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param type  Menu item type\r\n   * @return Is clickable?\r\n   */\n  ExportMenu.prototype.typeClickable = function (type) {\n    return $type.hasValue(type);\n  };\n  /**\r\n   * Checks whether menu item has any sub-items.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param branch  A menu item\r\n   * @return Has sub-items?\r\n   */\n  ExportMenu.prototype.hasSubMenu = function (branch) {\n    return branch.menu && branch.menu.length ? true : false;\n  };\n  /**\r\n   * Returns sub-items (if they exist).\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param branch  A menu item\r\n   * @return Submenus\r\n   */\n  ExportMenu.prototype.getSubMenu = function (branch) {\n    if (branch.menu && branch.menu.length) {\n      return branch.menu;\n    }\n  };\n  /**\r\n   * Generates and returns an applicable label to be used for screen readers.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param item   A menu item instance\r\n   * @param label  Current label\r\n   * @return Reader text\r\n   */\n  ExportMenu.prototype.getReaderLabel = function (branch, label) {\n    // Strip any HTML from the label\n    label = $utils.stripTags(label);\n    // Add textual note if the branch is clickable\n    if (branch.ascendants.length == 0) {\n      label = label == \"...\" ? this.language.translate(\"Export\") : label;\n      label += \" [\" + this.language.translate(\"Press ENTER or use arrow keys to navigate\") + \"]\";\n    } else if (this.hasSubMenu(branch)) {\n      label += \" [\" + this.language.translate(\"Click, tap or press ENTER to open\") + \"]\";\n    } else if (branch.type == \"print\") {\n      label = this.language.translate(\"Click, tap or press ENTER to print.\");\n    } else if (this.typeClickable(branch.type)) {\n      label = this.language.translate(\"Click, tap or press ENTER to export as %1.\", undefined, label);\n    }\n    return this.adapter.apply(\"rederLabel\", {\n      label: label,\n      branch: branch\n    }).label;\n  };\n  Object.defineProperty(ExportMenu.prototype, \"container\", {\n    /**\r\n     * @return Container\r\n     */\n    get: function () {\n      return this._container;\n    },\n    /**\r\n     * Getters and setters\r\n     */\n    /**\r\n     * An HTML container to place the Menu in.\r\n     *\r\n     * A container must be an HTML element, because menu itself is HTML, and\r\n     * cannot be placed into SVG.\r\n     *\r\n     * @param container Reference to container element\r\n     * @todo Check if menu is already build. If it is, just move it to a new container\r\n     */\n    set: function (container) {\n      this._container = container;\n      this.invalidate();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ExportMenu.prototype, \"items\", {\n    /**\r\n     * @return Menu items\r\n     */\n    get: function () {\n      return this._items;\n    },\n    /**\r\n     * A list of menu items. Can be nested.\r\n     *\r\n     * @param items  Menu items\r\n     */\n    set: function (items) {\n      this._items = items;\n      this.invalidate();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ExportMenu.prototype, \"tag\", {\n    /**\r\n     * Sets main menu tag to place menu in.\r\n     *\r\n     * This also sets up how menu items are built.\r\n     *\r\n     * If you set this to \"ul\", menu items will be wrapped into `<li>` tags.\r\n     *\r\n     * If set to \"div\", menu items will be wrapped in `<div>` tags.\r\n     *\r\n     * @default \"ul\"\r\n     * @param tag Tag to use for menu\r\n     */\n    set: function (tag) {\n      this._menuTag = tag;\n      this._itemTag = tag == \"ul\" ? \"li\" : \"div\";\n      this.invalidate();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ExportMenu.prototype, \"menuTag\", {\n    /**\r\n     * Returns current menu tag.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Menu tag (item that contains sub-items)\r\n     */\n    get: function () {\n      return this.adapter.apply(\"menuTag\", {\n        tag: this._menuTag\n      }).tag;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ExportMenu.prototype, \"itemTag\", {\n    /**\r\n     * Returns tag to wrap items into.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Item tag\r\n     */\n    get: function () {\n      return this.adapter.apply(\"itemTag\", {\n        tag: this._itemTag\n      }).tag;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ExportMenu.prototype, \"labelTag\", {\n    /**\r\n     * Returns menu label tag.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Label tag\r\n     */\n    get: function () {\n      return this.adapter.apply(\"labelTag\", {\n        tag: this._labelTag\n      }).tag;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ExportMenu.prototype, \"iconTag\", {\n    /**\r\n     * Returns icon tag.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Icon tag\r\n     */\n    get: function () {\n      return this.adapter.apply(\"iconTag\", {\n        tag: this._iconTag\n      }).tag;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ExportMenu.prototype, \"align\", {\n    /**\r\n     * @return Horizontal alignment\r\n     */\n    get: function () {\n      return this.adapter.apply(\"align\", {\n        align: this._align\n      }).align;\n    },\n    /**\r\n     * A horizontal alignment for the menu placement.\r\n     *\r\n     * @param value Horizontal alignment\r\n     */\n    set: function (value) {\n      this._align = value;\n      this.invalidate();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ExportMenu.prototype, \"verticalAlign\", {\n    /**\r\n     * @return Vertical alignment\r\n     */\n    get: function () {\n      return this.adapter.apply(\"verticalAlign\", {\n        verticalAlign: this._verticalAlign\n      }).verticalAlign;\n    },\n    /**\r\n     * A vertical alignment for the menu placement.\r\n     *\r\n     * @param value Vertical alignment\r\n     */\n    set: function (value) {\n      this._verticalAlign = value;\n      this.invalidate();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ExportMenu.prototype, \"classPrefix\", {\n    /**\r\n     * @return Class name prefix\r\n     */\n    get: function () {\n      return this.adapter.apply(\"classPrefix\", {\n        classPrefix: this._classPrefix\n      }).classPrefix;\n    },\n    /**\r\n     * Class name prefix.\r\n     *\r\n     * @default \"amexport\"\r\n     * @param value Class name prefix\r\n     */\n    set: function (value) {\n      this._classPrefix = value;\n      this.invalidate();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ExportMenu.prototype, \"defaultStyles\", {\n    /**\r\n     * @return Should ExportMenu load its own CSS?\r\n     */\n    get: function () {\n      return this.adapter.apply(\"defaultStyles\", {\n        defaultStyles: this._defaultStyles\n      }).defaultStyles;\n    },\n    /**\r\n     * Indicates whether [[ExportMenu]] should load external CSS to style itself.\r\n     *\r\n     * If set to `false`, the menu will not be styled, and will rely on some\r\n     * external CSS.\r\n     *\r\n     * @default true\r\n     * @param Should ExportMenu load its own CSS?\r\n     */\n    set: function (value) {\n      if (this._defaultStyles != value) {\n        this._defaultStyles = value;\n        if (value) {\n          this.loadDefaultCSS();\n        }\n      }\n      this.invalidate();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Loads the default CSS.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  ExportMenu.prototype.loadDefaultCSS = function () {\n    this._disposers.push(exportCSS($dom.getShadowRoot(this.container), this.classPrefix));\n    if (this._element) {\n      this._element.style.display = \"\";\n    }\n  };\n  Object.defineProperty(ExportMenu.prototype, \"tabindex\", {\n    /**\r\n     * @return Tab index\r\n     */\n    get: function () {\n      return this.adapter.apply(\"tabindex\", {\n        tabindex: this._tabindex\n      }).tabindex;\n    },\n    /**\r\n     * A tab index for the menu.\r\n     *\r\n     * Tab index will influence the order in which elements on the chart and\r\n     * the whole page are selected when pressing TAB key.\r\n     *\r\n     * @param value Tab index\r\n     */\n    set: function (value) {\n      this._tabindex = value;\n      this.invalidate();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ExportMenu.prototype, \"language\", {\n    /**\r\n     * @return A [[Language]] instance to be used\r\n     */\n    get: function () {\n      var _this = this;\n      var language = this._language.get();\n      if (language == null) {\n        language = new Language();\n        // TODO code duplication with `set language()`\n        this._language.set(language, language.events.on(\"localechanged\", function (ev) {\n          _this.invalidate();\n        }));\n      }\n      return language;\n    },\n    /**\r\n     * A [[Language]] instance.\r\n     *\r\n     * @param value An instance of [[Language]]\r\n     */\n    set: function (value) {\n      var _this = this;\n      this._language.set(value, value.events.on(\"localechanged\", function (ev) {\n        _this.invalidate();\n      }));\n      this.invalidate();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Controlling the menu\r\n   */\n  /**\r\n   * Removes all active classes from menu items. Useful on touch devices and\r\n   * keyboard navigation where open menu can be closed instantly by clicking or\r\n   * tapping outside it.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  ExportMenu.prototype.close = function () {\n    var _this = this;\n    if (this.isDisposed()) {\n      return;\n    }\n    if (this._ignoreNextClose) {\n      this._ignoreNextClose = false;\n      return;\n    }\n    if (this.closeOnClick) {\n      this._element.style.pointerEvents = \"none\";\n      setTimeout(function () {\n        _this._element.style.pointerEvents = \"auto\";\n      }, 100);\n    }\n    if (this._currentSelection) {\n      this.setBlur(this._currentSelection);\n      this._currentSelection = undefined;\n    }\n    if (this._element) {\n      var items = this._element.getElementsByClassName(\"active\");\n      for (var len = items.length, i = len - 1; i >= 0; i--) {\n        if (items[i]) {\n          $dom.removeClass(items[i], \"active\");\n        }\n      }\n    }\n    this.events.dispatchImmediately(\"closed\", {\n      type: \"closed\",\n      target: this\n    });\n  };\n  /**\r\n   * Selects a branch in the menu.\r\n   *\r\n   * Handles closing of currently open branch.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param branch Branch to select\r\n   */\n  ExportMenu.prototype.selectBranch = function (branch) {\n    var _this = this;\n    if (this.isDisposed()) {\n      return;\n    }\n    // Cancel previous closure\n    if (branch.closeTimeout) {\n      this.removeDispose(branch.closeTimeout);\n      branch.closeTimeout = undefined;\n    }\n    // Add active class\n    $dom.addClass(branch.element, \"active\");\n    // Set expanded\n    if (branch.submenuElement) {\n      branch.submenuElement.setAttribute(\"aria-expanded\", \"true\");\n    }\n    // Remove current selection\n    if (this._currentSelection && this._currentSelection !== branch && this._currentSelection.ascendants) {\n      $iter.each($iter.concat($iter.fromArray([this._currentSelection]), this._currentSelection.ascendants.iterator()), function (ascendant) {\n        if (!branch.ascendants.contains(ascendant) && branch !== ascendant) {\n          _this.unselectBranch(ascendant, true);\n        }\n      });\n    }\n    // Select and/or cancel timeout for current ascendants\n    $iter.each(branch.ascendants.iterator(), function (ascendant) {\n      if (ascendant.closeTimeout) {\n        _this.removeDispose(ascendant.closeTimeout);\n        ascendant.closeTimeout = undefined;\n      }\n      $dom.addClass(ascendant.element, \"active\");\n    });\n    // Log current selection\n    this._currentSelection = branch;\n    // Invoke event\n    if (this.events.isEnabled(\"branchselected\")) {\n      var event_5 = {\n        type: \"branchselected\",\n        target: this,\n        branch: branch\n      };\n      this.events.dispatchImmediately(\"branchselected\", event_5);\n    }\n  };\n  /**\r\n   * Unselects a branch. Also selects a branch one level up if necessary.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param branch Branch to unselect\r\n   * @param simple If `true`, only the branch will be unselected without selecting parent branch\r\n   */\n  ExportMenu.prototype.unselectBranch = function (branch, simple) {\n    if (this.isDisposed()) {\n      return;\n    }\n    // Remove active class\n    $dom.removeClass(branch.element, \"active\");\n    // Set expanded\n    if (branch.submenuElement) {\n      branch.submenuElement.removeAttribute(\"aria-expanded\");\n    }\n    // Remove current selection\n    if (this._currentSelection == branch) {\n      this._currentSelection = undefined;\n    }\n    // Invoke event\n    if (this.events.isEnabled(\"branchunselected\")) {\n      var event_6 = {\n        type: \"branchunselected\",\n        target: this,\n        branch: branch\n      };\n      this.events.dispatchImmediately(\"branchunselected\", event_6);\n    }\n  };\n  /**\r\n   * Delay unselection of a branch. This can still be cancelled in some other\r\n   * place if the branch or its children regain focus.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param branch Branch to unselect\r\n   * @param simple If `true`, only the branch will be unselected without selecting parent branch\r\n   */\n  ExportMenu.prototype.delayUnselectBranch = function (branch, simple) {\n    var _this = this;\n    if (this.isDisposed()) {\n      return;\n    }\n    // Schedule branch unselection\n    if (branch.closeTimeout) {\n      this.removeDispose(branch.closeTimeout);\n      branch.closeTimeout = undefined;\n    }\n    branch.closeTimeout = this.setTimeout(function () {\n      _this.unselectBranch(branch, simple);\n    }, this.closeDelay);\n    // Schedule unselection of all ascendants\n    // In case focus went away from the export menu altogether, this will ensure\n    // that all items will be closed.\n    // In case we're jumping to other menu item, those delayed unselections will\n    // be cancelled by `selectBranch`\n    if (simple !== true && branch.ascendants) {\n      $iter.each(branch.ascendants.iterator(), function (ascendant) {\n        _this.delayUnselectBranch(ascendant, true);\n      });\n    }\n  };\n  /**\r\n   * Navigates the menu based on which direction kayboard key was pressed.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param key A key that was pressed\r\n   */\n  ExportMenu.prototype.moveSelection = function (key) {\n    if (this.isDisposed()) {\n      return;\n    }\n    // Check if there's a current selection\n    if (!this._currentSelection) {\n      return;\n    }\n    var newSelection;\n    if (key == \"up\") {\n      // Try moving up in current menu list, or to the last item if already\n      // at the top\n      newSelection = this.getPrevSibling(this._currentSelection);\n    } else if (key == \"down\") {\n      // Try moving down in current menu list, or to the top item if already\n      // at the bottom\n      newSelection = this.getNextSibling(this._currentSelection);\n    } else if (key == \"left\" && this.align == \"right\" || key == \"right\" && this.align == \"left\") {\n      var menu = this.getSubMenu(this._currentSelection);\n      // Go one level-deeper\n      if (menu != null) {\n        newSelection = menu[0];\n      }\n    } else if (key == \"right\" && this.align == \"right\" || key == \"left\" && this.align == \"left\") {\n      // Go one level-deeper\n      newSelection = this.getParentItem(this._currentSelection);\n    }\n    if (newSelection && newSelection !== this._currentSelection) {\n      this.selectBranch(newSelection);\n      this.setFocus(newSelection);\n      this._currentSelection = newSelection;\n    }\n  };\n  /**\r\n   * Returns all siblings of a menu item, including this same menu item.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param branch  Menu item\r\n   * @return List of sibling menu items\r\n   */\n  ExportMenu.prototype.getSiblings = function (branch) {\n    var parent = this.getParentItem(branch);\n    if (parent && parent.menu) {\n      return parent.menu;\n    } else {\n      return [];\n    }\n  };\n  /**\r\n   * Returns menu items parent item.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param branch  Menu item\r\n   * @return Parent menu item\r\n   */\n  ExportMenu.prototype.getParentItem = function (branch) {\n    if (branch.ascendants && branch.ascendants.length) {\n      return branch.ascendants.getIndex(branch.ascendants.length - 1);\n    } else {\n      return undefined;\n    }\n  };\n  /**\r\n   * Returns next sibling in the same menu branch. If there is no next sibling,\r\n   * the first one is returned. If there is just one item, that item is\r\n   * returned. Unsupported menu items are skipped.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param branch  Menu item to search siblings for\r\n   * @return Menu item\r\n   */\n  ExportMenu.prototype.getNextSibling = function (branch) {\n    var siblings = this.getSiblings(branch);\n    if (siblings.length > 1) {\n      var next = siblings.indexOf(branch) + 1;\n      next = siblings.length == next ? 0 : next;\n      return siblings[next].unsupported ? this.getNextSibling(siblings[next]) : siblings[next];\n    } else {\n      return branch;\n    }\n  };\n  /**\r\n   * Returns previous sibling in the same menu branch. If there is no next\r\n   * sibling, the first one is returned. If there is just one item, that item is\r\n   * returned. Unsupported menu items are skipped.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param branch  Menu item to search siblings for\r\n   * @return Menu item\r\n   */\n  ExportMenu.prototype.getPrevSibling = function (branch) {\n    var siblings = this.getSiblings(branch);\n    if (siblings.length > 1) {\n      var prev = siblings.indexOf(branch) - 1;\n      prev = prev == -1 ? siblings.length - 1 : prev;\n      return siblings[prev].unsupported ? this.getPrevSibling(siblings[prev]) : siblings[prev];\n    } else {\n      return branch;\n    }\n  };\n  /**\r\n   * Attempts to set focus on particular menu element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param branch Menu item\r\n   */\n  ExportMenu.prototype.setFocus = function (branch) {\n    if (branch.interactions) {\n      try {\n        branch.interactions.element.focus();\n      } catch (e) {\n        // nothing\n      }\n    }\n  };\n  /**\r\n   * Attempts to remove focus from the menu element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param branch Menu item\r\n   */\n  ExportMenu.prototype.setBlur = function (branch) {\n    if (branch.interactions) {\n      try {\n        branch.interactions.element.blur();\n      } catch (e) {\n        // nothing\n      }\n    }\n  };\n  /**\r\n   * Hides the whole branch of menu.\r\n   *\r\n   * @param  branch  branch\r\n   */\n  ExportMenu.prototype.hideBranch = function (branch) {\n    branch.element.style.display = \"none\";\n  };\n  /**\r\n   * Show the branch of menu.\r\n   *\r\n   * @param  branch  branch\r\n   */\n  ExportMenu.prototype.showBranch = function (branch) {\n    branch.element.style.display = \"\";\n  };\n  Object.defineProperty(ExportMenu.prototype, \"element\", {\n    /**\r\n     * The main element o fthe menu - usually `<ul>`.\r\n     *\r\n     * @since 4.10.6\r\n     * @return Menu element\r\n     */\n    get: function () {\n      return this._element;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return ExportMenu;\n}(Validatable);\nexport { ExportMenu };","map":{"version":3,"names":["__extends","exportCSS","Adapter","List","getInteraction","MutableValueDisposer","Language","Validatable","keyboard","$utils","$iter","$dom","$type","ExportMenu","_super","_this","call","adapter","closeDelay","closeOnClick","_language","_menuTag","_itemTag","_labelTag","_iconTag","_classPrefix","_defaultStyles","_align","_verticalAlign","_tabindex","_ignoreNextClose","_items","className","_disposers","push","invalidate","applyTheme","prototype","validate","draw","_element","createMenuElement","innerHTML","getMenuItemClass","defaultStyles","style","display","getValue","_container","appendChild","items","apply","len","length","i","drawBranch","menuElement","body","events","on","ev","pointer","touch","close","key","getEventKey","event","_currentSelection","preventDefault","moveSelection","loadDefaultCSS","container","branch","level","unsupported","ascendants","type","element","createItemElement","label","icon","createIconElement","src","title","svg","createSvgElement","createLabelElement","language","translate","readerLabel","getReaderLabel","setAttribute","interactions","typeClickable","isEnabled","isDisposed","event_1","dispatchImmediately","isKey","event_2","submenu_1","getSubMenu","selectBranch","setFocus","event_3","delayUnselectBranch","event_4","local_level","menu","submenu","submenuElement","copyFrom","hidden","hideBranch","id","color","backgroundColor","hex","document","createElement","menuTag","classPrefix","align","verticalAlign","itemTag","tabindex","toString","labelTag","iconTag","parser","DOMParser","parseFromString","documentElement","dispose","_disposed","parentNode","removeChild","hasValue","hasSubMenu","stripTags","undefined","Object","defineProperty","get","set","enumerable","configurable","tag","value","getShadowRoot","pointerEvents","setTimeout","setBlur","getElementsByClassName","removeClass","target","closeTimeout","removeDispose","addClass","each","concat","fromArray","iterator","ascendant","contains","unselectBranch","event_5","simple","removeAttribute","event_6","newSelection","getPrevSibling","getNextSibling","getParentItem","getSiblings","parent","getIndex","siblings","next","indexOf","prev","focus","e","blur","showBranch"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/core/export/ExportMenu.js"],"sourcesContent":["/**\r\n * ExportMenu provides functionality for building Export menu\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport exportCSS from \"./ExportCSS\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport { List } from \"../utils/List\";\r\nimport { getInteraction } from \"../interaction/Interaction\";\r\nimport { MutableValueDisposer } from \"../utils/Disposer\";\r\nimport { Language } from \"../utils/Language\";\r\nimport { Validatable } from \"../utils/Validatable\";\r\nimport { keyboard } from \"../utils/Keyboard\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $iter from \"../utils/Iterator\";\r\nimport * as $dom from \"../utils/DOM\";\r\nimport * as $type from \"../utils/Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a menu for Export operations.\r\n *\r\n * To add an export menu to a chart, set this to a new instance of\r\n * [[ExportMenu]].\r\n *\r\n * ```TypeScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"exporting\": {\r\n *     \"menu\": {}\r\n *   }\r\n * }\r\n * ```\r\n * @important\r\n */\r\nvar ExportMenu = /** @class */ (function (_super) {\r\n    __extends(ExportMenu, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ExportMenu() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * An [[Adapter]].\r\n         */\r\n        _this.adapter = new Adapter(_this);\r\n        /**\r\n         * How many milliseconds to hold menu/sub-menu open after it loses focus or\r\n         * hover, before auto-closing it.\r\n         *\r\n         * @default 1000\r\n         */\r\n        _this.closeDelay = 1000;\r\n        /**\r\n         * Close the menu automatically when some export operation is triggered.\r\n         *\r\n         * @default true\r\n         * @since 4.2.2\r\n         */\r\n        _this.closeOnClick = true;\r\n        /**\r\n         * An instance of [[Language]].\r\n         */\r\n        _this._language = new MutableValueDisposer();\r\n        /**\r\n         * What HTML tags to use to build menu.\r\n         */\r\n        _this._menuTag = \"ul\";\r\n        /**\r\n         * Which tag to use to enclose individual menu items.\r\n         */\r\n        _this._itemTag = \"li\";\r\n        /**\r\n         * Tag to wrap menu item labels in.\r\n         */\r\n        _this._labelTag = \"a\";\r\n        /**\r\n         * Tag to use for icons\r\n         */\r\n        _this._iconTag = \"img\";\r\n        /**\r\n         * Prefix for class names applied to menu elements.\r\n         */\r\n        _this._classPrefix = \"amexport\";\r\n        /**\r\n         * If set to `true` [[ExportMenu]] will load it's own external CSS when\r\n         * instantiated.\r\n         */\r\n        _this._defaultStyles = true;\r\n        /**\r\n         * Horizontal positioning.\r\n         */\r\n        _this._align = \"right\";\r\n        /**\r\n         * Vertical positioning.\r\n         */\r\n        _this._verticalAlign = \"top\";\r\n        /**\r\n         * A tabindex to apply to Export Menu.\r\n         */\r\n        _this._tabindex = 0;\r\n        /**\r\n         * Whether next menu close event should be ignored.\r\n         */\r\n        _this._ignoreNextClose = false;\r\n        /**\r\n         * Default menu items.\r\n         */\r\n        _this._items = [\r\n            {\r\n                \"label\": \"...\",\r\n                \"menu\": [\r\n                    {\r\n                        \"label\": \"Image\",\r\n                        \"menu\": [\r\n                            { \"type\": \"png\", \"label\": \"PNG\" },\r\n                            { \"type\": \"jpg\", \"label\": \"JPG\" },\r\n                            { \"type\": \"svg\", \"label\": \"SVG\" },\r\n                            { \"type\": \"pdf\", \"label\": \"PDF\" }\r\n                        ]\r\n                    }, {\r\n                        \"label\": \"Data\",\r\n                        \"menu\": [\r\n                            { \"type\": \"json\", \"label\": \"JSON\" },\r\n                            { \"type\": \"csv\", \"label\": \"CSV\" },\r\n                            { \"type\": \"xlsx\", \"label\": \"XLSX\" },\r\n                            { \"type\": \"html\", \"label\": \"HTML\" },\r\n                            { \"type\": \"pdfdata\", \"label\": \"PDF\" }\r\n                        ]\r\n                    }, {\r\n                        \"label\": \"Print\", \"type\": \"print\"\r\n                    }\r\n                ]\r\n            }\r\n        ];\r\n        _this.className = \"ExportMenu\";\r\n        _this._disposers.push(_this._language);\r\n        _this.invalidate();\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * (Re)draws the Export menu.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ExportMenu.prototype.validate = function () {\r\n        this.draw();\r\n        _super.prototype.validate.call(this);\r\n    };\r\n    /**\r\n     * Draws the menu based on current items.\r\n     *\r\n     * Normally, there's no need to call this explicitly. The chart, if it has\r\n     * export menu enabled, will automatically draw the menu.\r\n     */\r\n    ExportMenu.prototype.draw = function () {\r\n        var _this = this;\r\n        // Create top-level menu item, or clear it\r\n        if (!this._element) {\r\n            this._element = this.createMenuElement(0);\r\n        }\r\n        else {\r\n            this._element.innerHTML = \"\";\r\n            this._element.className = this.getMenuItemClass(0);\r\n        }\r\n        // See if we're loading external CSS\r\n        // Hide it until CSS is loaded\r\n        if (this.defaultStyles) {\r\n            this._element.style.display = \"none\";\r\n        }\r\n        // Append to container\r\n        $type.getValue(this._container).appendChild(this._element);\r\n        // Apply adapter to menu items before processing\r\n        var items = this.adapter.apply(\"items\", {\r\n            items: this._items\r\n        }).items;\r\n        for (var len = items.length, i = 0; i < len; i++) {\r\n            this.drawBranch(this._element, items[i], 0);\r\n        }\r\n        // Apply adapter to finalized menu element\r\n        this._element = this.adapter.apply(\"menuElement\", {\r\n            menuElement: this._element\r\n        }).menuElement;\r\n        // Set up global \"down\" event\r\n        this._disposers.push(getInteraction().body.events.on(\"down\", function (ev) {\r\n            if (!ev.pointer.touch) {\r\n                _this._ignoreNextClose = false;\r\n            }\r\n            _this.close();\r\n        }));\r\n        // Set up global event on ESC press to close the menu\r\n        this._disposers.push(getInteraction().body.events.on(\"keydown\", function (ev) {\r\n            var key = keyboard.getEventKey(ev.event);\r\n            switch (key) {\r\n                case \"esc\":\r\n                    _this.close();\r\n                    break;\r\n                case \"up\":\r\n                case \"down\":\r\n                case \"left\":\r\n                case \"right\":\r\n                    if (_this._currentSelection) {\r\n                        ev.event.preventDefault();\r\n                    }\r\n                    _this.moveSelection(key);\r\n                    break;\r\n            }\r\n        }));\r\n        if (this.defaultStyles) {\r\n            this.loadDefaultCSS();\r\n        }\r\n    };\r\n    /**\r\n     * Creates a new branch in export menu. This function is recursive for\r\n     * building multi-level menus.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param container Container to put branch elements in\r\n     * @param branch    Menu item\r\n     * @param level     Current nesting level\r\n     */\r\n    ExportMenu.prototype.drawBranch = function (container, branch, level) {\r\n        var _this = this;\r\n        // Apply adapter\r\n        branch = this.adapter.apply(\"branch\", {\r\n            branch: branch,\r\n            level: level\r\n        }).branch;\r\n        // Unsupported?\r\n        // ExportMenu does not check or know for specific browser/system\r\n        // capabilities. It must happen in some other code and applied via Adapter.\r\n        // Export itself will check compatibility, but there might be other plugins\r\n        // that influence it or even add any specific export functionality.\r\n        if (branch.unsupported === true) {\r\n            return;\r\n        }\r\n        // Init ascendants\r\n        if (!branch.ascendants) {\r\n            branch.ascendants = new List();\r\n        }\r\n        // Get type\r\n        var type = branch.type;\r\n        // Create an item\r\n        var element = this.createItemElement(level, type);\r\n        // Create label\r\n        var label;\r\n        // Create icon\r\n        if (branch.icon) {\r\n            label = this.createIconElement(level, type);\r\n            label.src = branch.icon;\r\n            if (branch.label || branch.title) {\r\n                label.title = branch.title || branch.label;\r\n            }\r\n        }\r\n        else if (branch.svg) {\r\n            label = this.createSvgElement(level, type, branch.svg);\r\n            if (branch.label || branch.title) {\r\n                label.title = branch.title || branch.label;\r\n            }\r\n        }\r\n        else {\r\n            label = this.createLabelElement(level, type);\r\n            label.innerHTML = (branch.label ? this.language.translate(branch.label) : \"\");\r\n            if (branch.title) {\r\n                label.title = branch.title;\r\n            }\r\n        }\r\n        // Apply reader text to label\r\n        var readerLabel = this.getReaderLabel(branch, label.innerHTML);\r\n        label.setAttribute(\"aria-label\", readerLabel);\r\n        // Add Label\r\n        element.appendChild(label);\r\n        // Create interaction object\r\n        // TODO clean this up when it's disposed\r\n        branch.interactions = getInteraction().getInteraction(element);\r\n        branch.element = element;\r\n        // Create interaction manager we can set event listeners to\r\n        if (this.typeClickable(type)) {\r\n            //branch.interactions.clickable = true;\r\n            // TODO clean this up when it's disposed\r\n            branch.interactions.events.on(\"hit\", function (ev) {\r\n                if (_this.events.isEnabled(\"hit\") && !_this.isDisposed()) {\r\n                    var event_1 = {\r\n                        \"type\": \"hit\",\r\n                        \"event\": ev.event,\r\n                        \"target\": _this,\r\n                        \"branch\": branch\r\n                    };\r\n                    _this.events.dispatchImmediately(\"hit\", event_1);\r\n                }\r\n            });\r\n            // TODO clean this up when it's disposed\r\n            branch.interactions.events.on(\"keyup\", function (ev) {\r\n                if (keyboard.isKey(ev.event, \"enter\")) {\r\n                    if (_this.events.isEnabled(\"enter\")) {\r\n                        var event_2 = {\r\n                            \"type\": \"enter\",\r\n                            \"event\": ev.event,\r\n                            \"target\": _this,\r\n                            \"branch\": branch\r\n                        };\r\n                        _this.events.dispatchImmediately(\"enter\", event_2);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        {\r\n            var submenu_1 = this.getSubMenu(branch);\r\n            // Add ENTER event to open sub-menus\r\n            if (submenu_1 != null) {\r\n                // TODO clean this up when it's disposed\r\n                branch.interactions.events.on(\"keyup\", function (ev) {\r\n                    if (keyboard.isKey(ev.event, \"enter\")) {\r\n                        // This is item has sub-menu, activate the first child on ENTER\r\n                        _this.selectBranch(submenu_1[0]);\r\n                        // Attempt to set focus\r\n                        _this.setFocus(submenu_1[0]);\r\n                    }\r\n                });\r\n                branch.interactions.events.on(\"hit\", function (ev) {\r\n                    _this.selectBranch(branch);\r\n                });\r\n            }\r\n        }\r\n        // Add events\r\n        // TODO clean this up when it's disposed\r\n        branch.interactions.events.on(\"over\", function (ev) {\r\n            if (ev.pointer.touch) {\r\n                // Cancel pending menu closure\r\n                _this._ignoreNextClose = true;\r\n            }\r\n            _this.selectBranch(branch);\r\n            if (_this.events.isEnabled(\"over\")) {\r\n                var event_3 = {\r\n                    \"type\": \"over\",\r\n                    \"event\": ev.event,\r\n                    \"target\": _this,\r\n                    \"branch\": branch\r\n                };\r\n                _this.events.dispatchImmediately(\"over\", event_3);\r\n            }\r\n        });\r\n        // TODO clean this up when it's disposed\r\n        branch.interactions.events.on(\"out\", function (ev) {\r\n            if (_this.isDisposed()) {\r\n                return;\r\n            }\r\n            if (!ev.pointer.touch) {\r\n                _this.delayUnselectBranch(branch);\r\n            }\r\n            if (_this.events.isEnabled(\"out\")) {\r\n                var event_4 = {\r\n                    \"type\": \"out\",\r\n                    \"event\": ev.event,\r\n                    \"target\": _this,\r\n                    \"branch\": branch\r\n                };\r\n                _this.events.dispatchImmediately(\"out\", event_4);\r\n            }\r\n        });\r\n        // TODO clean this up when it's disposed\r\n        branch.interactions.events.on(\"focus\", function (ev) {\r\n            _this.selectBranch(branch);\r\n        });\r\n        // TODO clean this up when it's disposed\r\n        branch.interactions.events.on(\"blur\", function (ev) {\r\n            _this.delayUnselectBranch(branch);\r\n        });\r\n        // Increment level\r\n        var local_level = level + 1;\r\n        // Has sub-menu?\r\n        if (branch.menu) {\r\n            var submenu = this.createMenuElement(local_level);\r\n            branch.submenuElement = submenu;\r\n            for (var len = branch.menu.length, i = 0; i < len; i++) {\r\n                var ascendants = new List();\r\n                branch.menu[i].ascendants = ascendants;\r\n                if (branch.ascendants.length) {\r\n                    ascendants.copyFrom(branch.ascendants);\r\n                }\r\n                ascendants.push(branch);\r\n                this.drawBranch(submenu, branch.menu[i], local_level);\r\n            }\r\n            // Sub-menu is empty (all items are not supported)\r\n            // Do not draw this menu item at all\r\n            if (submenu.innerHTML == \"\") {\r\n                return;\r\n            }\r\n            element.appendChild(submenu);\r\n        }\r\n        // Should this item be hidden?\r\n        if (branch.hidden) {\r\n            this.hideBranch(branch);\r\n        }\r\n        // Add id?\r\n        if (branch.id) {\r\n            element.setAttribute(\"id\", branch.id);\r\n        }\r\n        // Background color?\r\n        if (branch.color) {\r\n            element.style.backgroundColor = branch.color.hex;\r\n        }\r\n        // Append to container\r\n        container.appendChild(element);\r\n    };\r\n    /**\r\n     * Creates a menu element to hold its elements in. Usually it's an `<ul>`\r\n     * tag.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param level  Current nesting level\r\n     * @return HTML element reference\r\n     */\r\n    ExportMenu.prototype.createMenuElement = function (level) {\r\n        var element = document.createElement(this.menuTag);\r\n        element.className = this.getMenuItemClass(level);\r\n        // Accessibility\r\n        if (level === 0) {\r\n            element.setAttribute(\"role\", \"menubar\");\r\n        }\r\n        else {\r\n            element.setAttribute(\"role\", \"menu\");\r\n        }\r\n        return element;\r\n    };\r\n    /**\r\n     * Generates a class name for the menu element based on its nesting level.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param level  Current nesting level\r\n     * @return Class name(s)\r\n     */\r\n    ExportMenu.prototype.getMenuItemClass = function (level) {\r\n        var className = this.classPrefix + \"-menu \" + this.classPrefix + \"-menu-level-\" + level;\r\n        if (level === 0) {\r\n            className += \" \" + this.classPrefix + \"-menu-root \" +\r\n                this.classPrefix + \"-\" + this.align + \" \" +\r\n                this.classPrefix + \"-\" + this.verticalAlign;\r\n        }\r\n        return this.adapter.apply(\"menuClass\", {\r\n            className: className,\r\n            level: level\r\n        }).className;\r\n    };\r\n    /**\r\n     * Creates menu item. Usually `<li>` tag. Its label and sub-elements will go\r\n     * into this element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param level  Current nesting level\r\n     * @param type   Type of the menu item\r\n     * @return HTML element reference\r\n     */\r\n    ExportMenu.prototype.createItemElement = function (level, type) {\r\n        var element = document.createElement(this.itemTag);\r\n        var className = this.classPrefix + \"-item \" + this.classPrefix\r\n            + \"-item-level-\" + level\r\n            + \" \" + this.classPrefix + \"-item-\" + (type || \"blank\");\r\n        element.className = this.adapter.apply(\"itemClass\", {\r\n            className: className,\r\n            level: level,\r\n            type: type\r\n        }).className;\r\n        element.setAttribute(\"role\", \"menuitem\");\r\n        element.setAttribute(\"tabindex\", this.tabindex.toString());\r\n        return element;\r\n    };\r\n    /**\r\n     * Creates a \"label\" part of the menu item. It could be text or any HTML\r\n     * content.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param level  Current nesting level\r\n     * @param type   Type of the menu item\r\n     * @return An HTML Element\r\n     */\r\n    ExportMenu.prototype.createLabelElement = function (level, type) {\r\n        var element = document.createElement(this.labelTag);\r\n        var className = this.classPrefix + \"-label \" + this.classPrefix\r\n            + \"-label-level-\" + level\r\n            + \" \" + this.classPrefix + \"-item-\" + (type || \"blank\");\r\n        if (this.typeClickable(type)) {\r\n            className += \" \" + this.classPrefix + \"-clickable\";\r\n        }\r\n        element.className = this.adapter.apply(\"labelClass\", {\r\n            className: className,\r\n            level: level,\r\n            type: type\r\n        }).className;\r\n        // Accessible navigation\r\n        //element.setAttribute(\"tabindex\", this.tabindex.toString());\r\n        //element.setAttribute(\"role\", \"menuitem\");\r\n        return element;\r\n    };\r\n    /**\r\n     * Creates a \"icon\" part of the menu item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param level  Current nesting level\r\n     * @param type   Type of the menu item\r\n     * @return An HTML Element\r\n     */\r\n    ExportMenu.prototype.createIconElement = function (level, type) {\r\n        var element = document.createElement(this.iconTag);\r\n        var className = this.classPrefix + \"-icon \" + this.classPrefix\r\n            + \"-icon-level-\" + level\r\n            + \" \" + this.classPrefix + \"-item-\" + (type || \"blank\");\r\n        if (this.typeClickable(type)) {\r\n            className += \" \" + this.classPrefix + \"-clickable\";\r\n        }\r\n        element.className = this.adapter.apply(\"labelClass\", {\r\n            className: className,\r\n            level: level,\r\n            type: type\r\n        }).className;\r\n        // Accessible navigation\r\n        element.setAttribute(\"tabindex\", this.tabindex.toString());\r\n        element.setAttribute(\"role\", \"menuitem\");\r\n        return element;\r\n    };\r\n    /**\r\n     * Creates a a custom element out of raw HTML.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param level  Current nesting level\r\n     * @param type   Type of the menu item\r\n     * @return An HTML Element\r\n     */\r\n    ExportMenu.prototype.createSvgElement = function (level, type, svg) {\r\n        var parser = new DOMParser();\r\n        var element = parser.parseFromString(svg, \"image/svg+xml\").documentElement;\r\n        var className = this.classPrefix + \"-icon \" + this.classPrefix\r\n            + \"-icon-level-\" + level\r\n            + \" \" + this.classPrefix + \"-item-\" + (type || \"blank\");\r\n        if (this.typeClickable(type)) {\r\n            className += \" \" + this.classPrefix + \"-clickable\";\r\n        }\r\n        element.setAttribute(\"class\", this.adapter.apply(\"labelClass\", {\r\n            className: className,\r\n            level: level,\r\n            type: type\r\n        }).className);\r\n        // Accessible navigation\r\n        element.setAttribute(\"tabindex\", this.tabindex.toString());\r\n        element.setAttribute(\"role\", \"menuitem\");\r\n        return element;\r\n    };\r\n    /**\r\n     * Destroys the menu and all its elements.\r\n     */\r\n    ExportMenu.prototype.dispose = function () {\r\n        if (!this._disposed) {\r\n            _super.prototype.dispose.call(this);\r\n            if (this._element && this._element.parentNode) {\r\n                this._element.parentNode.removeChild(this._element);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Checks whether menu item type is supposed to be clickable.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param type  Menu item type\r\n     * @return Is clickable?\r\n     */\r\n    ExportMenu.prototype.typeClickable = function (type) {\r\n        return $type.hasValue(type);\r\n    };\r\n    /**\r\n     * Checks whether menu item has any sub-items.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param branch  A menu item\r\n     * @return Has sub-items?\r\n     */\r\n    ExportMenu.prototype.hasSubMenu = function (branch) {\r\n        return (branch.menu && branch.menu.length) ? true : false;\r\n    };\r\n    /**\r\n     * Returns sub-items (if they exist).\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param branch  A menu item\r\n     * @return Submenus\r\n     */\r\n    ExportMenu.prototype.getSubMenu = function (branch) {\r\n        if (branch.menu && branch.menu.length) {\r\n            return branch.menu;\r\n        }\r\n    };\r\n    /**\r\n     * Generates and returns an applicable label to be used for screen readers.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param item   A menu item instance\r\n     * @param label  Current label\r\n     * @return Reader text\r\n     */\r\n    ExportMenu.prototype.getReaderLabel = function (branch, label) {\r\n        // Strip any HTML from the label\r\n        label = $utils.stripTags(label);\r\n        // Add textual note if the branch is clickable\r\n        if (branch.ascendants.length == 0) {\r\n            label = label == \"...\" ? this.language.translate(\"Export\") : label;\r\n            label += \" [\" + this.language.translate(\"Press ENTER or use arrow keys to navigate\") + \"]\";\r\n        }\r\n        else if (this.hasSubMenu(branch)) {\r\n            label += \" [\" + this.language.translate(\"Click, tap or press ENTER to open\") + \"]\";\r\n        }\r\n        else if (branch.type == \"print\") {\r\n            label = this.language.translate(\"Click, tap or press ENTER to print.\");\r\n        }\r\n        else if (this.typeClickable(branch.type)) {\r\n            label = this.language.translate(\"Click, tap or press ENTER to export as %1.\", undefined, label);\r\n        }\r\n        return this.adapter.apply(\"rederLabel\", {\r\n            label: label,\r\n            branch: branch\r\n        }).label;\r\n    };\r\n    Object.defineProperty(ExportMenu.prototype, \"container\", {\r\n        /**\r\n         * @return Container\r\n         */\r\n        get: function () {\r\n            return this._container;\r\n        },\r\n        /**\r\n         * Getters and setters\r\n         */\r\n        /**\r\n         * An HTML container to place the Menu in.\r\n         *\r\n         * A container must be an HTML element, because menu itself is HTML, and\r\n         * cannot be placed into SVG.\r\n         *\r\n         * @param container Reference to container element\r\n         * @todo Check if menu is already build. If it is, just move it to a new container\r\n         */\r\n        set: function (container) {\r\n            this._container = container;\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExportMenu.prototype, \"items\", {\r\n        /**\r\n         * @return Menu items\r\n         */\r\n        get: function () {\r\n            return this._items;\r\n        },\r\n        /**\r\n         * A list of menu items. Can be nested.\r\n         *\r\n         * @param items  Menu items\r\n         */\r\n        set: function (items) {\r\n            this._items = items;\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExportMenu.prototype, \"tag\", {\r\n        /**\r\n         * Sets main menu tag to place menu in.\r\n         *\r\n         * This also sets up how menu items are built.\r\n         *\r\n         * If you set this to \"ul\", menu items will be wrapped into `<li>` tags.\r\n         *\r\n         * If set to \"div\", menu items will be wrapped in `<div>` tags.\r\n         *\r\n         * @default \"ul\"\r\n         * @param tag Tag to use for menu\r\n         */\r\n        set: function (tag) {\r\n            this._menuTag = tag;\r\n            this._itemTag = tag == \"ul\" ? \"li\" : \"div\";\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExportMenu.prototype, \"menuTag\", {\r\n        /**\r\n         * Returns current menu tag.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Menu tag (item that contains sub-items)\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"menuTag\", {\r\n                tag: this._menuTag\r\n            }).tag;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExportMenu.prototype, \"itemTag\", {\r\n        /**\r\n         * Returns tag to wrap items into.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Item tag\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"itemTag\", {\r\n                tag: this._itemTag\r\n            }).tag;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExportMenu.prototype, \"labelTag\", {\r\n        /**\r\n         * Returns menu label tag.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Label tag\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"labelTag\", {\r\n                tag: this._labelTag\r\n            }).tag;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExportMenu.prototype, \"iconTag\", {\r\n        /**\r\n         * Returns icon tag.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Icon tag\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"iconTag\", {\r\n                tag: this._iconTag\r\n            }).tag;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExportMenu.prototype, \"align\", {\r\n        /**\r\n         * @return Horizontal alignment\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"align\", {\r\n                align: this._align\r\n            }).align;\r\n        },\r\n        /**\r\n         * A horizontal alignment for the menu placement.\r\n         *\r\n         * @param value Horizontal alignment\r\n         */\r\n        set: function (value) {\r\n            this._align = value;\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExportMenu.prototype, \"verticalAlign\", {\r\n        /**\r\n         * @return Vertical alignment\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"verticalAlign\", {\r\n                verticalAlign: this._verticalAlign\r\n            }).verticalAlign;\r\n        },\r\n        /**\r\n         * A vertical alignment for the menu placement.\r\n         *\r\n         * @param value Vertical alignment\r\n         */\r\n        set: function (value) {\r\n            this._verticalAlign = value;\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExportMenu.prototype, \"classPrefix\", {\r\n        /**\r\n         * @return Class name prefix\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"classPrefix\", {\r\n                classPrefix: this._classPrefix\r\n            }).classPrefix;\r\n        },\r\n        /**\r\n         * Class name prefix.\r\n         *\r\n         * @default \"amexport\"\r\n         * @param value Class name prefix\r\n         */\r\n        set: function (value) {\r\n            this._classPrefix = value;\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExportMenu.prototype, \"defaultStyles\", {\r\n        /**\r\n         * @return Should ExportMenu load its own CSS?\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"defaultStyles\", {\r\n                defaultStyles: this._defaultStyles\r\n            }).defaultStyles;\r\n        },\r\n        /**\r\n         * Indicates whether [[ExportMenu]] should load external CSS to style itself.\r\n         *\r\n         * If set to `false`, the menu will not be styled, and will rely on some\r\n         * external CSS.\r\n         *\r\n         * @default true\r\n         * @param Should ExportMenu load its own CSS?\r\n         */\r\n        set: function (value) {\r\n            if (this._defaultStyles != value) {\r\n                this._defaultStyles = value;\r\n                if (value) {\r\n                    this.loadDefaultCSS();\r\n                }\r\n            }\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Loads the default CSS.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ExportMenu.prototype.loadDefaultCSS = function () {\r\n        this._disposers.push(exportCSS($dom.getShadowRoot(this.container), this.classPrefix));\r\n        if (this._element) {\r\n            this._element.style.display = \"\";\r\n        }\r\n    };\r\n    Object.defineProperty(ExportMenu.prototype, \"tabindex\", {\r\n        /**\r\n         * @return Tab index\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"tabindex\", {\r\n                tabindex: this._tabindex\r\n            }).tabindex;\r\n        },\r\n        /**\r\n         * A tab index for the menu.\r\n         *\r\n         * Tab index will influence the order in which elements on the chart and\r\n         * the whole page are selected when pressing TAB key.\r\n         *\r\n         * @param value Tab index\r\n         */\r\n        set: function (value) {\r\n            this._tabindex = value;\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExportMenu.prototype, \"language\", {\r\n        /**\r\n         * @return A [[Language]] instance to be used\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            var language = this._language.get();\r\n            if (language == null) {\r\n                language = new Language();\r\n                // TODO code duplication with `set language()`\r\n                this._language.set(language, language.events.on(\"localechanged\", function (ev) {\r\n                    _this.invalidate();\r\n                }));\r\n            }\r\n            return language;\r\n        },\r\n        /**\r\n         * A [[Language]] instance.\r\n         *\r\n         * @param value An instance of [[Language]]\r\n         */\r\n        set: function (value) {\r\n            var _this = this;\r\n            this._language.set(value, value.events.on(\"localechanged\", function (ev) {\r\n                _this.invalidate();\r\n            }));\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Controlling the menu\r\n     */\r\n    /**\r\n     * Removes all active classes from menu items. Useful on touch devices and\r\n     * keyboard navigation where open menu can be closed instantly by clicking or\r\n     * tapping outside it.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ExportMenu.prototype.close = function () {\r\n        var _this = this;\r\n        if (this.isDisposed()) {\r\n            return;\r\n        }\r\n        if (this._ignoreNextClose) {\r\n            this._ignoreNextClose = false;\r\n            return;\r\n        }\r\n        if (this.closeOnClick) {\r\n            this._element.style.pointerEvents = \"none\";\r\n            setTimeout(function () {\r\n                _this._element.style.pointerEvents = \"auto\";\r\n            }, 100);\r\n        }\r\n        if (this._currentSelection) {\r\n            this.setBlur(this._currentSelection);\r\n            this._currentSelection = undefined;\r\n        }\r\n        if (this._element) {\r\n            var items = this._element.getElementsByClassName(\"active\");\r\n            for (var len = items.length, i = len - 1; i >= 0; i--) {\r\n                if (items[i]) {\r\n                    $dom.removeClass(items[i], \"active\");\r\n                }\r\n            }\r\n        }\r\n        this.events.dispatchImmediately(\"closed\", {\r\n            type: \"closed\",\r\n            target: this\r\n        });\r\n    };\r\n    /**\r\n     * Selects a branch in the menu.\r\n     *\r\n     * Handles closing of currently open branch.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param branch Branch to select\r\n     */\r\n    ExportMenu.prototype.selectBranch = function (branch) {\r\n        var _this = this;\r\n        if (this.isDisposed()) {\r\n            return;\r\n        }\r\n        // Cancel previous closure\r\n        if (branch.closeTimeout) {\r\n            this.removeDispose(branch.closeTimeout);\r\n            branch.closeTimeout = undefined;\r\n        }\r\n        // Add active class\r\n        $dom.addClass(branch.element, \"active\");\r\n        // Set expanded\r\n        if (branch.submenuElement) {\r\n            branch.submenuElement.setAttribute(\"aria-expanded\", \"true\");\r\n        }\r\n        // Remove current selection\r\n        if (this._currentSelection && this._currentSelection !== branch && this._currentSelection.ascendants) {\r\n            $iter.each($iter.concat($iter.fromArray([this._currentSelection]), this._currentSelection.ascendants.iterator()), function (ascendant) {\r\n                if (!branch.ascendants.contains(ascendant) && branch !== ascendant) {\r\n                    _this.unselectBranch(ascendant, true);\r\n                }\r\n            });\r\n        }\r\n        // Select and/or cancel timeout for current ascendants\r\n        $iter.each(branch.ascendants.iterator(), function (ascendant) {\r\n            if (ascendant.closeTimeout) {\r\n                _this.removeDispose(ascendant.closeTimeout);\r\n                ascendant.closeTimeout = undefined;\r\n            }\r\n            $dom.addClass(ascendant.element, \"active\");\r\n        });\r\n        // Log current selection\r\n        this._currentSelection = branch;\r\n        // Invoke event\r\n        if (this.events.isEnabled(\"branchselected\")) {\r\n            var event_5 = {\r\n                type: \"branchselected\",\r\n                target: this,\r\n                branch: branch\r\n            };\r\n            this.events.dispatchImmediately(\"branchselected\", event_5);\r\n        }\r\n    };\r\n    /**\r\n     * Unselects a branch. Also selects a branch one level up if necessary.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param branch Branch to unselect\r\n     * @param simple If `true`, only the branch will be unselected without selecting parent branch\r\n     */\r\n    ExportMenu.prototype.unselectBranch = function (branch, simple) {\r\n        if (this.isDisposed()) {\r\n            return;\r\n        }\r\n        // Remove active class\r\n        $dom.removeClass(branch.element, \"active\");\r\n        // Set expanded\r\n        if (branch.submenuElement) {\r\n            branch.submenuElement.removeAttribute(\"aria-expanded\");\r\n        }\r\n        // Remove current selection\r\n        if (this._currentSelection == branch) {\r\n            this._currentSelection = undefined;\r\n        }\r\n        // Invoke event\r\n        if (this.events.isEnabled(\"branchunselected\")) {\r\n            var event_6 = {\r\n                type: \"branchunselected\",\r\n                target: this,\r\n                branch: branch\r\n            };\r\n            this.events.dispatchImmediately(\"branchunselected\", event_6);\r\n        }\r\n    };\r\n    /**\r\n     * Delay unselection of a branch. This can still be cancelled in some other\r\n     * place if the branch or its children regain focus.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param branch Branch to unselect\r\n     * @param simple If `true`, only the branch will be unselected without selecting parent branch\r\n     */\r\n    ExportMenu.prototype.delayUnselectBranch = function (branch, simple) {\r\n        var _this = this;\r\n        if (this.isDisposed()) {\r\n            return;\r\n        }\r\n        // Schedule branch unselection\r\n        if (branch.closeTimeout) {\r\n            this.removeDispose(branch.closeTimeout);\r\n            branch.closeTimeout = undefined;\r\n        }\r\n        branch.closeTimeout = this.setTimeout(function () {\r\n            _this.unselectBranch(branch, simple);\r\n        }, this.closeDelay);\r\n        // Schedule unselection of all ascendants\r\n        // In case focus went away from the export menu altogether, this will ensure\r\n        // that all items will be closed.\r\n        // In case we're jumping to other menu item, those delayed unselections will\r\n        // be cancelled by `selectBranch`\r\n        if (simple !== true && branch.ascendants) {\r\n            $iter.each(branch.ascendants.iterator(), function (ascendant) {\r\n                _this.delayUnselectBranch(ascendant, true);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Navigates the menu based on which direction kayboard key was pressed.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param key A key that was pressed\r\n     */\r\n    ExportMenu.prototype.moveSelection = function (key) {\r\n        if (this.isDisposed()) {\r\n            return;\r\n        }\r\n        // Check if there's a current selection\r\n        if (!this._currentSelection) {\r\n            return;\r\n        }\r\n        var newSelection;\r\n        if (key == \"up\") {\r\n            // Try moving up in current menu list, or to the last item if already\r\n            // at the top\r\n            newSelection = this.getPrevSibling(this._currentSelection);\r\n        }\r\n        else if (key == \"down\") {\r\n            // Try moving down in current menu list, or to the top item if already\r\n            // at the bottom\r\n            newSelection = this.getNextSibling(this._currentSelection);\r\n        }\r\n        else if ((key == \"left\" && this.align == \"right\") || (key == \"right\" && this.align == \"left\")) {\r\n            var menu = this.getSubMenu(this._currentSelection);\r\n            // Go one level-deeper\r\n            if (menu != null) {\r\n                newSelection = menu[0];\r\n            }\r\n        }\r\n        else if ((key == \"right\" && this.align == \"right\") || (key == \"left\" && this.align == \"left\")) {\r\n            // Go one level-deeper\r\n            newSelection = this.getParentItem(this._currentSelection);\r\n        }\r\n        if (newSelection && newSelection !== this._currentSelection) {\r\n            this.selectBranch(newSelection);\r\n            this.setFocus(newSelection);\r\n            this._currentSelection = newSelection;\r\n        }\r\n    };\r\n    /**\r\n     * Returns all siblings of a menu item, including this same menu item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param branch  Menu item\r\n     * @return List of sibling menu items\r\n     */\r\n    ExportMenu.prototype.getSiblings = function (branch) {\r\n        var parent = this.getParentItem(branch);\r\n        if (parent && parent.menu) {\r\n            return parent.menu;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Returns menu items parent item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param branch  Menu item\r\n     * @return Parent menu item\r\n     */\r\n    ExportMenu.prototype.getParentItem = function (branch) {\r\n        if (branch.ascendants && branch.ascendants.length) {\r\n            return branch.ascendants.getIndex(branch.ascendants.length - 1);\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    };\r\n    /**\r\n     * Returns next sibling in the same menu branch. If there is no next sibling,\r\n     * the first one is returned. If there is just one item, that item is\r\n     * returned. Unsupported menu items are skipped.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param branch  Menu item to search siblings for\r\n     * @return Menu item\r\n     */\r\n    ExportMenu.prototype.getNextSibling = function (branch) {\r\n        var siblings = this.getSiblings(branch);\r\n        if (siblings.length > 1) {\r\n            var next = siblings.indexOf(branch) + 1;\r\n            next = siblings.length == next ? 0 : next;\r\n            return siblings[next].unsupported ? this.getNextSibling(siblings[next]) : siblings[next];\r\n        }\r\n        else {\r\n            return branch;\r\n        }\r\n    };\r\n    /**\r\n     * Returns previous sibling in the same menu branch. If there is no next\r\n     * sibling, the first one is returned. If there is just one item, that item is\r\n     * returned. Unsupported menu items are skipped.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param branch  Menu item to search siblings for\r\n     * @return Menu item\r\n     */\r\n    ExportMenu.prototype.getPrevSibling = function (branch) {\r\n        var siblings = this.getSiblings(branch);\r\n        if (siblings.length > 1) {\r\n            var prev = siblings.indexOf(branch) - 1;\r\n            prev = prev == -1 ? siblings.length - 1 : prev;\r\n            return siblings[prev].unsupported ? this.getPrevSibling(siblings[prev]) : siblings[prev];\r\n        }\r\n        else {\r\n            return branch;\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to set focus on particular menu element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param branch Menu item\r\n     */\r\n    ExportMenu.prototype.setFocus = function (branch) {\r\n        if (branch.interactions) {\r\n            try {\r\n                branch.interactions.element.focus();\r\n            }\r\n            catch (e) {\r\n                // nothing\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to remove focus from the menu element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param branch Menu item\r\n     */\r\n    ExportMenu.prototype.setBlur = function (branch) {\r\n        if (branch.interactions) {\r\n            try {\r\n                branch.interactions.element.blur();\r\n            }\r\n            catch (e) {\r\n                // nothing\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Hides the whole branch of menu.\r\n     *\r\n     * @param  branch  branch\r\n     */\r\n    ExportMenu.prototype.hideBranch = function (branch) {\r\n        branch.element.style.display = \"none\";\r\n    };\r\n    /**\r\n     * Show the branch of menu.\r\n     *\r\n     * @param  branch  branch\r\n     */\r\n    ExportMenu.prototype.showBranch = function (branch) {\r\n        branch.element.style.display = \"\";\r\n    };\r\n    Object.defineProperty(ExportMenu.prototype, \"element\", {\r\n        /**\r\n         * The main element o fthe menu - usually `<ul>`.\r\n         *\r\n         * @since 4.10.6\r\n         * @return Menu element\r\n         */\r\n        get: function () {\r\n            return this._element;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ExportMenu;\r\n}(Validatable));\r\nexport { ExportMenu };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}