{"ast":null,"code":"/**\r\n * Functionality for drawing waved lines.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Line } from \"./Line\";\nimport { color } from \"../utils/Color\";\nimport { wavedLine } from \"../rendering/Smoothing\";\nimport * as $path from \"../rendering/Path\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Draws a waved line.\r\n *\r\n * @see {@link IWavedLineEvents} for a list of available events\r\n * @see {@link IWavedLineAdapters} for a list of available Adapters\r\n */\nvar WavedLine = /** @class */function (_super) {\n  __extends(WavedLine, _super);\n  /**\r\n   * Constructor\r\n   */\n  function WavedLine() {\n    var _this = _super.call(this) || this;\n    _this.className = \"WavedLine\";\n    _this.element = _this.paper.add(\"path\");\n    _this.waveLength = 16;\n    _this.waveHeight = 4;\n    _this.tension = 0.8;\n    _this.pixelPerfect = false;\n    _this.fill = color();\n    _this.applyTheme();\n    return _this;\n  }\n  /**\r\n   * Draws the waved line.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  WavedLine.prototype.draw = function () {\n    //super.draw();\n    var p1 = {\n      x: this.x1,\n      y: this.y1\n    };\n    var p2 = {\n      x: this.x2,\n      y: this.y2\n    };\n    this.path = $path.moveTo(p1) + wavedLine(p1, p2, this.waveLength, this.waveHeight, this.tension, true);\n  };\n  Object.defineProperty(WavedLine.prototype, \"waveLength\", {\n    /**\r\n     * @return Wave length (px)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"waveLength\");\n    },\n    /**\r\n     * Wave length in pixels.\r\n     *\r\n     * @default 16\r\n     * @param value  Wave length (px)\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"waveLength\", value);\n      this.invalidate();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WavedLine.prototype, \"waveHeight\", {\n    /**\r\n     * @return Wave height (px)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"waveHeight\");\n    },\n    /**\r\n     * Wave height in pixels.\r\n     *\r\n     * @default 4\r\n     * @param value  Wave height (px)\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"waveHeight\", value);\n      this.invalidate();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(WavedLine.prototype, \"tension\", {\n    /**\r\n     * @return Tension\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"tension\");\n    },\n    /**\r\n     * Tension of the wave.\r\n     *\r\n     * @default 0.8\r\n     * @param value  Tension\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"tension\", value);\n      this.invalidate();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return WavedLine;\n}(Line);\nexport { WavedLine };","map":{"version":3,"names":["__extends","Line","color","wavedLine","$path","WavedLine","_super","_this","call","className","element","paper","add","waveLength","waveHeight","tension","pixelPerfect","fill","applyTheme","prototype","draw","p1","x","x1","y","y1","p2","x2","y2","path","moveTo","Object","defineProperty","get","getPropertyValue","set","value","setPropertyValue","invalidate","enumerable","configurable"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/core/elements/WavedLine.js"],"sourcesContent":["/**\r\n * Functionality for drawing waved lines.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Line } from \"./Line\";\r\nimport { color } from \"../utils/Color\";\r\nimport { wavedLine } from \"../rendering/Smoothing\";\r\nimport * as $path from \"../rendering/Path\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Draws a waved line.\r\n *\r\n * @see {@link IWavedLineEvents} for a list of available events\r\n * @see {@link IWavedLineAdapters} for a list of available Adapters\r\n */\r\nvar WavedLine = /** @class */ (function (_super) {\r\n    __extends(WavedLine, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function WavedLine() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"WavedLine\";\r\n        _this.element = _this.paper.add(\"path\");\r\n        _this.waveLength = 16;\r\n        _this.waveHeight = 4;\r\n        _this.tension = 0.8;\r\n        _this.pixelPerfect = false;\r\n        _this.fill = color();\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the waved line.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    WavedLine.prototype.draw = function () {\r\n        //super.draw();\r\n        var p1 = { x: this.x1, y: this.y1 };\r\n        var p2 = { x: this.x2, y: this.y2 };\r\n        this.path = $path.moveTo(p1) + wavedLine(p1, p2, this.waveLength, this.waveHeight, this.tension, true);\r\n    };\r\n    Object.defineProperty(WavedLine.prototype, \"waveLength\", {\r\n        /**\r\n         * @return Wave length (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"waveLength\");\r\n        },\r\n        /**\r\n         * Wave length in pixels.\r\n         *\r\n         * @default 16\r\n         * @param value  Wave length (px)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"waveLength\", value);\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(WavedLine.prototype, \"waveHeight\", {\r\n        /**\r\n         * @return Wave height (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"waveHeight\");\r\n        },\r\n        /**\r\n         * Wave height in pixels.\r\n         *\r\n         * @default 4\r\n         * @param value  Wave height (px)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"waveHeight\", value);\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(WavedLine.prototype, \"tension\", {\r\n        /**\r\n         * @return Tension\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"tension\");\r\n        },\r\n        /**\r\n         * Tension of the wave.\r\n         *\r\n         * @default 0.8\r\n         * @param value  Tension\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"tension\", value);\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return WavedLine;\r\n}(Line));\r\nexport { WavedLine };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}