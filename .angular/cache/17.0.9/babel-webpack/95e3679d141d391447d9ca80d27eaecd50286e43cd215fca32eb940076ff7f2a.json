{"ast":null,"code":"/**\r\n * Rectangular pattern module.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Pattern } from \"./Pattern\";\nimport { registry } from \"../../Registry\";\n;\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Rectangular pattern\r\n */\nvar RectPattern = /** @class */function (_super) {\n  __extends(RectPattern, _super);\n  /**\r\n   * Constructor\r\n   */\n  function RectPattern() {\n    var _this = _super.call(this) || this;\n    _this.rectHeight = 1;\n    _this.rectWidth = 1;\n    _this._rect = _this.paper.add(\"rect\");\n    _this.addElement(_this._rect);\n    return _this;\n  }\n  /**\r\n   * Draws the rectangular element.\r\n   */\n  RectPattern.prototype.draw = function () {\n    _super.prototype.draw.call(this);\n    this.properties[\"rotationX\"] = this.width / 2;\n    this.properties[\"rotationY\"] = this.height / 2;\n    if (this._rect) {\n      this._rect.attr({\n        \"width\": this.rectWidth,\n        \"height\": this.rectHeight,\n        \"x\": (this.width - this.rectWidth) / 2,\n        \"y\": (this.height - this.rectHeight) / 2\n      });\n    }\n  };\n  Object.defineProperty(RectPattern.prototype, \"rectWidth\", {\n    /**\r\n     * @return Width (px)\r\n     */\n    get: function () {\n      return this.properties[\"rectWidth\"];\n    },\n    /**\r\n     * Rectangle width in pixels.\r\n     *\r\n     * @param value Width (px)\r\n     */\n    set: function (value) {\n      this.properties[\"rectWidth\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(RectPattern.prototype, \"rectHeight\", {\n    /**\r\n     * @return Height (px)\r\n     */\n    get: function () {\n      return this.properties[\"rectHeight\"];\n    },\n    /**\r\n     * Rectangle height in pixels.\r\n     *\r\n     * @param value Height (px)\r\n     */\n    set: function (value) {\n      this.properties[\"rectHeight\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return RectPattern;\n}(Pattern);\nexport { RectPattern };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"RectPattern\"] = RectPattern;","map":{"version":3,"names":["__extends","Pattern","registry","RectPattern","_super","_this","call","rectHeight","rectWidth","_rect","paper","add","addElement","prototype","draw","properties","width","height","attr","Object","defineProperty","get","set","value","enumerable","configurable","registeredClasses"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/RectPattern.js"],"sourcesContent":["/**\r\n * Rectangular pattern module.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Pattern } from \"./Pattern\";\r\nimport { registry } from \"../../Registry\";\r\n;\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Rectangular pattern\r\n */\r\nvar RectPattern = /** @class */ (function (_super) {\r\n    __extends(RectPattern, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function RectPattern() {\r\n        var _this = _super.call(this) || this;\r\n        _this.rectHeight = 1;\r\n        _this.rectWidth = 1;\r\n        _this._rect = _this.paper.add(\"rect\");\r\n        _this.addElement(_this._rect);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the rectangular element.\r\n     */\r\n    RectPattern.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        this.properties[\"rotationX\"] = this.width / 2;\r\n        this.properties[\"rotationY\"] = this.height / 2;\r\n        if (this._rect) {\r\n            this._rect.attr({ \"width\": this.rectWidth, \"height\": this.rectHeight, \"x\": (this.width - this.rectWidth) / 2, \"y\": (this.height - this.rectHeight) / 2 });\r\n        }\r\n    };\r\n    Object.defineProperty(RectPattern.prototype, \"rectWidth\", {\r\n        /**\r\n         * @return Width (px)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"rectWidth\"];\r\n        },\r\n        /**\r\n         * Rectangle width in pixels.\r\n         *\r\n         * @param value Width (px)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"rectWidth\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RectPattern.prototype, \"rectHeight\", {\r\n        /**\r\n         * @return Height (px)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"rectHeight\"];\r\n        },\r\n        /**\r\n         * Rectangle height in pixels.\r\n         *\r\n         * @param value Height (px)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"rectHeight\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RectPattern;\r\n}(Pattern));\r\nexport { RectPattern };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RectPattern\"] = RectPattern;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,QAAQ,QAAQ,gBAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,WAAW,GAAG,aAAe,UAAUC,MAAM,EAAE;EAC/CJ,SAAS,CAACG,WAAW,EAAEC,MAAM,CAAC;EAC9B;AACJ;AACA;EACI,SAASD,WAAWA,CAAA,EAAG;IACnB,IAAIE,KAAK,GAAGD,MAAM,CAACE,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI;IACrCD,KAAK,CAACE,UAAU,GAAG,CAAC;IACpBF,KAAK,CAACG,SAAS,GAAG,CAAC;IACnBH,KAAK,CAACI,KAAK,GAAGJ,KAAK,CAACK,KAAK,CAACC,GAAG,CAAC,MAAM,CAAC;IACrCN,KAAK,CAACO,UAAU,CAACP,KAAK,CAACI,KAAK,CAAC;IAC7B,OAAOJ,KAAK;EAChB;EACA;AACJ;AACA;EACIF,WAAW,CAACU,SAAS,CAACC,IAAI,GAAG,YAAY;IACrCV,MAAM,CAACS,SAAS,CAACC,IAAI,CAACR,IAAI,CAAC,IAAI,CAAC;IAChC,IAAI,CAACS,UAAU,CAAC,WAAW,CAAC,GAAG,IAAI,CAACC,KAAK,GAAG,CAAC;IAC7C,IAAI,CAACD,UAAU,CAAC,WAAW,CAAC,GAAG,IAAI,CAACE,MAAM,GAAG,CAAC;IAC9C,IAAI,IAAI,CAACR,KAAK,EAAE;MACZ,IAAI,CAACA,KAAK,CAACS,IAAI,CAAC;QAAE,OAAO,EAAE,IAAI,CAACV,SAAS;QAAE,QAAQ,EAAE,IAAI,CAACD,UAAU;QAAE,GAAG,EAAE,CAAC,IAAI,CAACS,KAAK,GAAG,IAAI,CAACR,SAAS,IAAI,CAAC;QAAE,GAAG,EAAE,CAAC,IAAI,CAACS,MAAM,GAAG,IAAI,CAACV,UAAU,IAAI;MAAE,CAAC,CAAC;IAC7J;EACJ,CAAC;EACDY,MAAM,CAACC,cAAc,CAACjB,WAAW,CAACU,SAAS,EAAE,WAAW,EAAE;IACtD;AACR;AACA;IACQQ,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACN,UAAU,CAAC,WAAW,CAAC;IACvC,CAAC;IACD;AACR;AACA;AACA;AACA;IACQO,GAAG,EAAE,SAAAA,CAAUC,KAAK,EAAE;MAClB,IAAI,CAACR,UAAU,CAAC,WAAW,CAAC,GAAGQ,KAAK;MACpC,IAAI,CAACT,IAAI,CAAC,CAAC;IACf,CAAC;IACDU,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFN,MAAM,CAACC,cAAc,CAACjB,WAAW,CAACU,SAAS,EAAE,YAAY,EAAE;IACvD;AACR;AACA;IACQQ,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACN,UAAU,CAAC,YAAY,CAAC;IACxC,CAAC;IACD;AACR;AACA;AACA;AACA;IACQO,GAAG,EAAE,SAAAA,CAAUC,KAAK,EAAE;MAClB,IAAI,CAACR,UAAU,CAAC,YAAY,CAAC,GAAGQ,KAAK;MACrC,IAAI,CAACT,IAAI,CAAC,CAAC;IACf,CAAC;IACDU,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF,OAAOtB,WAAW;AACtB,CAAC,CAACF,OAAO,CAAE;AACX,SAASE,WAAW;AACpB;AACA;AACA;AACA;AACA;AACA;AACAD,QAAQ,CAACwB,iBAAiB,CAAC,aAAa,CAAC,GAAGvB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}