{"ast":null,"code":"/**\r\n * 3D column series module.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { ColumnSeries, ColumnSeriesDataItem } from \"../series/ColumnSeries\";\nimport { Column3D } from \"../elements/Column3D\";\nimport { registry } from \"../../core/Registry\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\nvar ColumnSeries3DDataItem = /** @class */function (_super) {\n  __extends(ColumnSeries3DDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n  function ColumnSeries3DDataItem() {\n    var _this = _super.call(this) || this;\n    _this.className = \"ColumnSeries3DDataItem\";\n    _this.applyTheme();\n    return _this;\n  }\n  return ColumnSeries3DDataItem;\n}(ColumnSeriesDataItem);\nexport { ColumnSeries3DDataItem };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Defines [[Series]] for a 3D column graph.\r\n *\r\n * @see {@link IColumnSeries3DEvents} for a list of available Events\r\n * @see {@link IColumnSeries3DAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\nvar ColumnSeries3D = /** @class */function (_super) {\n  __extends(ColumnSeries3D, _super);\n  /**\r\n   * Constructor\r\n   */\n  function ColumnSeries3D() {\n    var _this = _super.call(this) || this;\n    _this.className = \"ColumnSeries3D\";\n    _this.columns.template.column3D.applyOnClones = true;\n    _this.columns.template.hiddenState.properties.visible = true;\n    _this.applyTheme();\n    return _this;\n  }\n  Object.defineProperty(ColumnSeries3D.prototype, \"columnsContainer\", {\n    /**\r\n     * @ignore\r\n     */\n    get: function () {\n      var chart = this.chart;\n      if (chart && chart.columnsContainer && chart.leftAxesContainer.layout != \"vertical\" && chart.rightAxesContainer.layout != \"vertical\" && chart.bottomAxesContainer.layout != \"horizontal\" && chart.topAxesContainer.layout != \"horizontal\") {\n        return chart.columnsContainer;\n      } else {\n        return this._columnsContainer;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Validates data item's elements.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItem  Data item\r\n   */\n  ColumnSeries3D.prototype.validateDataElementReal = function (dataItem) {\n    _super.prototype.validateDataElementReal.call(this, dataItem);\n    if (dataItem.column) {\n      dataItem.column.dx = this.dx;\n      dataItem.column.dy = this.dy;\n      dataItem.column.visible = this.visible;\n    }\n  };\n  /**\r\n   * Validates data item's elements.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  ColumnSeries3D.prototype.validateDataElements = function () {\n    _super.prototype.validateDataElements.call(this);\n    if (this.chart) {\n      this.chart.invalidateLayout();\n    }\n  };\n  /**\r\n   * Returns an element to use for 3D bar.\r\n   * @ignore\r\n   * @return Element.\r\n   */\n  ColumnSeries3D.prototype.createColumnTemplate = function () {\n    return new Column3D();\n  };\n  Object.defineProperty(ColumnSeries3D.prototype, \"depth\", {\n    /**\r\n     * @ignore Exclude from docs\r\n     * @return Depth (px)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"depth\");\n    },\n    /**\r\n     * Depth (height) of the slices in the series in pixels.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param value  Depth (px)\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"depth\", value, true);\n      var template = this.columns.template; // todo: Cone is not Rectangle3D, maybe we should do some I3DShape?\n      template.column3D.depth = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ColumnSeries3D.prototype, \"angle\", {\n    /**\r\n     * @ignore Exclude from docs\r\n     * @return Angle (0-360)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"angle\");\n    },\n    /**\r\n     * Angle of view for the slices in series. (0-360)\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param value  Angle (0-360)\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"angle\", value);\n      var template = this.columns.template;\n      template.column3D.angle = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return ColumnSeries3D;\n}(ColumnSeries);\nexport { ColumnSeries3D };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"ColumnSeries3D\"] = ColumnSeries3D;\nregistry.registeredClasses[\"ColumnSeries3DDataItem\"] = ColumnSeries3DDataItem;","map":{"version":3,"names":["__extends","ColumnSeries","ColumnSeriesDataItem","Column3D","registry","ColumnSeries3DDataItem","_super","_this","call","className","applyTheme","ColumnSeries3D","columns","template","column3D","applyOnClones","hiddenState","properties","visible","Object","defineProperty","prototype","get","chart","columnsContainer","leftAxesContainer","layout","rightAxesContainer","bottomAxesContainer","topAxesContainer","_columnsContainer","enumerable","configurable","validateDataElementReal","dataItem","column","dx","dy","validateDataElements","invalidateLayout","createColumnTemplate","getPropertyValue","set","value","setPropertyValue","depth","angle","registeredClasses"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/charts/series/ColumnSeries3D.js"],"sourcesContent":["/**\r\n * 3D column series module.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ColumnSeries, ColumnSeriesDataItem } from \"../series/ColumnSeries\";\r\nimport { Column3D } from \"../elements/Column3D\";\r\nimport { registry } from \"../../core/Registry\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\nvar ColumnSeries3DDataItem = /** @class */ (function (_super) {\r\n    __extends(ColumnSeries3DDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ColumnSeries3DDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ColumnSeries3DDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return ColumnSeries3DDataItem;\r\n}(ColumnSeriesDataItem));\r\nexport { ColumnSeries3DDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a 3D column graph.\r\n *\r\n * @see {@link IColumnSeries3DEvents} for a list of available Events\r\n * @see {@link IColumnSeries3DAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nvar ColumnSeries3D = /** @class */ (function (_super) {\r\n    __extends(ColumnSeries3D, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ColumnSeries3D() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ColumnSeries3D\";\r\n        _this.columns.template.column3D.applyOnClones = true;\r\n        _this.columns.template.hiddenState.properties.visible = true;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ColumnSeries3D.prototype, \"columnsContainer\", {\r\n        /**\r\n         * @ignore\r\n         */\r\n        get: function () {\r\n            var chart = this.chart;\r\n            if (chart && chart.columnsContainer && chart.leftAxesContainer.layout != \"vertical\" && chart.rightAxesContainer.layout != \"vertical\" && chart.bottomAxesContainer.layout != \"horizontal\" && chart.topAxesContainer.layout != \"horizontal\") {\r\n                return chart.columnsContainer;\r\n            }\r\n            else {\r\n                return this._columnsContainer;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Validates data item's elements.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    ColumnSeries3D.prototype.validateDataElementReal = function (dataItem) {\r\n        _super.prototype.validateDataElementReal.call(this, dataItem);\r\n        if (dataItem.column) {\r\n            dataItem.column.dx = this.dx;\r\n            dataItem.column.dy = this.dy;\r\n            dataItem.column.visible = this.visible;\r\n        }\r\n    };\r\n    /**\r\n     * Validates data item's elements.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ColumnSeries3D.prototype.validateDataElements = function () {\r\n        _super.prototype.validateDataElements.call(this);\r\n        if (this.chart) {\r\n            this.chart.invalidateLayout();\r\n        }\r\n    };\r\n    /**\r\n     * Returns an element to use for 3D bar.\r\n     * @ignore\r\n     * @return Element.\r\n     */\r\n    ColumnSeries3D.prototype.createColumnTemplate = function () {\r\n        return new Column3D();\r\n    };\r\n    Object.defineProperty(ColumnSeries3D.prototype, \"depth\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Depth (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"depth\");\r\n        },\r\n        /**\r\n         * Depth (height) of the slices in the series in pixels.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value  Depth (px)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"depth\", value, true);\r\n            var template = this.columns.template; // todo: Cone is not Rectangle3D, maybe we should do some I3DShape?\r\n            template.column3D.depth = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnSeries3D.prototype, \"angle\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Angle (0-360)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"angle\");\r\n        },\r\n        /**\r\n         * Angle of view for the slices in series. (0-360)\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value  Angle (0-360)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"angle\", value);\r\n            var template = this.columns.template;\r\n            template.column3D.angle = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ColumnSeries3D;\r\n}(ColumnSeries));\r\nexport { ColumnSeries3D };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ColumnSeries3D\"] = ColumnSeries3D;\r\nregistry.registeredClasses[\"ColumnSeries3DDataItem\"] = ColumnSeries3DDataItem;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,YAAY,EAAEC,oBAAoB,QAAQ,wBAAwB;AAC3E,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,sBAAsB,GAAG,aAAe,UAAUC,MAAM,EAAE;EAC1DN,SAAS,CAACK,sBAAsB,EAAEC,MAAM,CAAC;EACzC;AACJ;AACA;EACI,SAASD,sBAAsBA,CAAA,EAAG;IAC9B,IAAIE,KAAK,GAAGD,MAAM,CAACE,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI;IACrCD,KAAK,CAACE,SAAS,GAAG,wBAAwB;IAC1CF,KAAK,CAACG,UAAU,CAAC,CAAC;IAClB,OAAOH,KAAK;EAChB;EACA,OAAOF,sBAAsB;AACjC,CAAC,CAACH,oBAAoB,CAAE;AACxB,SAASG,sBAAsB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIM,cAAc,GAAG,aAAe,UAAUL,MAAM,EAAE;EAClDN,SAAS,CAACW,cAAc,EAAEL,MAAM,CAAC;EACjC;AACJ;AACA;EACI,SAASK,cAAcA,CAAA,EAAG;IACtB,IAAIJ,KAAK,GAAGD,MAAM,CAACE,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI;IACrCD,KAAK,CAACE,SAAS,GAAG,gBAAgB;IAClCF,KAAK,CAACK,OAAO,CAACC,QAAQ,CAACC,QAAQ,CAACC,aAAa,GAAG,IAAI;IACpDR,KAAK,CAACK,OAAO,CAACC,QAAQ,CAACG,WAAW,CAACC,UAAU,CAACC,OAAO,GAAG,IAAI;IAC5DX,KAAK,CAACG,UAAU,CAAC,CAAC;IAClB,OAAOH,KAAK;EAChB;EACAY,MAAM,CAACC,cAAc,CAACT,cAAc,CAACU,SAAS,EAAE,kBAAkB,EAAE;IAChE;AACR;AACA;IACQC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,IAAIC,KAAK,GAAG,IAAI,CAACA,KAAK;MACtB,IAAIA,KAAK,IAAIA,KAAK,CAACC,gBAAgB,IAAID,KAAK,CAACE,iBAAiB,CAACC,MAAM,IAAI,UAAU,IAAIH,KAAK,CAACI,kBAAkB,CAACD,MAAM,IAAI,UAAU,IAAIH,KAAK,CAACK,mBAAmB,CAACF,MAAM,IAAI,YAAY,IAAIH,KAAK,CAACM,gBAAgB,CAACH,MAAM,IAAI,YAAY,EAAE;QACvO,OAAOH,KAAK,CAACC,gBAAgB;MACjC,CAAC,MACI;QACD,OAAO,IAAI,CAACM,iBAAiB;MACjC;IACJ,CAAC;IACDC,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF;AACJ;AACA;AACA;AACA;AACA;EACIrB,cAAc,CAACU,SAAS,CAACY,uBAAuB,GAAG,UAAUC,QAAQ,EAAE;IACnE5B,MAAM,CAACe,SAAS,CAACY,uBAAuB,CAACzB,IAAI,CAAC,IAAI,EAAE0B,QAAQ,CAAC;IAC7D,IAAIA,QAAQ,CAACC,MAAM,EAAE;MACjBD,QAAQ,CAACC,MAAM,CAACC,EAAE,GAAG,IAAI,CAACA,EAAE;MAC5BF,QAAQ,CAACC,MAAM,CAACE,EAAE,GAAG,IAAI,CAACA,EAAE;MAC5BH,QAAQ,CAACC,MAAM,CAACjB,OAAO,GAAG,IAAI,CAACA,OAAO;IAC1C;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIP,cAAc,CAACU,SAAS,CAACiB,oBAAoB,GAAG,YAAY;IACxDhC,MAAM,CAACe,SAAS,CAACiB,oBAAoB,CAAC9B,IAAI,CAAC,IAAI,CAAC;IAChD,IAAI,IAAI,CAACe,KAAK,EAAE;MACZ,IAAI,CAACA,KAAK,CAACgB,gBAAgB,CAAC,CAAC;IACjC;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;EACI5B,cAAc,CAACU,SAAS,CAACmB,oBAAoB,GAAG,YAAY;IACxD,OAAO,IAAIrC,QAAQ,CAAC,CAAC;EACzB,CAAC;EACDgB,MAAM,CAACC,cAAc,CAACT,cAAc,CAACU,SAAS,EAAE,OAAO,EAAE;IACrD;AACR;AACA;AACA;IACQC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACmB,gBAAgB,CAAC,OAAO,CAAC;IACzC,CAAC;IACD;AACR;AACA;AACA;AACA;AACA;IACQC,GAAG,EAAE,SAAAA,CAAUC,KAAK,EAAE;MAClB,IAAI,CAACC,gBAAgB,CAAC,OAAO,EAAED,KAAK,EAAE,IAAI,CAAC;MAC3C,IAAI9B,QAAQ,GAAG,IAAI,CAACD,OAAO,CAACC,QAAQ,CAAC,CAAC;MACtCA,QAAQ,CAACC,QAAQ,CAAC+B,KAAK,GAAGF,KAAK;IACnC,CAAC;IACDZ,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFb,MAAM,CAACC,cAAc,CAACT,cAAc,CAACU,SAAS,EAAE,OAAO,EAAE;IACrD;AACR;AACA;AACA;IACQC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACmB,gBAAgB,CAAC,OAAO,CAAC;IACzC,CAAC;IACD;AACR;AACA;AACA;AACA;AACA;IACQC,GAAG,EAAE,SAAAA,CAAUC,KAAK,EAAE;MAClB,IAAI,CAACC,gBAAgB,CAAC,OAAO,EAAED,KAAK,CAAC;MACrC,IAAI9B,QAAQ,GAAG,IAAI,CAACD,OAAO,CAACC,QAAQ;MACpCA,QAAQ,CAACC,QAAQ,CAACgC,KAAK,GAAGH,KAAK;IACnC,CAAC;IACDZ,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF,OAAOrB,cAAc;AACzB,CAAC,CAACV,YAAY,CAAE;AAChB,SAASU,cAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACAP,QAAQ,CAAC2C,iBAAiB,CAAC,gBAAgB,CAAC,GAAGpC,cAAc;AAC7DP,QAAQ,CAAC2C,iBAAiB,CAAC,wBAAwB,CAAC,GAAG1C,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}