{"ast":null,"code":"/**\r\n * SankeyLink module\r\n */\nimport { __extends, __read } from \"tslib\";\nimport { FlowDiagramLink } from \"./FlowDiagramLink\";\nimport { registry } from \"../../core/Registry\";\nimport { Polyspline } from \"../../core/elements/Polyspline\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\nimport * as $math from \"../../core/utils/Math\";\nimport * as $type from \"../../core/utils/Type\";\nimport * as $smoothing from \"../../core/rendering/Smoothing\";\nimport * as $path from \"../../core/rendering/Path\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * This class creates a link (waved color-filled line) between two nodes in a\r\n * Sankey Diagram.\r\n *\r\n * @see {@link ISankeyLinkEvents} for a list of available events\r\n * @see {@link ISankeyLinkAdapters} for a list of available Adapters\r\n * @important\r\n */\nvar SankeyLink = /** @class */function (_super) {\n  __extends(SankeyLink, _super);\n  /**\r\n   * Constructor\r\n   */\n  function SankeyLink() {\n    var _this = _super.call(this) || this;\n    _this.className = \"SankeyLink\";\n    // TODO can this be removed ?\n    new InterfaceColorSet();\n    _this.tension = 0.8;\n    _this.controlPointDistance = 0.2;\n    _this.startAngle = 0;\n    _this.endAngle = 0;\n    _this.linkWidth = 0;\n    _this.startX = 0;\n    _this.endX = 0;\n    _this.startY = 0;\n    _this.endY = 0;\n    _this.middleLine = _this.createChild(Polyspline);\n    _this.middleLine.shouldClone = false;\n    _this.middleLine.strokeOpacity = 0;\n    _this.applyTheme();\n    return _this;\n  }\n  SankeyLink.prototype.makeBackwards = function () {\n    if (this.states.getKey(\"backwards\") != undefined) {\n      this.setState(\"backwards\");\n    }\n  };\n  /**\r\n   * (Re)validates (redraws) the link.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  SankeyLink.prototype.validate = function () {\n    var _a, _b, _c, _d;\n    _super.prototype.validate.call(this);\n    if (!this.isTemplate) {\n      var x0 = this.startX;\n      var y0 = this.startY;\n      var x1 = this.endX;\n      var y1 = this.endY;\n      if (this.states.getKey(\"backwards\")) {\n        this.setState(\"default\");\n      }\n      if (this.dataItem) {\n        var chart = this.dataItem.component;\n        if (chart) {\n          if (chart.orientation == \"horizontal\") {\n            if (x1 < x0) {\n              _a = __read([x1, x0], 2), x0 = _a[0], x1 = _a[1];\n              _b = __read([y1, y0], 2), y0 = _b[0], y1 = _b[1];\n              this.makeBackwards();\n            }\n          } else {\n            if (y1 < y0) {\n              _c = __read([y1, y0], 2), y0 = _c[0], y1 = _c[1];\n              _d = __read([x1, x0], 2), x0 = _d[0], x1 = _d[1];\n              this.makeBackwards();\n            }\n          }\n        }\n      }\n      if (!$type.isNumber(x1)) {\n        x1 = x0;\n      }\n      if (!$type.isNumber(y1)) {\n        y1 = y0;\n      }\n      var startAngle = this.startAngle;\n      var endAngle = this.endAngle;\n      var w = this.linkWidth;\n      var path = \"\";\n      var xt0 = x0;\n      var yt0 = y0;\n      var xt1 = x1;\n      var yt1 = y1;\n      var xb0 = x0 + w * $math.sin(startAngle);\n      var xb1 = x1 + w * $math.sin(endAngle);\n      var yb0 = y0 + w * $math.cos(startAngle);\n      var yb1 = y1 + w * $math.cos(endAngle);\n      var xm0 = x0 + w / 2 * $math.sin(startAngle);\n      var xm1 = x1 + w / 2 * $math.sin(endAngle);\n      var ym0 = y0 + w / 2 * $math.cos(startAngle);\n      var ym1 = y1 + w / 2 * $math.cos(endAngle);\n      this.zIndex = this.zIndex || this.dataItem.index;\n      var tensionX = this.tension + (1 - this.tension) * $math.sin(startAngle);\n      var tensionY = this.tension + (1 - this.tension) * $math.cos(startAngle);\n      this.middleLine.tensionX = tensionX;\n      this.middleLine.tensionY = tensionY;\n      if ($type.isNumber(w) && $type.isNumber(x0) && $type.isNumber(x1) && $type.isNumber(y0) && $type.isNumber(y1)) {\n        // solves issues with gradient fill of straight lines\n        if ($math.round(xt0, 3) == $math.round(xt1, 3)) {\n          xt1 += 0.01;\n        }\n        if ($math.round(yt0, 3) == $math.round(yt1, 3)) {\n          yt1 += 0.01;\n        }\n        if ($math.round(xb0, 3) == $math.round(xb1, 3)) {\n          xb1 += 0.01;\n        }\n        if ($math.round(yb0, 3) == $math.round(yb1, 3)) {\n          yb1 += 0.01;\n        }\n        var minX = Math.min(xb0, xb1, xt0, xt1);\n        var minY = Math.min(yb0, yb1, yt0, yt1);\n        var maxX = Math.max(xb0, xb1, xt0, xt1);\n        var maxY = Math.max(yb0, yb1, yt0, yt1);\n        this._bbox = {\n          x: minX,\n          y: minY,\n          width: maxX - minX,\n          height: maxY - minY\n        };\n        var cpd = this.controlPointDistance;\n        var kxt0 = xt0 + (xt1 - xt0) * cpd * $math.cos(startAngle);\n        var kyt0 = yt0 + (yt1 - yt0) * cpd * $math.sin(startAngle);\n        var kxt1 = xt1 - (xt1 - xt0) * cpd * $math.cos(endAngle);\n        var kyt1 = yt1 - (yt1 - yt0) * cpd * $math.sin(endAngle);\n        var kxm0 = xm0 + (xm1 - xm0) * cpd * $math.cos(startAngle);\n        var kym0 = ym0 + (ym1 - ym0) * cpd * $math.sin(startAngle);\n        var kxm1 = xm1 - (xm1 - xm0) * cpd * $math.cos(endAngle);\n        var kym1 = ym1 - (ym1 - ym0) * cpd * $math.sin(endAngle);\n        var angle = $math.getAngle({\n          x: kxt0,\n          y: kyt0\n        }, {\n          x: kxt1,\n          y: kyt1\n        });\n        var dx = (w / $math.cos(angle) - w) / $math.tan(angle) * $math.cos(startAngle);\n        var dy = (w / $math.sin(angle) - w) * $math.tan(angle) * $math.sin(startAngle);\n        var kxb0 = -dx / 2 + xb0 + (xb1 - xb0) * cpd * $math.cos(startAngle);\n        var kyb0 = -dy / 2 + yb0 + (yb1 - yb0) * cpd * $math.sin(startAngle);\n        var kxb1 = -dx / 2 + xb1 - (xb1 - xb0) * cpd * $math.cos(endAngle);\n        var kyb1 = -dy / 2 + yb1 - (yb1 - yb0) * cpd * $math.sin(endAngle);\n        if (ym1 == ym0) {\n          ym1 += 0.01;\n        }\n        this.middleLine.segments = [[{\n          x: xm0,\n          y: ym0\n        }, {\n          x: kxm0,\n          y: kym0\n        }, {\n          x: kxm1,\n          y: kym1\n        }, {\n          x: xm1,\n          y: ym1\n        }]];\n        kxt0 += dx / 2;\n        kyt0 += dy / 2;\n        kxt1 += dx / 2;\n        kyt1 += dy / 2;\n        path += $path.moveTo({\n          x: xt0,\n          y: yt0\n        });\n        path += new $smoothing.Tension(tensionX, tensionY).smooth([{\n          x: xt0,\n          y: yt0\n        }, {\n          x: kxt0,\n          y: kyt0\n        }, {\n          x: kxt1,\n          y: kyt1\n        }, {\n          x: xt1,\n          y: yt1\n        }]);\n        path += $path.lineTo({\n          x: xb1,\n          y: yb1\n        });\n        path += new $smoothing.Tension(tensionX, tensionY).smooth([{\n          x: xb1,\n          y: yb1\n        }, {\n          x: kxb1,\n          y: kyb1\n        }, {\n          x: kxb0,\n          y: kyb0\n        }, {\n          x: xb0,\n          y: yb0\n        }]);\n        path += $path.closePath();\n      }\n      this.link.path = path;\n      if (this.maskBullets) {\n        this.bulletsMask.path = path;\n        this.bulletsContainer.mask = this.bulletsMask;\n      }\n      this.positionBullets();\n    }\n  };\n  Object.defineProperty(SankeyLink.prototype, \"startX\", {\n    /**\r\n     * @return Start X\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"startX\");\n    },\n    /**\r\n     * [startX description]\r\n     *\r\n     * @todo Description\r\n     * @param value  Start X\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"startX\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SankeyLink.prototype, \"endX\", {\n    /**\r\n     * @return End X\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"endX\");\n    },\n    /**\r\n     * [endX description]\r\n     *\r\n     * @todo Description\r\n     * @param value  End X\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"endX\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SankeyLink.prototype, \"startY\", {\n    /**\r\n     * @return Start Y\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"startY\");\n    },\n    /**\r\n     * [startY description]\r\n     *\r\n     * @todo Description\r\n     * @param value  Start Y\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"startY\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SankeyLink.prototype, \"endY\", {\n    /**\r\n     * @return End Y\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"endY\");\n    },\n    /**\r\n     * [endY description]\r\n     *\r\n     * @todo Description\r\n     * @param value End Y\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"endY\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SankeyLink.prototype, \"linkWidth\", {\n    /**\r\n     * @return [description]\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"linkWidth\");\n    },\n    /**\r\n     * [linkWidth description]\r\n     *\r\n     * @todo Description\r\n     * @param value [description]\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"linkWidth\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SankeyLink.prototype, \"controlPointDistance\", {\n    /**\r\n     * @return relative control point distance\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"controlPointDistance\");\n    },\n    /**\r\n     * Distance of control point of a link, defines relative distance from a node at which linke should bend\r\n     * @default 0.2\r\n     * @param value\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"controlPointDistance\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SankeyLink.prototype, \"tension\", {\n    /**\r\n     * @return tension value\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"tension\");\n    },\n    /**\r\n     * Tension of a spline, 1 would make the link to have sharp edges\r\n     * @default 0.8\r\n     * @param value\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"tension\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return SankeyLink;\n}(FlowDiagramLink);\nexport { SankeyLink };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"SankeyLink\"] = SankeyLink;","map":{"version":3,"names":["__extends","__read","FlowDiagramLink","registry","Polyspline","InterfaceColorSet","$math","$type","$smoothing","$path","SankeyLink","_super","_this","call","className","tension","controlPointDistance","startAngle","endAngle","linkWidth","startX","endX","startY","endY","middleLine","createChild","shouldClone","strokeOpacity","applyTheme","prototype","makeBackwards","states","getKey","undefined","setState","validate","_a","_b","_c","_d","isTemplate","x0","y0","x1","y1","dataItem","chart","component","orientation","isNumber","w","path","xt0","yt0","xt1","yt1","xb0","sin","xb1","yb0","cos","yb1","xm0","xm1","ym0","ym1","zIndex","index","tensionX","tensionY","round","minX","Math","min","minY","maxX","max","maxY","_bbox","x","y","width","height","cpd","kxt0","kyt0","kxt1","kyt1","kxm0","kym0","kxm1","kym1","angle","getAngle","dx","tan","dy","kxb0","kyb0","kxb1","kyb1","segments","moveTo","Tension","smooth","lineTo","closePath","link","maskBullets","bulletsMask","bulletsContainer","mask","positionBullets","Object","defineProperty","get","getPropertyValue","set","value","setPropertyValue","enumerable","configurable","registeredClasses"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/charts/elements/SankeyLink.js"],"sourcesContent":["/**\r\n * SankeyLink module\r\n */\r\nimport { __extends, __read } from \"tslib\";\r\nimport { FlowDiagramLink } from \"./FlowDiagramLink\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Polyspline } from \"../../core/elements/Polyspline\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $smoothing from \"../../core/rendering/Smoothing\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * This class creates a link (waved color-filled line) between two nodes in a\r\n * Sankey Diagram.\r\n *\r\n * @see {@link ISankeyLinkEvents} for a list of available events\r\n * @see {@link ISankeyLinkAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar SankeyLink = /** @class */ (function (_super) {\r\n    __extends(SankeyLink, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function SankeyLink() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"SankeyLink\";\r\n        // TODO can this be removed ?\r\n        new InterfaceColorSet();\r\n        _this.tension = 0.8;\r\n        _this.controlPointDistance = 0.2;\r\n        _this.startAngle = 0;\r\n        _this.endAngle = 0;\r\n        _this.linkWidth = 0;\r\n        _this.startX = 0;\r\n        _this.endX = 0;\r\n        _this.startY = 0;\r\n        _this.endY = 0;\r\n        _this.middleLine = _this.createChild(Polyspline);\r\n        _this.middleLine.shouldClone = false;\r\n        _this.middleLine.strokeOpacity = 0;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    SankeyLink.prototype.makeBackwards = function () {\r\n        if (this.states.getKey(\"backwards\") != undefined) {\r\n            this.setState(\"backwards\");\r\n        }\r\n    };\r\n    /**\r\n     * (Re)validates (redraws) the link.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    SankeyLink.prototype.validate = function () {\r\n        var _a, _b, _c, _d;\r\n        _super.prototype.validate.call(this);\r\n        if (!this.isTemplate) {\r\n            var x0 = this.startX;\r\n            var y0 = this.startY;\r\n            var x1 = this.endX;\r\n            var y1 = this.endY;\r\n            if (this.states.getKey(\"backwards\")) {\r\n                this.setState(\"default\");\r\n            }\r\n            if (this.dataItem) {\r\n                var chart = this.dataItem.component;\r\n                if (chart) {\r\n                    if (chart.orientation == \"horizontal\") {\r\n                        if (x1 < x0) {\r\n                            _a = __read([x1, x0], 2), x0 = _a[0], x1 = _a[1];\r\n                            _b = __read([y1, y0], 2), y0 = _b[0], y1 = _b[1];\r\n                            this.makeBackwards();\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (y1 < y0) {\r\n                            _c = __read([y1, y0], 2), y0 = _c[0], y1 = _c[1];\r\n                            _d = __read([x1, x0], 2), x0 = _d[0], x1 = _d[1];\r\n                            this.makeBackwards();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!$type.isNumber(x1)) {\r\n                x1 = x0;\r\n            }\r\n            if (!$type.isNumber(y1)) {\r\n                y1 = y0;\r\n            }\r\n            var startAngle = this.startAngle;\r\n            var endAngle = this.endAngle;\r\n            var w = this.linkWidth;\r\n            var path = \"\";\r\n            var xt0 = x0;\r\n            var yt0 = y0;\r\n            var xt1 = x1;\r\n            var yt1 = y1;\r\n            var xb0 = x0 + w * $math.sin(startAngle);\r\n            var xb1 = x1 + w * $math.sin(endAngle);\r\n            var yb0 = y0 + w * $math.cos(startAngle);\r\n            var yb1 = y1 + w * $math.cos(endAngle);\r\n            var xm0 = x0 + w / 2 * $math.sin(startAngle);\r\n            var xm1 = x1 + w / 2 * $math.sin(endAngle);\r\n            var ym0 = y0 + w / 2 * $math.cos(startAngle);\r\n            var ym1 = y1 + w / 2 * $math.cos(endAngle);\r\n            this.zIndex = this.zIndex || this.dataItem.index;\r\n            var tensionX = this.tension + (1 - this.tension) * $math.sin(startAngle);\r\n            var tensionY = this.tension + (1 - this.tension) * $math.cos(startAngle);\r\n            this.middleLine.tensionX = tensionX;\r\n            this.middleLine.tensionY = tensionY;\r\n            if ($type.isNumber(w) && ($type.isNumber(x0) && $type.isNumber(x1) && $type.isNumber(y0) && $type.isNumber(y1))) {\r\n                // solves issues with gradient fill of straight lines\r\n                if ($math.round(xt0, 3) == $math.round(xt1, 3)) {\r\n                    xt1 += 0.01;\r\n                }\r\n                if ($math.round(yt0, 3) == $math.round(yt1, 3)) {\r\n                    yt1 += 0.01;\r\n                }\r\n                if ($math.round(xb0, 3) == $math.round(xb1, 3)) {\r\n                    xb1 += 0.01;\r\n                }\r\n                if ($math.round(yb0, 3) == $math.round(yb1, 3)) {\r\n                    yb1 += 0.01;\r\n                }\r\n                var minX = Math.min(xb0, xb1, xt0, xt1);\r\n                var minY = Math.min(yb0, yb1, yt0, yt1);\r\n                var maxX = Math.max(xb0, xb1, xt0, xt1);\r\n                var maxY = Math.max(yb0, yb1, yt0, yt1);\r\n                this._bbox = {\r\n                    x: minX,\r\n                    y: minY,\r\n                    width: maxX - minX,\r\n                    height: maxY - minY\r\n                };\r\n                var cpd = this.controlPointDistance;\r\n                var kxt0 = xt0 + (xt1 - xt0) * cpd * $math.cos(startAngle);\r\n                var kyt0 = yt0 + (yt1 - yt0) * cpd * $math.sin(startAngle);\r\n                var kxt1 = xt1 - (xt1 - xt0) * cpd * $math.cos(endAngle);\r\n                var kyt1 = yt1 - (yt1 - yt0) * cpd * $math.sin(endAngle);\r\n                var kxm0 = xm0 + (xm1 - xm0) * cpd * $math.cos(startAngle);\r\n                var kym0 = ym0 + (ym1 - ym0) * cpd * $math.sin(startAngle);\r\n                var kxm1 = xm1 - (xm1 - xm0) * cpd * $math.cos(endAngle);\r\n                var kym1 = ym1 - (ym1 - ym0) * cpd * $math.sin(endAngle);\r\n                var angle = $math.getAngle({ x: kxt0, y: kyt0 }, { x: kxt1, y: kyt1 });\r\n                var dx = (w / $math.cos(angle) - w) / $math.tan(angle) * $math.cos(startAngle);\r\n                var dy = (w / $math.sin(angle) - w) * $math.tan(angle) * $math.sin(startAngle);\r\n                var kxb0 = -dx / 2 + xb0 + (xb1 - xb0) * cpd * $math.cos(startAngle);\r\n                var kyb0 = -dy / 2 + yb0 + (yb1 - yb0) * cpd * $math.sin(startAngle);\r\n                var kxb1 = -dx / 2 + xb1 - (xb1 - xb0) * cpd * $math.cos(endAngle);\r\n                var kyb1 = -dy / 2 + yb1 - (yb1 - yb0) * cpd * $math.sin(endAngle);\r\n                if (ym1 == ym0) {\r\n                    ym1 += 0.01;\r\n                }\r\n                this.middleLine.segments = [[{ x: xm0, y: ym0 }, { x: kxm0, y: kym0 }, { x: kxm1, y: kym1 }, { x: xm1, y: ym1 }]];\r\n                kxt0 += dx / 2;\r\n                kyt0 += dy / 2;\r\n                kxt1 += dx / 2;\r\n                kyt1 += dy / 2;\r\n                path += $path.moveTo({ x: xt0, y: yt0 });\r\n                path += new $smoothing.Tension(tensionX, tensionY).smooth([{ x: xt0, y: yt0 }, { x: kxt0, y: kyt0 }, { x: kxt1, y: kyt1 }, { x: xt1, y: yt1 }]);\r\n                path += $path.lineTo({ x: xb1, y: yb1 });\r\n                path += new $smoothing.Tension(tensionX, tensionY).smooth([{ x: xb1, y: yb1 }, { x: kxb1, y: kyb1 }, { x: kxb0, y: kyb0 }, { x: xb0, y: yb0 }]);\r\n                path += $path.closePath();\r\n            }\r\n            this.link.path = path;\r\n            if (this.maskBullets) {\r\n                this.bulletsMask.path = path;\r\n                this.bulletsContainer.mask = this.bulletsMask;\r\n            }\r\n            this.positionBullets();\r\n        }\r\n    };\r\n    Object.defineProperty(SankeyLink.prototype, \"startX\", {\r\n        /**\r\n         * @return Start X\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startX\");\r\n        },\r\n        /**\r\n         * [startX description]\r\n         *\r\n         * @todo Description\r\n         * @param value  Start X\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"startX\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SankeyLink.prototype, \"endX\", {\r\n        /**\r\n         * @return End X\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endX\");\r\n        },\r\n        /**\r\n         * [endX description]\r\n         *\r\n         * @todo Description\r\n         * @param value  End X\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"endX\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SankeyLink.prototype, \"startY\", {\r\n        /**\r\n         * @return Start Y\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startY\");\r\n        },\r\n        /**\r\n         * [startY description]\r\n         *\r\n         * @todo Description\r\n         * @param value  Start Y\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"startY\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SankeyLink.prototype, \"endY\", {\r\n        /**\r\n         * @return End Y\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endY\");\r\n        },\r\n        /**\r\n         * [endY description]\r\n         *\r\n         * @todo Description\r\n         * @param value End Y\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"endY\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SankeyLink.prototype, \"linkWidth\", {\r\n        /**\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"linkWidth\");\r\n        },\r\n        /**\r\n         * [linkWidth description]\r\n         *\r\n         * @todo Description\r\n         * @param value [description]\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"linkWidth\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SankeyLink.prototype, \"controlPointDistance\", {\r\n        /**\r\n         * @return relative control point distance\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"controlPointDistance\");\r\n        },\r\n        /**\r\n         * Distance of control point of a link, defines relative distance from a node at which linke should bend\r\n         * @default 0.2\r\n         * @param value\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"controlPointDistance\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SankeyLink.prototype, \"tension\", {\r\n        /**\r\n         * @return tension value\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"tension\");\r\n        },\r\n        /**\r\n         * Tension of a spline, 1 would make the link to have sharp edges\r\n         * @default 0.8\r\n         * @param value\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"tension\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SankeyLink;\r\n}(FlowDiagramLink));\r\nexport { SankeyLink };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SankeyLink\"] = SankeyLink;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}