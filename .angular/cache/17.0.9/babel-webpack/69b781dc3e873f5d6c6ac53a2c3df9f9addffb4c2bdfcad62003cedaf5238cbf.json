{"ast":null,"code":"/**\r\n * ConeSeries module\r\n * Not recommended using if you use scrollbars or your chart is zoomable in some other way.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { ColumnSeries, ColumnSeriesDataItem } from \"./ColumnSeries\";\nimport { ConeColumn } from \"../elements/ConeColumn\";\nimport { registry } from \"../../core/Registry\";\nimport * as $path from \"../../core/rendering/Path\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Defines a [[DataItem]] for [[ConeSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\nvar ConeSeriesDataItem = /** @class */function (_super) {\n  __extends(ConeSeriesDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n  function ConeSeriesDataItem() {\n    var _this = _super.call(this) || this;\n    _this.className = \"ConeSeriesDataItem\";\n    _this.applyTheme();\n    return _this;\n  }\n  return ConeSeriesDataItem;\n}(ColumnSeriesDataItem);\nexport { ConeSeriesDataItem };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Defines [[Series]] for a cone graph.\r\n *\r\n * @see {@link IConeSeriesEvents} for a list of available Events\r\n * @see {@link IConeSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\nvar ConeSeries = /** @class */function (_super) {\n  __extends(ConeSeries, _super);\n  /**\r\n   * Constructor\r\n   */\n  function ConeSeries() {\n    var _this = _super.call(this) || this;\n    _this.className = \"ConeSeries\";\n    _this.applyTheme();\n    return _this;\n  }\n  /**\r\n   * Returns an element to use for Candlestick\r\n   * @ignore\r\n   * @return Element.\r\n   */\n  ConeSeries.prototype.createColumnTemplate = function () {\n    return new ConeColumn();\n  };\n  /**\r\n   * Returns an SVG path to use as series mask.\r\n   *\r\n   * @return SVG path\r\n   */\n  ConeSeries.prototype.getMaskPath = function () {\n    var dx = 0;\n    var dy = 0;\n    var column = this.columns.getIndex(0);\n    if (column) {\n      if (this.baseAxis == this.xAxis) {\n        dy = column.coneColumn.innerWidth / 2 + 1;\n      } else {\n        dx = column.coneColumn.innerHeight / 2 + 1;\n      }\n      return $path.rectToPath({\n        x: -dx,\n        y: 0,\n        width: this.xAxis.axisLength + dx,\n        height: this.yAxis.axisLength + dy\n      });\n    }\n  };\n  /**\r\n   * Validates data item's elements.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItem  Data item\r\n   */\n  ConeSeries.prototype.validateDataElementReal = function (dataItem) {\n    _super.prototype.validateDataElementReal.call(this, dataItem);\n    var column = dataItem.column;\n    if (column) {\n      var coneColumn = dataItem.column.coneColumn;\n      coneColumn.fill = dataItem.column.fill;\n      if (this.baseAxis == this.yAxis) {\n        coneColumn.orientation = \"horizontal\";\n      } else {\n        coneColumn.orientation = \"vertical\";\n      }\n    }\n  };\n  return ConeSeries;\n}(ColumnSeries);\nexport { ConeSeries };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"ConeSeries\"] = ConeSeries;\nregistry.registeredClasses[\"ConeSeriesDataItem\"] = ConeSeriesDataItem;","map":{"version":3,"names":["__extends","ColumnSeries","ColumnSeriesDataItem","ConeColumn","registry","$path","ConeSeriesDataItem","_super","_this","call","className","applyTheme","ConeSeries","prototype","createColumnTemplate","getMaskPath","dx","dy","column","columns","getIndex","baseAxis","xAxis","coneColumn","innerWidth","innerHeight","rectToPath","x","y","width","axisLength","height","yAxis","validateDataElementReal","dataItem","fill","orientation","registeredClasses"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/charts/series/ConeSeries.js"],"sourcesContent":["/**\r\n * ConeSeries module\r\n * Not recommended using if you use scrollbars or your chart is zoomable in some other way.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ColumnSeries, ColumnSeriesDataItem } from \"./ColumnSeries\";\r\nimport { ConeColumn } from \"../elements/ConeColumn\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[ConeSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar ConeSeriesDataItem = /** @class */ (function (_super) {\r\n    __extends(ConeSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ConeSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ConeSeriesDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return ConeSeriesDataItem;\r\n}(ColumnSeriesDataItem));\r\nexport { ConeSeriesDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a cone graph.\r\n *\r\n * @see {@link IConeSeriesEvents} for a list of available Events\r\n * @see {@link IConeSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nvar ConeSeries = /** @class */ (function (_super) {\r\n    __extends(ConeSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ConeSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ConeSeries\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Returns an element to use for Candlestick\r\n     * @ignore\r\n     * @return Element.\r\n     */\r\n    ConeSeries.prototype.createColumnTemplate = function () {\r\n        return new ConeColumn();\r\n    };\r\n    /**\r\n     * Returns an SVG path to use as series mask.\r\n     *\r\n     * @return SVG path\r\n     */\r\n    ConeSeries.prototype.getMaskPath = function () {\r\n        var dx = 0;\r\n        var dy = 0;\r\n        var column = this.columns.getIndex(0);\r\n        if (column) {\r\n            if (this.baseAxis == this.xAxis) {\r\n                dy = column.coneColumn.innerWidth / 2 + 1;\r\n            }\r\n            else {\r\n                dx = column.coneColumn.innerHeight / 2 + 1;\r\n            }\r\n            return $path.rectToPath({\r\n                x: -dx,\r\n                y: 0,\r\n                width: this.xAxis.axisLength + dx,\r\n                height: this.yAxis.axisLength + dy\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Validates data item's elements.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    ConeSeries.prototype.validateDataElementReal = function (dataItem) {\r\n        _super.prototype.validateDataElementReal.call(this, dataItem);\r\n        var column = dataItem.column;\r\n        if (column) {\r\n            var coneColumn = dataItem.column.coneColumn;\r\n            coneColumn.fill = dataItem.column.fill;\r\n            if (this.baseAxis == this.yAxis) {\r\n                coneColumn.orientation = \"horizontal\";\r\n            }\r\n            else {\r\n                coneColumn.orientation = \"vertical\";\r\n            }\r\n        }\r\n    };\r\n    return ConeSeries;\r\n}(ColumnSeries));\r\nexport { ConeSeries };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ConeSeries\"] = ConeSeries;\r\nregistry.registeredClasses[\"ConeSeriesDataItem\"] = ConeSeriesDataItem;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}