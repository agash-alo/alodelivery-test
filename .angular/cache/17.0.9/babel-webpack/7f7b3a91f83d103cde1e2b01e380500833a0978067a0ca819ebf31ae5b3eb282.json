{"ast":null,"code":"/**\r\n * Legend-related functionality.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Component } from \"../core/Component\";\nimport { DataItem } from \"../core/DataItem\";\nimport { ListTemplate, ListDisposer } from \"../core/utils/List\";\nimport { RoundedRectangle } from \"../core/elements/RoundedRectangle\";\nimport { Container } from \"../core/Container\";\nimport { Label } from \"../core/elements/Label\";\nimport { keyboard } from \"../core/utils/Keyboard\";\nimport { registry } from \"../core/Registry\";\nimport { getInteraction } from \"../core/interaction/Interaction\";\nimport { percent, Percent } from \"../core/utils/Percent\";\nimport { InterfaceColorSet } from \"../core/utils/InterfaceColorSet\";\nimport * as $utils from \"../core/utils/Utils\";\nimport * as $type from \"../core/utils/Type\";\nimport * as $math from \"../core/utils/Math\";\nimport { Sprite } from \"../core/Sprite\";\nimport { Disposer } from \"../core/utils/Disposer\";\nimport { MouseCursorStyle } from \"../core/interaction/Mouse\";\nimport { defaultRules, ResponsiveBreakpoints } from \"../core/utils/Responsive\";\nimport { Scrollbar } from \"../core/elements/Scrollbar\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Defines a [[DataItem]] for [[Legend]].\r\n *\r\n * @see {@link DataItem}\r\n */\nvar LegendDataItem = /** @class */function (_super) {\n  __extends(LegendDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n  function LegendDataItem() {\n    var _this = _super.call(this) || this;\n    /**\r\n     * @ignore\r\n     */\n    _this.childrenCreated = false;\n    _this.className = \"LegendDataItem\";\n    _this.applyTheme();\n    return _this;\n  }\n  Object.defineProperty(LegendDataItem.prototype, \"label\", {\n    /**\r\n     * A legend item's [[Label]] element.\r\n     *\r\n     * @return Label\r\n     */\n    get: function () {\n      var _this = this;\n      if (!this._label) {\n        var label_1 = this.component.labels.create();\n        this._label = label_1;\n        this.addSprite(label_1);\n        this._disposers.push(label_1);\n        label_1.parent = this.itemContainer;\n        this._disposers.push(new Disposer(function () {\n          if ($type.hasValue(_this.component)) {\n            _this.component.labels.removeValue(label_1);\n          }\n        }));\n      }\n      return this._label;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LegendDataItem.prototype, \"color\", {\n    /**\r\n     * @return Main color\r\n     */\n    get: function () {\n      return this.properties.color;\n    },\n    /**\r\n     * Main color of legend data item.\r\n     *\r\n     * This is set by the target element this legend item represents, like\r\n     * a Series or a Slice.\r\n     *\r\n     * It can be used to derive a color in legend's sub-items, like label:\r\n     *\r\n     * ```TypeScript\r\n     * chart.legend.labels.template.text = \"[{color}]{name}[/]\";\r\n     * ```\r\n     * ```JavaScript\r\n     * chart.legend.labels.template.text = \"[{color}]{name}[/]\";\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"legend\": {\r\n     *     // ...\r\n     *     \"labels\": {\r\n     *       \"text\": \"[{color}]{name}[/]\"\r\n     *     }\r\n     *   }\r\n     * }\r\n     * ```\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/#Legend_labels} For more information about configuring legend labels.\r\n     * @param value  Main color\r\n     */\n    set: function (value) {\n      this.setProperty(\"color\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LegendDataItem.prototype, \"valueLabel\", {\n    /**\r\n     * A legend item's [[Label]] element for \"value label\".\r\n     *\r\n     * @return Label\r\n     */\n    get: function () {\n      var _this = this;\n      if (!this._valueLabel) {\n        var valueLabel_1 = this.component.valueLabels.create();\n        this._valueLabel = valueLabel_1;\n        this.addSprite(valueLabel_1);\n        this._disposers.push(valueLabel_1);\n        valueLabel_1.parent = this.itemContainer;\n        this._disposers.push(new Disposer(function () {\n          if ($type.hasValue(_this.component)) {\n            _this.component.valueLabels.removeValue(valueLabel_1);\n          }\n        }));\n      }\n      return this._valueLabel;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LegendDataItem.prototype, \"itemContainer\", {\n    /**\r\n     * A reference to the main [[Container]] that holds legend item's elements:\r\n     * marker and labels.\r\n     *\r\n     * @return Item container\r\n     */\n    get: function () {\n      var _this = this;\n      if (!this._itemContainer) {\n        var component_1 = this.component;\n        var itemContainer_1 = component_1.itemContainers.create();\n        itemContainer_1.parent = component_1;\n        this._itemContainer = itemContainer_1;\n        this.addSprite(itemContainer_1);\n        this._disposers.push(itemContainer_1);\n        // Add click/tap event to toggle item\n        if (itemContainer_1.togglable) {\n          itemContainer_1.events.on(\"toggled\", function (ev) {\n            component_1.toggleDataItem(ev.target.dataItem);\n          }, undefined, false);\n        }\n        // Add focus event so that we can track which object is currently in focus\n        // for keyboard toggling\n        if (itemContainer_1.focusable) {\n          itemContainer_1.events.on(\"hit\", function (ev) {\n            // We need this here in order to reset focused item when it is clicked\n            // normally so that it is not toggled by ENTER afterwards\n            component_1.focusedItem = undefined;\n          }, undefined, false);\n          itemContainer_1.events.on(\"focus\", function (ev) {\n            component_1.focusedItem = ev.target.dataItem;\n          }, undefined, false);\n          itemContainer_1.events.on(\"blur\", function (ev) {\n            component_1.focusedItem = undefined;\n          }, undefined, false);\n        }\n        this._disposers.push(new Disposer(function () {\n          if ($type.hasValue(_this.component)) {\n            _this.component.itemContainers.removeValue(itemContainer_1);\n          }\n        }));\n        if (this.dataContext.uidAttr) {\n          itemContainer_1.readerControls = this.dataContext.uidAttr();\n          itemContainer_1.readerLabelledBy = this.dataContext.uidAttr();\n        }\n        var sprite = this.dataContext;\n        if ((sprite instanceof DataItem || sprite instanceof Sprite) && !sprite.isDisposed()) {\n          var visibilitychanged = function (ev) {\n            itemContainer_1.readerChecked = ev.visible;\n            itemContainer_1.events.disableType(\"toggled\");\n            itemContainer_1.isActive = !ev.visible;\n            itemContainer_1.events.enableType(\"toggled\");\n          };\n          sprite.addDisposer(new Disposer(function () {\n            if (_this.component) {\n              _this.component.dataItems.remove(_this);\n            }\n          }));\n          if (sprite instanceof Sprite) {\n            itemContainer_1.addDisposer(sprite.events.on(\"visibilitychanged\", visibilitychanged, undefined, false));\n            itemContainer_1.addDisposer(sprite.events.on(\"hidden\", function (ev) {\n              itemContainer_1.readerChecked = false;\n              itemContainer_1.events.disableType(\"toggled\");\n              itemContainer_1.isActive = true;\n              itemContainer_1.events.enableType(\"toggled\");\n            }, undefined, false));\n            itemContainer_1.addDisposer(sprite.events.on(\"shown\", function (ev) {\n              itemContainer_1.readerChecked = true;\n              itemContainer_1.events.disableType(\"toggled\");\n              itemContainer_1.isActive = false;\n              itemContainer_1.events.enableType(\"toggled\");\n            }, undefined, false));\n          } else {\n            itemContainer_1.addDisposer(sprite.events.on(\"visibilitychanged\", visibilitychanged, undefined, false));\n          }\n        }\n      }\n      return this._itemContainer;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LegendDataItem.prototype, \"marker\", {\n    /**\r\n     * A [[Container]] that holds legend item's marker element.\r\n     *\r\n     * @return Marker\r\n     */\n    get: function () {\n      var _this = this;\n      if (!this._marker) {\n        var marker_1 = this.component.markers.create();\n        this._marker = marker_1;\n        marker_1.parent = this.itemContainer;\n        this.addSprite(marker_1);\n        this._disposers.push(marker_1);\n        this._disposers.push(new Disposer(function () {\n          if ($type.hasValue(_this.component)) {\n            _this.component.markers.removeValue(marker_1);\n          }\n        }));\n      }\n      return this._marker;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return LegendDataItem;\n}(DataItem);\nexport { LegendDataItem };\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Defines a class that carries legend settings.\r\n *\r\n * A legend might change its settings dynamically. Legend can also be shared\r\n * by several elements, requiring different settings.\r\n *\r\n * Having legend's settings in a separate object is a good way to \"hot swap\"\r\n * a set of settings for the legend.\r\n */\nvar LegendSettings = /** @class */function () {\n  function LegendSettings() {\n    /**\r\n     * Should marker be created for each legend item.\r\n     */\n    this.createMarker = true;\n  }\n  return LegendSettings;\n}();\nexport { LegendSettings };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * [[Legend]] class is used to create legend for the chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/} for Legend documentation\r\n * @see {@link ILegendEvents} for a list of available events\r\n * @see {@link ILegendAdapters} for a list of available Adapters\r\n */\nvar Legend = /** @class */function (_super) {\n  __extends(Legend, _super);\n  /**\r\n   * Constructor\r\n   */\n  function Legend() {\n    var _this = _super.call(this) || this;\n    _this.className = \"Legend\";\n    // Set defaults\n    _this.layout = \"grid\";\n    _this.setPropertyValue(\"useDefaultMarker\", false);\n    _this.setPropertyValue(\"scrollable\", false);\n    _this.setPropertyValue(\"contentAlign\", \"center\");\n    // Create a template container and list for legend items\n    var itemContainer = new Container();\n    itemContainer.applyOnClones = true;\n    itemContainer.padding(8, 0, 8, 0);\n    itemContainer.margin(0, 10, 0, 10);\n    itemContainer.layout = \"horizontal\";\n    itemContainer.clickable = true;\n    itemContainer.focusable = true;\n    itemContainer.role = \"switch\";\n    itemContainer.togglable = true;\n    itemContainer.cursorOverStyle = MouseCursorStyle.pointer;\n    itemContainer.background.fillOpacity = 0; // creates hit area\n    // Create container list using item template we just created\n    _this.itemContainers = new ListTemplate(itemContainer);\n    _this._disposers.push(new ListDisposer(_this.itemContainers));\n    _this._disposers.push(_this.itemContainers.template);\n    // Set up global keyboard events for toggling elements\n    _this._disposers.push(getInteraction().body.events.on(\"keyup\", function (ev) {\n      if (keyboard.isKey(ev.event, \"enter\") && _this.focusedItem) {\n        var focusedItem = _this.focusedItem;\n        var target = focusedItem.itemContainer;\n        if (target.togglable) {\n          _this.toggleDataItem(focusedItem);\n        } else if (target.clickable && target.events.isEnabled(\"hit\")) {\n          target.dispatchImmediately(\"hit\", {\n            event: ev\n          });\n          // We need this here because \"hit\" event resets `this.focusedItem`\n          // And we need it here\n          _this.focusedItem = focusedItem;\n        }\n      }\n    }, _this));\n    var interfaceColors = new InterfaceColorSet();\n    // Create a template container and list for the a marker\n    var marker = new Container();\n    marker.width = 23;\n    marker.height = 23;\n    marker.interactionsEnabled = false;\n    marker.applyOnClones = true;\n    marker.setStateOnChildren = true;\n    marker.background.fillOpacity = 0;\n    marker.background.strokeOpacity = 0;\n    marker.propertyFields.fill = \"fill\";\n    marker.valign = \"middle\";\n    var disabledColor = interfaceColors.getFor(\"disabledBackground\");\n    marker.events.on(\"childadded\", function (event) {\n      var child = event.newValue;\n      var activeState = child.states.create(\"active\");\n      activeState.properties.stroke = disabledColor;\n      activeState.properties.fill = disabledColor;\n    });\n    _this.markers = new ListTemplate(marker);\n    _this._disposers.push(new ListDisposer(_this.markers));\n    _this._disposers.push(_this.markers.template);\n    // Create a legend background element\n    var rectangle = marker.createChild(RoundedRectangle);\n    rectangle.width = percent(100);\n    rectangle.height = percent(100);\n    rectangle.applyOnClones = true;\n    rectangle.propertyFields.fill = \"fill\"; //othrwise old edge doesn't like as the same pattern is set both on parent and child https://codepen.io/team/amcharts/pen/72d7a98f3fb811d3118795220ff63182\n    rectangle.strokeOpacity = 0;\n    // Create a template container and list for item labels\n    var label = new Label();\n    label.text = \"{name}\";\n    label.margin(0, 5, 0, 5);\n    label.valign = \"middle\";\n    label.applyOnClones = true;\n    label.states.create(\"active\").properties.fill = interfaceColors.getFor(\"disabledBackground\");\n    _this.labels = new ListTemplate(label);\n    _this._disposers.push(new ListDisposer(_this.labels));\n    _this._disposers.push(_this.labels.template);\n    label.interactionsEnabled = false;\n    label.truncate = true;\n    label.fullWords = false;\n    // Create a template container and list for item value labels\n    var valueLabel = new Label();\n    valueLabel.margin(0, 5, 0, 0);\n    valueLabel.valign = \"middle\";\n    valueLabel.width = 50; // to avoid rearranging legend entries when value changes.\n    valueLabel.align = \"right\";\n    valueLabel.textAlign = \"end\";\n    valueLabel.applyOnClones = true;\n    valueLabel.states.create(\"active\").properties.fill = interfaceColors.getFor(\"disabledBackground\");\n    valueLabel.interactionsEnabled = false;\n    _this.valueLabels = new ListTemplate(valueLabel);\n    _this._disposers.push(new ListDisposer(_this.valueLabels));\n    _this._disposers.push(_this.valueLabels.template);\n    _this.position = \"bottom\"; // don't use setPropertyValue here!\n    // Create a state for disabled legend items\n    itemContainer.states.create(\"active\");\n    itemContainer.setStateOnChildren = true;\n    // Apply accessibility settings\n    _this.role = \"group\";\n    _this.events.on(\"layoutvalidated\", _this.handleScrollbar, _this, false);\n    _this.events.on(\"parentset\", function () {\n      var parent = _this.parent;\n      if (parent) {\n        _this._disposers.push(parent.events.on(\"maxsizechanged\", function () {\n          if (_this.scrollable) {\n            _this.setTimeout(function () {\n              _this.updateMasks();\n              _this.handleScrollbar();\n              _this._handleWheelReal(1);\n            }, 100);\n          }\n        }));\n      }\n    });\n    _this.applyTheme();\n    return _this;\n  }\n  /**\r\n   * Sets defaults that instantiate some objects that rely on parent, so they\r\n   * cannot be set in constructor.\r\n   */\n  Legend.prototype.applyInternalDefaults = function () {\n    _super.prototype.applyInternalDefaults.call(this);\n    if (!$type.hasValue(this.readerTitle)) {\n      this.readerTitle = this.language.translate(\"Legend\");\n    }\n  };\n  /**\r\n   * Returns a new/empty DataItem of the type appropriate for this object.\r\n   *\r\n   * @see {@link DataItem}\r\n   * @return Data Item\r\n   */\n  Legend.prototype.createDataItem = function () {\n    return new LegendDataItem();\n  };\n  /**\r\n   * [validateDataElements description]\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description\r\n   */\n  Legend.prototype.validateDataElements = function () {\n    if (this.scrollbar) {\n      this.scrollbar.start = 0;\n      this.scrollbar.end = 1;\n    }\n    _super.prototype.validateDataElements.call(this);\n  };\n  /**\r\n   * [validateDataElement description]\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItem Data item\r\n   * @todo Description\r\n   * @todo Figure out how to update appearance of legend item without losing focus\r\n   * @todo Update legend marker appearance as apperance of related series changes\r\n   */\n  Legend.prototype.validateDataElement = function (dataItem) {\n    _super.prototype.validateDataElement.call(this, dataItem);\n    // Get data item (legend item's) container\n    var container = dataItem.itemContainer;\n    var marker = dataItem.marker;\n    $utils.used(dataItem.label);\n    var valueLabel = dataItem.valueLabel;\n    // Set parent and update current state\n    container.readerChecked = dataItem.dataContext.visible;\n    // Tell series its legend data item\n    dataItem.dataContext.legendDataItem = dataItem;\n    var tempMaxWidth = dataItem.label.maxWidth;\n    if (!(dataItem.label.width instanceof Percent)) {\n      dataItem.label.width = undefined;\n    }\n    if (tempMaxWidth > 0) {\n      dataItem.label.maxWidth = tempMaxWidth;\n    }\n    if (valueLabel.align == \"right\") {\n      valueLabel.width = undefined;\n    }\n    var legendSettings = dataItem.dataContext.legendSettings;\n    // If we are not using default markers, create a unique legend marker based\n    // on the data item type\n    var dataContext = dataItem.dataContext;\n    if (dataContext.createLegendMarker && (!this.useDefaultMarker || !(dataContext instanceof Sprite))) {\n      if (!dataItem.childrenCreated) {\n        dataContext.createLegendMarker(marker);\n        dataItem.childrenCreated = true;\n      }\n    } else {\n      this.markers.template.propertyFields.fill = undefined;\n    }\n    if (dataContext.updateLegendValue) {\n      dataContext.updateLegendValue(); // this solves issue with external legend, as legend is created after chart updates legend values\n    }\n\n    if (dataContext.component && dataContext.component.updateLegendValue) {\n      dataContext.component.updateLegendValue(dataContext);\n    }\n    if (valueLabel.invalid) {\n      valueLabel.validate();\n    }\n    if (valueLabel.text == \"\" || valueLabel.text == undefined) {\n      valueLabel.__disabled = true;\n    } else {\n      valueLabel.__disabled = false;\n    }\n    if (legendSettings && (legendSettings.itemValueText != undefined || legendSettings.valueText != undefined)) {\n      valueLabel.__disabled = false;\n    }\n    var visible = dataItem.dataContext.visible;\n    if (visible === undefined) {\n      visible = true;\n    }\n    visible = $type.toBoolean(visible);\n    dataItem.dataContext.visible = visible;\n    container.events.disableType(\"toggled\");\n    container.isActive = !visible;\n    if (container.isActive) {\n      container.setState(\"active\", 0);\n    } else {\n      container.setState(\"default\", 0);\n    }\n    container.events.enableType(\"toggled\");\n  };\n  Legend.prototype.afterDraw = function () {\n    var _this = this;\n    var maxWidth = this.getPropertyValue(\"maxWidth\");\n    var maxLabelWidth = 0;\n    this.labels.each(function (label) {\n      if (label.invalid) {\n        label.maxWidth = undefined;\n        label.validate();\n      }\n      if (label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight > maxLabelWidth) {\n        maxLabelWidth = label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight;\n      }\n    });\n    var maxValueLabelWidth = 0;\n    this.valueLabels.each(function (label) {\n      if (label.invalid) {\n        label.validate();\n      }\n      if (label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight > maxValueLabelWidth) {\n        maxValueLabelWidth = label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight;\n      }\n    });\n    var maxMarkerWidth = 0;\n    this.markers.each(function (marker) {\n      if (marker.invalid) {\n        marker.validate();\n      }\n      if (marker.measuredWidth + marker.pixelMarginLeft + marker.pixelMarginRight > maxMarkerWidth) {\n        maxMarkerWidth = marker.measuredWidth + marker.pixelMarginLeft + marker.pixelMarginRight;\n      }\n    });\n    var itemContainer = this.itemContainers.template;\n    var margin = itemContainer.pixelMarginRight + itemContainer.pixelMarginLeft;\n    var maxAdjustedLabelWidth;\n    var trueMaxWidth = maxLabelWidth + maxValueLabelWidth + maxMarkerWidth;\n    if (!$type.isNumber(maxWidth)) {\n      maxAdjustedLabelWidth = maxLabelWidth;\n    } else {\n      maxWidth = maxWidth - margin;\n      if (maxWidth > trueMaxWidth) {\n        maxWidth = trueMaxWidth;\n      }\n      maxAdjustedLabelWidth = maxWidth - maxMarkerWidth - maxValueLabelWidth;\n    }\n    this.labels.each(function (label) {\n      if (_this.valueLabels.template.align == \"right\" || label.measuredWidth > maxAdjustedLabelWidth) {\n        if (!(label.width instanceof Percent)) {\n          label.width = Math.min(label.maxWidth, maxAdjustedLabelWidth - label.pixelMarginLeft - label.pixelMarginRight);\n          label.maxWidth = label.width;\n        }\n      }\n    });\n    if (this.valueLabels.template.align == \"right\") {\n      this.valueLabels.each(function (valueLabel) {\n        valueLabel.width = maxValueLabelWidth - valueLabel.pixelMarginRight - valueLabel.pixelMarginLeft;\n      });\n    }\n    _super.prototype.afterDraw.call(this);\n  };\n  Legend.prototype.handleScrollbar = function () {\n    var scrollbar = this.scrollbar;\n    if (this.scrollable && scrollbar) {\n      var measuredHeight = this.maxHeight;\n      scrollbar.height = measuredHeight;\n      scrollbar.x = this.measuredWidth - scrollbar.pixelWidth - scrollbar.pixelMarginLeft;\n      if (this.contentHeight > measuredHeight) {\n        scrollbar.visible = true;\n        scrollbar.thumb.height = scrollbar.height * measuredHeight / this.contentHeight;\n        this.paddingRight = scrollbar.pixelWidth + scrollbar.pixelMarginLeft + scrollbar.pixelMarginRight;\n      } else {\n        scrollbar.thumb.height = scrollbar.height * measuredHeight / this.contentHeight;\n        this.paddingRight = scrollbar.pixelWidth + scrollbar.pixelMarginLeft + scrollbar.pixelMarginRight;\n        scrollbar.visible = false;\n        scrollbar.start = 0;\n        scrollbar.end = 1;\n      }\n      scrollbar.handleThumbPosition();\n      this.updateMasks();\n    }\n  };\n  Object.defineProperty(Legend.prototype, \"position\", {\n    /**\r\n     * @return Position\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"position\");\n    },\n    /**\r\n     * Position of the legend.\r\n     *\r\n     * Options: \"left\", \"right\", \"top\", \"bottom\" (default), or \"absolute\".\r\n     *\r\n     * IMPORTANT: [[MapChart]] will ignore this setting, as it is using different\r\n     * layout structure than other charts.\r\n     *\r\n     * To position legend in [[MapChart]] set legend's `align` (`\"left\"` or\r\n     * `\"right\"`) and `valign` (`\"top\"` or `\"bottom\"`) properties instead.\r\n     *\r\n     * @default \"bottom\"\r\n     * @param value  Position\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"position\", value)) {\n        if (value == \"left\" || value == \"right\") {\n          this.margin(10, 5, 10, 10);\n          this.valign = \"middle\";\n          this.contentAlign = \"none\";\n          this.valueLabels.template.align = \"right\";\n          if (!$type.isNumber(this.maxColumns)) {\n            this.maxColumns = 1;\n          }\n          this.width = undefined;\n          this.maxWidth = 220;\n        } else {\n          this.maxColumns = undefined;\n          this.width = percent(100);\n          this.valueLabels.template.align = \"left\";\n        }\n        this.invalidate();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Legend.prototype, \"useDefaultMarker\", {\n    /**\r\n     * @return Use default marker?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"useDefaultMarker\");\n    },\n    /**\r\n     * Should legend try to mirror the look of the related item when building\r\n     * the marker for legend item?\r\n     *\r\n     * If set to `false` it will try to make the marker look like its related\r\n     * item.\r\n     *\r\n     * E.g. if an item is for a Line Series, it will display a line of the\r\n     * same thickness, color, and will use the same bullets if series have them.\r\n     *\r\n     * If set to `true`, all markers will be shown as squares, regardless of te\r\n     * series type.\r\n     *\r\n     * @default false\r\n     * @param value Use default marker?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"useDefaultMarker\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Legend.prototype, \"scrollable\", {\n    /**\r\n     * @return Legend Scrollable?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"scrollable\");\n    },\n    /**\r\n     * If set to `true` the Legend will display a scrollbar if its contents do\r\n     * not fit into its `maxHeight`.\r\n     *\r\n     * Please note that `maxHeight` is automatically set for Legend when its\r\n     * `position` is set to `\"left\"` or `\"right\"`.\r\n     *\r\n     * @default false\r\n     * @since 4.8.0\r\n     * @param  value  Legend Scrollable?\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"scrollable\", value, true)) {\n        if (value) {\n          var scrollbar = this.createChild(Scrollbar);\n          this.scrollbar = scrollbar;\n          scrollbar.isMeasured = false;\n          scrollbar.orientation = \"vertical\";\n          scrollbar.endGrip.__disabled = true;\n          scrollbar.startGrip.__disabled = true;\n          scrollbar.visible = false;\n          scrollbar.marginLeft = 5;\n          this._mouseWheelDisposer = this.events.on(\"wheel\", this.handleWheel, this, false);\n          this._disposers.push(this._mouseWheelDisposer);\n          this._disposers.push(scrollbar.events.on(\"rangechanged\", this.updateMasks, this, false));\n        } else {\n          if (this._mouseWheelDisposer) {\n            this._mouseWheelDisposer.dispose();\n            if (this.scrollbar) {\n              this.scrollbar.dispose();\n              this.scrollbar = undefined;\n            }\n          }\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Handles mouse wheel scrolling of legend.\r\n   *\r\n   * @param  event  Event\r\n   */\n  Legend.prototype.handleWheel = function (event) {\n    this._handleWheelReal(event.shift.y);\n  };\n  Legend.prototype._handleWheelReal = function (shift) {\n    var scrollbar = this.scrollbar;\n    if (scrollbar) {\n      var ds = shift / 1000 * this.measuredHeight / this.contentHeight;\n      var delta = scrollbar.end - scrollbar.start;\n      if (shift > 0) {\n        scrollbar.start = $math.max(0, scrollbar.start - ds);\n        scrollbar.end = scrollbar.start + delta;\n      } else {\n        scrollbar.end = $math.min(1, scrollbar.end - ds);\n        scrollbar.start = scrollbar.end - delta;\n      }\n    }\n  };\n  /**\r\n   * @ignore\r\n   */\n  Legend.prototype.updateMasks = function () {\n    var _this = this;\n    if (this.scrollbar) {\n      this.itemContainers.each(function (itemContainer) {\n        itemContainer.dy = -_this.scrollbar.thumb.pixelY * _this.contentHeight / _this.maxHeight;\n        itemContainer.maskRectangle = {\n          x: 0,\n          y: -itemContainer.dy,\n          width: _this.measuredWidth,\n          height: _this.maxHeight\n        };\n      });\n    }\n    this.invalidatePosition();\n  };\n  /**\r\n   * Toggles a legend item.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param item Legend item\r\n   * @todo Maybe do it with togglable instead\r\n   */\n  Legend.prototype.toggleDataItem = function (item) {\n    var dataContext = item.dataContext;\n    if (!dataContext.visible || dataContext.isHiding || dataContext instanceof Sprite && dataContext.isHidden) {\n      item.color = item.colorOrig;\n      dataContext.appeared = true;\n      item.itemContainer.isActive = false;\n      if (dataContext.hidden === true) {\n        dataContext.hidden = false;\n      }\n      if (dataContext.show) {\n        dataContext.show();\n      } else {\n        dataContext.visible = true;\n      }\n      this.svgContainer.readerAlert(this.language.translate(\"%1 shown\", this.language.locale, item.label.readerTitle));\n    } else {\n      item.itemContainer.isActive = true;\n      dataContext.appeared = true;\n      if (dataContext.hide) {\n        dataContext.hide();\n      } else {\n        dataContext.visible = false;\n      }\n      this.svgContainer.readerAlert(this.language.translate(\"%1 hidden\", this.language.locale, item.label.readerTitle));\n      item.color = new InterfaceColorSet().getFor(\"disabledBackground\");\n    }\n  };\n  Object.defineProperty(Legend.prototype, \"preloader\", {\n    /**\r\n     * Override preloader method so that legend does not accidentally show its\r\n     * own preloader.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Always `undefined`\r\n     */\n    get: function () {\n      return;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * [handleDataItemPropertyChange description]\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Legend.prototype.handleDataItemPropertyChange = function (dataItem, name) {\n    dataItem.valueLabel.invalidate();\n    dataItem.label.invalidate();\n  };\n  return Legend;\n}(Component);\nexport { Legend };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"Legend\"] = Legend;\n/**\r\n * Add default responsive rules\r\n */\n/**\r\n * Move legend to below the chart if chart is narrow\r\n */\ndefaultRules.push({\n  relevant: ResponsiveBreakpoints.widthXS,\n  state: function (target, stateId) {\n    if (target instanceof Legend && (target.position == \"left\" || target.position == \"right\")) {\n      var state = target.states.create(stateId);\n      state.properties.position = \"bottom\";\n      return state;\n    }\n    return null;\n  }\n});\n/**\r\n * Move legend to the right if chart is very short\r\n */\ndefaultRules.push({\n  relevant: ResponsiveBreakpoints.heightXS,\n  state: function (target, stateId) {\n    if (target instanceof Legend && (target.position == \"top\" || target.position == \"bottom\")) {\n      var state = target.states.create(stateId);\n      state.properties.position = \"right\";\n      return state;\n    }\n    return null;\n  }\n});\n/**\r\n * Disable legend altogether on small charts\r\n */\ndefaultRules.push({\n  relevant: ResponsiveBreakpoints.isXS,\n  state: function (target, stateId) {\n    if (target instanceof Legend) {\n      var state = target.states.create(stateId);\n      state.properties.disabled = true;\n      return state;\n    }\n    return null;\n  }\n});","map":{"version":3,"names":["__extends","Component","DataItem","ListTemplate","ListDisposer","RoundedRectangle","Container","Label","keyboard","registry","getInteraction","percent","Percent","InterfaceColorSet","$utils","$type","$math","Sprite","Disposer","MouseCursorStyle","defaultRules","ResponsiveBreakpoints","Scrollbar","LegendDataItem","_super","_this","call","childrenCreated","className","applyTheme","Object","defineProperty","prototype","get","_label","label_1","component","labels","create","addSprite","_disposers","push","parent","itemContainer","hasValue","removeValue","enumerable","configurable","properties","color","set","value","setProperty","_valueLabel","valueLabel_1","valueLabels","_itemContainer","component_1","itemContainer_1","itemContainers","togglable","events","on","ev","toggleDataItem","target","dataItem","undefined","focusable","focusedItem","dataContext","uidAttr","readerControls","readerLabelledBy","sprite","isDisposed","visibilitychanged","readerChecked","visible","disableType","isActive","enableType","addDisposer","dataItems","remove","_marker","marker_1","markers","LegendSettings","createMarker","Legend","layout","setPropertyValue","applyOnClones","padding","margin","clickable","role","cursorOverStyle","pointer","background","fillOpacity","template","body","isKey","event","isEnabled","dispatchImmediately","interfaceColors","marker","width","height","interactionsEnabled","setStateOnChildren","strokeOpacity","propertyFields","fill","valign","disabledColor","getFor","child","newValue","activeState","states","stroke","rectangle","createChild","label","text","truncate","fullWords","valueLabel","align","textAlign","position","handleScrollbar","scrollable","setTimeout","updateMasks","_handleWheelReal","applyInternalDefaults","readerTitle","language","translate","createDataItem","validateDataElements","scrollbar","start","end","validateDataElement","container","used","legendDataItem","tempMaxWidth","maxWidth","legendSettings","createLegendMarker","useDefaultMarker","updateLegendValue","invalid","validate","__disabled","itemValueText","valueText","toBoolean","setState","afterDraw","getPropertyValue","maxLabelWidth","each","measuredWidth","pixelMarginLeft","pixelMarginRight","maxValueLabelWidth","maxMarkerWidth","maxAdjustedLabelWidth","trueMaxWidth","isNumber","Math","min","measuredHeight","maxHeight","x","pixelWidth","contentHeight","thumb","paddingRight","handleThumbPosition","contentAlign","maxColumns","invalidate","isMeasured","orientation","endGrip","startGrip","marginLeft","_mouseWheelDisposer","handleWheel","dispose","shift","y","ds","delta","max","dy","pixelY","maskRectangle","invalidatePosition","item","isHiding","isHidden","colorOrig","appeared","hidden","show","svgContainer","readerAlert","locale","hide","handleDataItemPropertyChange","name","registeredClasses","relevant","widthXS","state","stateId","heightXS","isXS","disabled"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/charts/Legend.js"],"sourcesContent":["/**\r\n * Legend-related functionality.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component } from \"../core/Component\";\r\nimport { DataItem } from \"../core/DataItem\";\r\nimport { ListTemplate, ListDisposer } from \"../core/utils/List\";\r\nimport { RoundedRectangle } from \"../core/elements/RoundedRectangle\";\r\nimport { Container } from \"../core/Container\";\r\nimport { Label } from \"../core/elements/Label\";\r\nimport { keyboard } from \"../core/utils/Keyboard\";\r\nimport { registry } from \"../core/Registry\";\r\nimport { getInteraction } from \"../core/interaction/Interaction\";\r\nimport { percent, Percent } from \"../core/utils/Percent\";\r\nimport { InterfaceColorSet } from \"../core/utils/InterfaceColorSet\";\r\nimport * as $utils from \"../core/utils/Utils\";\r\nimport * as $type from \"../core/utils/Type\";\r\nimport * as $math from \"../core/utils/Math\";\r\nimport { Sprite } from \"../core/Sprite\";\r\nimport { Disposer } from \"../core/utils/Disposer\";\r\nimport { MouseCursorStyle } from \"../core/interaction/Mouse\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../core/utils/Responsive\";\r\nimport { Scrollbar } from \"../core/elements/Scrollbar\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[Legend]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar LegendDataItem = /** @class */ (function (_super) {\r\n    __extends(LegendDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function LegendDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this.childrenCreated = false;\r\n        _this.className = \"LegendDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(LegendDataItem.prototype, \"label\", {\r\n        /**\r\n         * A legend item's [[Label]] element.\r\n         *\r\n         * @return Label\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._label) {\r\n                var label_1 = this.component.labels.create();\r\n                this._label = label_1;\r\n                this.addSprite(label_1);\r\n                this._disposers.push(label_1);\r\n                label_1.parent = this.itemContainer;\r\n                this._disposers.push(new Disposer(function () {\r\n                    if ($type.hasValue(_this.component)) {\r\n                        _this.component.labels.removeValue(label_1);\r\n                    }\r\n                }));\r\n            }\r\n            return this._label;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LegendDataItem.prototype, \"color\", {\r\n        /**\r\n         * @return Main color\r\n         */\r\n        get: function () {\r\n            return this.properties.color;\r\n        },\r\n        /**\r\n         * Main color of legend data item.\r\n         *\r\n         * This is set by the target element this legend item represents, like\r\n         * a Series or a Slice.\r\n         *\r\n         * It can be used to derive a color in legend's sub-items, like label:\r\n         *\r\n         * ```TypeScript\r\n         * chart.legend.labels.template.text = \"[{color}]{name}[/]\";\r\n         * ```\r\n         * ```JavaScript\r\n         * chart.legend.labels.template.text = \"[{color}]{name}[/]\";\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"legend\": {\r\n         *     // ...\r\n         *     \"labels\": {\r\n         *       \"text\": \"[{color}]{name}[/]\"\r\n         *     }\r\n         *   }\r\n         * }\r\n         * ```\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/#Legend_labels} For more information about configuring legend labels.\r\n         * @param value  Main color\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"color\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LegendDataItem.prototype, \"valueLabel\", {\r\n        /**\r\n         * A legend item's [[Label]] element for \"value label\".\r\n         *\r\n         * @return Label\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._valueLabel) {\r\n                var valueLabel_1 = this.component.valueLabels.create();\r\n                this._valueLabel = valueLabel_1;\r\n                this.addSprite(valueLabel_1);\r\n                this._disposers.push(valueLabel_1);\r\n                valueLabel_1.parent = this.itemContainer;\r\n                this._disposers.push(new Disposer(function () {\r\n                    if ($type.hasValue(_this.component)) {\r\n                        _this.component.valueLabels.removeValue(valueLabel_1);\r\n                    }\r\n                }));\r\n            }\r\n            return this._valueLabel;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LegendDataItem.prototype, \"itemContainer\", {\r\n        /**\r\n         * A reference to the main [[Container]] that holds legend item's elements:\r\n         * marker and labels.\r\n         *\r\n         * @return Item container\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._itemContainer) {\r\n                var component_1 = this.component;\r\n                var itemContainer_1 = component_1.itemContainers.create();\r\n                itemContainer_1.parent = component_1;\r\n                this._itemContainer = itemContainer_1;\r\n                this.addSprite(itemContainer_1);\r\n                this._disposers.push(itemContainer_1);\r\n                // Add click/tap event to toggle item\r\n                if (itemContainer_1.togglable) {\r\n                    itemContainer_1.events.on(\"toggled\", function (ev) {\r\n                        component_1.toggleDataItem(ev.target.dataItem);\r\n                    }, undefined, false);\r\n                }\r\n                // Add focus event so that we can track which object is currently in focus\r\n                // for keyboard toggling\r\n                if (itemContainer_1.focusable) {\r\n                    itemContainer_1.events.on(\"hit\", function (ev) {\r\n                        // We need this here in order to reset focused item when it is clicked\r\n                        // normally so that it is not toggled by ENTER afterwards\r\n                        component_1.focusedItem = undefined;\r\n                    }, undefined, false);\r\n                    itemContainer_1.events.on(\"focus\", function (ev) {\r\n                        component_1.focusedItem = ev.target.dataItem;\r\n                    }, undefined, false);\r\n                    itemContainer_1.events.on(\"blur\", function (ev) {\r\n                        component_1.focusedItem = undefined;\r\n                    }, undefined, false);\r\n                }\r\n                this._disposers.push(new Disposer(function () {\r\n                    if ($type.hasValue(_this.component)) {\r\n                        _this.component.itemContainers.removeValue(itemContainer_1);\r\n                    }\r\n                }));\r\n                if (this.dataContext.uidAttr) {\r\n                    itemContainer_1.readerControls = this.dataContext.uidAttr();\r\n                    itemContainer_1.readerLabelledBy = this.dataContext.uidAttr();\r\n                }\r\n                var sprite = this.dataContext;\r\n                if ((sprite instanceof DataItem || sprite instanceof Sprite) && !sprite.isDisposed()) {\r\n                    var visibilitychanged = function (ev) {\r\n                        itemContainer_1.readerChecked = ev.visible;\r\n                        itemContainer_1.events.disableType(\"toggled\");\r\n                        itemContainer_1.isActive = !ev.visible;\r\n                        itemContainer_1.events.enableType(\"toggled\");\r\n                    };\r\n                    sprite.addDisposer(new Disposer(function () {\r\n                        if (_this.component) {\r\n                            _this.component.dataItems.remove(_this);\r\n                        }\r\n                    }));\r\n                    if (sprite instanceof Sprite) {\r\n                        itemContainer_1.addDisposer(sprite.events.on(\"visibilitychanged\", visibilitychanged, undefined, false));\r\n                        itemContainer_1.addDisposer(sprite.events.on(\"hidden\", function (ev) {\r\n                            itemContainer_1.readerChecked = false;\r\n                            itemContainer_1.events.disableType(\"toggled\");\r\n                            itemContainer_1.isActive = true;\r\n                            itemContainer_1.events.enableType(\"toggled\");\r\n                        }, undefined, false));\r\n                        itemContainer_1.addDisposer(sprite.events.on(\"shown\", function (ev) {\r\n                            itemContainer_1.readerChecked = true;\r\n                            itemContainer_1.events.disableType(\"toggled\");\r\n                            itemContainer_1.isActive = false;\r\n                            itemContainer_1.events.enableType(\"toggled\");\r\n                        }, undefined, false));\r\n                    }\r\n                    else {\r\n                        itemContainer_1.addDisposer(sprite.events.on(\"visibilitychanged\", visibilitychanged, undefined, false));\r\n                    }\r\n                }\r\n            }\r\n            return this._itemContainer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LegendDataItem.prototype, \"marker\", {\r\n        /**\r\n         * A [[Container]] that holds legend item's marker element.\r\n         *\r\n         * @return Marker\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._marker) {\r\n                var marker_1 = this.component.markers.create();\r\n                this._marker = marker_1;\r\n                marker_1.parent = this.itemContainer;\r\n                this.addSprite(marker_1);\r\n                this._disposers.push(marker_1);\r\n                this._disposers.push(new Disposer(function () {\r\n                    if ($type.hasValue(_this.component)) {\r\n                        _this.component.markers.removeValue(marker_1);\r\n                    }\r\n                }));\r\n            }\r\n            return this._marker;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return LegendDataItem;\r\n}(DataItem));\r\nexport { LegendDataItem };\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a class that carries legend settings.\r\n *\r\n * A legend might change its settings dynamically. Legend can also be shared\r\n * by several elements, requiring different settings.\r\n *\r\n * Having legend's settings in a separate object is a good way to \"hot swap\"\r\n * a set of settings for the legend.\r\n */\r\nvar LegendSettings = /** @class */ (function () {\r\n    function LegendSettings() {\r\n        /**\r\n         * Should marker be created for each legend item.\r\n         */\r\n        this.createMarker = true;\r\n    }\r\n    return LegendSettings;\r\n}());\r\nexport { LegendSettings };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * [[Legend]] class is used to create legend for the chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/} for Legend documentation\r\n * @see {@link ILegendEvents} for a list of available events\r\n * @see {@link ILegendAdapters} for a list of available Adapters\r\n */\r\nvar Legend = /** @class */ (function (_super) {\r\n    __extends(Legend, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Legend() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"Legend\";\r\n        // Set defaults\r\n        _this.layout = \"grid\";\r\n        _this.setPropertyValue(\"useDefaultMarker\", false);\r\n        _this.setPropertyValue(\"scrollable\", false);\r\n        _this.setPropertyValue(\"contentAlign\", \"center\");\r\n        // Create a template container and list for legend items\r\n        var itemContainer = new Container();\r\n        itemContainer.applyOnClones = true;\r\n        itemContainer.padding(8, 0, 8, 0);\r\n        itemContainer.margin(0, 10, 0, 10);\r\n        itemContainer.layout = \"horizontal\";\r\n        itemContainer.clickable = true;\r\n        itemContainer.focusable = true;\r\n        itemContainer.role = \"switch\";\r\n        itemContainer.togglable = true;\r\n        itemContainer.cursorOverStyle = MouseCursorStyle.pointer;\r\n        itemContainer.background.fillOpacity = 0; // creates hit area\r\n        // Create container list using item template we just created\r\n        _this.itemContainers = new ListTemplate(itemContainer);\r\n        _this._disposers.push(new ListDisposer(_this.itemContainers));\r\n        _this._disposers.push(_this.itemContainers.template);\r\n        // Set up global keyboard events for toggling elements\r\n        _this._disposers.push(getInteraction().body.events.on(\"keyup\", function (ev) {\r\n            if (keyboard.isKey(ev.event, \"enter\") && _this.focusedItem) {\r\n                var focusedItem = _this.focusedItem;\r\n                var target = focusedItem.itemContainer;\r\n                if (target.togglable) {\r\n                    _this.toggleDataItem(focusedItem);\r\n                }\r\n                else if (target.clickable && target.events.isEnabled(\"hit\")) {\r\n                    target.dispatchImmediately(\"hit\", { event: ev });\r\n                    // We need this here because \"hit\" event resets `this.focusedItem`\r\n                    // And we need it here\r\n                    _this.focusedItem = focusedItem;\r\n                }\r\n            }\r\n        }, _this));\r\n        var interfaceColors = new InterfaceColorSet();\r\n        // Create a template container and list for the a marker\r\n        var marker = new Container();\r\n        marker.width = 23;\r\n        marker.height = 23;\r\n        marker.interactionsEnabled = false;\r\n        marker.applyOnClones = true;\r\n        marker.setStateOnChildren = true;\r\n        marker.background.fillOpacity = 0;\r\n        marker.background.strokeOpacity = 0;\r\n        marker.propertyFields.fill = \"fill\";\r\n        marker.valign = \"middle\";\r\n        var disabledColor = interfaceColors.getFor(\"disabledBackground\");\r\n        marker.events.on(\"childadded\", function (event) {\r\n            var child = event.newValue;\r\n            var activeState = child.states.create(\"active\");\r\n            activeState.properties.stroke = disabledColor;\r\n            activeState.properties.fill = disabledColor;\r\n        });\r\n        _this.markers = new ListTemplate(marker);\r\n        _this._disposers.push(new ListDisposer(_this.markers));\r\n        _this._disposers.push(_this.markers.template);\r\n        // Create a legend background element\r\n        var rectangle = marker.createChild(RoundedRectangle);\r\n        rectangle.width = percent(100);\r\n        rectangle.height = percent(100);\r\n        rectangle.applyOnClones = true;\r\n        rectangle.propertyFields.fill = \"fill\"; //othrwise old edge doesn't like as the same pattern is set both on parent and child https://codepen.io/team/amcharts/pen/72d7a98f3fb811d3118795220ff63182\r\n        rectangle.strokeOpacity = 0;\r\n        // Create a template container and list for item labels\r\n        var label = new Label();\r\n        label.text = \"{name}\";\r\n        label.margin(0, 5, 0, 5);\r\n        label.valign = \"middle\";\r\n        label.applyOnClones = true;\r\n        label.states.create(\"active\").properties.fill = interfaceColors.getFor(\"disabledBackground\");\r\n        _this.labels = new ListTemplate(label);\r\n        _this._disposers.push(new ListDisposer(_this.labels));\r\n        _this._disposers.push(_this.labels.template);\r\n        label.interactionsEnabled = false;\r\n        label.truncate = true;\r\n        label.fullWords = false;\r\n        // Create a template container and list for item value labels\r\n        var valueLabel = new Label();\r\n        valueLabel.margin(0, 5, 0, 0);\r\n        valueLabel.valign = \"middle\";\r\n        valueLabel.width = 50; // to avoid rearranging legend entries when value changes.\r\n        valueLabel.align = \"right\";\r\n        valueLabel.textAlign = \"end\";\r\n        valueLabel.applyOnClones = true;\r\n        valueLabel.states.create(\"active\").properties.fill = interfaceColors.getFor(\"disabledBackground\");\r\n        valueLabel.interactionsEnabled = false;\r\n        _this.valueLabels = new ListTemplate(valueLabel);\r\n        _this._disposers.push(new ListDisposer(_this.valueLabels));\r\n        _this._disposers.push(_this.valueLabels.template);\r\n        _this.position = \"bottom\"; // don't use setPropertyValue here!\r\n        // Create a state for disabled legend items\r\n        itemContainer.states.create(\"active\");\r\n        itemContainer.setStateOnChildren = true;\r\n        // Apply accessibility settings\r\n        _this.role = \"group\";\r\n        _this.events.on(\"layoutvalidated\", _this.handleScrollbar, _this, false);\r\n        _this.events.on(\"parentset\", function () {\r\n            var parent = _this.parent;\r\n            if (parent) {\r\n                _this._disposers.push(parent.events.on(\"maxsizechanged\", function () {\r\n                    if (_this.scrollable) {\r\n                        _this.setTimeout(function () {\r\n                            _this.updateMasks();\r\n                            _this.handleScrollbar();\r\n                            _this._handleWheelReal(1);\r\n                        }, 100);\r\n                    }\r\n                }));\r\n            }\r\n        });\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    Legend.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Legend\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    Legend.prototype.createDataItem = function () {\r\n        return new LegendDataItem();\r\n    };\r\n    /**\r\n     * [validateDataElements description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     */\r\n    Legend.prototype.validateDataElements = function () {\r\n        if (this.scrollbar) {\r\n            this.scrollbar.start = 0;\r\n            this.scrollbar.end = 1;\r\n        }\r\n        _super.prototype.validateDataElements.call(this);\r\n    };\r\n    /**\r\n     * [validateDataElement description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem Data item\r\n     * @todo Description\r\n     * @todo Figure out how to update appearance of legend item without losing focus\r\n     * @todo Update legend marker appearance as apperance of related series changes\r\n     */\r\n    Legend.prototype.validateDataElement = function (dataItem) {\r\n        _super.prototype.validateDataElement.call(this, dataItem);\r\n        // Get data item (legend item's) container\r\n        var container = dataItem.itemContainer;\r\n        var marker = dataItem.marker;\r\n        $utils.used(dataItem.label);\r\n        var valueLabel = dataItem.valueLabel;\r\n        // Set parent and update current state\r\n        container.readerChecked = dataItem.dataContext.visible;\r\n        // Tell series its legend data item\r\n        dataItem.dataContext.legendDataItem = dataItem;\r\n        var tempMaxWidth = dataItem.label.maxWidth;\r\n        if (!(dataItem.label.width instanceof Percent)) {\r\n            dataItem.label.width = undefined;\r\n        }\r\n        if (tempMaxWidth > 0) {\r\n            dataItem.label.maxWidth = tempMaxWidth;\r\n        }\r\n        if (valueLabel.align == \"right\") {\r\n            valueLabel.width = undefined;\r\n        }\r\n        var legendSettings = dataItem.dataContext.legendSettings;\r\n        // If we are not using default markers, create a unique legend marker based\r\n        // on the data item type\r\n        var dataContext = dataItem.dataContext;\r\n        if (dataContext.createLegendMarker && (!this.useDefaultMarker || !(dataContext instanceof Sprite))) {\r\n            if (!dataItem.childrenCreated) {\r\n                dataContext.createLegendMarker(marker);\r\n                dataItem.childrenCreated = true;\r\n            }\r\n        }\r\n        else {\r\n            this.markers.template.propertyFields.fill = undefined;\r\n        }\r\n        if (dataContext.updateLegendValue) {\r\n            dataContext.updateLegendValue(); // this solves issue with external legend, as legend is created after chart updates legend values\r\n        }\r\n        if (dataContext.component && dataContext.component.updateLegendValue) {\r\n            dataContext.component.updateLegendValue(dataContext);\r\n        }\r\n        if (valueLabel.invalid) {\r\n            valueLabel.validate();\r\n        }\r\n        if (valueLabel.text == \"\" || valueLabel.text == undefined) {\r\n            valueLabel.__disabled = true;\r\n        }\r\n        else {\r\n            valueLabel.__disabled = false;\r\n        }\r\n        if (legendSettings && (legendSettings.itemValueText != undefined || legendSettings.valueText != undefined)) {\r\n            valueLabel.__disabled = false;\r\n        }\r\n        var visible = dataItem.dataContext.visible;\r\n        if (visible === undefined) {\r\n            visible = true;\r\n        }\r\n        visible = $type.toBoolean(visible);\r\n        dataItem.dataContext.visible = visible;\r\n        container.events.disableType(\"toggled\");\r\n        container.isActive = !visible;\r\n        if (container.isActive) {\r\n            container.setState(\"active\", 0);\r\n        }\r\n        else {\r\n            container.setState(\"default\", 0);\r\n        }\r\n        container.events.enableType(\"toggled\");\r\n    };\r\n    Legend.prototype.afterDraw = function () {\r\n        var _this = this;\r\n        var maxWidth = this.getPropertyValue(\"maxWidth\");\r\n        var maxLabelWidth = 0;\r\n        this.labels.each(function (label) {\r\n            if (label.invalid) {\r\n                label.maxWidth = undefined;\r\n                label.validate();\r\n            }\r\n            if (label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight > maxLabelWidth) {\r\n                maxLabelWidth = label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight;\r\n            }\r\n        });\r\n        var maxValueLabelWidth = 0;\r\n        this.valueLabels.each(function (label) {\r\n            if (label.invalid) {\r\n                label.validate();\r\n            }\r\n            if (label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight > maxValueLabelWidth) {\r\n                maxValueLabelWidth = label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight;\r\n            }\r\n        });\r\n        var maxMarkerWidth = 0;\r\n        this.markers.each(function (marker) {\r\n            if (marker.invalid) {\r\n                marker.validate();\r\n            }\r\n            if (marker.measuredWidth + marker.pixelMarginLeft + marker.pixelMarginRight > maxMarkerWidth) {\r\n                maxMarkerWidth = marker.measuredWidth + marker.pixelMarginLeft + marker.pixelMarginRight;\r\n            }\r\n        });\r\n        var itemContainer = this.itemContainers.template;\r\n        var margin = itemContainer.pixelMarginRight + itemContainer.pixelMarginLeft;\r\n        var maxAdjustedLabelWidth;\r\n        var trueMaxWidth = maxLabelWidth + maxValueLabelWidth + maxMarkerWidth;\r\n        if (!$type.isNumber(maxWidth)) {\r\n            maxAdjustedLabelWidth = maxLabelWidth;\r\n        }\r\n        else {\r\n            maxWidth = maxWidth - margin;\r\n            if (maxWidth > trueMaxWidth) {\r\n                maxWidth = trueMaxWidth;\r\n            }\r\n            maxAdjustedLabelWidth = maxWidth - maxMarkerWidth - maxValueLabelWidth;\r\n        }\r\n        this.labels.each(function (label) {\r\n            if (_this.valueLabels.template.align == \"right\" || label.measuredWidth > maxAdjustedLabelWidth) {\r\n                if (!(label.width instanceof Percent)) {\r\n                    label.width = Math.min(label.maxWidth, maxAdjustedLabelWidth - label.pixelMarginLeft - label.pixelMarginRight);\r\n                    label.maxWidth = label.width;\r\n                }\r\n            }\r\n        });\r\n        if (this.valueLabels.template.align == \"right\") {\r\n            this.valueLabels.each(function (valueLabel) {\r\n                valueLabel.width = maxValueLabelWidth - valueLabel.pixelMarginRight - valueLabel.pixelMarginLeft;\r\n            });\r\n        }\r\n        _super.prototype.afterDraw.call(this);\r\n    };\r\n    Legend.prototype.handleScrollbar = function () {\r\n        var scrollbar = this.scrollbar;\r\n        if (this.scrollable && scrollbar) {\r\n            var measuredHeight = this.maxHeight;\r\n            scrollbar.height = measuredHeight;\r\n            scrollbar.x = this.measuredWidth - scrollbar.pixelWidth - scrollbar.pixelMarginLeft;\r\n            if (this.contentHeight > measuredHeight) {\r\n                scrollbar.visible = true;\r\n                scrollbar.thumb.height = scrollbar.height * measuredHeight / this.contentHeight;\r\n                this.paddingRight = scrollbar.pixelWidth + scrollbar.pixelMarginLeft + scrollbar.pixelMarginRight;\r\n            }\r\n            else {\r\n                scrollbar.thumb.height = scrollbar.height * measuredHeight / this.contentHeight;\r\n                this.paddingRight = scrollbar.pixelWidth + scrollbar.pixelMarginLeft + scrollbar.pixelMarginRight;\r\n                scrollbar.visible = false;\r\n                scrollbar.start = 0;\r\n                scrollbar.end = 1;\r\n            }\r\n            scrollbar.handleThumbPosition();\r\n            this.updateMasks();\r\n        }\r\n    };\r\n    Object.defineProperty(Legend.prototype, \"position\", {\r\n        /**\r\n         * @return Position\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"position\");\r\n        },\r\n        /**\r\n         * Position of the legend.\r\n         *\r\n         * Options: \"left\", \"right\", \"top\", \"bottom\" (default), or \"absolute\".\r\n         *\r\n         * IMPORTANT: [[MapChart]] will ignore this setting, as it is using different\r\n         * layout structure than other charts.\r\n         *\r\n         * To position legend in [[MapChart]] set legend's `align` (`\"left\"` or\r\n         * `\"right\"`) and `valign` (`\"top\"` or `\"bottom\"`) properties instead.\r\n         *\r\n         * @default \"bottom\"\r\n         * @param value  Position\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"position\", value)) {\r\n                if (value == \"left\" || value == \"right\") {\r\n                    this.margin(10, 5, 10, 10);\r\n                    this.valign = \"middle\";\r\n                    this.contentAlign = \"none\";\r\n                    this.valueLabels.template.align = \"right\";\r\n                    if (!$type.isNumber(this.maxColumns)) {\r\n                        this.maxColumns = 1;\r\n                    }\r\n                    this.width = undefined;\r\n                    this.maxWidth = 220;\r\n                }\r\n                else {\r\n                    this.maxColumns = undefined;\r\n                    this.width = percent(100);\r\n                    this.valueLabels.template.align = \"left\";\r\n                }\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Legend.prototype, \"useDefaultMarker\", {\r\n        /**\r\n         * @return Use default marker?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"useDefaultMarker\");\r\n        },\r\n        /**\r\n         * Should legend try to mirror the look of the related item when building\r\n         * the marker for legend item?\r\n         *\r\n         * If set to `false` it will try to make the marker look like its related\r\n         * item.\r\n         *\r\n         * E.g. if an item is for a Line Series, it will display a line of the\r\n         * same thickness, color, and will use the same bullets if series have them.\r\n         *\r\n         * If set to `true`, all markers will be shown as squares, regardless of te\r\n         * series type.\r\n         *\r\n         * @default false\r\n         * @param value Use default marker?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"useDefaultMarker\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Legend.prototype, \"scrollable\", {\r\n        /**\r\n         * @return Legend Scrollable?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"scrollable\");\r\n        },\r\n        /**\r\n         * If set to `true` the Legend will display a scrollbar if its contents do\r\n         * not fit into its `maxHeight`.\r\n         *\r\n         * Please note that `maxHeight` is automatically set for Legend when its\r\n         * `position` is set to `\"left\"` or `\"right\"`.\r\n         *\r\n         * @default false\r\n         * @since 4.8.0\r\n         * @param  value  Legend Scrollable?\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"scrollable\", value, true)) {\r\n                if (value) {\r\n                    var scrollbar = this.createChild(Scrollbar);\r\n                    this.scrollbar = scrollbar;\r\n                    scrollbar.isMeasured = false;\r\n                    scrollbar.orientation = \"vertical\";\r\n                    scrollbar.endGrip.__disabled = true;\r\n                    scrollbar.startGrip.__disabled = true;\r\n                    scrollbar.visible = false;\r\n                    scrollbar.marginLeft = 5;\r\n                    this._mouseWheelDisposer = this.events.on(\"wheel\", this.handleWheel, this, false);\r\n                    this._disposers.push(this._mouseWheelDisposer);\r\n                    this._disposers.push(scrollbar.events.on(\"rangechanged\", this.updateMasks, this, false));\r\n                }\r\n                else {\r\n                    if (this._mouseWheelDisposer) {\r\n                        this._mouseWheelDisposer.dispose();\r\n                        if (this.scrollbar) {\r\n                            this.scrollbar.dispose();\r\n                            this.scrollbar = undefined;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Handles mouse wheel scrolling of legend.\r\n     *\r\n     * @param  event  Event\r\n     */\r\n    Legend.prototype.handleWheel = function (event) {\r\n        this._handleWheelReal(event.shift.y);\r\n    };\r\n    Legend.prototype._handleWheelReal = function (shift) {\r\n        var scrollbar = this.scrollbar;\r\n        if (scrollbar) {\r\n            var ds = (shift / 1000 * this.measuredHeight / this.contentHeight);\r\n            var delta = scrollbar.end - scrollbar.start;\r\n            if (shift > 0) {\r\n                scrollbar.start = $math.max(0, scrollbar.start - ds);\r\n                scrollbar.end = scrollbar.start + delta;\r\n            }\r\n            else {\r\n                scrollbar.end = $math.min(1, scrollbar.end - ds);\r\n                scrollbar.start = scrollbar.end - delta;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Legend.prototype.updateMasks = function () {\r\n        var _this = this;\r\n        if (this.scrollbar) {\r\n            this.itemContainers.each(function (itemContainer) {\r\n                itemContainer.dy = -_this.scrollbar.thumb.pixelY * _this.contentHeight / _this.maxHeight;\r\n                itemContainer.maskRectangle = { x: 0, y: -itemContainer.dy, width: _this.measuredWidth, height: _this.maxHeight };\r\n            });\r\n        }\r\n        this.invalidatePosition();\r\n    };\r\n    /**\r\n     * Toggles a legend item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param item Legend item\r\n     * @todo Maybe do it with togglable instead\r\n     */\r\n    Legend.prototype.toggleDataItem = function (item) {\r\n        var dataContext = item.dataContext;\r\n        if (!dataContext.visible || dataContext.isHiding || (dataContext instanceof Sprite && dataContext.isHidden)) {\r\n            item.color = item.colorOrig;\r\n            dataContext.appeared = true;\r\n            item.itemContainer.isActive = false;\r\n            if (dataContext.hidden === true) {\r\n                dataContext.hidden = false;\r\n            }\r\n            if (dataContext.show) {\r\n                dataContext.show();\r\n            }\r\n            else {\r\n                dataContext.visible = true;\r\n            }\r\n            this.svgContainer.readerAlert(this.language.translate(\"%1 shown\", this.language.locale, item.label.readerTitle));\r\n        }\r\n        else {\r\n            item.itemContainer.isActive = true;\r\n            dataContext.appeared = true;\r\n            if (dataContext.hide) {\r\n                dataContext.hide();\r\n            }\r\n            else {\r\n                dataContext.visible = false;\r\n            }\r\n            this.svgContainer.readerAlert(this.language.translate(\"%1 hidden\", this.language.locale, item.label.readerTitle));\r\n            item.color = new InterfaceColorSet().getFor(\"disabledBackground\");\r\n        }\r\n    };\r\n    Object.defineProperty(Legend.prototype, \"preloader\", {\r\n        /**\r\n         * Override preloader method so that legend does not accidentally show its\r\n         * own preloader.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Always `undefined`\r\n         */\r\n        get: function () {\r\n            return;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * [handleDataItemPropertyChange description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Legend.prototype.handleDataItemPropertyChange = function (dataItem, name) {\r\n        dataItem.valueLabel.invalidate();\r\n        dataItem.label.invalidate();\r\n    };\r\n    return Legend;\r\n}(Component));\r\nexport { Legend };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Legend\"] = Legend;\r\n/**\r\n * Add default responsive rules\r\n */\r\n/**\r\n * Move legend to below the chart if chart is narrow\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.widthXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Legend && (target.position == \"left\" || target.position == \"right\")) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.position = \"bottom\";\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n/**\r\n * Move legend to the right if chart is very short\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.heightXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Legend && (target.position == \"top\" || target.position == \"bottom\")) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.position = \"right\";\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n/**\r\n * Disable legend altogether on small charts\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.isXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Legend) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.disabled = true;\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}