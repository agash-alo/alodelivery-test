{"ast":null,"code":"/**\r\n * Defines Pie Chart Series.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { PercentSeries, PercentSeriesDataItem } from \"./PercentSeries\";\nimport { Slice } from \"../../core/elements/Slice\";\n//import { Slice3D } from \"../../core/elements/3D/Slice3D\";\nimport { AxisLabelCircular } from \"../axes/AxisLabelCircular\";\nimport { PieTick } from \"../elements/PieTick\";\nimport { registry } from \"../../core/Registry\";\nimport * as $math from \"../../core/utils/Math\";\nimport * as $type from \"../../core/utils/Type\";\nimport { Percent, percent } from \"../../core/utils/Percent\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n//@todo: sequenced?\n/**\r\n * Defines a [[DataItem]] for [[PieSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\nvar PieSeriesDataItem = /** @class */function (_super) {\n  __extends(PieSeriesDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n  function PieSeriesDataItem() {\n    var _this = _super.call(this) || this;\n    _this.className = \"PieSeriesDataItem\";\n    _this.values.radiusValue = {};\n    _this.applyTheme();\n    return _this;\n  }\n  Object.defineProperty(PieSeriesDataItem.prototype, \"radiusValue\", {\n    /**\r\n     * @return Radius\r\n     */\n    get: function () {\n      return this.values.radiusValue.value;\n    },\n    /**\r\n     * Slice's radius, if other than default.\r\n     *\r\n     * @param value  Radius\r\n     */\n    set: function (value) {\n      this.setValue(\"radiusValue\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Hide the data item (and corresponding visual elements).\r\n   *\r\n   * @param duration  Duration (ms)\r\n   * @param delay     Delay hiding (ms)\r\n   * @param toValue   Target value for animation\r\n   * @param fields    Fields to animate while hiding\r\n   */\n  PieSeriesDataItem.prototype.hide = function (duration, delay, toValue, fields) {\n    return _super.prototype.hide.call(this, duration, delay, 0, [\"value\", \"radiusValue\"]);\n  };\n  /**\r\n   * Show hidden data item (and corresponding visual elements).\r\n   *\r\n   * @param duration  Duration (ms)\r\n   * @param delay     Delay hiding (ms)\r\n   * @param fields    Fields to animate while hiding\r\n   */\n  PieSeriesDataItem.prototype.show = function (duration, delay, fields) {\n    return _super.prototype.show.call(this, duration, delay, [\"value\", \"radiusValue\"]);\n  };\n  return PieSeriesDataItem;\n}(PercentSeriesDataItem);\nexport { PieSeriesDataItem };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Defines [[Series]] for a slice series on a Pie chart.\r\n *\r\n * @see {@link IPieSeriesEvents} for a list of available Events\r\n * @see {@link IPieSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\nvar PieSeries = /** @class */function (_super) {\n  __extends(PieSeries, _super);\n  /**\r\n   * Constructor\r\n   */\n  function PieSeries() {\n    var _this = _super.call(this) || this;\n    _this.className = \"PieSeries\";\n    _this.alignLabels = true;\n    //this.startAngle = -90;\n    //this.endAngle = 270;\n    _this.layout = \"none\";\n    _this.labels.template.radius = percent(5);\n    _this.addDisposer(_this.labels.template.events.on(\"enabled\", _this.invalidate, _this, false));\n    _this.applyTheme();\n    return _this;\n  }\n  /**\r\n   * creates slice\r\n   */\n  PieSeries.prototype.createSlice = function () {\n    return new Slice();\n  };\n  /**\r\n   * creates tick\r\n   */\n  PieSeries.prototype.createTick = function () {\n    return new PieTick();\n  };\n  /**\r\n   * creates label\r\n   */\n  PieSeries.prototype.createLabel = function () {\n    return new AxisLabelCircular();\n  };\n  /**\r\n   * Sets defaults that instantiate some objects that rely on parent, so they\r\n   * cannot be set in constructor.\r\n   */\n  PieSeries.prototype.applyInternalDefaults = function () {\n    _super.prototype.applyInternalDefaults.call(this);\n    if (!$type.hasValue(this.readerTitle)) {\n      this.readerTitle = this.language.translate(\"Pie Slice Series\");\n    }\n  };\n  /**\r\n   * Returns a new/empty DataItem of the type appropriate for this object.\r\n   *\r\n   * @see {@link DataItem}\r\n   * @return Data Item\r\n   */\n  PieSeries.prototype.createDataItem = function () {\n    return new PieSeriesDataItem();\n  };\n  /**\r\n   * Inits slice.\r\n   *\r\n   * @param slice to init\r\n   */\n  PieSeries.prototype.initSlice = function (slice) {\n    slice.isMeasured = false;\n    slice.defaultState.properties.scale = 1;\n    slice.observe(\"scale\", this.handleSliceScale, this);\n    slice.observe([\"dx\", \"dy\", \"x\", \"y\", \"shiftRadius\"], this.handleSliceMove, this);\n    slice.tooltipText = \"{category}: {value.percent.formatNumber('#.#p')} ({value.value})\";\n    var hoverState = slice.states.create(\"hover\");\n    hoverState.properties.scale = 1.05;\n    var defaultState = slice.defaultState;\n    defaultState.properties.shiftRadius = 0;\n    slice.togglable = true;\n    slice.events.on(\"toggled\", function (event) {\n      event.target.hideTooltip();\n      // The following takes care of removing hover on subsequent click of\n      // a slice\n      if (event.target.interactions.lastHitPointer && event.target.interactions.lastHitPointer.touch && !event.target.isActive) {\n        event.target.isHover = false;\n      }\n    });\n    var activeState = slice.states.create(\"active\");\n    activeState.properties.shiftRadius = 0.10;\n  };\n  /**\r\n   * (Re)validates the whole series, effectively causing it to redraw.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  PieSeries.prototype.validate = function () {\n    this._leftItems = [];\n    this._rightItems = [];\n    this._currentStartAngle = this.startAngle;\n    this._arcRect = $math.getArcRect(this.startAngle, this.endAngle);\n    this._maxRadiusPercent = 0;\n    for (var i = this.startIndex; i < this.endIndex; i++) {\n      var dataItem = this.dataItems.getIndex(i);\n      var radiusValuePercent = dataItem.values.radiusValue.percent;\n      if (radiusValuePercent > this._maxRadiusPercent) {\n        this._maxRadiusPercent = radiusValuePercent;\n      }\n    }\n    _super.prototype.validate.call(this);\n    if (this.alignLabels) {\n      if (this.startAngle > this.endAngle) {\n        this._rightItems.reverse();\n      } else {\n        this._leftItems.reverse();\n      }\n      this._rightItems.sort(function (a, b) {\n        var aAngle = (a.slice.middleAngle + 360) % 360;\n        var bAngle = (b.slice.middleAngle + 360) % 360;\n        if (aAngle > 270) {\n          aAngle -= 360;\n        }\n        if (bAngle > 270) {\n          bAngle -= 360;\n        }\n        if (aAngle < bAngle) {\n          return -1;\n        } else if (aAngle > bAngle) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n      this._leftItems.sort(function (a, b) {\n        var aAngle = (a.slice.middleAngle + 360) % 360;\n        var bAngle = (b.slice.middleAngle + 360) % 360;\n        if (aAngle < bAngle) {\n          return 1;\n        } else if (aAngle > bAngle) {\n          return -1;\n        } else {\n          return 0;\n        }\n      });\n      this.arrangeLabels(this._rightItems);\n      this.arrangeLabels2(this._rightItems);\n      this.arrangeLabels(this._leftItems);\n      this.arrangeLabels2(this._leftItems);\n    }\n  };\n  /**\r\n   * Validates data item's element, effectively redrawing it.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItem  Data item\r\n   */\n  PieSeries.prototype.validateDataElement = function (dataItem) {\n    if (this.pixelRadius > 0) {\n      if (this.ignoreZeroValues && (dataItem.value == 0 || dataItem.value == null)) {\n        dataItem.__disabled = true;\n      } else {\n        dataItem.__disabled = false;\n      }\n      // SLICE\n      var slice = dataItem.slice;\n      slice.radius = this.pixelRadius;\n      if ($type.isNumber(dataItem.radiusValue)) {\n        slice.radius = this.pixelInnerRadius + (this.pixelRadius - this.pixelInnerRadius) * dataItem.values.radiusValue.percent / this._maxRadiusPercent;\n      }\n      if (!(slice.innerRadius instanceof Percent)) {\n        slice.innerRadius = this.pixelInnerRadius;\n      }\n      slice.startAngle = this._currentStartAngle;\n      slice.arc = Math.abs(dataItem.values.value.percent) * (this.endAngle - this.startAngle) / 100;\n      // LABEL\n      if (!this.labels.template.disabled) {\n        var label = dataItem.label;\n        var tick = dataItem.tick;\n        tick.slice = slice;\n        tick.label = label;\n        var normalizedMiddleAngle = (slice.middleAngle + 360) % 360; // force angle to be 0 - 360;\n        var point = void 0;\n        if (this.alignLabels) {\n          var labelRadius = label.pixelRadius(slice.radius);\n          var x = tick.length + labelRadius;\n          label.dx = 0;\n          label.dy = 0;\n          label.verticalCenter = \"middle\";\n          var arcRect = this._arcRect;\n          // right half\n          if (normalizedMiddleAngle > 270 || normalizedMiddleAngle <= 90) {\n            x += (arcRect.width + arcRect.x) * this.pixelRadius;\n            label.horizontalCenter = \"left\";\n            this._rightItems.push(dataItem);\n          }\n          // left half\n          else {\n            x -= arcRect.x * this.pixelRadius;\n            label.horizontalCenter = \"right\";\n            this._leftItems.push(dataItem);\n            x *= -1;\n          }\n          var distance = slice.radius + tick.length + labelRadius;\n          point = {\n            x: x,\n            y: slice.iy * distance\n          };\n          label.moveTo(point);\n        } else {\n          var depth = slice[\"depth\"];\n          if (!$type.isNumber(depth)) {\n            depth = 0;\n          }\n          label.fixPosition(slice.middleAngle, slice.radius, slice.radiusY, 0, -depth);\n        }\n      }\n      this._currentStartAngle += slice.arc;\n      // do this at the end, otherwise bullets won't be positioned properly\n      _super.prototype.validateDataElement.call(this, dataItem);\n    }\n  };\n  Object.defineProperty(PieSeries.prototype, \"radius\", {\n    /**\r\n     * @return Radius\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"radius\");\n    },\n    /**\r\n     * Outer radius for the series' slices in pixels or [[Percent]].\r\n     *\r\n     * @param value  Radius\r\n     */\n    set: function (value) {\n      if (this.setPercentProperty(\"radius\", value, true, false, 10, false)) {\n        this.invalidateDataItems();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PieSeries.prototype, \"pixelRadius\", {\n    /**\r\n     * @return Radius\r\n     * @ignore\r\n     */\n    get: function () {\n      return this._pixelRadius;\n    },\n    /**\r\n     * @ignore\r\n     */\n    set: function (value) {\n      if (this._pixelRadius != value) {\n        this._pixelRadius = value;\n        this.invalidateDataItems();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PieSeries.prototype, \"pixelInnerRadius\", {\n    /**\r\n     * @return Pixel inner radius\r\n     * @ignore\r\n     */\n    get: function () {\n      return this._pixelInnerRadius;\n    },\n    /**\r\n     * @ignore\r\n     */\n    set: function (value) {\n      if (this._pixelInnerRadius != value) {\n        this._pixelInnerRadius = value;\n        this.invalidateDataItems();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PieSeries.prototype, \"innerRadius\", {\n    /**\r\n     * @ignore Exclude from docs\r\n     * @return Radius\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"innerRadius\");\n    },\n    /**\r\n     * Inner radius for the series' slices in pixels.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Redo so that users can set it\r\n     * @param value  Radius\r\n     */\n    set: function (value) {\n      this.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PieSeries.prototype, \"startAngle\", {\n    /**\r\n     * @return Angle\r\n     */\n    get: function () {\n      var startAngle = this.getPropertyValue(\"startAngle\");\n      if ($type.isNumber(startAngle)) {\n        return startAngle;\n      } else {\n        return this._startAngleInternal;\n      }\n    },\n    /**\r\n     * Start angle for the series' slices in degrees. (0-360)\r\n     *\r\n     * @param value  Angle\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"startAngle\", $math.normalizeAngle(value), true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PieSeries.prototype, \"endAngle\", {\n    /**\r\n     * @return Angle\r\n     */\n    get: function () {\n      var endAngle = this.getPropertyValue(\"endAngle\");\n      if ($type.isNumber(endAngle)) {\n        return endAngle;\n      } else {\n        return this._endAngleInternal;\n      }\n    },\n    /**\r\n     * End angle for the series' slices in degrees. (0-360)\r\n     *\r\n     * @param value  Angle\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"endAngle\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Positions series bullet.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param bullet  Bullet\r\n   */\n  PieSeries.prototype.positionBullet = function (bullet) {\n    _super.prototype.positionBullet.call(this, bullet);\n    var dataItem = bullet.dataItem;\n    var slice = dataItem.slice;\n    var locationX = bullet.locationX;\n    if (!$type.isNumber(locationX)) {\n      locationX = 0.5;\n    }\n    var locationY = bullet.locationY;\n    if (!$type.isNumber(locationY)) {\n      locationY = 1;\n    }\n    var angle = slice.startAngle + slice.arc * locationX;\n    bullet.x = locationY * slice.radius * $math.cos(angle);\n    bullet.y = locationY * slice.radiusY * $math.sin(angle);\n  };\n  /**\r\n   * Repositions bullet and labels when slice moves.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param event  Event\r\n   */\n  PieSeries.prototype.handleSliceMove = function (event) {\n    if (!this.alignLabels) {\n      var slice = event.target;\n      var dataItem = slice.dataItem;\n      // moving textelement, as label dx and dy are already employed for aligning\n      //@labeltodo\n      if (dataItem) {\n        var label = dataItem.label;\n        if (label) {\n          label.dx = label.fdx + slice.dx + slice.pixelX;\n          label.dy = label.fdy + slice.dy + slice.pixelY;\n        }\n      }\n    }\n  };\n  Object.defineProperty(PieSeries.prototype, \"bbox\", {\n    /**\r\n     * Returns bounding box (square) for this element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\n    get: function () {\n      if (this.definedBBox) {\n        return this.definedBBox;\n      }\n      var chart = this.chart;\n      if (chart) {\n        return $math.getArcRect(chart.startAngle, chart.endAngle, this.pixelRadius);\n      }\n      return $math.getArcRect(this.startAngle, this.endAngle, this.pixelRadius);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PieSeries;\n}(PercentSeries);\nexport { PieSeries };\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"PieSeries\"] = PieSeries;\nregistry.registeredClasses[\"PieSeriesDataItem\"] = PieSeriesDataItem;","map":{"version":3,"names":["__extends","PercentSeries","PercentSeriesDataItem","Slice","AxisLabelCircular","PieTick","registry","$math","$type","Percent","percent","PieSeriesDataItem","_super","_this","call","className","values","radiusValue","applyTheme","Object","defineProperty","prototype","get","value","set","setValue","enumerable","configurable","hide","duration","delay","toValue","fields","show","PieSeries","alignLabels","layout","labels","template","radius","addDisposer","events","on","invalidate","createSlice","createTick","createLabel","applyInternalDefaults","hasValue","readerTitle","language","translate","createDataItem","initSlice","slice","isMeasured","defaultState","properties","scale","observe","handleSliceScale","handleSliceMove","tooltipText","hoverState","states","create","shiftRadius","togglable","event","target","hideTooltip","interactions","lastHitPointer","touch","isActive","isHover","activeState","validate","_leftItems","_rightItems","_currentStartAngle","startAngle","_arcRect","getArcRect","endAngle","_maxRadiusPercent","i","startIndex","endIndex","dataItem","dataItems","getIndex","radiusValuePercent","reverse","sort","a","b","aAngle","middleAngle","bAngle","arrangeLabels","arrangeLabels2","validateDataElement","pixelRadius","ignoreZeroValues","__disabled","isNumber","pixelInnerRadius","innerRadius","arc","Math","abs","disabled","label","tick","normalizedMiddleAngle","point","labelRadius","x","length","dx","dy","verticalCenter","arcRect","width","horizontalCenter","push","distance","y","iy","moveTo","depth","fixPosition","radiusY","getPropertyValue","setPercentProperty","invalidateDataItems","_pixelRadius","_pixelInnerRadius","_startAngleInternal","setPropertyValue","normalizeAngle","_endAngleInternal","positionBullet","bullet","locationX","locationY","angle","cos","sin","fdx","pixelX","fdy","pixelY","definedBBox","chart","registeredClasses"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/charts/series/PieSeries.js"],"sourcesContent":["/**\r\n * Defines Pie Chart Series.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { PercentSeries, PercentSeriesDataItem } from \"./PercentSeries\";\r\nimport { Slice } from \"../../core/elements/Slice\";\r\n//import { Slice3D } from \"../../core/elements/3D/Slice3D\";\r\nimport { AxisLabelCircular } from \"../axes/AxisLabelCircular\";\r\nimport { PieTick } from \"../elements/PieTick\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Percent, percent } from \"../../core/utils/Percent\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n//@todo: sequenced?\r\n/**\r\n * Defines a [[DataItem]] for [[PieSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar PieSeriesDataItem = /** @class */ (function (_super) {\r\n    __extends(PieSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PieSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PieSeriesDataItem\";\r\n        _this.values.radiusValue = {};\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(PieSeriesDataItem.prototype, \"radiusValue\", {\r\n        /**\r\n         * @return Radius\r\n         */\r\n        get: function () {\r\n            return this.values.radiusValue.value;\r\n        },\r\n        /**\r\n         * Slice's radius, if other than default.\r\n         *\r\n         * @param value  Radius\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"radiusValue\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Hide the data item (and corresponding visual elements).\r\n     *\r\n     * @param duration  Duration (ms)\r\n     * @param delay     Delay hiding (ms)\r\n     * @param toValue   Target value for animation\r\n     * @param fields    Fields to animate while hiding\r\n     */\r\n    PieSeriesDataItem.prototype.hide = function (duration, delay, toValue, fields) {\r\n        return _super.prototype.hide.call(this, duration, delay, 0, [\"value\", \"radiusValue\"]);\r\n    };\r\n    /**\r\n     * Show hidden data item (and corresponding visual elements).\r\n     *\r\n     * @param duration  Duration (ms)\r\n     * @param delay     Delay hiding (ms)\r\n     * @param fields    Fields to animate while hiding\r\n     */\r\n    PieSeriesDataItem.prototype.show = function (duration, delay, fields) {\r\n        return _super.prototype.show.call(this, duration, delay, [\"value\", \"radiusValue\"]);\r\n    };\r\n    return PieSeriesDataItem;\r\n}(PercentSeriesDataItem));\r\nexport { PieSeriesDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a slice series on a Pie chart.\r\n *\r\n * @see {@link IPieSeriesEvents} for a list of available Events\r\n * @see {@link IPieSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nvar PieSeries = /** @class */ (function (_super) {\r\n    __extends(PieSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PieSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PieSeries\";\r\n        _this.alignLabels = true;\r\n        //this.startAngle = -90;\r\n        //this.endAngle = 270;\r\n        _this.layout = \"none\";\r\n        _this.labels.template.radius = percent(5);\r\n        _this.addDisposer(_this.labels.template.events.on(\"enabled\", _this.invalidate, _this, false));\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * creates slice\r\n     */\r\n    PieSeries.prototype.createSlice = function () {\r\n        return new Slice();\r\n    };\r\n    /**\r\n     * creates tick\r\n     */\r\n    PieSeries.prototype.createTick = function () {\r\n        return new PieTick();\r\n    };\r\n    /**\r\n     * creates label\r\n     */\r\n    PieSeries.prototype.createLabel = function () {\r\n        return new AxisLabelCircular();\r\n    };\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    PieSeries.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Pie Slice Series\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    PieSeries.prototype.createDataItem = function () {\r\n        return new PieSeriesDataItem();\r\n    };\r\n    /**\r\n     * Inits slice.\r\n     *\r\n     * @param slice to init\r\n     */\r\n    PieSeries.prototype.initSlice = function (slice) {\r\n        slice.isMeasured = false;\r\n        slice.defaultState.properties.scale = 1;\r\n        slice.observe(\"scale\", this.handleSliceScale, this);\r\n        slice.observe([\"dx\", \"dy\", \"x\", \"y\", \"shiftRadius\"], this.handleSliceMove, this);\r\n        slice.tooltipText = \"{category}: {value.percent.formatNumber('#.#p')} ({value.value})\";\r\n        var hoverState = slice.states.create(\"hover\");\r\n        hoverState.properties.scale = 1.05;\r\n        var defaultState = slice.defaultState;\r\n        defaultState.properties.shiftRadius = 0;\r\n        slice.togglable = true;\r\n        slice.events.on(\"toggled\", function (event) {\r\n            event.target.hideTooltip();\r\n            // The following takes care of removing hover on subsequent click of\r\n            // a slice\r\n            if (event.target.interactions.lastHitPointer\r\n                && event.target.interactions.lastHitPointer.touch\r\n                && !event.target.isActive) {\r\n                event.target.isHover = false;\r\n            }\r\n        });\r\n        var activeState = slice.states.create(\"active\");\r\n        activeState.properties.shiftRadius = 0.10;\r\n    };\r\n    /**\r\n     * (Re)validates the whole series, effectively causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    PieSeries.prototype.validate = function () {\r\n        this._leftItems = [];\r\n        this._rightItems = [];\r\n        this._currentStartAngle = this.startAngle;\r\n        this._arcRect = $math.getArcRect(this.startAngle, this.endAngle);\r\n        this._maxRadiusPercent = 0;\r\n        for (var i = this.startIndex; i < this.endIndex; i++) {\r\n            var dataItem = this.dataItems.getIndex(i);\r\n            var radiusValuePercent = dataItem.values.radiusValue.percent;\r\n            if (radiusValuePercent > this._maxRadiusPercent) {\r\n                this._maxRadiusPercent = radiusValuePercent;\r\n            }\r\n        }\r\n        _super.prototype.validate.call(this);\r\n        if (this.alignLabels) {\r\n            if (this.startAngle > this.endAngle) {\r\n                this._rightItems.reverse();\r\n            }\r\n            else {\r\n                this._leftItems.reverse();\r\n            }\r\n            this._rightItems.sort(function (a, b) {\r\n                var aAngle = (a.slice.middleAngle + 360) % 360;\r\n                var bAngle = (b.slice.middleAngle + 360) % 360;\r\n                if (aAngle > 270) {\r\n                    aAngle -= 360;\r\n                }\r\n                if (bAngle > 270) {\r\n                    bAngle -= 360;\r\n                }\r\n                if (aAngle < bAngle) {\r\n                    return -1;\r\n                }\r\n                else if (aAngle > bAngle) {\r\n                    return 1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            this._leftItems.sort(function (a, b) {\r\n                var aAngle = (a.slice.middleAngle + 360) % 360;\r\n                var bAngle = (b.slice.middleAngle + 360) % 360;\r\n                if (aAngle < bAngle) {\r\n                    return 1;\r\n                }\r\n                else if (aAngle > bAngle) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            this.arrangeLabels(this._rightItems);\r\n            this.arrangeLabels2(this._rightItems);\r\n            this.arrangeLabels(this._leftItems);\r\n            this.arrangeLabels2(this._leftItems);\r\n        }\r\n    };\r\n    /**\r\n     * Validates data item's element, effectively redrawing it.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    PieSeries.prototype.validateDataElement = function (dataItem) {\r\n        if (this.pixelRadius > 0) {\r\n            if (this.ignoreZeroValues && (dataItem.value == 0 || dataItem.value == null)) {\r\n                dataItem.__disabled = true;\r\n            }\r\n            else {\r\n                dataItem.__disabled = false;\r\n            }\r\n            // SLICE\r\n            var slice = dataItem.slice;\r\n            slice.radius = this.pixelRadius;\r\n            if ($type.isNumber(dataItem.radiusValue)) {\r\n                slice.radius = this.pixelInnerRadius + (this.pixelRadius - this.pixelInnerRadius) * dataItem.values.radiusValue.percent / this._maxRadiusPercent;\r\n            }\r\n            if (!(slice.innerRadius instanceof Percent)) {\r\n                slice.innerRadius = this.pixelInnerRadius;\r\n            }\r\n            slice.startAngle = this._currentStartAngle;\r\n            slice.arc = Math.abs(dataItem.values.value.percent) * (this.endAngle - this.startAngle) / 100;\r\n            // LABEL\r\n            if (!this.labels.template.disabled) {\r\n                var label = dataItem.label;\r\n                var tick = dataItem.tick;\r\n                tick.slice = slice;\r\n                tick.label = label;\r\n                var normalizedMiddleAngle = (slice.middleAngle + 360) % 360; // force angle to be 0 - 360;\r\n                var point = void 0;\r\n                if (this.alignLabels) {\r\n                    var labelRadius = label.pixelRadius(slice.radius);\r\n                    var x = tick.length + labelRadius;\r\n                    label.dx = 0;\r\n                    label.dy = 0;\r\n                    label.verticalCenter = \"middle\";\r\n                    var arcRect = this._arcRect;\r\n                    // right half\r\n                    if (normalizedMiddleAngle > 270 || normalizedMiddleAngle <= 90) {\r\n                        x += (arcRect.width + arcRect.x) * this.pixelRadius;\r\n                        label.horizontalCenter = \"left\";\r\n                        this._rightItems.push(dataItem);\r\n                    }\r\n                    // left half\r\n                    else {\r\n                        x -= arcRect.x * this.pixelRadius;\r\n                        label.horizontalCenter = \"right\";\r\n                        this._leftItems.push(dataItem);\r\n                        x *= -1;\r\n                    }\r\n                    var distance = slice.radius + tick.length + labelRadius;\r\n                    point = { x: x, y: slice.iy * distance };\r\n                    label.moveTo(point);\r\n                }\r\n                else {\r\n                    var depth = slice[\"depth\"];\r\n                    if (!$type.isNumber(depth)) {\r\n                        depth = 0;\r\n                    }\r\n                    label.fixPosition(slice.middleAngle, slice.radius, slice.radiusY, 0, -depth);\r\n                }\r\n            }\r\n            this._currentStartAngle += slice.arc;\r\n            // do this at the end, otherwise bullets won't be positioned properly\r\n            _super.prototype.validateDataElement.call(this, dataItem);\r\n        }\r\n    };\r\n    Object.defineProperty(PieSeries.prototype, \"radius\", {\r\n        /**\r\n         * @return Radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"radius\");\r\n        },\r\n        /**\r\n         * Outer radius for the series' slices in pixels or [[Percent]].\r\n         *\r\n         * @param value  Radius\r\n         */\r\n        set: function (value) {\r\n            if (this.setPercentProperty(\"radius\", value, true, false, 10, false)) {\r\n                this.invalidateDataItems();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PieSeries.prototype, \"pixelRadius\", {\r\n        /**\r\n         * @return Radius\r\n         * @ignore\r\n         */\r\n        get: function () {\r\n            return this._pixelRadius;\r\n        },\r\n        /**\r\n         * @ignore\r\n         */\r\n        set: function (value) {\r\n            if (this._pixelRadius != value) {\r\n                this._pixelRadius = value;\r\n                this.invalidateDataItems();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PieSeries.prototype, \"pixelInnerRadius\", {\r\n        /**\r\n         * @return Pixel inner radius\r\n         * @ignore\r\n         */\r\n        get: function () {\r\n            return this._pixelInnerRadius;\r\n        },\r\n        /**\r\n         * @ignore\r\n         */\r\n        set: function (value) {\r\n            if (this._pixelInnerRadius != value) {\r\n                this._pixelInnerRadius = value;\r\n                this.invalidateDataItems();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PieSeries.prototype, \"innerRadius\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"innerRadius\");\r\n        },\r\n        /**\r\n         * Inner radius for the series' slices in pixels.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Redo so that users can set it\r\n         * @param value  Radius\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PieSeries.prototype, \"startAngle\", {\r\n        /**\r\n         * @return Angle\r\n         */\r\n        get: function () {\r\n            var startAngle = this.getPropertyValue(\"startAngle\");\r\n            if ($type.isNumber(startAngle)) {\r\n                return startAngle;\r\n            }\r\n            else {\r\n                return this._startAngleInternal;\r\n            }\r\n        },\r\n        /**\r\n         * Start angle for the series' slices in degrees. (0-360)\r\n         *\r\n         * @param value  Angle\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"startAngle\", $math.normalizeAngle(value), true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PieSeries.prototype, \"endAngle\", {\r\n        /**\r\n         * @return Angle\r\n         */\r\n        get: function () {\r\n            var endAngle = this.getPropertyValue(\"endAngle\");\r\n            if ($type.isNumber(endAngle)) {\r\n                return endAngle;\r\n            }\r\n            else {\r\n                return this._endAngleInternal;\r\n            }\r\n        },\r\n        /**\r\n         * End angle for the series' slices in degrees. (0-360)\r\n         *\r\n         * @param value  Angle\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"endAngle\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Positions series bullet.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param bullet  Bullet\r\n     */\r\n    PieSeries.prototype.positionBullet = function (bullet) {\r\n        _super.prototype.positionBullet.call(this, bullet);\r\n        var dataItem = bullet.dataItem;\r\n        var slice = dataItem.slice;\r\n        var locationX = bullet.locationX;\r\n        if (!$type.isNumber(locationX)) {\r\n            locationX = 0.5;\r\n        }\r\n        var locationY = bullet.locationY;\r\n        if (!$type.isNumber(locationY)) {\r\n            locationY = 1;\r\n        }\r\n        var angle = slice.startAngle + slice.arc * locationX;\r\n        bullet.x = locationY * slice.radius * $math.cos(angle);\r\n        bullet.y = locationY * slice.radiusY * $math.sin(angle);\r\n    };\r\n    /**\r\n     * Repositions bullet and labels when slice moves.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event  Event\r\n     */\r\n    PieSeries.prototype.handleSliceMove = function (event) {\r\n        if (!this.alignLabels) {\r\n            var slice = event.target;\r\n            var dataItem = slice.dataItem;\r\n            // moving textelement, as label dx and dy are already employed for aligning\r\n            //@labeltodo\r\n            if (dataItem) {\r\n                var label = dataItem.label;\r\n                if (label) {\r\n                    label.dx = label.fdx + slice.dx + slice.pixelX;\r\n                    label.dy = label.fdy + slice.dy + slice.pixelY;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(PieSeries.prototype, \"bbox\", {\r\n        /**\r\n         * Returns bounding box (square) for this element.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        get: function () {\r\n            if (this.definedBBox) {\r\n                return this.definedBBox;\r\n            }\r\n            var chart = this.chart;\r\n            if (chart) {\r\n                return $math.getArcRect(chart.startAngle, chart.endAngle, this.pixelRadius);\r\n            }\r\n            return $math.getArcRect(this.startAngle, this.endAngle, this.pixelRadius);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PieSeries;\r\n}(PercentSeries));\r\nexport { PieSeries };\r\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PieSeries\"] = PieSeries;\r\nregistry.registeredClasses[\"PieSeriesDataItem\"] = PieSeriesDataItem;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}