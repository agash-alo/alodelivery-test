{"ast":null,"code":"import { __decorate, __metadata, __param, __awaiter } from 'tslib';\nimport { Injectable, NgZone, Input, Directive, EventEmitter, Output, Self, ElementRef, Component, Inject, PLATFORM_ID, QueryList, ContentChildren, forwardRef, ɵɵdefineInjectable, ɵɵinject, InjectionToken, Optional, LOCALE_ID, NgModule } from '@angular/core';\nimport { Observable, BehaviorSubject, from, timer, Subject, fromEventPattern, merge, ReplaySubject, bindCallback, of, throwError } from 'rxjs';\nimport { flatMap, sample, switchMap, map, shareReplay, distinctUntilChanged, takeUntil, startWith, skip, multicast } from 'rxjs/operators';\nimport { isPlatformServer } from '@angular/common';\nlet MapsAPILoader = class MapsAPILoader {};\nMapsAPILoader = __decorate([Injectable()], MapsAPILoader);\n\n/**\n * Wrapper class that handles the communication with the Google Maps Javascript\n * API v3\n */\nlet GoogleMapsAPIWrapper = class GoogleMapsAPIWrapper {\n  constructor(_loader, _zone) {\n    this._loader = _loader;\n    this._zone = _zone;\n    this._map = new Promise(resolve => {\n      this._mapResolver = resolve;\n    });\n  }\n  createMap(el, mapOptions) {\n    return this._zone.runOutsideAngular(() => {\n      return this._loader.load().then(() => {\n        const map = new google.maps.Map(el, mapOptions);\n        this._mapResolver(map);\n        return;\n      });\n    });\n  }\n  setMapOptions(options) {\n    return this._zone.runOutsideAngular(() => {\n      this._map.then(m => {\n        m.setOptions(options);\n      });\n    });\n  }\n  /**\n   * Creates a google map marker with the map context\n   */\n  createMarker(options = {}, addToMap = true) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => {\n        if (addToMap) {\n          options.map = map;\n        }\n        return new google.maps.Marker(options);\n      });\n    });\n  }\n  createInfoWindow(options) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(() => {\n        return new google.maps.InfoWindow(options);\n      });\n    });\n  }\n  /**\n   * Creates a google.map.Circle for the current map.\n   */\n  createCircle(options) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => {\n        if (typeof options.strokePosition === 'string') {\n          options.strokePosition = google.maps.StrokePosition[options.strokePosition];\n        }\n        options.map = map;\n        return new google.maps.Circle(options);\n      });\n    });\n  }\n  /**\n   * Creates a google.map.Rectangle for the current map.\n   */\n  createRectangle(options) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => {\n        options.map = map;\n        return new google.maps.Rectangle(options);\n      });\n    });\n  }\n  createPolyline(options) {\n    return this._zone.runOutsideAngular(() => {\n      return this.getNativeMap().then(map => {\n        let line = new google.maps.Polyline(options);\n        line.setMap(map);\n        return line;\n      });\n    });\n  }\n  createPolygon(options) {\n    return this._zone.runOutsideAngular(() => {\n      return this.getNativeMap().then(map => {\n        let polygon = new google.maps.Polygon(options);\n        polygon.setMap(map);\n        return polygon;\n      });\n    });\n  }\n  /**\n   * Creates a new google.map.Data layer for the current map\n   */\n  createDataLayer(options) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(m => {\n        let data = new google.maps.Data(options);\n        data.setMap(m);\n        return data;\n      });\n    });\n  }\n  /**\n   * Creates a TransitLayer instance for a map\n   * @param {TransitLayerOptions} options - used for setting layer options\n   * @returns {Promise<TransitLayer>} a new transit layer object\n   */\n  createTransitLayer(options) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => {\n        let newLayer = new google.maps.TransitLayer();\n        newLayer.setMap(options.visible ? map : null);\n        return newLayer;\n      });\n    });\n  }\n  /**\n   * Creates a BicyclingLayer instance for a map\n   * @param {BicyclingLayerOptions} options - used for setting layer options\n   * @returns {Promise<BicyclingLayer>} a new bicycling layer object\n   */\n  createBicyclingLayer(options) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => {\n        let newLayer = new google.maps.BicyclingLayer();\n        newLayer.setMap(options.visible ? map : null);\n        return newLayer;\n      });\n    });\n  }\n  /**\n   * Determines if given coordinates are insite a Polygon path.\n   */\n  containsLocation(latLng, polygon) {\n    return google.maps.geometry.poly.containsLocation(latLng, polygon);\n  }\n  subscribeToMapEvent(eventName) {\n    return new Observable(observer => {\n      this._map.then(m => {\n        m.addListener(eventName, arg => {\n          this._zone.run(() => observer.next(arg));\n        });\n      });\n    });\n  }\n  clearInstanceListeners() {\n    return this._zone.runOutsideAngular(() => {\n      this._map.then(map => {\n        google.maps.event.clearInstanceListeners(map);\n      });\n    });\n  }\n  setCenter(latLng) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => map.setCenter(latLng));\n    });\n  }\n  getZoom() {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => map.getZoom());\n    });\n  }\n  getBounds() {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => map.getBounds());\n    });\n  }\n  getMapTypeId() {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => map.getMapTypeId());\n    });\n  }\n  setZoom(zoom) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => map.setZoom(zoom));\n    });\n  }\n  getCenter() {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => map.getCenter());\n    });\n  }\n  panTo(latLng) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => map.panTo(latLng));\n    });\n  }\n  panBy(x, y) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => map.panBy(x, y));\n    });\n  }\n  fitBounds(latLng, padding) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => map.fitBounds(latLng, padding));\n    });\n  }\n  panToBounds(latLng, padding) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => map.panToBounds(latLng, padding));\n    });\n  }\n  /**\n   * Returns the native Google Maps Map instance. Be careful when using this instance directly.\n   */\n  getNativeMap() {\n    return this._map;\n  }\n  /**\n   * Triggers the given event name on the map instance.\n   */\n  triggerMapEvent(eventName) {\n    return this._map.then(m => google.maps.event.trigger(m, eventName));\n  }\n};\nGoogleMapsAPIWrapper.ctorParameters = () => [{\n  type: MapsAPILoader\n}, {\n  type: NgZone\n}];\nGoogleMapsAPIWrapper = __decorate([Injectable(), __metadata(\"design:paramtypes\", [MapsAPILoader, NgZone])], GoogleMapsAPIWrapper);\n\n/**\n * This class manages Transit and Bicycling Layers for a Google Map instance.\n */\nlet LayerManager = class LayerManager {\n  constructor(_wrapper) {\n    this._wrapper = _wrapper;\n    this._layers = new Map();\n  }\n  /**\n   * Adds a transit layer to a map instance.\n   * @param {AgmTransitLayer} layer - a TransitLayer object\n   * @param {TransitLayerOptions} options - TransitLayerOptions options\n   * @returns void\n   */\n  addTransitLayer(layer, options) {\n    const newLayer = this._wrapper.createTransitLayer(options);\n    this._layers.set(layer, newLayer);\n  }\n  /**\n   * Adds a bicycling layer to a map instance.\n   * @param {AgmBicyclingLayer} layer - a bicycling layer object\n   * @param {BicyclingLayerOptions} options - BicyclingLayer options\n   * @returns void\n   */\n  addBicyclingLayer(layer, options) {\n    const newLayer = this._wrapper.createBicyclingLayer(options);\n    this._layers.set(layer, newLayer);\n  }\n  /**\n   * Deletes a map layer\n   * @param {AgmTransitLayer|AgmBicyclingLayer} layer - the layer to delete\n   * @returns  Promise<void>\n   */\n  deleteLayer(layer) {\n    return this._layers.get(layer).then(currentLayer => {\n      currentLayer.setMap(null);\n      this._layers.delete(layer);\n    });\n  }\n  /**\n   * Hide/Show a google map layer\n   * @param { AgmTransitLayer|AgmBicyclingLayer} layer - the layer to hide/show\n   * @param {TransitLayerOptions|BicyclingLayerOptions} options - used to set visibility of the layer\n   * @returns Promise<void>\n   */\n  toggleLayerVisibility(layer, options) {\n    return this._layers.get(layer).then(currentLayer => {\n      if (!options.visible) {\n        currentLayer.setMap(null);\n        return;\n      } else {\n        return this._wrapper.getNativeMap().then(map => {\n          currentLayer.setMap(map);\n        });\n      }\n    });\n  }\n};\nLayerManager.ctorParameters = () => [{\n  type: GoogleMapsAPIWrapper\n}];\nLayerManager = __decorate([Injectable(), __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper])], LayerManager);\nlet layerId = 0;\n/*\n * This directive adds a bicycling layer to a google map instance\n * <agm-bicycling-layer [visible]=\"true|false\"> <agm-bicycling-layer>\n * */\nlet AgmBicyclingLayer = class AgmBicyclingLayer {\n  constructor(_manager) {\n    this._manager = _manager;\n    this._addedToManager = false;\n    this._id = (layerId++).toString();\n    /**\n     * Hide/show bicycling layer\n     */\n    this.visible = true;\n  }\n  ngOnInit() {\n    if (this._addedToManager) {\n      return;\n    }\n    this._manager.addBicyclingLayer(this, {\n      visible: this.visible\n    });\n    this._addedToManager = true;\n  }\n  ngOnChanges(changes) {\n    if (!this._addedToManager) {\n      return;\n    }\n    if (changes['visible'] != null) {\n      this._manager.toggleLayerVisibility(this, {\n        visible: changes['visible'].currentValue\n      });\n    }\n  }\n  /** @internal */\n  id() {\n    return this._id;\n  }\n  /** @internal */\n  toString() {\n    return `AgmBicyclingLayer-${this._id.toString()}`;\n  }\n  /** @internal */\n  ngOnDestroy() {\n    this._manager.deleteLayer(this);\n  }\n};\nAgmBicyclingLayer.ctorParameters = () => [{\n  type: LayerManager\n}];\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmBicyclingLayer.prototype, \"visible\", void 0);\nAgmBicyclingLayer = __decorate([Directive({\n  selector: 'agm-bicycling-layer'\n}), __metadata(\"design:paramtypes\", [LayerManager])], AgmBicyclingLayer);\nlet CircleManager = class CircleManager {\n  constructor(_apiWrapper, _zone) {\n    this._apiWrapper = _apiWrapper;\n    this._zone = _zone;\n    this._circles = new Map();\n  }\n  addCircle(circle) {\n    this._circles.set(circle, this._apiWrapper.createCircle({\n      center: {\n        lat: circle.latitude,\n        lng: circle.longitude\n      },\n      clickable: circle.clickable,\n      draggable: circle.draggable,\n      editable: circle.editable,\n      fillColor: circle.fillColor,\n      fillOpacity: circle.fillOpacity,\n      radius: circle.radius,\n      strokeColor: circle.strokeColor,\n      strokeOpacity: circle.strokeOpacity,\n      strokePosition: circle.strokePosition,\n      strokeWeight: circle.strokeWeight,\n      visible: circle.visible,\n      zIndex: circle.zIndex\n    }));\n  }\n  /**\n   * Removes the given circle from the map.\n   */\n  removeCircle(circle) {\n    return this._circles.get(circle).then(c => {\n      c.setMap(null);\n      this._circles.delete(circle);\n    });\n  }\n  setOptions(circle, options) {\n    return this._circles.get(circle).then(c => {\n      if (typeof options.strokePosition === 'string') {\n        options.strokePosition = google.maps.StrokePosition[options.strokePosition];\n      }\n      c.setOptions(options);\n    });\n  }\n  getBounds(circle) {\n    return this._circles.get(circle).then(c => c.getBounds());\n  }\n  getCenter(circle) {\n    return this._circles.get(circle).then(c => c.getCenter());\n  }\n  getRadius(circle) {\n    return this._circles.get(circle).then(c => c.getRadius());\n  }\n  setCenter(circle) {\n    return this._circles.get(circle).then(c => {\n      return c.setCenter({\n        lat: circle.latitude,\n        lng: circle.longitude\n      });\n    });\n  }\n  setEditable(circle) {\n    return this._circles.get(circle).then(c => {\n      return c.setEditable(circle.editable);\n    });\n  }\n  setDraggable(circle) {\n    return this._circles.get(circle).then(c => {\n      return c.setDraggable(circle.draggable);\n    });\n  }\n  setVisible(circle) {\n    return this._circles.get(circle).then(c => {\n      return c.setVisible(circle.visible);\n    });\n  }\n  setRadius(circle) {\n    return this._circles.get(circle).then(c => {\n      return c.setRadius(circle.radius);\n    });\n  }\n  getNativeCircle(circle) {\n    return this._circles.get(circle);\n  }\n  createEventObservable(eventName, circle) {\n    return new Observable(observer => {\n      let listener = null;\n      this._circles.get(circle).then(c => {\n        listener = c.addListener(eventName, e => this._zone.run(() => observer.next(e)));\n      });\n      return () => {\n        if (listener !== null) {\n          listener.remove();\n        }\n      };\n    });\n  }\n};\nCircleManager.ctorParameters = () => [{\n  type: GoogleMapsAPIWrapper\n}, {\n  type: NgZone\n}];\nCircleManager = __decorate([Injectable(), __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])], CircleManager);\nvar AgmCircle_1;\nlet AgmCircle = AgmCircle_1 = class AgmCircle {\n  constructor(_manager) {\n    this._manager = _manager;\n    /**\n     * Indicates whether this Circle handles mouse events. Defaults to true.\n     */\n    this.clickable = true;\n    /**\n     * If set to true, the user can drag this circle over the map. Defaults to false.\n     */\n    // tslint:disable-next-line:no-input-rename\n    this.draggable = false;\n    /**\n     * If set to true, the user can edit this circle by dragging the control points shown at\n     * the center and around the circumference of the circle. Defaults to false.\n     */\n    this.editable = false;\n    /**\n     * The radius in meters on the Earth's surface.\n     */\n    this.radius = 0;\n    /**\n     * The stroke position. Defaults to CENTER.\n     * This property is not supported on Internet Explorer 8 and earlier.\n     */\n    this.strokePosition = 'CENTER';\n    /**\n     * The stroke width in pixels.\n     */\n    this.strokeWeight = 0;\n    /**\n     * Whether this circle is visible on the map. Defaults to true.\n     */\n    this.visible = true;\n    /**\n     * This event is fired when the circle's center is changed.\n     */\n    this.centerChange = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user clicks on the circle.\n     */\n    this.circleClick = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user clicks on the circle.\n     */\n    this.circleDblClick = new EventEmitter();\n    /**\n     * This event is repeatedly fired while the user drags the circle.\n     */\n    this.drag = new EventEmitter();\n    /**\n     * This event is fired when the user stops dragging the circle.\n     */\n    this.dragEnd = new EventEmitter();\n    /**\n     * This event is fired when the user starts dragging the circle.\n     */\n    this.dragStart = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousedown event is fired on the circle.\n     */\n    this.mouseDown = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousemove event is fired on the circle.\n     */\n    this.mouseMove = new EventEmitter();\n    /**\n     * This event is fired on circle mouseout.\n     */\n    this.mouseOut = new EventEmitter();\n    /**\n     * This event is fired on circle mouseover.\n     */\n    this.mouseOver = new EventEmitter();\n    /**\n     * This event is fired when the DOM mouseup event is fired on the circle.\n     */\n    this.mouseUp = new EventEmitter();\n    /**\n     * This event is fired when the circle's radius is changed.\n     */\n    this.radiusChange = new EventEmitter();\n    /**\n     * This event is fired when the circle is right-clicked on.\n     */\n    this.rightClick = new EventEmitter();\n    this._circleAddedToManager = false;\n    this._eventSubscriptions = [];\n  }\n  /** @internal */\n  ngOnInit() {\n    this._manager.addCircle(this);\n    this._circleAddedToManager = true;\n    this._registerEventListeners();\n  }\n  /** @internal */\n  ngOnChanges(changes) {\n    if (!this._circleAddedToManager) {\n      return;\n    }\n    if (changes['latitude'] || changes['longitude']) {\n      this._manager.setCenter(this);\n    }\n    if (changes['editable']) {\n      this._manager.setEditable(this);\n    }\n    if (changes['draggable']) {\n      this._manager.setDraggable(this);\n    }\n    if (changes['visible']) {\n      this._manager.setVisible(this);\n    }\n    if (changes['radius']) {\n      this._manager.setRadius(this);\n    }\n    this._updateCircleOptionsChanges(changes);\n  }\n  _updateCircleOptionsChanges(changes) {\n    let options = {};\n    let optionKeys = Object.keys(changes).filter(k => AgmCircle_1._mapOptions.indexOf(k) !== -1);\n    optionKeys.forEach(k => {\n      options[k] = changes[k].currentValue;\n    });\n    if (optionKeys.length > 0) {\n      this._manager.setOptions(this, options);\n    }\n  }\n  _registerEventListeners() {\n    let events = new Map();\n    events.set('center_changed', this.centerChange);\n    events.set('click', this.circleClick);\n    events.set('dblclick', this.circleDblClick);\n    events.set('drag', this.drag);\n    events.set('dragend', this.dragEnd);\n    events.set('dragstart', this.dragStart);\n    events.set('mousedown', this.mouseDown);\n    events.set('mousemove', this.mouseMove);\n    events.set('mouseout', this.mouseOut);\n    events.set('mouseover', this.mouseOver);\n    events.set('mouseup', this.mouseUp);\n    events.set('radius_changed', this.radiusChange);\n    events.set('rightclick', this.rightClick);\n    events.forEach((eventEmitter, eventName) => {\n      this._eventSubscriptions.push(this._manager.createEventObservable(eventName, this).subscribe(value => {\n        switch (eventName) {\n          case 'radius_changed':\n            this._manager.getRadius(this).then(radius => eventEmitter.emit(radius));\n            break;\n          case 'center_changed':\n            this._manager.getCenter(this).then(center => eventEmitter.emit({\n              lat: center.lat(),\n              lng: center.lng()\n            }));\n            break;\n          default:\n            eventEmitter.emit({\n              coords: {\n                lat: value.latLng.lat(),\n                lng: value.latLng.lng()\n              }\n            });\n        }\n      }));\n    });\n  }\n  /** @internal */\n  ngOnDestroy() {\n    this._eventSubscriptions.forEach(function (s) {\n      s.unsubscribe();\n    });\n    this._eventSubscriptions = null;\n    this._manager.removeCircle(this);\n  }\n  /**\n   * Gets the LatLngBounds of this Circle.\n   */\n  getBounds() {\n    return this._manager.getBounds(this);\n  }\n  getCenter() {\n    return this._manager.getCenter(this);\n  }\n};\nAgmCircle._mapOptions = ['fillColor', 'fillOpacity', 'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight', 'visible', 'zIndex', 'clickable'];\nAgmCircle.ctorParameters = () => [{\n  type: CircleManager\n}];\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmCircle.prototype, \"latitude\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmCircle.prototype, \"longitude\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmCircle.prototype, \"clickable\", void 0);\n__decorate([Input('circleDraggable'), __metadata(\"design:type\", Object)], AgmCircle.prototype, \"draggable\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmCircle.prototype, \"editable\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmCircle.prototype, \"fillColor\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmCircle.prototype, \"fillOpacity\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmCircle.prototype, \"radius\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmCircle.prototype, \"strokeColor\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmCircle.prototype, \"strokeOpacity\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmCircle.prototype, \"strokePosition\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmCircle.prototype, \"strokeWeight\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmCircle.prototype, \"visible\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmCircle.prototype, \"zIndex\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"centerChange\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"circleClick\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"circleDblClick\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"drag\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"dragEnd\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"dragStart\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"mouseDown\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"mouseMove\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"mouseOut\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"mouseOver\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"mouseUp\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"radiusChange\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"rightClick\", void 0);\nAgmCircle = AgmCircle_1 = __decorate([Directive({\n  selector: 'agm-circle'\n}), __metadata(\"design:paramtypes\", [CircleManager])], AgmCircle);\n\n/**\n * Manages all Data Layers for a Google Map instance.\n */\nlet DataLayerManager = class DataLayerManager {\n  constructor(_wrapper, _zone) {\n    this._wrapper = _wrapper;\n    this._zone = _zone;\n    this._layers = new Map();\n  }\n  /**\n   * Adds a new Data Layer to the map.\n   */\n  addDataLayer(layer) {\n    const newLayer = this._wrapper.createDataLayer({\n      style: layer.style\n    }).then(d => {\n      if (layer.geoJson) {\n        this.getDataFeatures(d, layer.geoJson).then(features => d.features = features);\n      }\n      return d;\n    });\n    this._layers.set(layer, newLayer);\n  }\n  deleteDataLayer(layer) {\n    this._layers.get(layer).then(l => {\n      l.setMap(null);\n      this._layers.delete(layer);\n    });\n  }\n  updateGeoJson(layer, geoJson) {\n    this._layers.get(layer).then(l => {\n      l.forEach(function (feature) {\n        l.remove(feature);\n        var index = l.features.indexOf(feature, 0);\n        if (index > -1) {\n          l.features.splice(index, 1);\n        }\n      });\n      this.getDataFeatures(l, geoJson).then(features => l.features = features);\n    });\n  }\n  setDataOptions(layer, options) {\n    this._layers.get(layer).then(l => {\n      l.setControlPosition(options.controlPosition);\n      l.setControls(options.controls);\n      l.setDrawingMode(options.drawingMode);\n      l.setStyle(options.style);\n    });\n  }\n  /**\n   * Creates a Google Maps event listener for the given DataLayer as an Observable\n   */\n  createEventObservable(eventName, layer) {\n    return new Observable(observer => {\n      this._layers.get(layer).then(d => {\n        d.addListener(eventName, e => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n  /**\n   * Extract features from a geoJson using google.maps Data Class\n   * @param d : google.maps.Data class instance\n   * @param geoJson : url or geojson object\n   */\n  getDataFeatures(d, geoJson) {\n    return new Promise((resolve, reject) => {\n      if (typeof geoJson === 'object') {\n        try {\n          const features = d.addGeoJson(geoJson);\n          resolve(features);\n        } catch (e) {\n          reject(e);\n        }\n      } else if (typeof geoJson === 'string') {\n        d.loadGeoJson(geoJson, null, resolve);\n      } else {\n        reject(`Impossible to extract features from geoJson: wrong argument type`);\n      }\n    });\n  }\n};\nDataLayerManager.ctorParameters = () => [{\n  type: GoogleMapsAPIWrapper\n}, {\n  type: NgZone\n}];\nDataLayerManager = __decorate([Injectable(), __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])], DataLayerManager);\nvar AgmDataLayer_1;\nlet layerId$1 = 0;\n/**\n * AgmDataLayer enables the user to add data layers to the map.\n *\n * ### Example\n * ```typescript\n * import { Component } from 'angular2/core';\n * import { AgmMap, AgmDataLayer } from\n * 'angular-google-maps/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  directives: [AgmMap, AgmDataLayer],\n *  styles: [`\n *    .agm-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n * <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n * \t  <agm-data-layer [geoJson]=\"geoJsonObject\" (layerClick)=\"clicked($event)\" [style]=\"styleFunc\">\n * \t  </agm-data-layer>\n * </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = -25.274449;\n *   lng: number = 133.775060;\n *   zoom: number = 5;\n *\n * clicked(clickEvent) {\n *    console.log(clickEvent);\n *  }\n *\n *  styleFunc(feature) {\n *    return ({\n *      clickable: false,\n *      fillColor: feature.getProperty('color'),\n *      strokeWeight: 1\n *    });\n *  }\n *\n *  geoJsonObject: Object = {\n *    \"type\": \"FeatureCollection\",\n *    \"features\": [\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"G\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"71\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [123.61, -22.14], [122.38, -21.73], [121.06, -21.69], [119.66, -22.22], [119.00, -23.40],\n *              [118.65, -24.76], [118.43, -26.07], [118.78, -27.56], [119.22, -28.57], [120.23, -29.49],\n *              [121.77, -29.87], [123.57, -29.64], [124.45, -29.03], [124.71, -27.95], [124.80, -26.70],\n *              [124.80, -25.60], [123.61, -25.64], [122.56, -25.64], [121.72, -25.72], [121.81, -26.62],\n *              [121.86, -26.98], [122.60, -26.90], [123.57, -27.05], [123.57, -27.68], [123.35, -28.18],\n *              [122.51, -28.38], [121.77, -28.26], [121.02, -27.91], [120.49, -27.21], [120.14, -26.50],\n *              [120.10, -25.64], [120.27, -24.52], [120.67, -23.68], [121.72, -23.32], [122.43, -23.48],\n *              [123.04, -24.04], [124.54, -24.28], [124.58, -23.20], [123.61, -22.14]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"red\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [128.84, -25.76], [128.18, -25.60], [127.96, -25.52], [127.88, -25.52], [127.70, -25.60],\n *              [127.26, -25.79], [126.60, -26.11], [126.16, -26.78], [126.12, -27.68], [126.21, -28.42],\n *              [126.69, -29.49], [127.74, -29.80], [128.80, -29.72], [129.41, -29.03], [129.72, -27.95],\n *              [129.68, -27.21], [129.33, -26.23], [128.84, -25.76]\n *            ],\n *            [\n *              [128.45, -27.44], [128.32, -26.94], [127.70, -26.82], [127.35, -27.05], [127.17, -27.80],\n *              [127.57, -28.22], [128.10, -28.42], [128.49, -27.80], [128.45, -27.44]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"yellow\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [131.87, -25.76], [131.35, -26.07], [130.95, -26.78], [130.82, -27.64], [130.86, -28.53],\n *              [131.26, -29.22], [131.92, -29.76], [132.45, -29.87], [133.06, -29.76], [133.72, -29.34],\n *              [134.07, -28.80], [134.20, -27.91], [134.07, -27.21], [133.81, -26.31], [133.37, -25.83],\n *              [132.71, -25.64], [131.87, -25.76]\n *            ],\n *            [\n *              [133.15, -27.17], [132.71, -26.86], [132.09, -26.90], [131.74, -27.56], [131.79, -28.26],\n *              [132.36, -28.45], [132.93, -28.34], [133.15, -27.76], [133.15, -27.17]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"g\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"103\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [138.12, -25.04], [136.84, -25.16], [135.96, -25.36], [135.26, -25.99], [135, -26.90],\n *              [135.04, -27.91], [135.26, -28.88], [136.05, -29.45], [137.02, -29.49], [137.81, -29.49],\n *              [137.94, -29.99], [137.90, -31.20], [137.85, -32.24], [136.88, -32.69], [136.45, -32.36],\n *              [136.27, -31.80], [134.95, -31.84], [135.17, -32.99], [135.52, -33.43], [136.14, -33.76],\n *              [137.06, -33.83], [138.12, -33.65], [138.86, -33.21], [139.30, -32.28], [139.30, -31.24],\n *              [139.30, -30.14], [139.21, -28.96], [139.17, -28.22], [139.08, -27.41], [139.08, -26.47],\n *              [138.99, -25.40], [138.73, -25.00], [138.12, -25.04]\n *            ],\n *            [\n *              [137.50, -26.54], [136.97, -26.47], [136.49, -26.58], [136.31, -27.13], [136.31, -27.72],\n *              [136.58, -27.99], [137.50, -28.03], [137.68, -27.68], [137.59, -26.78], [137.50, -26.54]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"l\",\n *          \"color\": \"green\",\n *          \"rank\": \"12\",\n *          \"ascii\": \"108\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [140.14, -21.04], [140.31, -29.42], [141.67, -29.49], [141.59, -20.92], [140.14, -21.04]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"e\",\n *          \"color\": \"red\",\n *          \"rank\": \"5\",\n *          \"ascii\": \"101\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [144.14, -27.41], [145.67, -27.52], [146.86, -27.09], [146.82, -25.64], [146.25, -25.04],\n *              [145.45, -24.68], [144.66, -24.60], [144.09, -24.76], [143.43, -25.08], [142.99, -25.40],\n *              [142.64, -26.03], [142.64, -27.05], [142.64, -28.26], [143.30, -29.11], [144.18, -29.57],\n *              [145.41, -29.64], [146.46, -29.19], [146.64, -28.72], [146.82, -28.14], [144.84, -28.42],\n *              [144.31, -28.26], [144.14, -27.41]\n *            ],\n *            [\n *              [144.18, -26.39], [144.53, -26.58], [145.19, -26.62], [145.72, -26.35], [145.81, -25.91],\n *              [145.41, -25.68], [144.97, -25.68], [144.49, -25.64], [144, -25.99], [144.18, -26.39]\n *            ]\n *          ]\n *        }\n *      }\n *    ]\n *  };\n * }\n * ```\n */\nlet AgmDataLayer = AgmDataLayer_1 = class AgmDataLayer {\n  constructor(_manager) {\n    this._manager = _manager;\n    this._addedToManager = false;\n    this._id = (layerId$1++).toString();\n    this._subscriptions = [];\n    /**\n     * This event is fired when a feature in the layer is clicked.\n     */\n    this.layerClick = new EventEmitter();\n    /**\n     * The geoJson to be displayed\n     */\n    this.geoJson = null;\n  }\n  ngOnInit() {\n    if (this._addedToManager) {\n      return;\n    }\n    this._manager.addDataLayer(this);\n    this._addedToManager = true;\n    this._addEventListeners();\n  }\n  _addEventListeners() {\n    const listeners = [{\n      name: 'click',\n      handler: ev => this.layerClick.emit(ev)\n    }];\n    listeners.forEach(obj => {\n      const os = this._manager.createEventObservable(obj.name, this).subscribe(obj.handler);\n      this._subscriptions.push(os);\n    });\n  }\n  /** @internal */\n  id() {\n    return this._id;\n  }\n  /** @internal */\n  toString() {\n    return `AgmDataLayer-${this._id.toString()}`;\n  }\n  /** @internal */\n  ngOnDestroy() {\n    this._manager.deleteDataLayer(this);\n    // unsubscribe all registered observable subscriptions\n    this._subscriptions.forEach(s => s.unsubscribe());\n  }\n  /** @internal */\n  ngOnChanges(changes) {\n    if (!this._addedToManager) {\n      return;\n    }\n    var geoJsonChange = changes['geoJson'];\n    if (geoJsonChange) {\n      this._manager.updateGeoJson(this, geoJsonChange.currentValue);\n    }\n    let dataOptions = {};\n    AgmDataLayer_1._dataOptionsAttributes.forEach(k => dataOptions[k] = changes.hasOwnProperty(k) ? changes[k].currentValue : this[k]);\n    this._manager.setDataOptions(this, dataOptions);\n  }\n};\nAgmDataLayer._dataOptionsAttributes = ['style'];\nAgmDataLayer.ctorParameters = () => [{\n  type: DataLayerManager\n}];\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmDataLayer.prototype, \"layerClick\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmDataLayer.prototype, \"geoJson\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Function)], AgmDataLayer.prototype, \"style\", void 0);\nAgmDataLayer = AgmDataLayer_1 = __decorate([Directive({\n  selector: 'agm-data-layer'\n}), __metadata(\"design:paramtypes\", [DataLayerManager])], AgmDataLayer);\n\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nclass FitBoundsAccessor {}\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\nlet FitBoundsService = class FitBoundsService {\n  constructor(loader) {\n    this._boundsChangeSampleTime$ = new BehaviorSubject(200);\n    this._includeInBounds$ = new BehaviorSubject(new Map());\n    this.bounds$ = from(loader.load()).pipe(flatMap(() => this._includeInBounds$), sample(this._boundsChangeSampleTime$.pipe(switchMap(time => timer(0, time)))), map(includeInBounds => this._generateBounds(includeInBounds)), shareReplay(1));\n  }\n  _generateBounds(includeInBounds) {\n    const bounds = new google.maps.LatLngBounds();\n    includeInBounds.forEach(b => bounds.extend(b));\n    return bounds;\n  }\n  addToBounds(latLng) {\n    const id = this._createIdentifier(latLng);\n    if (this._includeInBounds$.value.has(id)) {\n      return;\n    }\n    const map = this._includeInBounds$.value;\n    map.set(id, latLng);\n    this._includeInBounds$.next(map);\n  }\n  removeFromBounds(latLng) {\n    const map = this._includeInBounds$.value;\n    map.delete(this._createIdentifier(latLng));\n    this._includeInBounds$.next(map);\n  }\n  changeFitBoundsChangeSampleTime(timeMs) {\n    this._boundsChangeSampleTime$.next(timeMs);\n  }\n  getBounds$() {\n    return this.bounds$;\n  }\n  _createIdentifier(latLng) {\n    return `${latLng.lat}+${latLng.lng}`;\n  }\n};\nFitBoundsService.ctorParameters = () => [{\n  type: MapsAPILoader\n}];\nFitBoundsService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [MapsAPILoader])], FitBoundsService);\n\n/**\n * Adds the given directive to the auto fit bounds feature when the value is true.\n * To make it work with you custom AGM component, you also have to implement the {@link FitBoundsAccessor} abstract class.\n * @example\n * <agm-marker [agmFitBounds]=\"true\"></agm-marker>\n */\nlet AgmFitBounds = class AgmFitBounds {\n  constructor(_fitBoundsAccessor, _fitBoundsService) {\n    this._fitBoundsAccessor = _fitBoundsAccessor;\n    this._fitBoundsService = _fitBoundsService;\n    /**\n     * If the value is true, the element gets added to the bounds of the map.\n     * Default: true.\n     */\n    this.agmFitBounds = true;\n    this._destroyed$ = new Subject();\n    this._latestFitBoundsDetails = null;\n  }\n  /**\n   * @internal\n   */\n  ngOnChanges() {\n    this._updateBounds();\n  }\n  /**\n   * @internal\n   */\n  ngOnInit() {\n    this._fitBoundsAccessor.getFitBoundsDetails$().pipe(distinctUntilChanged((x, y) => x.latLng.lat === y.latLng.lat && x.latLng.lng === y.latLng.lng), takeUntil(this._destroyed$)).subscribe(details => this._updateBounds(details));\n  }\n  /*\n   Either the location changed, or visible status changed.\n   Possible state changes are\n   invisible -> visible\n   visible -> invisible\n   visible -> visible (new location)\n  */\n  _updateBounds(newFitBoundsDetails) {\n    // either visibility will change, or location, so remove the old one anyway\n    if (this._latestFitBoundsDetails) {\n      this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\n      // don't set latestFitBoundsDetails to null, because we can toggle visibility from\n      // true -> false -> true, in which case we still need old value cached here\n    }\n\n    if (newFitBoundsDetails) {\n      this._latestFitBoundsDetails = newFitBoundsDetails;\n    }\n    if (!this._latestFitBoundsDetails) {\n      return;\n    }\n    if (this.agmFitBounds === true) {\n      this._fitBoundsService.addToBounds(this._latestFitBoundsDetails.latLng);\n    }\n  }\n  /**\n   * @internal\n   */\n  ngOnDestroy() {\n    this._destroyed$.next();\n    this._destroyed$.complete();\n    if (this._latestFitBoundsDetails !== null) {\n      this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\n    }\n  }\n};\nAgmFitBounds.ctorParameters = () => [{\n  type: FitBoundsAccessor,\n  decorators: [{\n    type: Self\n  }]\n}, {\n  type: FitBoundsService\n}];\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmFitBounds.prototype, \"agmFitBounds\", void 0);\nAgmFitBounds = __decorate([Directive({\n  selector: '[agmFitBounds]'\n}), __param(0, Self()), __metadata(\"design:paramtypes\", [FitBoundsAccessor, FitBoundsService])], AgmFitBounds);\nlet MarkerManager = class MarkerManager {\n  constructor(_mapsWrapper, _zone) {\n    this._mapsWrapper = _mapsWrapper;\n    this._zone = _zone;\n    this._markers = new Map();\n  }\n  convertAnimation(uiAnim) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (uiAnim === null) {\n        return null;\n      } else {\n        return this._mapsWrapper.getNativeMap().then(() => google.maps.Animation[uiAnim]);\n      }\n    });\n  }\n  deleteMarker(marker) {\n    const m = this._markers.get(marker);\n    if (m == null) {\n      // marker already deleted\n      return Promise.resolve();\n    }\n    return m.then(m => {\n      return this._zone.run(() => {\n        m.setMap(null);\n        this._markers.delete(marker);\n      });\n    });\n  }\n  updateMarkerPosition(marker) {\n    return this._markers.get(marker).then(m => m.setPosition({\n      lat: marker.latitude,\n      lng: marker.longitude\n    }));\n  }\n  updateTitle(marker) {\n    return this._markers.get(marker).then(m => m.setTitle(marker.title));\n  }\n  updateLabel(marker) {\n    return this._markers.get(marker).then(m => {\n      m.setLabel(marker.label);\n    });\n  }\n  updateDraggable(marker) {\n    return this._markers.get(marker).then(m => m.setDraggable(marker.draggable));\n  }\n  updateIcon(marker) {\n    return this._markers.get(marker).then(m => m.setIcon(marker.iconUrl));\n  }\n  updateOpacity(marker) {\n    return this._markers.get(marker).then(m => m.setOpacity(marker.opacity));\n  }\n  updateVisible(marker) {\n    return this._markers.get(marker).then(m => m.setVisible(marker.visible));\n  }\n  updateZIndex(marker) {\n    return this._markers.get(marker).then(m => m.setZIndex(marker.zIndex));\n  }\n  updateClickable(marker) {\n    return this._markers.get(marker).then(m => m.setClickable(marker.clickable));\n  }\n  updateAnimation(marker) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const m = yield this._markers.get(marker);\n      m.setAnimation(yield this.convertAnimation(marker.animation));\n    });\n  }\n  addMarker(marker) {\n    const markerPromise = new Promise(resolve => __awaiter(this, void 0, void 0, function* () {\n      return this._mapsWrapper.createMarker({\n        position: {\n          lat: marker.latitude,\n          lng: marker.longitude\n        },\n        label: marker.label,\n        draggable: marker.draggable,\n        icon: marker.iconUrl,\n        opacity: marker.opacity,\n        visible: marker.visible,\n        zIndex: marker.zIndex,\n        title: marker.title,\n        clickable: marker.clickable,\n        animation: yield this.convertAnimation(marker.animation)\n      }).then(resolve);\n    }));\n    this._markers.set(marker, markerPromise);\n  }\n  getNativeMarker(marker) {\n    return this._markers.get(marker);\n  }\n  createEventObservable(eventName, marker) {\n    return new Observable(observer => {\n      this._markers.get(marker).then(m => {\n        m.addListener(eventName, e => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n};\nMarkerManager.ctorParameters = () => [{\n  type: GoogleMapsAPIWrapper\n}, {\n  type: NgZone\n}];\nMarkerManager = __decorate([Injectable(), __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])], MarkerManager);\nlet InfoWindowManager = class InfoWindowManager {\n  constructor(_mapsWrapper, _zone, _markerManager) {\n    this._mapsWrapper = _mapsWrapper;\n    this._zone = _zone;\n    this._markerManager = _markerManager;\n    this._infoWindows = new Map();\n  }\n  deleteInfoWindow(infoWindow) {\n    const iWindow = this._infoWindows.get(infoWindow);\n    if (iWindow == null) {\n      // info window already deleted\n      return Promise.resolve();\n    }\n    return iWindow.then(i => {\n      return this._zone.run(() => {\n        i.close();\n        this._infoWindows.delete(infoWindow);\n      });\n    });\n  }\n  setPosition(infoWindow) {\n    return this._infoWindows.get(infoWindow).then(i => i.setPosition({\n      lat: infoWindow.latitude,\n      lng: infoWindow.longitude\n    }));\n  }\n  setZIndex(infoWindow) {\n    return this._infoWindows.get(infoWindow).then(i => i.setZIndex(infoWindow.zIndex));\n  }\n  open(infoWindow) {\n    return this._infoWindows.get(infoWindow).then(w => {\n      if (infoWindow.hostMarker != null) {\n        return this._markerManager.getNativeMarker(infoWindow.hostMarker).then(marker => {\n          return this._mapsWrapper.getNativeMap().then(map => w.open(map, marker));\n        });\n      }\n      return this._mapsWrapper.getNativeMap().then(map => w.open(map));\n    });\n  }\n  close(infoWindow) {\n    return this._infoWindows.get(infoWindow).then(w => w.close());\n  }\n  setOptions(infoWindow, options) {\n    return this._infoWindows.get(infoWindow).then(i => i.setOptions(options));\n  }\n  addInfoWindow(infoWindow) {\n    const options = {\n      content: infoWindow.content,\n      maxWidth: infoWindow.maxWidth,\n      zIndex: infoWindow.zIndex,\n      disableAutoPan: infoWindow.disableAutoPan\n    };\n    if (typeof infoWindow.latitude === 'number' && typeof infoWindow.longitude === 'number') {\n      options.position = {\n        lat: infoWindow.latitude,\n        lng: infoWindow.longitude\n      };\n    }\n    const infoWindowPromise = this._mapsWrapper.createInfoWindow(options);\n    this._infoWindows.set(infoWindow, infoWindowPromise);\n  }\n  /**\n   * Creates a Google Maps event listener for the given InfoWindow as an Observable\n   */\n  createEventObservable(eventName, infoWindow) {\n    return new Observable(observer => {\n      this._infoWindows.get(infoWindow).then(i => {\n        i.addListener(eventName, e => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n};\nInfoWindowManager.ctorParameters = () => [{\n  type: GoogleMapsAPIWrapper\n}, {\n  type: NgZone\n}, {\n  type: MarkerManager\n}];\nInfoWindowManager = __decorate([Injectable(), __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone, MarkerManager])], InfoWindowManager);\nvar AgmInfoWindow_1;\nlet infoWindowId = 0;\n/**\n * AgmInfoWindow renders a info window inside a {@link AgmMarker} or standalone.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *        <agm-info-window [disableAutoPan]=\"true\">\n *          Hi, this is the content of the <strong>info window</strong>\n *        </agm-info-window>\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nlet AgmInfoWindow = AgmInfoWindow_1 = class AgmInfoWindow {\n  constructor(_infoWindowManager, _el) {\n    this._infoWindowManager = _infoWindowManager;\n    this._el = _el;\n    /**\n     * Sets the open state for the InfoWindow. You can also call the open() and close() methods.\n     */\n    this.isOpen = false;\n    /**\n     * Emits an event when the info window is closed.\n     */\n    this.infoWindowClose = new EventEmitter();\n    this._infoWindowAddedToManager = false;\n    this._id = (infoWindowId++).toString();\n  }\n  ngOnInit() {\n    this.content = this._el.nativeElement.querySelector('.agm-info-window-content');\n    this._infoWindowManager.addInfoWindow(this);\n    this._infoWindowAddedToManager = true;\n    this._updateOpenState();\n    this._registerEventListeners();\n  }\n  /** @internal */\n  ngOnChanges(changes) {\n    if (!this._infoWindowAddedToManager) {\n      return;\n    }\n    if ((changes['latitude'] || changes['longitude']) && typeof this.latitude === 'number' && typeof this.longitude === 'number') {\n      this._infoWindowManager.setPosition(this);\n    }\n    if (changes['zIndex']) {\n      this._infoWindowManager.setZIndex(this);\n    }\n    if (changes['isOpen']) {\n      this._updateOpenState();\n    }\n    this._setInfoWindowOptions(changes);\n  }\n  _registerEventListeners() {\n    this._infoWindowManager.createEventObservable('closeclick', this).subscribe(() => {\n      this.isOpen = false;\n      this.infoWindowClose.emit();\n    });\n  }\n  _updateOpenState() {\n    this.isOpen ? this.open() : this.close();\n  }\n  _setInfoWindowOptions(changes) {\n    let options = {};\n    let optionKeys = Object.keys(changes).filter(k => AgmInfoWindow_1._infoWindowOptionsInputs.indexOf(k) !== -1);\n    optionKeys.forEach(k => {\n      options[k] = changes[k].currentValue;\n    });\n    this._infoWindowManager.setOptions(this, options);\n  }\n  /**\n   * Opens the info window.\n   */\n  open() {\n    return this._infoWindowManager.open(this);\n  }\n  /**\n   * Closes the info window.\n   */\n  close() {\n    return this._infoWindowManager.close(this).then(() => {\n      this.infoWindowClose.emit();\n    });\n  }\n  /** @internal */\n  id() {\n    return this._id;\n  }\n  /** @internal */\n  toString() {\n    return 'AgmInfoWindow-' + this._id.toString();\n  }\n  /** @internal */\n  ngOnDestroy() {\n    this._infoWindowManager.deleteInfoWindow(this);\n  }\n};\nAgmInfoWindow._infoWindowOptionsInputs = ['disableAutoPan', 'maxWidth'];\nAgmInfoWindow.ctorParameters = () => [{\n  type: InfoWindowManager\n}, {\n  type: ElementRef\n}];\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmInfoWindow.prototype, \"latitude\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmInfoWindow.prototype, \"longitude\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Boolean)], AgmInfoWindow.prototype, \"disableAutoPan\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmInfoWindow.prototype, \"zIndex\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmInfoWindow.prototype, \"maxWidth\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmInfoWindow.prototype, \"isOpen\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmInfoWindow.prototype, \"infoWindowClose\", void 0);\nAgmInfoWindow = AgmInfoWindow_1 = __decorate([Component({\n  selector: 'agm-info-window',\n  template: `<div class='agm-info-window-content'>\n      <ng-content></ng-content>\n    </div>\n  `\n}), __metadata(\"design:paramtypes\", [InfoWindowManager, ElementRef])], AgmInfoWindow);\n\n/**\n * Manages all KML Layers for a Google Map instance.\n */\nlet KmlLayerManager = class KmlLayerManager {\n  constructor(_wrapper, _zone) {\n    this._wrapper = _wrapper;\n    this._zone = _zone;\n    this._layers = new Map();\n  }\n  /**\n   * Adds a new KML Layer to the map.\n   */\n  addKmlLayer(layer) {\n    const newLayer = this._wrapper.getNativeMap().then(m => {\n      return new google.maps.KmlLayer({\n        clickable: layer.clickable,\n        map: m,\n        preserveViewport: layer.preserveViewport,\n        screenOverlays: layer.screenOverlays,\n        suppressInfoWindows: layer.suppressInfoWindows,\n        url: layer.url,\n        zIndex: layer.zIndex\n      });\n    });\n    this._layers.set(layer, newLayer);\n  }\n  setOptions(layer, options) {\n    this._layers.get(layer).then(l => l.setOptions(options));\n  }\n  deleteKmlLayer(layer) {\n    this._layers.get(layer).then(l => {\n      l.setMap(null);\n      this._layers.delete(layer);\n    });\n  }\n  /**\n   * Creates a Google Maps event listener for the given KmlLayer as an Observable\n   */\n  createEventObservable(eventName, layer) {\n    return new Observable(observer => {\n      this._layers.get(layer).then(m => {\n        m.addListener(eventName, e => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n};\nKmlLayerManager.ctorParameters = () => [{\n  type: GoogleMapsAPIWrapper\n}, {\n  type: NgZone\n}];\nKmlLayerManager = __decorate([Injectable(), __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])], KmlLayerManager);\nvar AgmKmlLayer_1;\nlet layerId$2 = 0;\nlet AgmKmlLayer = AgmKmlLayer_1 = class AgmKmlLayer {\n  constructor(_manager) {\n    this._manager = _manager;\n    this._addedToManager = false;\n    this._id = (layerId$2++).toString();\n    this._subscriptions = [];\n    /**\n     * If true, the layer receives mouse events. Default value is true.\n     */\n    this.clickable = true;\n    /**\n     * By default, the input map is centered and zoomed to the bounding box of the contents of the\n     * layer.\n     * If this option is set to true, the viewport is left unchanged, unless the map's center and zoom\n     * were never set.\n     */\n    this.preserveViewport = false;\n    /**\n     * Whether to render the screen overlays. Default true.\n     */\n    this.screenOverlays = true;\n    /**\n     * Suppress the rendering of info windows when layer features are clicked.\n     */\n    this.suppressInfoWindows = false;\n    /**\n     * The URL of the KML document to display.\n     */\n    this.url = null;\n    /**\n     * The z-index of the layer.\n     */\n    this.zIndex = null;\n    /**\n     * This event is fired when a feature in the layer is clicked.\n     */\n    this.layerClick = new EventEmitter();\n    /**\n     * This event is fired when the KML layers default viewport has changed.\n     */\n    this.defaultViewportChange = new EventEmitter();\n    /**\n     * This event is fired when the KML layer has finished loading.\n     * At this point it is safe to read the status property to determine if the layer loaded\n     * successfully.\n     */\n    this.statusChange = new EventEmitter();\n  }\n  ngOnInit() {\n    if (this._addedToManager) {\n      return;\n    }\n    this._manager.addKmlLayer(this);\n    this._addedToManager = true;\n    this._addEventListeners();\n  }\n  ngOnChanges(changes) {\n    if (!this._addedToManager) {\n      return;\n    }\n    this._updatePolygonOptions(changes);\n  }\n  _updatePolygonOptions(changes) {\n    const options = Object.keys(changes).filter(k => AgmKmlLayer_1._kmlLayerOptions.indexOf(k) !== -1).reduce((obj, k) => {\n      obj[k] = changes[k].currentValue;\n      return obj;\n    }, {});\n    if (Object.keys(options).length > 0) {\n      this._manager.setOptions(this, options);\n    }\n  }\n  _addEventListeners() {\n    const listeners = [{\n      name: 'click',\n      handler: ev => this.layerClick.emit(ev)\n    }, {\n      name: 'defaultviewport_changed',\n      handler: () => this.defaultViewportChange.emit()\n    }, {\n      name: 'status_changed',\n      handler: () => this.statusChange.emit()\n    }];\n    listeners.forEach(obj => {\n      const os = this._manager.createEventObservable(obj.name, this).subscribe(obj.handler);\n      this._subscriptions.push(os);\n    });\n  }\n  /** @internal */\n  id() {\n    return this._id;\n  }\n  /** @internal */\n  toString() {\n    return `AgmKmlLayer-${this._id.toString()}`;\n  }\n  /** @internal */\n  ngOnDestroy() {\n    this._manager.deleteKmlLayer(this);\n    // unsubscribe all registered observable subscriptions\n    this._subscriptions.forEach(s => s.unsubscribe());\n  }\n};\nAgmKmlLayer._kmlLayerOptions = ['clickable', 'preserveViewport', 'screenOverlays', 'suppressInfoWindows', 'url', 'zIndex'];\nAgmKmlLayer.ctorParameters = () => [{\n  type: KmlLayerManager\n}];\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmKmlLayer.prototype, \"clickable\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmKmlLayer.prototype, \"preserveViewport\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmKmlLayer.prototype, \"screenOverlays\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmKmlLayer.prototype, \"suppressInfoWindows\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmKmlLayer.prototype, \"url\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmKmlLayer.prototype, \"zIndex\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmKmlLayer.prototype, \"layerClick\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmKmlLayer.prototype, \"defaultViewportChange\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmKmlLayer.prototype, \"statusChange\", void 0);\nAgmKmlLayer = AgmKmlLayer_1 = __decorate([Directive({\n  selector: 'agm-kml-layer'\n}), __metadata(\"design:paramtypes\", [KmlLayerManager])], AgmKmlLayer);\nfunction createMVCEventObservable(array) {\n  const eventNames = ['insert_at', 'remove_at', 'set_at'];\n  return fromEventPattern(handler => eventNames.map(evName => array.addListener(evName, (index, previous) => handler.apply(array, [{\n    'newArr': array.getArray(),\n    evName,\n    index,\n    previous\n  }]))), (_handler, evListeners) => evListeners.forEach(evListener => evListener.remove()));\n}\nclass MvcArrayMock {\n  constructor() {\n    this.vals = [];\n    this.listeners = {\n      'remove_at': [],\n      'insert_at': [],\n      'set_at': []\n    };\n  }\n  clear() {\n    for (let i = this.vals.length - 1; i >= 0; i--) {\n      this.removeAt(i);\n    }\n  }\n  getArray() {\n    return [...this.vals];\n  }\n  getAt(i) {\n    return this.vals[i];\n  }\n  getLength() {\n    return this.vals.length;\n  }\n  insertAt(i, elem) {\n    this.vals.splice(i, 0, elem);\n    this.listeners.insert_at.map(listener => listener(i));\n  }\n  pop() {\n    const deleted = this.vals.pop();\n    this.listeners.remove_at.map(listener => listener(this.vals.length, deleted));\n    return deleted;\n  }\n  push(elem) {\n    this.vals.push(elem);\n    this.listeners.insert_at.map(listener => listener(this.vals.length - 1));\n    return this.vals.length;\n  }\n  removeAt(i) {\n    const deleted = this.vals.splice(i, 1)[0];\n    this.listeners.remove_at.map(listener => listener(i, deleted));\n    return deleted;\n  }\n  setAt(i, elem) {\n    const deleted = this.vals[i];\n    this.vals[i] = elem;\n    this.listeners.set_at.map(listener => listener(i, deleted));\n  }\n  forEach(callback) {\n    this.vals.forEach(callback);\n  }\n  addListener(eventName, handler) {\n    const listenerArr = this.listeners[eventName];\n    listenerArr.push(handler);\n    return {\n      remove: () => {\n        listenerArr.splice(listenerArr.indexOf(handler), 1);\n      }\n    };\n  }\n}\nlet PolygonManager = class PolygonManager {\n  constructor(_mapsWrapper, _zone) {\n    this._mapsWrapper = _mapsWrapper;\n    this._zone = _zone;\n    this._polygons = new Map();\n  }\n  addPolygon(path) {\n    const polygonPromise = this._mapsWrapper.createPolygon({\n      clickable: path.clickable,\n      draggable: path.draggable,\n      editable: path.editable,\n      fillColor: path.fillColor,\n      fillOpacity: path.fillOpacity,\n      geodesic: path.geodesic,\n      paths: path.paths,\n      strokeColor: path.strokeColor,\n      strokeOpacity: path.strokeOpacity,\n      strokeWeight: path.strokeWeight,\n      visible: path.visible,\n      zIndex: path.zIndex\n    });\n    this._polygons.set(path, polygonPromise);\n  }\n  updatePolygon(polygon) {\n    const m = this._polygons.get(polygon);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    return m.then(l => this._zone.run(() => {\n      l.setPaths(polygon.paths);\n    }));\n  }\n  setPolygonOptions(path, options) {\n    return this._polygons.get(path).then(l => {\n      l.setOptions(options);\n    });\n  }\n  deletePolygon(paths) {\n    const m = this._polygons.get(paths);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    return m.then(l => {\n      return this._zone.run(() => {\n        l.setMap(null);\n        this._polygons.delete(paths);\n      });\n    });\n  }\n  getPath(polygon) {\n    return this._polygons.get(polygon).then(polygon => polygon.getPath().getArray());\n  }\n  getPaths(polygon) {\n    return this._polygons.get(polygon).then(polygon => polygon.getPaths().getArray().map(p => p.getArray()));\n  }\n  createEventObservable(eventName, path) {\n    return new Observable(observer => {\n      this._polygons.get(path).then(l => {\n        l.addListener(eventName, e => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n  createPathEventObservable(agmPolygon) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const polygon = yield this._polygons.get(agmPolygon);\n      const paths = polygon.getPaths();\n      const pathsChanges$ = createMVCEventObservable(paths);\n      return pathsChanges$.pipe(startWith({\n        newArr: paths.getArray()\n      }),\n      // in order to subscribe to them all\n      switchMap(parentMVEvent => merge(...\n      // rest parameter\n      parentMVEvent.newArr.map((chMVC, index) => createMVCEventObservable(chMVC).pipe(map(chMVCEvent => ({\n        parentMVEvent,\n        chMVCEvent,\n        pathIndex: index\n      }))))).pipe(startWith({\n        parentMVEvent,\n        chMVCEvent: null,\n        pathIndex: null\n      }))),\n      // start the merged ob with an event signinifing change to parent\n      skip(1),\n      // skip the manually added event\n      map(({\n        parentMVEvent,\n        chMVCEvent,\n        pathIndex\n      }) => {\n        let retVal;\n        if (!chMVCEvent) {\n          retVal = {\n            newArr: parentMVEvent.newArr.map(subArr => subArr.getArray().map(latLng => latLng.toJSON())),\n            eventName: parentMVEvent.evName,\n            index: parentMVEvent.index\n          };\n          if (parentMVEvent.previous) {\n            retVal.previous = parentMVEvent.previous.getArray();\n          }\n        } else {\n          retVal = {\n            newArr: parentMVEvent.newArr.map(subArr => subArr.getArray().map(latLng => latLng.toJSON())),\n            pathIndex,\n            eventName: chMVCEvent.evName,\n            index: chMVCEvent.index\n          };\n          if (chMVCEvent.previous) {\n            retVal.previous = chMVCEvent.previous;\n          }\n        }\n        return retVal;\n      }));\n    });\n  }\n};\nPolygonManager.ctorParameters = () => [{\n  type: GoogleMapsAPIWrapper\n}, {\n  type: NgZone\n}];\nPolygonManager = __decorate([Injectable(), __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])], PolygonManager);\nvar PolylineManager_1;\nlet PolylineManager = PolylineManager_1 = class PolylineManager {\n  constructor(_mapsWrapper, _zone) {\n    this._mapsWrapper = _mapsWrapper;\n    this._zone = _zone;\n    this._polylines = new Map();\n  }\n  static _convertPoints(line) {\n    const path = line._getPoints().map(point => {\n      return {\n        lat: point.latitude,\n        lng: point.longitude\n      };\n    });\n    return path;\n  }\n  static _convertPath(path) {\n    const symbolPath = google.maps.SymbolPath[path];\n    if (typeof symbolPath === 'number') {\n      return symbolPath;\n    } else {\n      return path;\n    }\n  }\n  static _convertIcons(line) {\n    const icons = line._getIcons().map(agmIcon => ({\n      fixedRotation: agmIcon.fixedRotation,\n      offset: agmIcon.offset,\n      repeat: agmIcon.repeat,\n      icon: {\n        anchor: new google.maps.Point(agmIcon.anchorX, agmIcon.anchorY),\n        fillColor: agmIcon.fillColor,\n        fillOpacity: agmIcon.fillOpacity,\n        path: PolylineManager_1._convertPath(agmIcon.path),\n        rotation: agmIcon.rotation,\n        scale: agmIcon.scale,\n        strokeColor: agmIcon.strokeColor,\n        strokeOpacity: agmIcon.strokeOpacity,\n        strokeWeight: agmIcon.strokeWeight\n      }\n    }));\n    // prune undefineds;\n    icons.forEach(icon => {\n      Object.entries(icon).forEach(([key, val]) => {\n        if (typeof val === 'undefined') {\n          delete icon[key];\n        }\n      });\n      if (typeof icon.icon.anchor.x === 'undefined' || typeof icon.icon.anchor.y === 'undefined') {\n        delete icon.icon.anchor;\n      }\n    });\n    return icons;\n  }\n  addPolyline(line) {\n    const polylinePromise = this._mapsWrapper.getNativeMap().then(() => [PolylineManager_1._convertPoints(line), PolylineManager_1._convertIcons(line)]).then(([path, icons]) => this._mapsWrapper.createPolyline({\n      clickable: line.clickable,\n      draggable: line.draggable,\n      editable: line.editable,\n      geodesic: line.geodesic,\n      strokeColor: line.strokeColor,\n      strokeOpacity: line.strokeOpacity,\n      strokeWeight: line.strokeWeight,\n      visible: line.visible,\n      zIndex: line.zIndex,\n      path: path,\n      icons: icons\n    }));\n    this._polylines.set(line, polylinePromise);\n  }\n  updatePolylinePoints(line) {\n    const path = PolylineManager_1._convertPoints(line);\n    const m = this._polylines.get(line);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    return m.then(l => {\n      return this._zone.run(() => {\n        l.setPath(path);\n      });\n    });\n  }\n  updateIconSequences(line) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this._mapsWrapper.getNativeMap();\n      const icons = PolylineManager_1._convertIcons(line);\n      const m = this._polylines.get(line);\n      if (m == null) {\n        return;\n      }\n      return m.then(l => this._zone.run(() => l.setOptions({\n        icons: icons\n      })));\n    });\n  }\n  setPolylineOptions(line, options) {\n    return this._polylines.get(line).then(l => {\n      l.setOptions(options);\n    });\n  }\n  deletePolyline(line) {\n    const m = this._polylines.get(line);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    return m.then(l => {\n      return this._zone.run(() => {\n        l.setMap(null);\n        this._polylines.delete(line);\n      });\n    });\n  }\n  getMVCPath(agmPolyline) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const polyline = yield this._polylines.get(agmPolyline);\n      return polyline.getPath();\n    });\n  }\n  getPath(agmPolyline) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return (yield this.getMVCPath(agmPolyline)).getArray();\n    });\n  }\n  createEventObservable(eventName, line) {\n    return new Observable(observer => {\n      this._polylines.get(line).then(l => {\n        l.addListener(eventName, e => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n  createPathEventObservable(line) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const mvcPath = yield this.getMVCPath(line);\n      return createMVCEventObservable(mvcPath);\n    });\n  }\n};\nPolylineManager.ctorParameters = () => [{\n  type: GoogleMapsAPIWrapper\n}, {\n  type: NgZone\n}];\nPolylineManager = PolylineManager_1 = __decorate([Injectable(), __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])], PolylineManager);\nlet RectangleManager = class RectangleManager {\n  constructor(_apiWrapper, _zone) {\n    this._apiWrapper = _apiWrapper;\n    this._zone = _zone;\n    this._rectangles = new Map();\n  }\n  addRectangle(rectangle) {\n    this._rectangles.set(rectangle, this._apiWrapper.createRectangle({\n      bounds: {\n        north: rectangle.north,\n        east: rectangle.east,\n        south: rectangle.south,\n        west: rectangle.west\n      },\n      clickable: rectangle.clickable,\n      draggable: rectangle.draggable,\n      editable: rectangle.editable,\n      fillColor: rectangle.fillColor,\n      fillOpacity: rectangle.fillOpacity,\n      strokeColor: rectangle.strokeColor,\n      strokeOpacity: rectangle.strokeOpacity,\n      strokePosition: rectangle.strokePosition,\n      strokeWeight: rectangle.strokeWeight,\n      visible: rectangle.visible,\n      zIndex: rectangle.zIndex\n    }));\n  }\n  /**\n   * Removes the given rectangle from the map.\n   */\n  removeRectangle(rectangle) {\n    return this._rectangles.get(rectangle).then(r => {\n      r.setMap(null);\n      this._rectangles.delete(rectangle);\n    });\n  }\n  setOptions(rectangle, options) {\n    return this._rectangles.get(rectangle).then(r => r.setOptions(options));\n  }\n  getBounds(rectangle) {\n    return this._rectangles.get(rectangle).then(r => r.getBounds());\n  }\n  setBounds(rectangle) {\n    return this._rectangles.get(rectangle).then(r => {\n      return r.setBounds({\n        north: rectangle.north,\n        east: rectangle.east,\n        south: rectangle.south,\n        west: rectangle.west\n      });\n    });\n  }\n  setEditable(rectangle) {\n    return this._rectangles.get(rectangle).then(r => {\n      return r.setEditable(rectangle.editable);\n    });\n  }\n  setDraggable(rectangle) {\n    return this._rectangles.get(rectangle).then(r => {\n      return r.setDraggable(rectangle.draggable);\n    });\n  }\n  setVisible(rectangle) {\n    return this._rectangles.get(rectangle).then(r => {\n      return r.setVisible(rectangle.visible);\n    });\n  }\n  createEventObservable(eventName, rectangle) {\n    return Observable.create(observer => {\n      let listener = null;\n      this._rectangles.get(rectangle).then(r => {\n        listener = r.addListener(eventName, e => this._zone.run(() => observer.next(e)));\n      });\n      return () => {\n        if (listener !== null) {\n          listener.remove();\n        }\n      };\n    });\n  }\n};\nRectangleManager.ctorParameters = () => [{\n  type: GoogleMapsAPIWrapper\n}, {\n  type: NgZone\n}];\nRectangleManager = __decorate([Injectable(), __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])], RectangleManager);\nvar AgmMap_1;\n/**\n * AgmMap renders a Google Map.\n * **Important note**: To be able see a map in the browser, you have to define a height for the\n * element `agm-map`.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *    </agm-map>\n *  `\n * })\n * ```\n */\nlet AgmMap = AgmMap_1 = class AgmMap {\n  constructor(_elem, _mapsWrapper, _platformId, _fitBoundsService, _zone) {\n    this._elem = _elem;\n    this._mapsWrapper = _mapsWrapper;\n    this._platformId = _platformId;\n    this._fitBoundsService = _fitBoundsService;\n    this._zone = _zone;\n    /**\n     * The longitude that defines the center of the map.\n     */\n    this.longitude = 0;\n    /**\n     * The latitude that defines the center of the map.\n     */\n    this.latitude = 0;\n    /**\n     * The zoom level of the map. The default zoom level is 8.\n     */\n    this.zoom = 8;\n    /**\n     * Enables/disables if map is draggable.\n     */\n    // tslint:disable-next-line:no-input-rename\n    this.draggable = true;\n    /**\n     * Enables/disables zoom and center on double click. Enabled by default.\n     */\n    this.disableDoubleClickZoom = false;\n    /**\n     * Enables/disables all default UI of the Google map. Please note: When the map is created, this\n     * value cannot get updated.\n     */\n    this.disableDefaultUI = false;\n    /**\n     * If false, disables scrollwheel zooming on the map. The scrollwheel is enabled by default.\n     */\n    this.scrollwheel = true;\n    /**\n     * If false, prevents the map from being controlled by the keyboard. Keyboard shortcuts are\n     * enabled by default.\n     */\n    this.keyboardShortcuts = true;\n    /**\n     * Styles to apply to each of the default map types. Note that for Satellite/Hybrid and Terrain\n     * modes, these styles will only apply to labels and geometry.\n     */\n    this.styles = [];\n    /**\n     * When true and the latitude and/or longitude values changes, the Google Maps panTo method is\n     * used to\n     * center the map. See: https://developers.google.com/maps/documentation/javascript/reference#Map\n     */\n    this.usePanning = false;\n    /**\n     * Sets the viewport to contain the given bounds.\n     * If this option to `true`, the bounds get automatically computed from all elements that use the {@link AgmFitBounds} directive.\n     */\n    this.fitBounds = false;\n    /**\n     * The initial enabled/disabled state of the Scale control. This is disabled by default.\n     */\n    this.scaleControl = false;\n    /**\n     * The initial enabled/disabled state of the Map type control.\n     */\n    this.mapTypeControl = false;\n    /**\n     * The initial enabled/disabled state of the Pan control.\n     */\n    this.panControl = false;\n    /**\n     * The initial enabled/disabled state of the Rotate control.\n     */\n    this.rotateControl = false;\n    /**\n     * The initial enabled/disabled state of the Fullscreen control.\n     */\n    this.fullscreenControl = false;\n    /**\n     * The map mapTypeId. Defaults to 'roadmap'.\n     */\n    this.mapTypeId = 'roadmap';\n    /**\n     * When false, map icons are not clickable. A map icon represents a point of interest,\n     * also known as a POI. By default map icons are clickable.\n     */\n    this.clickableIcons = true;\n    /**\n     * A map icon represents a point of interest, also known as a POI.\n     * When map icons are clickable by default, an info window is displayed.\n     * When this property is set to false, the info window will not be shown but the click event\n     * will still fire\n     */\n    this.showDefaultInfoWindow = true;\n    /**\n     * This setting controls how gestures on the map are handled.\n     * Allowed values:\n     * - 'cooperative' (Two-finger touch gestures pan and zoom the map. One-finger touch gestures are not handled by the map.)\n     * - 'greedy'      (All touch gestures pan or zoom the map.)\n     * - 'none'        (The map cannot be panned or zoomed by user gestures.)\n     * - 'auto'        [default] (Gesture handling is either cooperative or greedy, depending on whether the page is scrollable or not.\n     */\n    this.gestureHandling = 'auto';\n    /**\n     * Controls the automatic switching behavior for the angle of incidence of\n     * the map. The only allowed values are 0 and 45. The value 0 causes the map\n     * to always use a 0° overhead view regardless of the zoom level and\n     * viewport. The value 45 causes the tilt angle to automatically switch to\n     * 45 whenever 45° imagery is available for the current zoom level and\n     * viewport, and switch back to 0 whenever 45° imagery is not available\n     * (this is the default behavior). 45° imagery is only available for\n     * satellite and hybrid map types, within some locations, and at some zoom\n     * levels. Note: getTilt returns the current tilt angle, not the value\n     * specified by this option. Because getTilt and this option refer to\n     * different things, do not bind() the tilt property; doing so may yield\n     * unpredictable effects. (Default of AGM is 0 (disabled). Enable it with value 45.)\n     */\n    this.tilt = 0;\n    this._observableSubscriptions = [];\n    /**\n     * This event emitter gets emitted when the user clicks on the map (but not when they click on a\n     * marker or infoWindow).\n     */\n    this.mapClick = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user right-clicks on the map (but not when they click\n     * on a marker or infoWindow).\n     */\n    this.mapRightClick = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user double-clicks on the map (but not when they click\n     * on a marker or infoWindow).\n     */\n    this.mapDblClick = new EventEmitter();\n    /**\n     * This event emitter is fired when the map center changes.\n     */\n    this.centerChange = new EventEmitter();\n    /**\n     * This event is fired when the viewport bounds have changed.\n     */\n    this.boundsChange = new EventEmitter();\n    /**\n     * This event is fired when the mapTypeId property changes.\n     */\n    this.mapTypeIdChange = new EventEmitter();\n    /**\n     * This event is fired when the map becomes idle after panning or zooming.\n     */\n    this.idle = new EventEmitter();\n    /**\n     * This event is fired when the zoom level has changed.\n     */\n    this.zoomChange = new EventEmitter();\n    /**\n     * This event is fired when the google map is fully initialized.\n     * You get the google.maps.Map instance as a result of this EventEmitter.\n     */\n    this.mapReady = new EventEmitter();\n    /**\n     * This event is fired when the visible tiles have finished loading.\n     */\n    this.tilesLoaded = new EventEmitter();\n  }\n  /** @internal */\n  ngOnInit() {\n    if (isPlatformServer(this._platformId)) {\n      // The code is running on the server, do nothing\n      return;\n    }\n    // todo: this should be solved with a new component and a viewChild decorator\n    const container = this._elem.nativeElement.querySelector('.agm-map-container-inner');\n    this._initMapInstance(container);\n  }\n  _initMapInstance(el) {\n    this._mapsWrapper.createMap(el, {\n      center: {\n        lat: this.latitude || 0,\n        lng: this.longitude || 0\n      },\n      zoom: this.zoom,\n      minZoom: this.minZoom,\n      maxZoom: this.maxZoom,\n      controlSize: this.controlSize,\n      disableDefaultUI: this.disableDefaultUI,\n      disableDoubleClickZoom: this.disableDoubleClickZoom,\n      scrollwheel: this.scrollwheel,\n      backgroundColor: this.backgroundColor,\n      draggable: this.draggable,\n      draggableCursor: this.draggableCursor,\n      draggingCursor: this.draggingCursor,\n      keyboardShortcuts: this.keyboardShortcuts,\n      styles: this.styles,\n      zoomControl: this.zoomControl,\n      zoomControlOptions: this.zoomControlOptions,\n      streetViewControl: this.streetViewControl,\n      streetViewControlOptions: this.streetViewControlOptions,\n      scaleControl: this.scaleControl,\n      scaleControlOptions: this.scaleControlOptions,\n      mapTypeControl: this.mapTypeControl,\n      mapTypeControlOptions: this.mapTypeControlOptions,\n      panControl: this.panControl,\n      panControlOptions: this.panControlOptions,\n      rotateControl: this.rotateControl,\n      rotateControlOptions: this.rotateControlOptions,\n      fullscreenControl: this.fullscreenControl,\n      fullscreenControlOptions: this.fullscreenControlOptions,\n      mapTypeId: this.mapTypeId,\n      clickableIcons: this.clickableIcons,\n      gestureHandling: this.gestureHandling,\n      tilt: this.tilt,\n      restriction: this.restriction\n    }).then(() => this._mapsWrapper.getNativeMap()).then(map => this.mapReady.emit(map));\n    // register event listeners\n    this._handleMapCenterChange();\n    this._handleMapZoomChange();\n    this._handleMapMouseEvents();\n    this._handleBoundsChange();\n    this._handleMapTypeIdChange();\n    this._handleTilesLoadedEvent();\n    this._handleIdleEvent();\n  }\n  /** @internal */\n  ngOnDestroy() {\n    // unsubscribe all registered observable subscriptions\n    this._observableSubscriptions.forEach(s => s.unsubscribe());\n    // remove all listeners from the map instance\n    this._mapsWrapper.clearInstanceListeners();\n    if (this._fitBoundsSubscription) {\n      this._fitBoundsSubscription.unsubscribe();\n    }\n  }\n  /* @internal */\n  ngOnChanges(changes) {\n    this._updateMapOptionsChanges(changes);\n    this._updatePosition(changes);\n  }\n  _updateMapOptionsChanges(changes) {\n    let options = {};\n    let optionKeys = Object.keys(changes).filter(k => AgmMap_1._mapOptionsAttributes.indexOf(k) !== -1);\n    optionKeys.forEach(k => {\n      options[k] = changes[k].currentValue;\n    });\n    this._mapsWrapper.setMapOptions(options);\n  }\n  /**\n   * Triggers a resize event on the google map instance.\n   * When recenter is true, the of the google map gets called with the current lat/lng values or fitBounds value to recenter the map.\n   * Returns a promise that gets resolved after the event was triggered.\n   */\n  triggerResize(recenter = true) {\n    // Note: When we would trigger the resize event and show the map in the same turn (which is a\n    // common case for triggering a resize event), then the resize event would not\n    // work (to show the map), so we trigger the event in a timeout.\n    return new Promise(resolve => {\n      setTimeout(() => {\n        return this._mapsWrapper.triggerMapEvent('resize').then(() => {\n          if (recenter) {\n            this.fitBounds != null ? this._fitBounds() : this._setCenter();\n          }\n          resolve();\n        });\n      });\n    });\n  }\n  _updatePosition(changes) {\n    if (changes['latitude'] == null && changes['longitude'] == null && !changes['fitBounds']) {\n      // no position update needed\n      return;\n    }\n    // we prefer fitBounds in changes\n    if ('fitBounds' in changes) {\n      this._fitBounds();\n      return;\n    }\n    if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n      return;\n    }\n    this._setCenter();\n  }\n  _setCenter() {\n    let newCenter = {\n      lat: this.latitude,\n      lng: this.longitude\n    };\n    if (this.usePanning) {\n      this._mapsWrapper.panTo(newCenter);\n    } else {\n      this._mapsWrapper.setCenter(newCenter);\n    }\n  }\n  _fitBounds() {\n    switch (this.fitBounds) {\n      case true:\n        this._subscribeToFitBoundsUpdates();\n        break;\n      case false:\n        if (this._fitBoundsSubscription) {\n          this._fitBoundsSubscription.unsubscribe();\n        }\n        break;\n      default:\n        this._updateBounds(this.fitBounds, this.fitBoundsPadding);\n    }\n  }\n  _subscribeToFitBoundsUpdates() {\n    this._zone.runOutsideAngular(() => {\n      this._fitBoundsSubscription = this._fitBoundsService.getBounds$().subscribe(b => {\n        this._zone.run(() => this._updateBounds(b, this.fitBoundsPadding));\n      });\n    });\n  }\n  _updateBounds(bounds, padding) {\n    if (!bounds) {\n      return;\n    }\n    if (this._isLatLngBoundsLiteral(bounds) && typeof google !== 'undefined' && google && google.maps && google.maps.LatLngBounds) {\n      const newBounds = new google.maps.LatLngBounds();\n      newBounds.union(bounds);\n      bounds = newBounds;\n    }\n    if (this.usePanning) {\n      this._mapsWrapper.panToBounds(bounds, padding);\n      return;\n    }\n    this._mapsWrapper.fitBounds(bounds, padding);\n  }\n  _isLatLngBoundsLiteral(bounds) {\n    return bounds != null && bounds.extend === undefined;\n  }\n  _handleMapCenterChange() {\n    const s = this._mapsWrapper.subscribeToMapEvent('center_changed').subscribe(() => {\n      this._mapsWrapper.getCenter().then(center => {\n        this.latitude = center.lat();\n        this.longitude = center.lng();\n        this.centerChange.emit({\n          lat: this.latitude,\n          lng: this.longitude\n        });\n      });\n    });\n    this._observableSubscriptions.push(s);\n  }\n  _handleBoundsChange() {\n    const s = this._mapsWrapper.subscribeToMapEvent('bounds_changed').subscribe(() => {\n      this._mapsWrapper.getBounds().then(bounds => {\n        this.boundsChange.emit(bounds);\n      });\n    });\n    this._observableSubscriptions.push(s);\n  }\n  _handleMapTypeIdChange() {\n    const s = this._mapsWrapper.subscribeToMapEvent('maptypeid_changed').subscribe(() => {\n      this._mapsWrapper.getMapTypeId().then(mapTypeId => {\n        this.mapTypeIdChange.emit(mapTypeId);\n      });\n    });\n    this._observableSubscriptions.push(s);\n  }\n  _handleMapZoomChange() {\n    const s = this._mapsWrapper.subscribeToMapEvent('zoom_changed').subscribe(() => {\n      this._mapsWrapper.getZoom().then(z => {\n        this.zoom = z;\n        this.zoomChange.emit(z);\n      });\n    });\n    this._observableSubscriptions.push(s);\n  }\n  _handleIdleEvent() {\n    const s = this._mapsWrapper.subscribeToMapEvent('idle').subscribe(() => {\n      this.idle.emit(void 0);\n    });\n    this._observableSubscriptions.push(s);\n  }\n  _handleTilesLoadedEvent() {\n    const s = this._mapsWrapper.subscribeToMapEvent('tilesloaded').subscribe(() => this.tilesLoaded.emit(void 0));\n    this._observableSubscriptions.push(s);\n  }\n  _handleMapMouseEvents() {\n    const events = [{\n      name: 'click',\n      emitter: this.mapClick\n    }, {\n      name: 'rightclick',\n      emitter: this.mapRightClick\n    }, {\n      name: 'dblclick',\n      emitter: this.mapDblClick\n    }];\n    events.forEach(e => {\n      const s = this._mapsWrapper.subscribeToMapEvent(e.name).subscribe(event => {\n        let value = {\n          coords: {\n            lat: event.latLng.lat(),\n            lng: event.latLng.lng()\n          },\n          placeId: event.placeId\n        };\n        // the placeId will be undefined in case the event was not an IconMouseEvent (google types)\n        if (value.placeId && !this.showDefaultInfoWindow) {\n          event.stop();\n        }\n        e.emitter.emit(value);\n      });\n      this._observableSubscriptions.push(s);\n    });\n  }\n};\n/**\n * Map option attributes that can change over time\n */\nAgmMap._mapOptionsAttributes = ['disableDoubleClickZoom', 'scrollwheel', 'draggable', 'draggableCursor', 'draggingCursor', 'keyboardShortcuts', 'zoomControl', 'zoomControlOptions', 'styles', 'streetViewControl', 'streetViewControlOptions', 'zoom', 'mapTypeControl', 'mapTypeControlOptions', 'minZoom', 'maxZoom', 'panControl', 'panControlOptions', 'rotateControl', 'rotateControlOptions', 'fullscreenControl', 'fullscreenControlOptions', 'scaleControl', 'scaleControlOptions', 'mapTypeId', 'clickableIcons', 'gestureHandling', 'tilt', 'restriction'];\nAgmMap.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: GoogleMapsAPIWrapper\n}, {\n  type: Object,\n  decorators: [{\n    type: Inject,\n    args: [PLATFORM_ID]\n  }]\n}, {\n  type: FitBoundsService\n}, {\n  type: NgZone\n}];\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"longitude\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"latitude\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"zoom\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmMap.prototype, \"minZoom\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmMap.prototype, \"maxZoom\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmMap.prototype, \"controlSize\", void 0);\n__decorate([Input('mapDraggable'), __metadata(\"design:type\", Object)], AgmMap.prototype, \"draggable\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"disableDoubleClickZoom\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"disableDefaultUI\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"scrollwheel\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmMap.prototype, \"backgroundColor\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmMap.prototype, \"draggableCursor\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmMap.prototype, \"draggingCursor\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"keyboardShortcuts\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Boolean)], AgmMap.prototype, \"zoomControl\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"zoomControlOptions\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Array)], AgmMap.prototype, \"styles\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"usePanning\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Boolean)], AgmMap.prototype, \"streetViewControl\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"streetViewControlOptions\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"fitBounds\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"fitBoundsPadding\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"scaleControl\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"scaleControlOptions\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"mapTypeControl\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"mapTypeControlOptions\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"panControl\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"panControlOptions\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"rotateControl\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"rotateControlOptions\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"fullscreenControl\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"fullscreenControlOptions\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmMap.prototype, \"mapTypeId\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"clickableIcons\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"showDefaultInfoWindow\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmMap.prototype, \"gestureHandling\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"tilt\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"restriction\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"mapClick\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"mapRightClick\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"mapDblClick\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"centerChange\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"boundsChange\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"mapTypeIdChange\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"idle\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"zoomChange\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"mapReady\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"tilesLoaded\", void 0);\nAgmMap = AgmMap_1 = __decorate([Component({\n  selector: 'agm-map',\n  providers: [CircleManager, DataLayerManager, DataLayerManager, FitBoundsService, GoogleMapsAPIWrapper, InfoWindowManager, KmlLayerManager, LayerManager, MarkerManager, PolygonManager, PolylineManager, RectangleManager],\n  host: {\n    // todo: deprecated - we will remove it with the next version\n    '[class.sebm-google-map-container]': 'true'\n  },\n  template: `\n              <div class='agm-map-container-inner sebm-google-map-container-inner'></div>\n              <div class='agm-map-content'>\n                <ng-content></ng-content>\n              </div>\n  `,\n  styles: [`\n    .agm-map-container-inner {\n      width: inherit;\n      height: inherit;\n    }\n    .agm-map-content {\n      display:none;\n    }\n  `]\n}), __param(2, Inject(PLATFORM_ID)), __metadata(\"design:paramtypes\", [ElementRef, GoogleMapsAPIWrapper, Object, FitBoundsService, NgZone])], AgmMap);\nvar AgmMarker_1;\nlet markerId = 0;\n/**\n * AgmMarker renders a map marker inside a {@link AgmMap}.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nlet AgmMarker = AgmMarker_1 = class AgmMarker {\n  constructor(_markerManager) {\n    this._markerManager = _markerManager;\n    /**\n     * If true, the marker can be dragged. Default value is false.\n     */\n    // tslint:disable-next-line:no-input-rename\n    this.draggable = false;\n    /**\n     * If true, the marker is visible\n     */\n    this.visible = true;\n    /**\n     * Whether to automatically open the child info window when the marker is clicked.\n     */\n    this.openInfoWindow = true;\n    /**\n     * The marker's opacity between 0.0 and 1.0.\n     */\n    this.opacity = 1;\n    /**\n     * All markers are displayed on the map in order of their zIndex, with higher values displaying in\n     * front of markers with lower values. By default, markers are displayed according to their\n     * vertical position on screen, with lower markers appearing in front of markers further up the\n     * screen.\n     */\n    this.zIndex = 1;\n    /**\n     * If true, the marker can be clicked. Default value is true.\n     */\n    // tslint:disable-next-line:no-input-rename\n    this.clickable = true;\n    /**\n     * This event is fired when the marker's animation property changes.\n     *\n     * @memberof AgmMarker\n     */\n    this.animationChange = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user clicks on the marker.\n     */\n    this.markerClick = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user clicks twice on the marker.\n     */\n    this.markerDblClick = new EventEmitter();\n    /**\n     * This event is fired when the user rightclicks on the marker.\n     */\n    this.markerRightClick = new EventEmitter();\n    /**\n     * This event is fired when the user starts dragging the marker.\n     */\n    this.dragStart = new EventEmitter();\n    /**\n     * This event is repeatedly fired while the user drags the marker.\n     */\n    this.drag = new EventEmitter();\n    /**\n     * This event is fired when the user stops dragging the marker.\n     */\n    this.dragEnd = new EventEmitter();\n    /**\n     * This event is fired when the user mouses over the marker.\n     */\n    this.mouseOver = new EventEmitter();\n    /**\n     * This event is fired when the user mouses outside the marker.\n     */\n    this.mouseOut = new EventEmitter();\n    /** @internal */\n    this.infoWindow = new QueryList();\n    this._markerAddedToManger = false;\n    this._observableSubscriptions = [];\n    this._fitBoundsDetails$ = new ReplaySubject(1);\n    this._id = (markerId++).toString();\n  }\n  /* @internal */\n  ngAfterContentInit() {\n    this.handleInfoWindowUpdate();\n    this.infoWindow.changes.subscribe(() => this.handleInfoWindowUpdate());\n  }\n  handleInfoWindowUpdate() {\n    if (this.infoWindow.length > 1) {\n      throw new Error('Expected no more than one info window.');\n    }\n    this.infoWindow.forEach(marker => {\n      marker.hostMarker = this;\n    });\n  }\n  /** @internal */\n  ngOnChanges(changes) {\n    if (typeof this.latitude === 'string') {\n      this.latitude = Number(this.latitude);\n    }\n    if (typeof this.longitude === 'string') {\n      this.longitude = Number(this.longitude);\n    }\n    if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n      return;\n    }\n    if (!this._markerAddedToManger) {\n      this._markerManager.addMarker(this);\n      this._updateFitBoundsDetails();\n      this._markerAddedToManger = true;\n      this._addEventListeners();\n      return;\n    }\n    if (changes['latitude'] || changes['longitude']) {\n      this._markerManager.updateMarkerPosition(this);\n      this._updateFitBoundsDetails();\n    }\n    if (changes['title']) {\n      this._markerManager.updateTitle(this);\n    }\n    if (changes['label']) {\n      this._markerManager.updateLabel(this);\n    }\n    if (changes['draggable']) {\n      this._markerManager.updateDraggable(this);\n    }\n    if (changes['iconUrl']) {\n      this._markerManager.updateIcon(this);\n    }\n    if (changes['opacity']) {\n      this._markerManager.updateOpacity(this);\n    }\n    if (changes['visible']) {\n      this._markerManager.updateVisible(this);\n    }\n    if (changes['zIndex']) {\n      this._markerManager.updateZIndex(this);\n    }\n    if (changes['clickable']) {\n      this._markerManager.updateClickable(this);\n    }\n    if (changes['animation']) {\n      this._markerManager.updateAnimation(this);\n    }\n  }\n  /** @internal */\n  getFitBoundsDetails$() {\n    return this._fitBoundsDetails$.asObservable();\n  }\n  _updateFitBoundsDetails() {\n    this._fitBoundsDetails$.next({\n      latLng: {\n        lat: this.latitude,\n        lng: this.longitude\n      }\n    });\n  }\n  _addEventListeners() {\n    const cs = this._markerManager.createEventObservable('click', this).subscribe(() => {\n      if (this.openInfoWindow) {\n        this.infoWindow.forEach(infoWindow => infoWindow.open());\n      }\n      this.markerClick.emit(this);\n    });\n    this._observableSubscriptions.push(cs);\n    const dcs = this._markerManager.createEventObservable('dblclick', this).subscribe(() => {\n      this.markerDblClick.emit(null);\n    });\n    this._observableSubscriptions.push(dcs);\n    const rc = this._markerManager.createEventObservable('rightclick', this).subscribe(() => {\n      this.markerRightClick.emit(null);\n    });\n    this._observableSubscriptions.push(rc);\n    const ds = this._markerManager.createEventObservable('dragstart', this).subscribe(e => {\n      this.dragStart.emit({\n        coords: {\n          lat: e.latLng.lat(),\n          lng: e.latLng.lng()\n        }\n      });\n    });\n    this._observableSubscriptions.push(ds);\n    const d = this._markerManager.createEventObservable('drag', this).subscribe(e => {\n      this.drag.emit({\n        coords: {\n          lat: e.latLng.lat(),\n          lng: e.latLng.lng()\n        }\n      });\n    });\n    this._observableSubscriptions.push(d);\n    const de = this._markerManager.createEventObservable('dragend', this).subscribe(e => {\n      this.dragEnd.emit({\n        coords: {\n          lat: e.latLng.lat(),\n          lng: e.latLng.lng()\n        }\n      });\n    });\n    this._observableSubscriptions.push(de);\n    const mover = this._markerManager.createEventObservable('mouseover', this).subscribe(e => {\n      this.mouseOver.emit({\n        coords: {\n          lat: e.latLng.lat(),\n          lng: e.latLng.lng()\n        }\n      });\n    });\n    this._observableSubscriptions.push(mover);\n    const mout = this._markerManager.createEventObservable('mouseout', this).subscribe(e => {\n      this.mouseOut.emit({\n        coords: {\n          lat: e.latLng.lat(),\n          lng: e.latLng.lng()\n        }\n      });\n    });\n    this._observableSubscriptions.push(mout);\n    const anChng = this._markerManager.createEventObservable('animation_changed', this).subscribe(() => {\n      this.animationChange.emit(this.animation);\n    });\n    this._observableSubscriptions.push(anChng);\n  }\n  /** @internal */\n  id() {\n    return this._id;\n  }\n  /** @internal */\n  toString() {\n    return 'AgmMarker-' + this._id.toString();\n  }\n  /** @internal */\n  ngOnDestroy() {\n    this._markerManager.deleteMarker(this);\n    // unsubscribe all registered observable subscriptions\n    this._observableSubscriptions.forEach(s => s.unsubscribe());\n  }\n};\nAgmMarker.ctorParameters = () => [{\n  type: MarkerManager\n}];\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmMarker.prototype, \"latitude\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmMarker.prototype, \"longitude\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmMarker.prototype, \"title\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMarker.prototype, \"label\", void 0);\n__decorate([Input('markerDraggable'), __metadata(\"design:type\", Object)], AgmMarker.prototype, \"draggable\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmMarker.prototype, \"iconUrl\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMarker.prototype, \"visible\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMarker.prototype, \"openInfoWindow\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMarker.prototype, \"opacity\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMarker.prototype, \"zIndex\", void 0);\n__decorate([Input('markerClickable'), __metadata(\"design:type\", Object)], AgmMarker.prototype, \"clickable\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmMarker.prototype, \"animation\", void 0);\n__decorate([Output(), __metadata(\"design:type\", Object)], AgmMarker.prototype, \"animationChange\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMarker.prototype, \"markerClick\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMarker.prototype, \"markerDblClick\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMarker.prototype, \"markerRightClick\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMarker.prototype, \"dragStart\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMarker.prototype, \"drag\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMarker.prototype, \"dragEnd\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMarker.prototype, \"mouseOver\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMarker.prototype, \"mouseOut\", void 0);\n__decorate([ContentChildren(AgmInfoWindow), __metadata(\"design:type\", QueryList)], AgmMarker.prototype, \"infoWindow\", void 0);\nAgmMarker = AgmMarker_1 = __decorate([Directive({\n  selector: 'agm-marker',\n  providers: [{\n    provide: FitBoundsAccessor,\n    useExisting: forwardRef(() => AgmMarker_1)\n  }],\n  inputs: ['latitude', 'longitude', 'title', 'label', 'draggable: markerDraggable', 'iconUrl', 'openInfoWindow', 'opacity', 'visible', 'zIndex', 'animation'],\n  outputs: ['markerClick', 'dragStart', 'drag', 'dragEnd', 'mouseOver', 'mouseOut']\n}), __metadata(\"design:paramtypes\", [MarkerManager])], AgmMarker);\nvar AgmPolygon_1;\n/**\n * AgmPolygon renders a polygon on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polygon [paths]=\"paths\">\n *      </agm-polygon>\n *    </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = 0;\n *   lng: number = 0;\n *   zoom: number = 10;\n *   paths: Array<LatLngLiteral> = [\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ]\n *   // Nesting paths will create a hole where they overlap;\n *   nestedPaths: Array<Array<LatLngLiteral>> = [[\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ], [\n *     { lat: 0, lng: 15 },\n *     { lat: 0, lng: 20 },\n *     { lat: 5, lng: 20 },\n *     { lat: 5, lng: 15 },\n *     { lat: 0, lng: 15 }\n *   ]]\n * }\n * ```\n */\nlet AgmPolygon = AgmPolygon_1 = class AgmPolygon {\n  constructor(_polygonManager) {\n    this._polygonManager = _polygonManager;\n    /**\n     * Indicates whether this Polygon handles mouse events. Defaults to true.\n     */\n    this.clickable = true;\n    /**\n     * If set to true, the user can drag this shape over the map. The geodesic\n     * property defines the mode of dragging. Defaults to false.\n     */\n    // tslint:disable-next-line:no-input-rename\n    this.draggable = false;\n    /**\n     * If set to true, the user can edit this shape by dragging the control\n     * points shown at the vertices and on each segment. Defaults to false.\n     */\n    this.editable = false;\n    /**\n     * When true, edges of the polygon are interpreted as geodesic and will\n     * follow the curvature of the Earth. When false, edges of the polygon are\n     * rendered as straight lines in screen space. Note that the shape of a\n     * geodesic polygon may appear to change when dragged, as the dimensions\n     * are maintained relative to the surface of the earth. Defaults to false.\n     */\n    this.geodesic = false;\n    /**\n     * The ordered sequence of coordinates that designates a closed loop.\n     * Unlike polylines, a polygon may consist of one or more paths.\n     *  As a result, the paths property may specify one or more arrays of\n     * LatLng coordinates. Paths are closed automatically; do not repeat the\n     * first vertex of the path as the last vertex. Simple polygons may be\n     * defined using a single array of LatLngs. More complex polygons may\n     * specify an array of arrays. Any simple arrays are converted into Arrays.\n     * Inserting or removing LatLngs from the Array will automatically update\n     * the polygon on the map.\n     */\n    this.paths = [];\n    /**\n     * This event is fired when the DOM click event is fired on the Polygon.\n     */\n    this.polyClick = new EventEmitter();\n    /**\n     * This event is fired when the DOM dblclick event is fired on the Polygon.\n     */\n    this.polyDblClick = new EventEmitter();\n    /**\n     * This event is repeatedly fired while the user drags the polygon.\n     */\n    this.polyDrag = new EventEmitter();\n    /**\n     * This event is fired when the user stops dragging the polygon.\n     */\n    this.polyDragEnd = new EventEmitter();\n    /**\n     * This event is fired when the user starts dragging the polygon.\n     */\n    this.polyDragStart = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousedown event is fired on the Polygon.\n     */\n    this.polyMouseDown = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousemove event is fired on the Polygon.\n     */\n    this.polyMouseMove = new EventEmitter();\n    /**\n     * This event is fired on Polygon mouseout.\n     */\n    this.polyMouseOut = new EventEmitter();\n    /**\n     * This event is fired on Polygon mouseover.\n     */\n    this.polyMouseOver = new EventEmitter();\n    /**\n     * This event is fired whe the DOM mouseup event is fired on the Polygon\n     */\n    this.polyMouseUp = new EventEmitter();\n    /**\n     * This event is fired when the Polygon is right-clicked on.\n     */\n    this.polyRightClick = new EventEmitter();\n    /**\n     * This event is fired after Polygon first path changes.\n     */\n    this.polyPathsChange = new EventEmitter();\n    this._polygonAddedToManager = false;\n    this._subscriptions = [];\n  }\n  /** @internal */\n  ngAfterContentInit() {\n    if (!this._polygonAddedToManager) {\n      this._init();\n    }\n  }\n  ngOnChanges(changes) {\n    if (!this._polygonAddedToManager) {\n      this._init();\n      return;\n    }\n    this._polygonManager.setPolygonOptions(this, this._updatePolygonOptions(changes));\n  }\n  _init() {\n    this._polygonManager.addPolygon(this);\n    this._polygonAddedToManager = true;\n    this._addEventListeners();\n  }\n  _addEventListeners() {\n    const handlers = [{\n      name: 'click',\n      handler: ev => this.polyClick.emit(ev)\n    }, {\n      name: 'dblclick',\n      handler: ev => this.polyDblClick.emit(ev)\n    }, {\n      name: 'drag',\n      handler: ev => this.polyDrag.emit(ev)\n    }, {\n      name: 'dragend',\n      handler: ev => this.polyDragEnd.emit(ev)\n    }, {\n      name: 'dragstart',\n      handler: ev => this.polyDragStart.emit(ev)\n    }, {\n      name: 'mousedown',\n      handler: ev => this.polyMouseDown.emit(ev)\n    }, {\n      name: 'mousemove',\n      handler: ev => this.polyMouseMove.emit(ev)\n    }, {\n      name: 'mouseout',\n      handler: ev => this.polyMouseOut.emit(ev)\n    }, {\n      name: 'mouseover',\n      handler: ev => this.polyMouseOver.emit(ev)\n    }, {\n      name: 'mouseup',\n      handler: ev => this.polyMouseUp.emit(ev)\n    }, {\n      name: 'rightclick',\n      handler: ev => this.polyRightClick.emit(ev)\n    }];\n    handlers.forEach(obj => {\n      const os = this._polygonManager.createEventObservable(obj.name, this).subscribe(obj.handler);\n      this._subscriptions.push(os);\n    });\n    this._polygonManager.createPathEventObservable(this).then(paths$ => {\n      const os = paths$.subscribe(pathEvent => this.polyPathsChange.emit(pathEvent));\n      this._subscriptions.push(os);\n    });\n  }\n  _updatePolygonOptions(changes) {\n    return Object.keys(changes).filter(k => AgmPolygon_1._polygonOptionsAttributes.indexOf(k) !== -1).reduce((obj, k) => {\n      obj[k] = changes[k].currentValue;\n      return obj;\n    }, {});\n  }\n  /** @internal */\n  id() {\n    return this._id;\n  }\n  /** @internal */\n  ngOnDestroy() {\n    this._polygonManager.deletePolygon(this);\n    // unsubscribe all registered observable subscriptions\n    this._subscriptions.forEach(s => s.unsubscribe());\n  }\n  getPath() {\n    return this._polygonManager.getPath(this);\n  }\n  getPaths() {\n    return this._polygonManager.getPaths(this);\n  }\n};\nAgmPolygon._polygonOptionsAttributes = ['clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'geodesic', 'icon', 'map', 'paths', 'strokeColor', 'strokeOpacity', 'strokeWeight', 'visible', 'zIndex', 'draggable', 'editable', 'visible'];\nAgmPolygon.ctorParameters = () => [{\n  type: PolygonManager\n}];\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmPolygon.prototype, \"clickable\", void 0);\n__decorate([Input('polyDraggable'), __metadata(\"design:type\", Object)], AgmPolygon.prototype, \"draggable\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmPolygon.prototype, \"editable\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmPolygon.prototype, \"fillColor\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolygon.prototype, \"fillOpacity\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmPolygon.prototype, \"geodesic\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Array)], AgmPolygon.prototype, \"paths\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmPolygon.prototype, \"strokeColor\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolygon.prototype, \"strokeOpacity\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolygon.prototype, \"strokeWeight\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Boolean)], AgmPolygon.prototype, \"visible\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolygon.prototype, \"zIndex\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyClick\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyDblClick\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyDrag\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyDragEnd\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyDragStart\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyMouseDown\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyMouseMove\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyMouseOut\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyMouseOver\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyMouseUp\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyRightClick\", void 0);\n__decorate([Output(), __metadata(\"design:type\", Object)], AgmPolygon.prototype, \"polyPathsChange\", void 0);\nAgmPolygon = AgmPolygon_1 = __decorate([Directive({\n  selector: 'agm-polygon'\n}), __metadata(\"design:paramtypes\", [PolygonManager])], AgmPolygon);\n\n/**\n * AgmPolylineIcon enables to add polyline sequences to add arrows, circle,\n * or custom icons either along the entire line, or in a specific part of it.\n * See https://developers.google.com/maps/documentation/javascript/shapes#polyline_customize\n *\n * ### Example\n * ```html\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-icon-sequence [fixedRotation]=\"true\" [path]=\"'FORWARD_OPEN_ARROW'\">\n *          </agm-icon-sequence>\n *      </agm-polyline>\n *    </agm-map>\n * ```\n *\n * @export\n * @class AgmPolylineIcon\n */\nlet AgmPolylineIcon = class AgmPolylineIcon {\n  ngOnInit() {\n    if (this.path == null) {\n      throw new Error('Icon Sequence path is required');\n    }\n  }\n};\n__decorate([Input(), __metadata(\"design:type\", Boolean)], AgmPolylineIcon.prototype, \"fixedRotation\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmPolylineIcon.prototype, \"offset\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmPolylineIcon.prototype, \"repeat\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylineIcon.prototype, \"anchorX\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylineIcon.prototype, \"anchorY\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmPolylineIcon.prototype, \"fillColor\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylineIcon.prototype, \"fillOpacity\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmPolylineIcon.prototype, \"path\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylineIcon.prototype, \"rotation\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylineIcon.prototype, \"scale\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmPolylineIcon.prototype, \"strokeColor\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylineIcon.prototype, \"strokeOpacity\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylineIcon.prototype, \"strokeWeight\", void 0);\nAgmPolylineIcon = __decorate([Directive({\n  selector: 'agm-polyline agm-icon-sequence'\n})], AgmPolylineIcon);\nvar AgmPolylinePoint_1;\n/**\n * AgmPolylinePoint represents one element of a polyline within a  {@link\n * AgmPolyline}\n */\nlet AgmPolylinePoint = AgmPolylinePoint_1 = class AgmPolylinePoint {\n  constructor() {\n    /**\n     * This event emitter gets emitted when the position of the point changed.\n     */\n    this.positionChanged = new EventEmitter();\n  }\n  ngOnChanges(changes) {\n    if (changes['latitude'] || changes['longitude']) {\n      const position = {\n        lat: changes['latitude'] ? changes['latitude'].currentValue : this.latitude,\n        lng: changes['longitude'] ? changes['longitude'].currentValue : this.longitude\n      };\n      this.positionChanged.emit(position);\n    }\n  }\n  /** @internal */\n  getFitBoundsDetails$() {\n    return this.positionChanged.pipe(startWith({\n      lat: this.latitude,\n      lng: this.longitude\n    }), map(position => ({\n      latLng: position\n    })));\n  }\n};\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylinePoint.prototype, \"latitude\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylinePoint.prototype, \"longitude\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolylinePoint.prototype, \"positionChanged\", void 0);\nAgmPolylinePoint = AgmPolylinePoint_1 = __decorate([Directive({\n  selector: 'agm-polyline-point',\n  providers: [{\n    provide: FitBoundsAccessor,\n    useExisting: forwardRef(() => AgmPolylinePoint_1)\n  }]\n}), __metadata(\"design:paramtypes\", [])], AgmPolylinePoint);\nvar AgmPolyline_1;\nlet polylineId = 0;\n/**\n * AgmPolyline renders a polyline on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-polyline-point [latitude]=\"latA\" [longitude]=\"lngA\">\n *          </agm-polyline-point>\n *          <agm-polyline-point [latitude]=\"latB\" [longitude]=\"lngB\">\n *          </agm-polyline-point>\n *      </agm-polyline>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nlet AgmPolyline = AgmPolyline_1 = class AgmPolyline {\n  constructor(_polylineManager) {\n    this._polylineManager = _polylineManager;\n    /**\n     * Indicates whether this Polyline handles mouse events. Defaults to true.\n     */\n    this.clickable = true;\n    /**\n     * If set to true, the user can drag this shape over the map. The geodesic property defines the\n     * mode of dragging. Defaults to false.\n     */\n    // tslint:disable-next-line:no-input-rename\n    this.draggable = false;\n    /**\n     * If set to true, the user can edit this shape by dragging the control points shown at the\n     * vertices and on each segment. Defaults to false.\n     */\n    this.editable = false;\n    /**\n     * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of\n     * the Earth. When false, edges of the polygon are rendered as straight lines in screen space.\n     * Note that the shape of a geodesic polygon may appear to change when dragged, as the dimensions\n     * are maintained relative to the surface of the earth. Defaults to false.\n     */\n    this.geodesic = false;\n    /**\n     * Whether this polyline is visible on the map. Defaults to true.\n     */\n    this.visible = true;\n    /**\n     * This event is fired when the DOM click event is fired on the Polyline.\n     */\n    this.lineClick = new EventEmitter();\n    /**\n     * This event is fired when the DOM dblclick event is fired on the Polyline.\n     */\n    this.lineDblClick = new EventEmitter();\n    /**\n     * This event is repeatedly fired while the user drags the polyline.\n     */\n    this.lineDrag = new EventEmitter();\n    /**\n     * This event is fired when the user stops dragging the polyline.\n     */\n    this.lineDragEnd = new EventEmitter();\n    /**\n     * This event is fired when the user starts dragging the polyline.\n     */\n    this.lineDragStart = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousedown event is fired on the Polyline.\n     */\n    this.lineMouseDown = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousemove event is fired on the Polyline.\n     */\n    this.lineMouseMove = new EventEmitter();\n    /**\n     * This event is fired on Polyline mouseout.\n     */\n    this.lineMouseOut = new EventEmitter();\n    /**\n     * This event is fired on Polyline mouseover.\n     */\n    this.lineMouseOver = new EventEmitter();\n    /**\n     * This event is fired whe the DOM mouseup event is fired on the Polyline\n     */\n    this.lineMouseUp = new EventEmitter();\n    /**\n     * This event is fired when the Polyline is right-clicked on.\n     */\n    this.lineRightClick = new EventEmitter();\n    /**\n     * This event is fired after Polyline's path changes.\n     */\n    this.polyPathChange = new EventEmitter();\n    this._polylineAddedToManager = false;\n    this._subscriptions = [];\n    this._id = (polylineId++).toString();\n  }\n  /** @internal */\n  ngAfterContentInit() {\n    if (this.points.length) {\n      this.points.forEach(point => {\n        const s = point.positionChanged.subscribe(() => {\n          this._polylineManager.updatePolylinePoints(this);\n        });\n        this._subscriptions.push(s);\n      });\n    }\n    if (!this._polylineAddedToManager) {\n      this._init();\n    }\n    const pointSub = this.points.changes.subscribe(() => this._polylineManager.updatePolylinePoints(this));\n    this._subscriptions.push(pointSub);\n    this._polylineManager.updatePolylinePoints(this);\n    const iconSub = this.iconSequences.changes.subscribe(() => this._polylineManager.updateIconSequences(this));\n    this._subscriptions.push(iconSub);\n  }\n  ngOnChanges(changes) {\n    if (!this._polylineAddedToManager) {\n      this._init();\n      return;\n    }\n    let options = {};\n    const optionKeys = Object.keys(changes).filter(k => AgmPolyline_1._polylineOptionsAttributes.indexOf(k) !== -1);\n    optionKeys.forEach(k => options[k] = changes[k].currentValue);\n    this._polylineManager.setPolylineOptions(this, options);\n  }\n  getPath() {\n    return this._polylineManager.getPath(this);\n  }\n  _init() {\n    this._polylineManager.addPolyline(this);\n    this._polylineAddedToManager = true;\n    this._addEventListeners();\n  }\n  _addEventListeners() {\n    const handlers = [{\n      name: 'click',\n      handler: ev => this.lineClick.emit(ev)\n    }, {\n      name: 'dblclick',\n      handler: ev => this.lineDblClick.emit(ev)\n    }, {\n      name: 'drag',\n      handler: ev => this.lineDrag.emit(ev)\n    }, {\n      name: 'dragend',\n      handler: ev => this.lineDragEnd.emit(ev)\n    }, {\n      name: 'dragstart',\n      handler: ev => this.lineDragStart.emit(ev)\n    }, {\n      name: 'mousedown',\n      handler: ev => this.lineMouseDown.emit(ev)\n    }, {\n      name: 'mousemove',\n      handler: ev => this.lineMouseMove.emit(ev)\n    }, {\n      name: 'mouseout',\n      handler: ev => this.lineMouseOut.emit(ev)\n    }, {\n      name: 'mouseover',\n      handler: ev => this.lineMouseOver.emit(ev)\n    }, {\n      name: 'mouseup',\n      handler: ev => this.lineMouseUp.emit(ev)\n    }, {\n      name: 'rightclick',\n      handler: ev => this.lineRightClick.emit(ev)\n    }];\n    handlers.forEach(obj => {\n      const os = this._polylineManager.createEventObservable(obj.name, this).subscribe(obj.handler);\n      this._subscriptions.push(os);\n    });\n    this._polylineManager.createPathEventObservable(this).then(ob$ => {\n      const os = ob$.subscribe(pathEvent => this.polyPathChange.emit(pathEvent));\n      this._subscriptions.push(os);\n    });\n  }\n  /** @internal */\n  _getPoints() {\n    if (this.points) {\n      return this.points.toArray();\n    }\n    return [];\n  }\n  _getIcons() {\n    if (this.iconSequences) {\n      return this.iconSequences.toArray();\n    }\n    return [];\n  }\n  /** @internal */\n  id() {\n    return this._id;\n  }\n  /** @internal */\n  ngOnDestroy() {\n    this._polylineManager.deletePolyline(this);\n    // unsubscribe all registered observable subscriptions\n    this._subscriptions.forEach(s => s.unsubscribe());\n  }\n};\nAgmPolyline._polylineOptionsAttributes = ['draggable', 'editable', 'visible', 'geodesic', 'strokeColor', 'strokeOpacity', 'strokeWeight', 'zIndex'];\nAgmPolyline.ctorParameters = () => [{\n  type: PolylineManager\n}];\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmPolyline.prototype, \"clickable\", void 0);\n__decorate([Input('polylineDraggable'), __metadata(\"design:type\", Object)], AgmPolyline.prototype, \"draggable\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmPolyline.prototype, \"editable\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmPolyline.prototype, \"geodesic\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmPolyline.prototype, \"strokeColor\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolyline.prototype, \"strokeOpacity\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolyline.prototype, \"strokeWeight\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmPolyline.prototype, \"visible\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolyline.prototype, \"zIndex\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineClick\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineDblClick\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineDrag\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineDragEnd\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineDragStart\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineMouseDown\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineMouseMove\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineMouseOut\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineMouseOver\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineMouseUp\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineRightClick\", void 0);\n__decorate([Output(), __metadata(\"design:type\", Object)], AgmPolyline.prototype, \"polyPathChange\", void 0);\n__decorate([ContentChildren(AgmPolylinePoint), __metadata(\"design:type\", QueryList)], AgmPolyline.prototype, \"points\", void 0);\n__decorate([ContentChildren(AgmPolylineIcon), __metadata(\"design:type\", QueryList)], AgmPolyline.prototype, \"iconSequences\", void 0);\nAgmPolyline = AgmPolyline_1 = __decorate([Directive({\n  selector: 'agm-polyline'\n}), __metadata(\"design:paramtypes\", [PolylineManager])], AgmPolyline);\nvar AgmRectangle_1;\nlet AgmRectangle = AgmRectangle_1 = class AgmRectangle {\n  constructor(_manager) {\n    this._manager = _manager;\n    /**\n     * Indicates whether this Rectangle handles mouse events. Defaults to true.\n     */\n    this.clickable = true;\n    /**\n     * If set to true, the user can drag this rectangle over the map. Defaults to false.\n     */\n    // tslint:disable-next-line:no-input-rename\n    this.draggable = false;\n    /**\n     * If set to true, the user can edit this rectangle by dragging the control points shown at\n     * the center and around the circumference of the rectangle. Defaults to false.\n     */\n    this.editable = false;\n    /**\n     * The stroke position. Defaults to CENTER.\n     * This property is not supported on Internet Explorer 8 and earlier.\n     */\n    this.strokePosition = 'CENTER';\n    /**\n     * The stroke width in pixels.\n     */\n    this.strokeWeight = 0;\n    /**\n     * Whether this rectangle is visible on the map. Defaults to true.\n     */\n    this.visible = true;\n    /**\n     * This event is fired when the rectangle's is changed.\n     */\n    this.boundsChange = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user clicks on the rectangle.\n     */\n    this.rectangleClick = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user clicks on the rectangle.\n     */\n    this.rectangleDblClick = new EventEmitter();\n    /**\n     * This event is repeatedly fired while the user drags the rectangle.\n     */\n    this.drag = new EventEmitter();\n    /**\n     * This event is fired when the user stops dragging the rectangle.\n     */\n    this.dragEnd = new EventEmitter();\n    /**\n     * This event is fired when the user starts dragging the rectangle.\n     */\n    this.dragStart = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousedown event is fired on the rectangle.\n     */\n    this.mouseDown = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousemove event is fired on the rectangle.\n     */\n    this.mouseMove = new EventEmitter();\n    /**\n     * This event is fired on rectangle mouseout.\n     */\n    this.mouseOut = new EventEmitter();\n    /**\n     * This event is fired on rectangle mouseover.\n     */\n    this.mouseOver = new EventEmitter();\n    /**\n     * This event is fired when the DOM mouseup event is fired on the rectangle.\n     */\n    this.mouseUp = new EventEmitter();\n    /**\n     * This event is fired when the rectangle is right-clicked on.\n     */\n    this.rightClick = new EventEmitter();\n    this._rectangleAddedToManager = false;\n    this._eventSubscriptions = [];\n  }\n  /** @internal */\n  ngOnInit() {\n    this._manager.addRectangle(this);\n    this._rectangleAddedToManager = true;\n    this._registerEventListeners();\n  }\n  /** @internal */\n  ngOnChanges(changes) {\n    if (!this._rectangleAddedToManager) {\n      return;\n    }\n    if (changes['north'] || changes['east'] || changes['south'] || changes['west']) {\n      this._manager.setBounds(this);\n    }\n    if (changes['editable']) {\n      this._manager.setEditable(this);\n    }\n    if (changes['draggable']) {\n      this._manager.setDraggable(this);\n    }\n    if (changes['visible']) {\n      this._manager.setVisible(this);\n    }\n    this._updateRectangleOptionsChanges(changes);\n  }\n  _updateRectangleOptionsChanges(changes) {\n    let options = {};\n    let optionKeys = Object.keys(changes).filter(k => AgmRectangle_1._mapOptions.indexOf(k) !== -1);\n    optionKeys.forEach(k => {\n      options[k] = changes[k].currentValue;\n    });\n    if (optionKeys.length > 0) {\n      this._manager.setOptions(this, options);\n    }\n  }\n  _registerEventListeners() {\n    let events = new Map();\n    events.set('bounds_changed', this.boundsChange);\n    events.set('click', this.rectangleClick);\n    events.set('dblclick', this.rectangleDblClick);\n    events.set('drag', this.drag);\n    events.set('dragend', this.dragEnd);\n    events.set('dragStart', this.dragStart);\n    events.set('mousedown', this.mouseDown);\n    events.set('mousemove', this.mouseMove);\n    events.set('mouseout', this.mouseOut);\n    events.set('mouseover', this.mouseOver);\n    events.set('mouseup', this.mouseUp);\n    events.set('rightclick', this.rightClick);\n    events.forEach((eventEmitter, eventName) => {\n      this._eventSubscriptions.push(this._manager.createEventObservable(eventName, this).subscribe(value => {\n        switch (eventName) {\n          case 'bounds_changed':\n            this._manager.getBounds(this).then(bounds => eventEmitter.emit({\n              north: bounds.getNorthEast().lat(),\n              east: bounds.getNorthEast().lng(),\n              south: bounds.getSouthWest().lat(),\n              west: bounds.getSouthWest().lng()\n            }));\n            break;\n          default:\n            eventEmitter.emit({\n              coords: {\n                lat: value.latLng.lat(),\n                lng: value.latLng.lng()\n              }\n            });\n        }\n      }));\n    });\n  }\n  /** @internal */\n  ngOnDestroy() {\n    this._eventSubscriptions.forEach(function (s) {\n      s.unsubscribe();\n    });\n    this._eventSubscriptions = null;\n    this._manager.removeRectangle(this);\n  }\n  /**\n   * Gets the LatLngBounds of this Rectangle.\n   */\n  getBounds() {\n    return this._manager.getBounds(this);\n  }\n};\nAgmRectangle._mapOptions = ['fillColor', 'fillOpacity', 'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight', 'visible', 'zIndex', 'clickable'];\nAgmRectangle.ctorParameters = () => [{\n  type: RectangleManager\n}];\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmRectangle.prototype, \"north\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmRectangle.prototype, \"east\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmRectangle.prototype, \"south\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmRectangle.prototype, \"west\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmRectangle.prototype, \"clickable\", void 0);\n__decorate([Input('rectangleDraggable'), __metadata(\"design:type\", Object)], AgmRectangle.prototype, \"draggable\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmRectangle.prototype, \"editable\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmRectangle.prototype, \"fillColor\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmRectangle.prototype, \"fillOpacity\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmRectangle.prototype, \"strokeColor\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmRectangle.prototype, \"strokeOpacity\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmRectangle.prototype, \"strokePosition\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmRectangle.prototype, \"strokeWeight\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmRectangle.prototype, \"visible\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmRectangle.prototype, \"zIndex\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"boundsChange\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"rectangleClick\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"rectangleDblClick\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"drag\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"dragEnd\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"dragStart\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"mouseDown\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"mouseMove\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"mouseOut\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"mouseOver\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"mouseUp\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"rightClick\", void 0);\nAgmRectangle = AgmRectangle_1 = __decorate([Directive({\n  selector: 'agm-rectangle'\n}), __metadata(\"design:paramtypes\", [RectangleManager])], AgmRectangle);\nlet layerId$3 = 0;\n/*\n * This directive adds a transit layer to a google map instance\n * <agm-transit-layer [visible]=\"true|false\"> <agm-transit-layer>\n * */\nlet AgmTransitLayer = class AgmTransitLayer {\n  constructor(_manager) {\n    this._manager = _manager;\n    this._addedToManager = false;\n    this._id = (layerId$3++).toString();\n    /**\n     * Hide/show transit layer\n     */\n    this.visible = true;\n  }\n  ngOnInit() {\n    if (this._addedToManager) {\n      return;\n    }\n    this._manager.addTransitLayer(this, {\n      visible: this.visible\n    });\n    this._addedToManager = true;\n  }\n  ngOnChanges(changes) {\n    if (!this._addedToManager) {\n      return;\n    }\n    if (changes['visible'] != null) {\n      this._manager.toggleLayerVisibility(this, {\n        visible: changes['visible'].currentValue\n      });\n    }\n  }\n  /** @internal */\n  id() {\n    return this._id;\n  }\n  /** @internal */\n  toString() {\n    return `AgmTransitLayer-${this._id.toString()}`;\n  }\n  /** @internal */\n  ngOnDestroy() {\n    this._manager.deleteLayer(this);\n  }\n};\nAgmTransitLayer.ctorParameters = () => [{\n  type: LayerManager\n}];\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmTransitLayer.prototype, \"visible\", void 0);\nAgmTransitLayer = __decorate([Directive({\n  selector: 'agm-transit-layer'\n}), __metadata(\"design:paramtypes\", [LayerManager])], AgmTransitLayer);\nvar google$1;\nvar SymbolPath;\n(function (SymbolPath) {\n  SymbolPath[SymbolPath[\"BACKWARD_CLOSED_ARROW\"] = 3] = \"BACKWARD_CLOSED_ARROW\";\n  SymbolPath[SymbolPath[\"BACKWARD_OPEN_ARROW\"] = 4] = \"BACKWARD_OPEN_ARROW\";\n  SymbolPath[SymbolPath[\"CIRCLE\"] = 0] = \"CIRCLE\";\n  SymbolPath[SymbolPath[\"FORWARD_CLOSED_ARROW\"] = 1] = \"FORWARD_CLOSED_ARROW\";\n  SymbolPath[SymbolPath[\"FORWARD_OPEN_ARROW\"] = 2] = \"FORWARD_OPEN_ARROW\";\n})(SymbolPath || (SymbolPath = {}));\n/**\n * Identifiers used to specify the placement of controls on the map. Controls are\n * positioned relative to other controls in the same layout position. Controls that\n * are added first are positioned closer to the edge of the map.\n */\nvar ControlPosition;\n(function (ControlPosition) {\n  ControlPosition[ControlPosition[\"RIGHT_BOTTOM\"] = 0] = \"RIGHT_BOTTOM\";\n  ControlPosition[ControlPosition[\"TOP_LEFT\"] = 1] = \"TOP_LEFT\";\n  ControlPosition[ControlPosition[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\n  ControlPosition[ControlPosition[\"TOP_RIGHT\"] = 3] = \"TOP_RIGHT\";\n  ControlPosition[ControlPosition[\"LEFT_CENTER\"] = 4] = \"LEFT_CENTER\";\n  ControlPosition[ControlPosition[\"LEFT_TOP\"] = 5] = \"LEFT_TOP\";\n  ControlPosition[ControlPosition[\"LEFT_BOTTOM\"] = 6] = \"LEFT_BOTTOM\";\n  ControlPosition[ControlPosition[\"RIGHT_TOP\"] = 7] = \"RIGHT_TOP\";\n  ControlPosition[ControlPosition[\"RIGHT_CENTER\"] = 8] = \"RIGHT_CENTER\";\n  ControlPosition[ControlPosition[\"BOTTOM_RIGHT\"] = 9] = \"BOTTOM_RIGHT\";\n  ControlPosition[ControlPosition[\"BOTTOM_LEFT\"] = 10] = \"BOTTOM_LEFT\";\n  ControlPosition[ControlPosition[\"BOTTOM_CENTER\"] = 11] = \"BOTTOM_CENTER\";\n})(ControlPosition || (ControlPosition = {}));\nvar MapTypeId;\n(function (MapTypeId) {\n  /** This map type displays a transparent layer of major streets on satellite images. */\n  MapTypeId[MapTypeId[\"HYBRID\"] = 0] = \"HYBRID\";\n  /** This map type displays a normal street map. */\n  MapTypeId[MapTypeId[\"ROADMAP\"] = 1] = \"ROADMAP\";\n  /** This map type displays satellite images. */\n  MapTypeId[MapTypeId[\"SATELLITE\"] = 2] = \"SATELLITE\";\n  /** This map type displays maps with physical features such as terrain and vegetation. */\n  MapTypeId[MapTypeId[\"TERRAIN\"] = 3] = \"TERRAIN\";\n})(MapTypeId || (MapTypeId = {}));\nvar MapTypeControlStyle;\n(function (MapTypeControlStyle) {\n  MapTypeControlStyle[MapTypeControlStyle[\"DEFAULT\"] = 0] = \"DEFAULT\";\n  MapTypeControlStyle[MapTypeControlStyle[\"DROPDOWN_MENU\"] = 2] = \"DROPDOWN_MENU\";\n  MapTypeControlStyle[MapTypeControlStyle[\"HORIZONTAL_BAR\"] = 1] = \"HORIZONTAL_BAR\";\n})(MapTypeControlStyle || (MapTypeControlStyle = {}));\nvar ScaleControlStyle;\n(function (ScaleControlStyle) {\n  ScaleControlStyle[ScaleControlStyle[\"DEFAULT\"] = 0] = \"DEFAULT\";\n})(ScaleControlStyle || (ScaleControlStyle = {}));\nvar ZoomControlStyle;\n(function (ZoomControlStyle) {\n  ZoomControlStyle[ZoomControlStyle[\"DEFAULT\"] = 0] = \"DEFAULT\";\n  ZoomControlStyle[ZoomControlStyle[\"LARGE\"] = 1] = \"LARGE\";\n  ZoomControlStyle[ZoomControlStyle[\"SMALL\"] = 2] = \"SMALL\";\n})(ZoomControlStyle || (ZoomControlStyle = {}));\nvar GeocoderLocationType;\n(function (GeocoderLocationType) {\n  GeocoderLocationType[\"APPROXIMATE\"] = \"APPROXIMATE\";\n  GeocoderLocationType[\"GEOMETRIC_CENTER\"] = \"GEOMETRIC_CENTER\";\n  GeocoderLocationType[\"RANGE_INTERPOLATED\"] = \"RANGE_INTERPOLATED\";\n  GeocoderLocationType[\"ROOFTOP\"] = \"ROOFTOP\";\n})(GeocoderLocationType || (GeocoderLocationType = {}));\nvar GeocoderStatus;\n(function (GeocoderStatus) {\n  GeocoderStatus[\"ERROR\"] = \"ERROR\";\n  GeocoderStatus[\"INVALID_REQUEST\"] = \"INVALID_REQUEST\";\n  GeocoderStatus[\"OK\"] = \"OK\";\n  GeocoderStatus[\"OVER_QUERY_LIMIT\"] = \"OVER_QUERY_LIMIT\";\n  GeocoderStatus[\"REQUEST_DENIED\"] = \"REQUEST_DENIED\";\n  GeocoderStatus[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n  GeocoderStatus[\"ZERO_RESULTS\"] = \"ZERO_RESULTS\";\n})(GeocoderStatus || (GeocoderStatus = {}));\nlet AgmGeocoder = class AgmGeocoder {\n  constructor(loader) {\n    const connectableGeocoder$ = new Observable(subscriber => {\n      loader.load().then(() => subscriber.next());\n    }).pipe(map(() => this._createGeocoder()), multicast(new ReplaySubject(1)));\n    connectableGeocoder$.connect(); // ignore the subscription\n    // since we will remain subscribed till application exits\n    this.geocoder$ = connectableGeocoder$;\n  }\n  geocode(request) {\n    return this.geocoder$.pipe(switchMap(geocoder => this._getGoogleResults(geocoder, request)));\n  }\n  _getGoogleResults(geocoder, request) {\n    const geocodeObservable = bindCallback(geocoder.geocode);\n    return geocodeObservable(request).pipe(switchMap(([results, status]) => {\n      if (status === GeocoderStatus.OK) {\n        return of(results);\n      }\n      return throwError(status);\n    }));\n  }\n  _createGeocoder() {\n    return new google.maps.Geocoder();\n  }\n};\nAgmGeocoder.ctorParameters = () => [{\n  type: MapsAPILoader\n}];\nAgmGeocoder.ngInjectableDef = ɵɵdefineInjectable({\n  factory: function AgmGeocoder_Factory() {\n    return new AgmGeocoder(ɵɵinject(MapsAPILoader));\n  },\n  token: AgmGeocoder,\n  providedIn: \"root\"\n});\nAgmGeocoder = __decorate([Injectable({\n  providedIn: 'root'\n}), __metadata(\"design:paramtypes\", [MapsAPILoader])], AgmGeocoder);\nclass WindowRef {\n  getNativeWindow() {\n    return window;\n  }\n}\nclass DocumentRef {\n  getNativeDocument() {\n    return document;\n  }\n}\nconst BROWSER_GLOBALS_PROVIDERS = [WindowRef, DocumentRef];\nvar GoogleMapsScriptProtocol;\n(function (GoogleMapsScriptProtocol) {\n  GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTP\"] = 1] = \"HTTP\";\n  GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTPS\"] = 2] = \"HTTPS\";\n  GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"AUTO\"] = 3] = \"AUTO\";\n})(GoogleMapsScriptProtocol || (GoogleMapsScriptProtocol = {}));\n/**\n * Token for the config of the LazyMapsAPILoader. Please provide an object of type {@link\n * LazyMapsAPILoaderConfig}.\n */\nconst LAZY_MAPS_API_CONFIG = new InjectionToken('angular-google-maps LAZY_MAPS_API_CONFIG');\nlet LazyMapsAPILoader = class LazyMapsAPILoader extends MapsAPILoader {\n  constructor(config = null, w, d, localeId) {\n    super();\n    this.localeId = localeId;\n    this._SCRIPT_ID = 'agmGoogleMapsApiScript';\n    this.callbackName = `agmLazyMapsAPILoader`;\n    this._config = config || {};\n    this._windowRef = w;\n    this._documentRef = d;\n  }\n  load() {\n    const window = this._windowRef.getNativeWindow();\n    if (window.google && window.google.maps) {\n      // Google maps already loaded on the page.\n      return Promise.resolve();\n    }\n    if (this._scriptLoadingPromise) {\n      return this._scriptLoadingPromise;\n    }\n    // this can happen in HMR situations or Stackblitz.io editors.\n    const scriptOnPage = this._documentRef.getNativeDocument().getElementById(this._SCRIPT_ID);\n    if (scriptOnPage) {\n      this._assignScriptLoadingPromise(scriptOnPage);\n      return this._scriptLoadingPromise;\n    }\n    const script = this._documentRef.getNativeDocument().createElement('script');\n    script.type = 'text/javascript';\n    script.async = true;\n    script.defer = true;\n    script.id = this._SCRIPT_ID;\n    script.src = this._getScriptSrc(this.callbackName);\n    this._assignScriptLoadingPromise(script);\n    this._documentRef.getNativeDocument().body.appendChild(script);\n    return this._scriptLoadingPromise;\n  }\n  _assignScriptLoadingPromise(scriptElem) {\n    this._scriptLoadingPromise = new Promise((resolve, reject) => {\n      this._windowRef.getNativeWindow()[this.callbackName] = () => {\n        resolve();\n      };\n      scriptElem.onerror = error => {\n        reject(error);\n      };\n    });\n  }\n  _getScriptSrc(callbackName) {\n    let protocolType = this._config && this._config.protocol || GoogleMapsScriptProtocol.HTTPS;\n    let protocol;\n    switch (protocolType) {\n      case GoogleMapsScriptProtocol.AUTO:\n        protocol = '';\n        break;\n      case GoogleMapsScriptProtocol.HTTP:\n        protocol = 'http:';\n        break;\n      case GoogleMapsScriptProtocol.HTTPS:\n        protocol = 'https:';\n        break;\n    }\n    const hostAndPath = this._config.hostAndPath || 'maps.googleapis.com/maps/api/js';\n    const queryParams = {\n      v: this._config.apiVersion || 'quarterly',\n      callback: callbackName,\n      key: this._config.apiKey,\n      client: this._config.clientId,\n      channel: this._config.channel,\n      libraries: this._config.libraries,\n      region: this._config.region,\n      language: this._config.language || this.localeId !== 'en-US' ? this.localeId : null\n    };\n    const params = Object.keys(queryParams).filter(k => queryParams[k] != null).filter(k => {\n      // remove empty arrays\n      return !Array.isArray(queryParams[k]) || Array.isArray(queryParams[k]) && queryParams[k].length > 0;\n    }).map(k => {\n      // join arrays as comma seperated strings\n      let i = queryParams[k];\n      if (Array.isArray(i)) {\n        return {\n          key: k,\n          value: i.join(',')\n        };\n      }\n      return {\n        key: k,\n        value: queryParams[k]\n      };\n    }).map(entry => {\n      return `${entry.key}=${entry.value}`;\n    }).join('&');\n    return `${protocol}//${hostAndPath}?${params}`;\n  }\n};\nLazyMapsAPILoader.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [LAZY_MAPS_API_CONFIG]\n  }]\n}, {\n  type: WindowRef\n}, {\n  type: DocumentRef\n}, {\n  type: String,\n  decorators: [{\n    type: Inject,\n    args: [LOCALE_ID]\n  }]\n}];\nLazyMapsAPILoader = __decorate([Injectable(), __param(0, Optional()), __param(0, Inject(LAZY_MAPS_API_CONFIG)), __param(3, Inject(LOCALE_ID)), __metadata(\"design:paramtypes\", [Object, WindowRef, DocumentRef, String])], LazyMapsAPILoader);\n\n/**\n * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a `<script>`\n * Tag.\n * It's important that the Google Maps API script gets loaded first on the page.\n */\nclass NoOpMapsAPILoader {\n  load() {\n    if (!window.google || !window.google.maps) {\n      throw new Error('Google Maps API not loaded on page. Make sure window.google.maps is available!');\n    }\n    return Promise.resolve();\n  }\n}\n\n// exported map types\n\nvar AgmCoreModule_1;\n/**\n * @internal\n */\nfunction coreDirectives() {\n  return [AgmBicyclingLayer, AgmCircle, AgmDataLayer, AgmFitBounds, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMarker, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmTransitLayer];\n}\n/**\n * The angular-google-maps core module. Contains all Directives/Services/Pipes\n * of the core module. Please use `AgmCoreModule.forRoot()` in your app module.\n */\nlet AgmCoreModule = AgmCoreModule_1 = class AgmCoreModule {\n  /**\n   * Please use this method when you register the module at the root level.\n   */\n  static forRoot(lazyMapsAPILoaderConfig) {\n    return {\n      ngModule: AgmCoreModule_1,\n      providers: [...BROWSER_GLOBALS_PROVIDERS, {\n        provide: MapsAPILoader,\n        useClass: LazyMapsAPILoader\n      }, {\n        provide: LAZY_MAPS_API_CONFIG,\n        useValue: lazyMapsAPILoaderConfig\n      }]\n    };\n  }\n};\nAgmCoreModule = AgmCoreModule_1 = __decorate([NgModule({\n  declarations: coreDirectives(),\n  exports: coreDirectives()\n})], AgmCoreModule);\n\n// main modules\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AgmBicyclingLayer, AgmCircle, AgmCoreModule, AgmDataLayer, AgmFitBounds, AgmGeocoder, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMarker, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmTransitLayer, CircleManager, ControlPosition, DataLayerManager, FitBoundsAccessor, GeocoderLocationType, GeocoderStatus, GoogleMapsAPIWrapper, GoogleMapsScriptProtocol, InfoWindowManager, KmlLayerManager, LAZY_MAPS_API_CONFIG, LayerManager, LazyMapsAPILoader, MapTypeId, MapsAPILoader, MarkerManager, NoOpMapsAPILoader, PolygonManager, PolylineManager, RectangleManager, ScaleControlStyle, ZoomControlStyle, FitBoundsService as ɵa, coreDirectives as ɵb, WindowRef as ɵc, DocumentRef as ɵd, BROWSER_GLOBALS_PROVIDERS as ɵe };","map":{"version":3,"names":["__decorate","__metadata","__param","__awaiter","Injectable","NgZone","Input","Directive","EventEmitter","Output","Self","ElementRef","Component","Inject","PLATFORM_ID","QueryList","ContentChildren","forwardRef","ɵɵdefineInjectable","ɵɵinject","InjectionToken","Optional","LOCALE_ID","NgModule","Observable","BehaviorSubject","from","timer","Subject","fromEventPattern","merge","ReplaySubject","bindCallback","of","throwError","flatMap","sample","switchMap","map","shareReplay","distinctUntilChanged","takeUntil","startWith","skip","multicast","isPlatformServer","MapsAPILoader","GoogleMapsAPIWrapper","constructor","_loader","_zone","_map","Promise","resolve","_mapResolver","createMap","el","mapOptions","runOutsideAngular","load","then","google","maps","Map","setMapOptions","options","m","setOptions","createMarker","addToMap","Marker","createInfoWindow","InfoWindow","createCircle","strokePosition","StrokePosition","Circle","createRectangle","Rectangle","createPolyline","getNativeMap","line","Polyline","setMap","createPolygon","polygon","Polygon","createDataLayer","data","Data","createTransitLayer","newLayer","TransitLayer","visible","createBicyclingLayer","BicyclingLayer","containsLocation","latLng","geometry","poly","subscribeToMapEvent","eventName","observer","addListener","arg","run","next","clearInstanceListeners","event","setCenter","getZoom","getBounds","getMapTypeId","setZoom","zoom","getCenter","panTo","panBy","x","y","fitBounds","padding","panToBounds","triggerMapEvent","trigger","ctorParameters","type","LayerManager","_wrapper","_layers","addTransitLayer","layer","set","addBicyclingLayer","deleteLayer","get","currentLayer","delete","toggleLayerVisibility","layerId","AgmBicyclingLayer","_manager","_addedToManager","_id","toString","ngOnInit","ngOnChanges","changes","currentValue","id","ngOnDestroy","Object","prototype","selector","CircleManager","_apiWrapper","_circles","addCircle","circle","center","lat","latitude","lng","longitude","clickable","draggable","editable","fillColor","fillOpacity","radius","strokeColor","strokeOpacity","strokeWeight","zIndex","removeCircle","c","getRadius","setEditable","setDraggable","setVisible","setRadius","getNativeCircle","createEventObservable","listener","e","remove","AgmCircle_1","AgmCircle","centerChange","circleClick","circleDblClick","drag","dragEnd","dragStart","mouseDown","mouseMove","mouseOut","mouseOver","mouseUp","radiusChange","rightClick","_circleAddedToManager","_eventSubscriptions","_registerEventListeners","_updateCircleOptionsChanges","optionKeys","keys","filter","k","_mapOptions","indexOf","forEach","length","events","eventEmitter","push","subscribe","value","emit","coords","s","unsubscribe","Number","String","DataLayerManager","addDataLayer","style","d","geoJson","getDataFeatures","features","deleteDataLayer","l","updateGeoJson","feature","index","splice","setDataOptions","setControlPosition","controlPosition","setControls","controls","setDrawingMode","drawingMode","setStyle","reject","addGeoJson","loadGeoJson","AgmDataLayer_1","layerId$1","AgmDataLayer","_subscriptions","layerClick","_addEventListeners","listeners","name","handler","ev","obj","os","geoJsonChange","dataOptions","_dataOptionsAttributes","hasOwnProperty","Function","FitBoundsAccessor","FitBoundsService","loader","_boundsChangeSampleTime$","_includeInBounds$","bounds$","pipe","time","includeInBounds","_generateBounds","bounds","LatLngBounds","b","extend","addToBounds","_createIdentifier","has","removeFromBounds","changeFitBoundsChangeSampleTime","timeMs","getBounds$","AgmFitBounds","_fitBoundsAccessor","_fitBoundsService","agmFitBounds","_destroyed$","_latestFitBoundsDetails","_updateBounds","getFitBoundsDetails$","details","newFitBoundsDetails","complete","decorators","MarkerManager","_mapsWrapper","_markers","convertAnimation","uiAnim","Animation","deleteMarker","marker","updateMarkerPosition","setPosition","updateTitle","setTitle","title","updateLabel","setLabel","label","updateDraggable","updateIcon","setIcon","iconUrl","updateOpacity","setOpacity","opacity","updateVisible","updateZIndex","setZIndex","updateClickable","setClickable","updateAnimation","setAnimation","animation","addMarker","markerPromise","position","icon","getNativeMarker","InfoWindowManager","_markerManager","_infoWindows","deleteInfoWindow","infoWindow","iWindow","i","close","open","w","hostMarker","addInfoWindow","content","maxWidth","disableAutoPan","infoWindowPromise","AgmInfoWindow_1","infoWindowId","AgmInfoWindow","_infoWindowManager","_el","isOpen","infoWindowClose","_infoWindowAddedToManager","nativeElement","querySelector","_updateOpenState","_setInfoWindowOptions","_infoWindowOptionsInputs","Boolean","template","KmlLayerManager","addKmlLayer","KmlLayer","preserveViewport","screenOverlays","suppressInfoWindows","url","deleteKmlLayer","AgmKmlLayer_1","layerId$2","AgmKmlLayer","defaultViewportChange","statusChange","_updatePolygonOptions","_kmlLayerOptions","reduce","createMVCEventObservable","array","eventNames","evName","previous","apply","getArray","_handler","evListeners","evListener","MvcArrayMock","vals","clear","removeAt","getAt","getLength","insertAt","elem","insert_at","pop","deleted","remove_at","setAt","set_at","callback","listenerArr","PolygonManager","_polygons","addPolygon","path","polygonPromise","geodesic","paths","updatePolygon","setPaths","setPolygonOptions","deletePolygon","getPath","getPaths","p","createPathEventObservable","agmPolygon","pathsChanges$","newArr","parentMVEvent","chMVC","chMVCEvent","pathIndex","retVal","subArr","toJSON","PolylineManager_1","PolylineManager","_polylines","_convertPoints","_getPoints","point","_convertPath","symbolPath","SymbolPath","_convertIcons","icons","_getIcons","agmIcon","fixedRotation","offset","repeat","anchor","Point","anchorX","anchorY","rotation","scale","entries","key","val","addPolyline","polylinePromise","updatePolylinePoints","setPath","updateIconSequences","setPolylineOptions","deletePolyline","getMVCPath","agmPolyline","polyline","mvcPath","RectangleManager","_rectangles","addRectangle","rectangle","north","east","south","west","removeRectangle","r","setBounds","create","AgmMap_1","AgmMap","_elem","_platformId","disableDoubleClickZoom","disableDefaultUI","scrollwheel","keyboardShortcuts","styles","usePanning","scaleControl","mapTypeControl","panControl","rotateControl","fullscreenControl","mapTypeId","clickableIcons","showDefaultInfoWindow","gestureHandling","tilt","_observableSubscriptions","mapClick","mapRightClick","mapDblClick","boundsChange","mapTypeIdChange","idle","zoomChange","mapReady","tilesLoaded","container","_initMapInstance","minZoom","maxZoom","controlSize","backgroundColor","draggableCursor","draggingCursor","zoomControl","zoomControlOptions","streetViewControl","streetViewControlOptions","scaleControlOptions","mapTypeControlOptions","panControlOptions","rotateControlOptions","fullscreenControlOptions","restriction","_handleMapCenterChange","_handleMapZoomChange","_handleMapMouseEvents","_handleBoundsChange","_handleMapTypeIdChange","_handleTilesLoadedEvent","_handleIdleEvent","_fitBoundsSubscription","_updateMapOptionsChanges","_updatePosition","_mapOptionsAttributes","triggerResize","recenter","setTimeout","_fitBounds","_setCenter","newCenter","_subscribeToFitBoundsUpdates","fitBoundsPadding","_isLatLngBoundsLiteral","newBounds","union","undefined","z","emitter","placeId","stop","args","Array","providers","host","AgmMarker_1","markerId","AgmMarker","openInfoWindow","animationChange","markerClick","markerDblClick","markerRightClick","_markerAddedToManger","_fitBoundsDetails$","ngAfterContentInit","handleInfoWindowUpdate","Error","_updateFitBoundsDetails","asObservable","cs","dcs","rc","ds","de","mover","mout","anChng","provide","useExisting","inputs","outputs","AgmPolygon_1","AgmPolygon","_polygonManager","polyClick","polyDblClick","polyDrag","polyDragEnd","polyDragStart","polyMouseDown","polyMouseMove","polyMouseOut","polyMouseOver","polyMouseUp","polyRightClick","polyPathsChange","_polygonAddedToManager","_init","handlers","paths$","pathEvent","_polygonOptionsAttributes","AgmPolylineIcon","AgmPolylinePoint_1","AgmPolylinePoint","positionChanged","AgmPolyline_1","polylineId","AgmPolyline","_polylineManager","lineClick","lineDblClick","lineDrag","lineDragEnd","lineDragStart","lineMouseDown","lineMouseMove","lineMouseOut","lineMouseOver","lineMouseUp","lineRightClick","polyPathChange","_polylineAddedToManager","points","pointSub","iconSub","iconSequences","_polylineOptionsAttributes","ob$","toArray","AgmRectangle_1","AgmRectangle","rectangleClick","rectangleDblClick","_rectangleAddedToManager","_updateRectangleOptionsChanges","getNorthEast","getSouthWest","layerId$3","AgmTransitLayer","google$1","ControlPosition","MapTypeId","MapTypeControlStyle","ScaleControlStyle","ZoomControlStyle","GeocoderLocationType","GeocoderStatus","AgmGeocoder","connectableGeocoder$","subscriber","_createGeocoder","connect","geocoder$","geocode","request","geocoder","_getGoogleResults","geocodeObservable","results","status","OK","Geocoder","ngInjectableDef","factory","AgmGeocoder_Factory","token","providedIn","WindowRef","getNativeWindow","window","DocumentRef","getNativeDocument","document","BROWSER_GLOBALS_PROVIDERS","GoogleMapsScriptProtocol","LAZY_MAPS_API_CONFIG","LazyMapsAPILoader","config","localeId","_SCRIPT_ID","callbackName","_config","_windowRef","_documentRef","_scriptLoadingPromise","scriptOnPage","getElementById","_assignScriptLoadingPromise","script","createElement","async","defer","src","_getScriptSrc","body","appendChild","scriptElem","onerror","error","protocolType","protocol","HTTPS","AUTO","HTTP","hostAndPath","queryParams","v","apiVersion","apiKey","client","clientId","channel","libraries","region","language","params","isArray","join","entry","NoOpMapsAPILoader","AgmCoreModule_1","coreDirectives","AgmCoreModule","forRoot","lazyMapsAPILoaderConfig","ngModule","useClass","useValue","declarations","exports","ɵa","ɵb","ɵc","ɵd","ɵe"],"sources":["D:/alodelivery test/node_modules/@agm/core/fesm2015/agm-core.js"],"sourcesContent":["import { __decorate, __metadata, __param, __awaiter } from 'tslib';\nimport { Injectable, NgZone, Input, Directive, EventEmitter, Output, Self, ElementRef, Component, Inject, PLATFORM_ID, QueryList, ContentChildren, forwardRef, ɵɵdefineInjectable, ɵɵinject, InjectionToken, Optional, LOCALE_ID, NgModule } from '@angular/core';\nimport { Observable, BehaviorSubject, from, timer, Subject, fromEventPattern, merge, ReplaySubject, bindCallback, of, throwError } from 'rxjs';\nimport { flatMap, sample, switchMap, map, shareReplay, distinctUntilChanged, takeUntil, startWith, skip, multicast } from 'rxjs/operators';\nimport { isPlatformServer } from '@angular/common';\n\nlet MapsAPILoader = class MapsAPILoader {\n};\nMapsAPILoader = __decorate([\n    Injectable()\n], MapsAPILoader);\n\n/**\n * Wrapper class that handles the communication with the Google Maps Javascript\n * API v3\n */\nlet GoogleMapsAPIWrapper = class GoogleMapsAPIWrapper {\n    constructor(_loader, _zone) {\n        this._loader = _loader;\n        this._zone = _zone;\n        this._map =\n            new Promise((resolve) => { this._mapResolver = resolve; });\n    }\n    createMap(el, mapOptions) {\n        return this._zone.runOutsideAngular(() => {\n            return this._loader.load().then(() => {\n                const map = new google.maps.Map(el, mapOptions);\n                this._mapResolver(map);\n                return;\n            });\n        });\n    }\n    setMapOptions(options) {\n        return this._zone.runOutsideAngular(() => {\n            this._map.then((m) => { m.setOptions(options); });\n        });\n    }\n    /**\n     * Creates a google map marker with the map context\n     */\n    createMarker(options = {}, addToMap = true) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                if (addToMap) {\n                    options.map = map;\n                }\n                return new google.maps.Marker(options);\n            });\n        });\n    }\n    createInfoWindow(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then(() => { return new google.maps.InfoWindow(options); });\n        });\n    }\n    /**\n     * Creates a google.map.Circle for the current map.\n     */\n    createCircle(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                if (typeof options.strokePosition === 'string') {\n                    options.strokePosition = google.maps.StrokePosition[options.strokePosition];\n                }\n                options.map = map;\n                return new google.maps.Circle(options);\n            });\n        });\n    }\n    /**\n     * Creates a google.map.Rectangle for the current map.\n     */\n    createRectangle(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                options.map = map;\n                return new google.maps.Rectangle(options);\n            });\n        });\n    }\n    createPolyline(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this.getNativeMap().then((map) => {\n                let line = new google.maps.Polyline(options);\n                line.setMap(map);\n                return line;\n            });\n        });\n    }\n    createPolygon(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this.getNativeMap().then((map) => {\n                let polygon = new google.maps.Polygon(options);\n                polygon.setMap(map);\n                return polygon;\n            });\n        });\n    }\n    /**\n     * Creates a new google.map.Data layer for the current map\n     */\n    createDataLayer(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then(m => {\n                let data = new google.maps.Data(options);\n                data.setMap(m);\n                return data;\n            });\n        });\n    }\n    /**\n     * Creates a TransitLayer instance for a map\n     * @param {TransitLayerOptions} options - used for setting layer options\n     * @returns {Promise<TransitLayer>} a new transit layer object\n     */\n    createTransitLayer(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                let newLayer = new google.maps.TransitLayer();\n                newLayer.setMap(options.visible ? map : null);\n                return newLayer;\n            });\n        });\n    }\n    /**\n     * Creates a BicyclingLayer instance for a map\n     * @param {BicyclingLayerOptions} options - used for setting layer options\n     * @returns {Promise<BicyclingLayer>} a new bicycling layer object\n     */\n    createBicyclingLayer(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                let newLayer = new google.maps.BicyclingLayer();\n                newLayer.setMap(options.visible ? map : null);\n                return newLayer;\n            });\n        });\n    }\n    /**\n     * Determines if given coordinates are insite a Polygon path.\n     */\n    containsLocation(latLng, polygon) {\n        return google.maps.geometry.poly.containsLocation(latLng, polygon);\n    }\n    subscribeToMapEvent(eventName) {\n        return new Observable((observer) => {\n            this._map.then((m) => {\n                m.addListener(eventName, (arg) => { this._zone.run(() => observer.next(arg)); });\n            });\n        });\n    }\n    clearInstanceListeners() {\n        return this._zone.runOutsideAngular(() => {\n            this._map.then((map) => {\n                google.maps.event.clearInstanceListeners(map);\n            });\n        });\n    }\n    setCenter(latLng) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.setCenter(latLng));\n        });\n    }\n    getZoom() {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.getZoom());\n        });\n    }\n    getBounds() {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.getBounds());\n        });\n    }\n    getMapTypeId() {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.getMapTypeId());\n        });\n    }\n    setZoom(zoom) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.setZoom(zoom));\n        });\n    }\n    getCenter() {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.getCenter());\n        });\n    }\n    panTo(latLng) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.panTo(latLng));\n        });\n    }\n    panBy(x, y) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.panBy(x, y));\n        });\n    }\n    fitBounds(latLng, padding) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.fitBounds(latLng, padding));\n        });\n    }\n    panToBounds(latLng, padding) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.panToBounds(latLng, padding));\n        });\n    }\n    /**\n     * Returns the native Google Maps Map instance. Be careful when using this instance directly.\n     */\n    getNativeMap() { return this._map; }\n    /**\n     * Triggers the given event name on the map instance.\n     */\n    triggerMapEvent(eventName) {\n        return this._map.then((m) => google.maps.event.trigger(m, eventName));\n    }\n};\nGoogleMapsAPIWrapper.ctorParameters = () => [\n    { type: MapsAPILoader },\n    { type: NgZone }\n];\nGoogleMapsAPIWrapper = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [MapsAPILoader, NgZone])\n], GoogleMapsAPIWrapper);\n\n/**\n * This class manages Transit and Bicycling Layers for a Google Map instance.\n */\nlet LayerManager = class LayerManager {\n    constructor(_wrapper) {\n        this._wrapper = _wrapper;\n        this._layers = new Map();\n    }\n    /**\n     * Adds a transit layer to a map instance.\n     * @param {AgmTransitLayer} layer - a TransitLayer object\n     * @param {TransitLayerOptions} options - TransitLayerOptions options\n     * @returns void\n     */\n    addTransitLayer(layer, options) {\n        const newLayer = this._wrapper.createTransitLayer(options);\n        this._layers.set(layer, newLayer);\n    }\n    /**\n     * Adds a bicycling layer to a map instance.\n     * @param {AgmBicyclingLayer} layer - a bicycling layer object\n     * @param {BicyclingLayerOptions} options - BicyclingLayer options\n     * @returns void\n     */\n    addBicyclingLayer(layer, options) {\n        const newLayer = this._wrapper.createBicyclingLayer(options);\n        this._layers.set(layer, newLayer);\n    }\n    /**\n     * Deletes a map layer\n     * @param {AgmTransitLayer|AgmBicyclingLayer} layer - the layer to delete\n     * @returns  Promise<void>\n     */\n    deleteLayer(layer) {\n        return this._layers.get(layer).then(currentLayer => {\n            currentLayer.setMap(null);\n            this._layers.delete(layer);\n        });\n    }\n    /**\n     * Hide/Show a google map layer\n     * @param { AgmTransitLayer|AgmBicyclingLayer} layer - the layer to hide/show\n     * @param {TransitLayerOptions|BicyclingLayerOptions} options - used to set visibility of the layer\n     * @returns Promise<void>\n     */\n    toggleLayerVisibility(layer, options) {\n        return this._layers.get(layer).then(currentLayer => {\n            if (!options.visible) {\n                currentLayer.setMap(null);\n                return;\n            }\n            else {\n                return this._wrapper.getNativeMap().then((map) => {\n                    currentLayer.setMap(map);\n                });\n            }\n        });\n    }\n};\nLayerManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper }\n];\nLayerManager = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper])\n], LayerManager);\n\nlet layerId = 0;\n/*\n * This directive adds a bicycling layer to a google map instance\n * <agm-bicycling-layer [visible]=\"true|false\"> <agm-bicycling-layer>\n * */\nlet AgmBicyclingLayer = class AgmBicyclingLayer {\n    constructor(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId++).toString();\n        /**\n         * Hide/show bicycling layer\n         */\n        this.visible = true;\n    }\n    ngOnInit() {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addBicyclingLayer(this, { visible: this.visible });\n        this._addedToManager = true;\n    }\n    ngOnChanges(changes) {\n        if (!this._addedToManager) {\n            return;\n        }\n        if (changes['visible'] != null) {\n            this._manager.toggleLayerVisibility(this, { visible: changes['visible'].currentValue });\n        }\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return `AgmBicyclingLayer-${this._id.toString()}`; }\n    /** @internal */\n    ngOnDestroy() {\n        this._manager.deleteLayer(this);\n    }\n};\nAgmBicyclingLayer.ctorParameters = () => [\n    { type: LayerManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmBicyclingLayer.prototype, \"visible\", void 0);\nAgmBicyclingLayer = __decorate([\n    Directive({\n        selector: 'agm-bicycling-layer',\n    }),\n    __metadata(\"design:paramtypes\", [LayerManager])\n], AgmBicyclingLayer);\n\nlet CircleManager = class CircleManager {\n    constructor(_apiWrapper, _zone) {\n        this._apiWrapper = _apiWrapper;\n        this._zone = _zone;\n        this._circles = new Map();\n    }\n    addCircle(circle) {\n        this._circles.set(circle, this._apiWrapper.createCircle({\n            center: { lat: circle.latitude, lng: circle.longitude },\n            clickable: circle.clickable,\n            draggable: circle.draggable,\n            editable: circle.editable,\n            fillColor: circle.fillColor,\n            fillOpacity: circle.fillOpacity,\n            radius: circle.radius,\n            strokeColor: circle.strokeColor,\n            strokeOpacity: circle.strokeOpacity,\n            strokePosition: circle.strokePosition,\n            strokeWeight: circle.strokeWeight,\n            visible: circle.visible,\n            zIndex: circle.zIndex,\n        }));\n    }\n    /**\n     * Removes the given circle from the map.\n     */\n    removeCircle(circle) {\n        return this._circles.get(circle).then((c) => {\n            c.setMap(null);\n            this._circles.delete(circle);\n        });\n    }\n    setOptions(circle, options) {\n        return this._circles.get(circle).then((c) => {\n            if (typeof options.strokePosition === 'string') {\n                options.strokePosition = google.maps.StrokePosition[options.strokePosition];\n            }\n            c.setOptions(options);\n        });\n    }\n    getBounds(circle) {\n        return this._circles.get(circle).then((c) => c.getBounds());\n    }\n    getCenter(circle) {\n        return this._circles.get(circle).then((c) => c.getCenter());\n    }\n    getRadius(circle) {\n        return this._circles.get(circle).then((c) => c.getRadius());\n    }\n    setCenter(circle) {\n        return this._circles.get(circle).then((c) => { return c.setCenter({ lat: circle.latitude, lng: circle.longitude }); });\n    }\n    setEditable(circle) {\n        return this._circles.get(circle).then((c) => { return c.setEditable(circle.editable); });\n    }\n    setDraggable(circle) {\n        return this._circles.get(circle).then((c) => { return c.setDraggable(circle.draggable); });\n    }\n    setVisible(circle) {\n        return this._circles.get(circle).then((c) => { return c.setVisible(circle.visible); });\n    }\n    setRadius(circle) {\n        return this._circles.get(circle).then((c) => { return c.setRadius(circle.radius); });\n    }\n    getNativeCircle(circle) {\n        return this._circles.get(circle);\n    }\n    createEventObservable(eventName, circle) {\n        return new Observable((observer) => {\n            let listener = null;\n            this._circles.get(circle).then((c) => {\n                listener = c.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n            return () => {\n                if (listener !== null) {\n                    listener.remove();\n                }\n            };\n        });\n    }\n};\nCircleManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nCircleManager = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], CircleManager);\n\nvar AgmCircle_1;\nlet AgmCircle = AgmCircle_1 = class AgmCircle {\n    constructor(_manager) {\n        this._manager = _manager;\n        /**\n         * Indicates whether this Circle handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this circle over the map. Defaults to false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this circle by dragging the control points shown at\n         * the center and around the circumference of the circle. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * The radius in meters on the Earth's surface.\n         */\n        this.radius = 0;\n        /**\n         * The stroke position. Defaults to CENTER.\n         * This property is not supported on Internet Explorer 8 and earlier.\n         */\n        this.strokePosition = 'CENTER';\n        /**\n         * The stroke width in pixels.\n         */\n        this.strokeWeight = 0;\n        /**\n         * Whether this circle is visible on the map. Defaults to true.\n         */\n        this.visible = true;\n        /**\n         * This event is fired when the circle's center is changed.\n         */\n        this.centerChange = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the circle.\n         */\n        this.circleClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the circle.\n         */\n        this.circleDblClick = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the circle.\n         */\n        this.drag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the circle.\n         */\n        this.dragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the circle.\n         */\n        this.dragStart = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the circle.\n         */\n        this.mouseDown = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the circle.\n         */\n        this.mouseMove = new EventEmitter();\n        /**\n         * This event is fired on circle mouseout.\n         */\n        this.mouseOut = new EventEmitter();\n        /**\n         * This event is fired on circle mouseover.\n         */\n        this.mouseOver = new EventEmitter();\n        /**\n         * This event is fired when the DOM mouseup event is fired on the circle.\n         */\n        this.mouseUp = new EventEmitter();\n        /**\n         * This event is fired when the circle's radius is changed.\n         */\n        this.radiusChange = new EventEmitter();\n        /**\n         * This event is fired when the circle is right-clicked on.\n         */\n        this.rightClick = new EventEmitter();\n        this._circleAddedToManager = false;\n        this._eventSubscriptions = [];\n    }\n    /** @internal */\n    ngOnInit() {\n        this._manager.addCircle(this);\n        this._circleAddedToManager = true;\n        this._registerEventListeners();\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (!this._circleAddedToManager) {\n            return;\n        }\n        if (changes['latitude'] || changes['longitude']) {\n            this._manager.setCenter(this);\n        }\n        if (changes['editable']) {\n            this._manager.setEditable(this);\n        }\n        if (changes['draggable']) {\n            this._manager.setDraggable(this);\n        }\n        if (changes['visible']) {\n            this._manager.setVisible(this);\n        }\n        if (changes['radius']) {\n            this._manager.setRadius(this);\n        }\n        this._updateCircleOptionsChanges(changes);\n    }\n    _updateCircleOptionsChanges(changes) {\n        let options = {};\n        let optionKeys = Object.keys(changes).filter(k => AgmCircle_1._mapOptions.indexOf(k) !== -1);\n        optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\n        if (optionKeys.length > 0) {\n            this._manager.setOptions(this, options);\n        }\n    }\n    _registerEventListeners() {\n        let events = new Map();\n        events.set('center_changed', this.centerChange);\n        events.set('click', this.circleClick);\n        events.set('dblclick', this.circleDblClick);\n        events.set('drag', this.drag);\n        events.set('dragend', this.dragEnd);\n        events.set('dragstart', this.dragStart);\n        events.set('mousedown', this.mouseDown);\n        events.set('mousemove', this.mouseMove);\n        events.set('mouseout', this.mouseOut);\n        events.set('mouseover', this.mouseOver);\n        events.set('mouseup', this.mouseUp);\n        events.set('radius_changed', this.radiusChange);\n        events.set('rightclick', this.rightClick);\n        events.forEach((eventEmitter, eventName) => {\n            this._eventSubscriptions.push(this._manager.createEventObservable(eventName, this).subscribe((value) => {\n                switch (eventName) {\n                    case 'radius_changed':\n                        this._manager.getRadius(this).then((radius) => eventEmitter.emit(radius));\n                        break;\n                    case 'center_changed':\n                        this._manager.getCenter(this).then((center) => eventEmitter.emit({ lat: center.lat(), lng: center.lng() }));\n                        break;\n                    default:\n                        eventEmitter.emit({ coords: { lat: value.latLng.lat(), lng: value.latLng.lng() } });\n                }\n            }));\n        });\n    }\n    /** @internal */\n    ngOnDestroy() {\n        this._eventSubscriptions.forEach(function (s) { s.unsubscribe(); });\n        this._eventSubscriptions = null;\n        this._manager.removeCircle(this);\n    }\n    /**\n     * Gets the LatLngBounds of this Circle.\n     */\n    getBounds() { return this._manager.getBounds(this); }\n    getCenter() { return this._manager.getCenter(this); }\n};\nAgmCircle._mapOptions = [\n    'fillColor', 'fillOpacity', 'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight',\n    'visible', 'zIndex', 'clickable',\n];\nAgmCircle.ctorParameters = () => [\n    { type: CircleManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmCircle.prototype, \"latitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmCircle.prototype, \"longitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmCircle.prototype, \"clickable\", void 0);\n__decorate([\n    Input('circleDraggable'),\n    __metadata(\"design:type\", Object)\n], AgmCircle.prototype, \"draggable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmCircle.prototype, \"editable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmCircle.prototype, \"fillColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmCircle.prototype, \"fillOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmCircle.prototype, \"radius\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmCircle.prototype, \"strokeColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmCircle.prototype, \"strokeOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmCircle.prototype, \"strokePosition\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmCircle.prototype, \"strokeWeight\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmCircle.prototype, \"visible\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmCircle.prototype, \"zIndex\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"centerChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"circleClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"circleDblClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"drag\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"dragEnd\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"dragStart\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"mouseDown\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"mouseMove\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"mouseOut\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"mouseOver\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"mouseUp\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"radiusChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"rightClick\", void 0);\nAgmCircle = AgmCircle_1 = __decorate([\n    Directive({\n        selector: 'agm-circle',\n    }),\n    __metadata(\"design:paramtypes\", [CircleManager])\n], AgmCircle);\n\n/**\n * Manages all Data Layers for a Google Map instance.\n */\nlet DataLayerManager = class DataLayerManager {\n    constructor(_wrapper, _zone) {\n        this._wrapper = _wrapper;\n        this._zone = _zone;\n        this._layers = new Map();\n    }\n    /**\n     * Adds a new Data Layer to the map.\n     */\n    addDataLayer(layer) {\n        const newLayer = this._wrapper.createDataLayer({\n            style: layer.style,\n        })\n            .then(d => {\n            if (layer.geoJson) {\n                this.getDataFeatures(d, layer.geoJson).then(features => d.features = features);\n            }\n            return d;\n        });\n        this._layers.set(layer, newLayer);\n    }\n    deleteDataLayer(layer) {\n        this._layers.get(layer).then(l => {\n            l.setMap(null);\n            this._layers.delete(layer);\n        });\n    }\n    updateGeoJson(layer, geoJson) {\n        this._layers.get(layer).then(l => {\n            l.forEach(function (feature) {\n                l.remove(feature);\n                var index = l.features.indexOf(feature, 0);\n                if (index > -1) {\n                    l.features.splice(index, 1);\n                }\n            });\n            this.getDataFeatures(l, geoJson).then(features => l.features = features);\n        });\n    }\n    setDataOptions(layer, options) {\n        this._layers.get(layer).then(l => {\n            l.setControlPosition(options.controlPosition);\n            l.setControls(options.controls);\n            l.setDrawingMode(options.drawingMode);\n            l.setStyle(options.style);\n        });\n    }\n    /**\n     * Creates a Google Maps event listener for the given DataLayer as an Observable\n     */\n    createEventObservable(eventName, layer) {\n        return new Observable((observer) => {\n            this._layers.get(layer).then((d) => {\n                d.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n    /**\n     * Extract features from a geoJson using google.maps Data Class\n     * @param d : google.maps.Data class instance\n     * @param geoJson : url or geojson object\n     */\n    getDataFeatures(d, geoJson) {\n        return new Promise((resolve, reject) => {\n            if (typeof geoJson === 'object') {\n                try {\n                    const features = d.addGeoJson(geoJson);\n                    resolve(features);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }\n            else if (typeof geoJson === 'string') {\n                d.loadGeoJson(geoJson, null, resolve);\n            }\n            else {\n                reject(`Impossible to extract features from geoJson: wrong argument type`);\n            }\n        });\n    }\n};\nDataLayerManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nDataLayerManager = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], DataLayerManager);\n\nvar AgmDataLayer_1;\nlet layerId$1 = 0;\n/**\n * AgmDataLayer enables the user to add data layers to the map.\n *\n * ### Example\n * ```typescript\n * import { Component } from 'angular2/core';\n * import { AgmMap, AgmDataLayer } from\n * 'angular-google-maps/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  directives: [AgmMap, AgmDataLayer],\n *  styles: [`\n *    .agm-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n * <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n * \t  <agm-data-layer [geoJson]=\"geoJsonObject\" (layerClick)=\"clicked($event)\" [style]=\"styleFunc\">\n * \t  </agm-data-layer>\n * </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = -25.274449;\n *   lng: number = 133.775060;\n *   zoom: number = 5;\n *\n * clicked(clickEvent) {\n *    console.log(clickEvent);\n *  }\n *\n *  styleFunc(feature) {\n *    return ({\n *      clickable: false,\n *      fillColor: feature.getProperty('color'),\n *      strokeWeight: 1\n *    });\n *  }\n *\n *  geoJsonObject: Object = {\n *    \"type\": \"FeatureCollection\",\n *    \"features\": [\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"G\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"71\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [123.61, -22.14], [122.38, -21.73], [121.06, -21.69], [119.66, -22.22], [119.00, -23.40],\n *              [118.65, -24.76], [118.43, -26.07], [118.78, -27.56], [119.22, -28.57], [120.23, -29.49],\n *              [121.77, -29.87], [123.57, -29.64], [124.45, -29.03], [124.71, -27.95], [124.80, -26.70],\n *              [124.80, -25.60], [123.61, -25.64], [122.56, -25.64], [121.72, -25.72], [121.81, -26.62],\n *              [121.86, -26.98], [122.60, -26.90], [123.57, -27.05], [123.57, -27.68], [123.35, -28.18],\n *              [122.51, -28.38], [121.77, -28.26], [121.02, -27.91], [120.49, -27.21], [120.14, -26.50],\n *              [120.10, -25.64], [120.27, -24.52], [120.67, -23.68], [121.72, -23.32], [122.43, -23.48],\n *              [123.04, -24.04], [124.54, -24.28], [124.58, -23.20], [123.61, -22.14]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"red\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [128.84, -25.76], [128.18, -25.60], [127.96, -25.52], [127.88, -25.52], [127.70, -25.60],\n *              [127.26, -25.79], [126.60, -26.11], [126.16, -26.78], [126.12, -27.68], [126.21, -28.42],\n *              [126.69, -29.49], [127.74, -29.80], [128.80, -29.72], [129.41, -29.03], [129.72, -27.95],\n *              [129.68, -27.21], [129.33, -26.23], [128.84, -25.76]\n *            ],\n *            [\n *              [128.45, -27.44], [128.32, -26.94], [127.70, -26.82], [127.35, -27.05], [127.17, -27.80],\n *              [127.57, -28.22], [128.10, -28.42], [128.49, -27.80], [128.45, -27.44]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"yellow\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [131.87, -25.76], [131.35, -26.07], [130.95, -26.78], [130.82, -27.64], [130.86, -28.53],\n *              [131.26, -29.22], [131.92, -29.76], [132.45, -29.87], [133.06, -29.76], [133.72, -29.34],\n *              [134.07, -28.80], [134.20, -27.91], [134.07, -27.21], [133.81, -26.31], [133.37, -25.83],\n *              [132.71, -25.64], [131.87, -25.76]\n *            ],\n *            [\n *              [133.15, -27.17], [132.71, -26.86], [132.09, -26.90], [131.74, -27.56], [131.79, -28.26],\n *              [132.36, -28.45], [132.93, -28.34], [133.15, -27.76], [133.15, -27.17]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"g\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"103\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [138.12, -25.04], [136.84, -25.16], [135.96, -25.36], [135.26, -25.99], [135, -26.90],\n *              [135.04, -27.91], [135.26, -28.88], [136.05, -29.45], [137.02, -29.49], [137.81, -29.49],\n *              [137.94, -29.99], [137.90, -31.20], [137.85, -32.24], [136.88, -32.69], [136.45, -32.36],\n *              [136.27, -31.80], [134.95, -31.84], [135.17, -32.99], [135.52, -33.43], [136.14, -33.76],\n *              [137.06, -33.83], [138.12, -33.65], [138.86, -33.21], [139.30, -32.28], [139.30, -31.24],\n *              [139.30, -30.14], [139.21, -28.96], [139.17, -28.22], [139.08, -27.41], [139.08, -26.47],\n *              [138.99, -25.40], [138.73, -25.00], [138.12, -25.04]\n *            ],\n *            [\n *              [137.50, -26.54], [136.97, -26.47], [136.49, -26.58], [136.31, -27.13], [136.31, -27.72],\n *              [136.58, -27.99], [137.50, -28.03], [137.68, -27.68], [137.59, -26.78], [137.50, -26.54]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"l\",\n *          \"color\": \"green\",\n *          \"rank\": \"12\",\n *          \"ascii\": \"108\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [140.14, -21.04], [140.31, -29.42], [141.67, -29.49], [141.59, -20.92], [140.14, -21.04]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"e\",\n *          \"color\": \"red\",\n *          \"rank\": \"5\",\n *          \"ascii\": \"101\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [144.14, -27.41], [145.67, -27.52], [146.86, -27.09], [146.82, -25.64], [146.25, -25.04],\n *              [145.45, -24.68], [144.66, -24.60], [144.09, -24.76], [143.43, -25.08], [142.99, -25.40],\n *              [142.64, -26.03], [142.64, -27.05], [142.64, -28.26], [143.30, -29.11], [144.18, -29.57],\n *              [145.41, -29.64], [146.46, -29.19], [146.64, -28.72], [146.82, -28.14], [144.84, -28.42],\n *              [144.31, -28.26], [144.14, -27.41]\n *            ],\n *            [\n *              [144.18, -26.39], [144.53, -26.58], [145.19, -26.62], [145.72, -26.35], [145.81, -25.91],\n *              [145.41, -25.68], [144.97, -25.68], [144.49, -25.64], [144, -25.99], [144.18, -26.39]\n *            ]\n *          ]\n *        }\n *      }\n *    ]\n *  };\n * }\n * ```\n */\nlet AgmDataLayer = AgmDataLayer_1 = class AgmDataLayer {\n    constructor(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId$1++).toString();\n        this._subscriptions = [];\n        /**\n         * This event is fired when a feature in the layer is clicked.\n         */\n        this.layerClick = new EventEmitter();\n        /**\n         * The geoJson to be displayed\n         */\n        this.geoJson = null;\n    }\n    ngOnInit() {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addDataLayer(this);\n        this._addedToManager = true;\n        this._addEventListeners();\n    }\n    _addEventListeners() {\n        const listeners = [\n            { name: 'click', handler: (ev) => this.layerClick.emit(ev) },\n        ];\n        listeners.forEach((obj) => {\n            const os = this._manager.createEventObservable(obj.name, this).subscribe(obj.handler);\n            this._subscriptions.push(os);\n        });\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return `AgmDataLayer-${this._id.toString()}`; }\n    /** @internal */\n    ngOnDestroy() {\n        this._manager.deleteDataLayer(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach(s => s.unsubscribe());\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (!this._addedToManager) {\n            return;\n        }\n        var geoJsonChange = changes['geoJson'];\n        if (geoJsonChange) {\n            this._manager.updateGeoJson(this, geoJsonChange.currentValue);\n        }\n        let dataOptions = {};\n        AgmDataLayer_1._dataOptionsAttributes.forEach(k => dataOptions[k] = changes.hasOwnProperty(k) ? changes[k].currentValue : this[k]);\n        this._manager.setDataOptions(this, dataOptions);\n    }\n};\nAgmDataLayer._dataOptionsAttributes = ['style'];\nAgmDataLayer.ctorParameters = () => [\n    { type: DataLayerManager }\n];\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmDataLayer.prototype, \"layerClick\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmDataLayer.prototype, \"geoJson\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Function)\n], AgmDataLayer.prototype, \"style\", void 0);\nAgmDataLayer = AgmDataLayer_1 = __decorate([\n    Directive({\n        selector: 'agm-data-layer',\n    }),\n    __metadata(\"design:paramtypes\", [DataLayerManager])\n], AgmDataLayer);\n\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nclass FitBoundsAccessor {\n}\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\nlet FitBoundsService = class FitBoundsService {\n    constructor(loader) {\n        this._boundsChangeSampleTime$ = new BehaviorSubject(200);\n        this._includeInBounds$ = new BehaviorSubject(new Map());\n        this.bounds$ = from(loader.load()).pipe(flatMap(() => this._includeInBounds$), sample(this._boundsChangeSampleTime$.pipe(switchMap(time => timer(0, time)))), map(includeInBounds => this._generateBounds(includeInBounds)), shareReplay(1));\n    }\n    _generateBounds(includeInBounds) {\n        const bounds = new google.maps.LatLngBounds();\n        includeInBounds.forEach(b => bounds.extend(b));\n        return bounds;\n    }\n    addToBounds(latLng) {\n        const id = this._createIdentifier(latLng);\n        if (this._includeInBounds$.value.has(id)) {\n            return;\n        }\n        const map = this._includeInBounds$.value;\n        map.set(id, latLng);\n        this._includeInBounds$.next(map);\n    }\n    removeFromBounds(latLng) {\n        const map = this._includeInBounds$.value;\n        map.delete(this._createIdentifier(latLng));\n        this._includeInBounds$.next(map);\n    }\n    changeFitBoundsChangeSampleTime(timeMs) {\n        this._boundsChangeSampleTime$.next(timeMs);\n    }\n    getBounds$() {\n        return this.bounds$;\n    }\n    _createIdentifier(latLng) {\n        return `${latLng.lat}+${latLng.lng}`;\n    }\n};\nFitBoundsService.ctorParameters = () => [\n    { type: MapsAPILoader }\n];\nFitBoundsService = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [MapsAPILoader])\n], FitBoundsService);\n\n/**\n * Adds the given directive to the auto fit bounds feature when the value is true.\n * To make it work with you custom AGM component, you also have to implement the {@link FitBoundsAccessor} abstract class.\n * @example\n * <agm-marker [agmFitBounds]=\"true\"></agm-marker>\n */\nlet AgmFitBounds = class AgmFitBounds {\n    constructor(_fitBoundsAccessor, _fitBoundsService) {\n        this._fitBoundsAccessor = _fitBoundsAccessor;\n        this._fitBoundsService = _fitBoundsService;\n        /**\n         * If the value is true, the element gets added to the bounds of the map.\n         * Default: true.\n         */\n        this.agmFitBounds = true;\n        this._destroyed$ = new Subject();\n        this._latestFitBoundsDetails = null;\n    }\n    /**\n     * @internal\n     */\n    ngOnChanges() {\n        this._updateBounds();\n    }\n    /**\n     * @internal\n     */\n    ngOnInit() {\n        this._fitBoundsAccessor\n            .getFitBoundsDetails$()\n            .pipe(distinctUntilChanged((x, y) => x.latLng.lat === y.latLng.lat && x.latLng.lng === y.latLng.lng), takeUntil(this._destroyed$))\n            .subscribe(details => this._updateBounds(details));\n    }\n    /*\n     Either the location changed, or visible status changed.\n     Possible state changes are\n     invisible -> visible\n     visible -> invisible\n     visible -> visible (new location)\n    */\n    _updateBounds(newFitBoundsDetails) {\n        // either visibility will change, or location, so remove the old one anyway\n        if (this._latestFitBoundsDetails) {\n            this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\n            // don't set latestFitBoundsDetails to null, because we can toggle visibility from\n            // true -> false -> true, in which case we still need old value cached here\n        }\n        if (newFitBoundsDetails) {\n            this._latestFitBoundsDetails = newFitBoundsDetails;\n        }\n        if (!this._latestFitBoundsDetails) {\n            return;\n        }\n        if (this.agmFitBounds === true) {\n            this._fitBoundsService.addToBounds(this._latestFitBoundsDetails.latLng);\n        }\n    }\n    /**\n     * @internal\n     */\n    ngOnDestroy() {\n        this._destroyed$.next();\n        this._destroyed$.complete();\n        if (this._latestFitBoundsDetails !== null) {\n            this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\n        }\n    }\n};\nAgmFitBounds.ctorParameters = () => [\n    { type: FitBoundsAccessor, decorators: [{ type: Self }] },\n    { type: FitBoundsService }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmFitBounds.prototype, \"agmFitBounds\", void 0);\nAgmFitBounds = __decorate([\n    Directive({\n        selector: '[agmFitBounds]',\n    }),\n    __param(0, Self()),\n    __metadata(\"design:paramtypes\", [FitBoundsAccessor,\n        FitBoundsService])\n], AgmFitBounds);\n\nlet MarkerManager = class MarkerManager {\n    constructor(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._markers = new Map();\n    }\n    convertAnimation(uiAnim) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (uiAnim === null) {\n                return null;\n            }\n            else {\n                return this._mapsWrapper.getNativeMap().then(() => google.maps.Animation[uiAnim]);\n            }\n        });\n    }\n    deleteMarker(marker) {\n        const m = this._markers.get(marker);\n        if (m == null) {\n            // marker already deleted\n            return Promise.resolve();\n        }\n        return m.then((m) => {\n            return this._zone.run(() => {\n                m.setMap(null);\n                this._markers.delete(marker);\n            });\n        });\n    }\n    updateMarkerPosition(marker) {\n        return this._markers.get(marker).then((m) => m.setPosition({ lat: marker.latitude, lng: marker.longitude }));\n    }\n    updateTitle(marker) {\n        return this._markers.get(marker).then((m) => m.setTitle(marker.title));\n    }\n    updateLabel(marker) {\n        return this._markers.get(marker).then((m) => { m.setLabel(marker.label); });\n    }\n    updateDraggable(marker) {\n        return this._markers.get(marker).then((m) => m.setDraggable(marker.draggable));\n    }\n    updateIcon(marker) {\n        return this._markers.get(marker).then((m) => m.setIcon(marker.iconUrl));\n    }\n    updateOpacity(marker) {\n        return this._markers.get(marker).then((m) => m.setOpacity(marker.opacity));\n    }\n    updateVisible(marker) {\n        return this._markers.get(marker).then((m) => m.setVisible(marker.visible));\n    }\n    updateZIndex(marker) {\n        return this._markers.get(marker).then((m) => m.setZIndex(marker.zIndex));\n    }\n    updateClickable(marker) {\n        return this._markers.get(marker).then((m) => m.setClickable(marker.clickable));\n    }\n    updateAnimation(marker) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const m = yield this._markers.get(marker);\n            m.setAnimation(yield this.convertAnimation(marker.animation));\n        });\n    }\n    addMarker(marker) {\n        const markerPromise = new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n            return this._mapsWrapper.createMarker({\n                position: { lat: marker.latitude, lng: marker.longitude },\n                label: marker.label,\n                draggable: marker.draggable,\n                icon: marker.iconUrl,\n                opacity: marker.opacity,\n                visible: marker.visible,\n                zIndex: marker.zIndex,\n                title: marker.title,\n                clickable: marker.clickable,\n                animation: yield this.convertAnimation(marker.animation),\n            }).then(resolve);\n        }));\n        this._markers.set(marker, markerPromise);\n    }\n    getNativeMarker(marker) {\n        return this._markers.get(marker);\n    }\n    createEventObservable(eventName, marker) {\n        return new Observable((observer) => {\n            this._markers.get(marker).then((m) => {\n                m.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n};\nMarkerManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nMarkerManager = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], MarkerManager);\n\nlet InfoWindowManager = class InfoWindowManager {\n    constructor(_mapsWrapper, _zone, _markerManager) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._markerManager = _markerManager;\n        this._infoWindows = new Map();\n    }\n    deleteInfoWindow(infoWindow) {\n        const iWindow = this._infoWindows.get(infoWindow);\n        if (iWindow == null) {\n            // info window already deleted\n            return Promise.resolve();\n        }\n        return iWindow.then((i) => {\n            return this._zone.run(() => {\n                i.close();\n                this._infoWindows.delete(infoWindow);\n            });\n        });\n    }\n    setPosition(infoWindow) {\n        return this._infoWindows.get(infoWindow).then((i) => i.setPosition({\n            lat: infoWindow.latitude,\n            lng: infoWindow.longitude,\n        }));\n    }\n    setZIndex(infoWindow) {\n        return this._infoWindows.get(infoWindow)\n            .then((i) => i.setZIndex(infoWindow.zIndex));\n    }\n    open(infoWindow) {\n        return this._infoWindows.get(infoWindow).then((w) => {\n            if (infoWindow.hostMarker != null) {\n                return this._markerManager.getNativeMarker(infoWindow.hostMarker).then((marker) => {\n                    return this._mapsWrapper.getNativeMap().then((map) => w.open(map, marker));\n                });\n            }\n            return this._mapsWrapper.getNativeMap().then((map) => w.open(map));\n        });\n    }\n    close(infoWindow) {\n        return this._infoWindows.get(infoWindow).then((w) => w.close());\n    }\n    setOptions(infoWindow, options) {\n        return this._infoWindows.get(infoWindow).then((i) => i.setOptions(options));\n    }\n    addInfoWindow(infoWindow) {\n        const options = {\n            content: infoWindow.content,\n            maxWidth: infoWindow.maxWidth,\n            zIndex: infoWindow.zIndex,\n            disableAutoPan: infoWindow.disableAutoPan,\n        };\n        if (typeof infoWindow.latitude === 'number' && typeof infoWindow.longitude === 'number') {\n            options.position = { lat: infoWindow.latitude, lng: infoWindow.longitude };\n        }\n        const infoWindowPromise = this._mapsWrapper.createInfoWindow(options);\n        this._infoWindows.set(infoWindow, infoWindowPromise);\n    }\n    /**\n     * Creates a Google Maps event listener for the given InfoWindow as an Observable\n     */\n    createEventObservable(eventName, infoWindow) {\n        return new Observable((observer) => {\n            this._infoWindows.get(infoWindow).then((i) => {\n                i.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n};\nInfoWindowManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone },\n    { type: MarkerManager }\n];\nInfoWindowManager = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone,\n        MarkerManager])\n], InfoWindowManager);\n\nvar AgmInfoWindow_1;\nlet infoWindowId = 0;\n/**\n * AgmInfoWindow renders a info window inside a {@link AgmMarker} or standalone.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *        <agm-info-window [disableAutoPan]=\"true\">\n *          Hi, this is the content of the <strong>info window</strong>\n *        </agm-info-window>\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nlet AgmInfoWindow = AgmInfoWindow_1 = class AgmInfoWindow {\n    constructor(_infoWindowManager, _el) {\n        this._infoWindowManager = _infoWindowManager;\n        this._el = _el;\n        /**\n         * Sets the open state for the InfoWindow. You can also call the open() and close() methods.\n         */\n        this.isOpen = false;\n        /**\n         * Emits an event when the info window is closed.\n         */\n        this.infoWindowClose = new EventEmitter();\n        this._infoWindowAddedToManager = false;\n        this._id = (infoWindowId++).toString();\n    }\n    ngOnInit() {\n        this.content = this._el.nativeElement.querySelector('.agm-info-window-content');\n        this._infoWindowManager.addInfoWindow(this);\n        this._infoWindowAddedToManager = true;\n        this._updateOpenState();\n        this._registerEventListeners();\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (!this._infoWindowAddedToManager) {\n            return;\n        }\n        if ((changes['latitude'] || changes['longitude']) && typeof this.latitude === 'number' &&\n            typeof this.longitude === 'number') {\n            this._infoWindowManager.setPosition(this);\n        }\n        if (changes['zIndex']) {\n            this._infoWindowManager.setZIndex(this);\n        }\n        if (changes['isOpen']) {\n            this._updateOpenState();\n        }\n        this._setInfoWindowOptions(changes);\n    }\n    _registerEventListeners() {\n        this._infoWindowManager.createEventObservable('closeclick', this).subscribe(() => {\n            this.isOpen = false;\n            this.infoWindowClose.emit();\n        });\n    }\n    _updateOpenState() {\n        this.isOpen ? this.open() : this.close();\n    }\n    _setInfoWindowOptions(changes) {\n        let options = {};\n        let optionKeys = Object.keys(changes).filter(k => AgmInfoWindow_1._infoWindowOptionsInputs.indexOf(k) !== -1);\n        optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\n        this._infoWindowManager.setOptions(this, options);\n    }\n    /**\n     * Opens the info window.\n     */\n    open() { return this._infoWindowManager.open(this); }\n    /**\n     * Closes the info window.\n     */\n    close() {\n        return this._infoWindowManager.close(this).then(() => { this.infoWindowClose.emit(); });\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return 'AgmInfoWindow-' + this._id.toString(); }\n    /** @internal */\n    ngOnDestroy() { this._infoWindowManager.deleteInfoWindow(this); }\n};\nAgmInfoWindow._infoWindowOptionsInputs = ['disableAutoPan', 'maxWidth'];\nAgmInfoWindow.ctorParameters = () => [\n    { type: InfoWindowManager },\n    { type: ElementRef }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmInfoWindow.prototype, \"latitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmInfoWindow.prototype, \"longitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], AgmInfoWindow.prototype, \"disableAutoPan\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmInfoWindow.prototype, \"zIndex\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmInfoWindow.prototype, \"maxWidth\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmInfoWindow.prototype, \"isOpen\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmInfoWindow.prototype, \"infoWindowClose\", void 0);\nAgmInfoWindow = AgmInfoWindow_1 = __decorate([\n    Component({\n        selector: 'agm-info-window',\n        template: `<div class='agm-info-window-content'>\n      <ng-content></ng-content>\n    </div>\n  `\n    }),\n    __metadata(\"design:paramtypes\", [InfoWindowManager, ElementRef])\n], AgmInfoWindow);\n\n/**\n * Manages all KML Layers for a Google Map instance.\n */\nlet KmlLayerManager = class KmlLayerManager {\n    constructor(_wrapper, _zone) {\n        this._wrapper = _wrapper;\n        this._zone = _zone;\n        this._layers = new Map();\n    }\n    /**\n     * Adds a new KML Layer to the map.\n     */\n    addKmlLayer(layer) {\n        const newLayer = this._wrapper.getNativeMap().then(m => {\n            return new google.maps.KmlLayer({\n                clickable: layer.clickable,\n                map: m,\n                preserveViewport: layer.preserveViewport,\n                screenOverlays: layer.screenOverlays,\n                suppressInfoWindows: layer.suppressInfoWindows,\n                url: layer.url,\n                zIndex: layer.zIndex,\n            });\n        });\n        this._layers.set(layer, newLayer);\n    }\n    setOptions(layer, options) {\n        this._layers.get(layer).then(l => l.setOptions(options));\n    }\n    deleteKmlLayer(layer) {\n        this._layers.get(layer).then(l => {\n            l.setMap(null);\n            this._layers.delete(layer);\n        });\n    }\n    /**\n     * Creates a Google Maps event listener for the given KmlLayer as an Observable\n     */\n    createEventObservable(eventName, layer) {\n        return new Observable((observer) => {\n            this._layers.get(layer).then((m) => {\n                m.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n};\nKmlLayerManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nKmlLayerManager = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], KmlLayerManager);\n\nvar AgmKmlLayer_1;\nlet layerId$2 = 0;\nlet AgmKmlLayer = AgmKmlLayer_1 = class AgmKmlLayer {\n    constructor(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId$2++).toString();\n        this._subscriptions = [];\n        /**\n         * If true, the layer receives mouse events. Default value is true.\n         */\n        this.clickable = true;\n        /**\n         * By default, the input map is centered and zoomed to the bounding box of the contents of the\n         * layer.\n         * If this option is set to true, the viewport is left unchanged, unless the map's center and zoom\n         * were never set.\n         */\n        this.preserveViewport = false;\n        /**\n         * Whether to render the screen overlays. Default true.\n         */\n        this.screenOverlays = true;\n        /**\n         * Suppress the rendering of info windows when layer features are clicked.\n         */\n        this.suppressInfoWindows = false;\n        /**\n         * The URL of the KML document to display.\n         */\n        this.url = null;\n        /**\n         * The z-index of the layer.\n         */\n        this.zIndex = null;\n        /**\n         * This event is fired when a feature in the layer is clicked.\n         */\n        this.layerClick = new EventEmitter();\n        /**\n         * This event is fired when the KML layers default viewport has changed.\n         */\n        this.defaultViewportChange = new EventEmitter();\n        /**\n         * This event is fired when the KML layer has finished loading.\n         * At this point it is safe to read the status property to determine if the layer loaded\n         * successfully.\n         */\n        this.statusChange = new EventEmitter();\n    }\n    ngOnInit() {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addKmlLayer(this);\n        this._addedToManager = true;\n        this._addEventListeners();\n    }\n    ngOnChanges(changes) {\n        if (!this._addedToManager) {\n            return;\n        }\n        this._updatePolygonOptions(changes);\n    }\n    _updatePolygonOptions(changes) {\n        const options = Object.keys(changes)\n            .filter(k => AgmKmlLayer_1._kmlLayerOptions.indexOf(k) !== -1)\n            .reduce((obj, k) => {\n            obj[k] = changes[k].currentValue;\n            return obj;\n        }, {});\n        if (Object.keys(options).length > 0) {\n            this._manager.setOptions(this, options);\n        }\n    }\n    _addEventListeners() {\n        const listeners = [\n            { name: 'click', handler: (ev) => this.layerClick.emit(ev) },\n            { name: 'defaultviewport_changed', handler: () => this.defaultViewportChange.emit() },\n            { name: 'status_changed', handler: () => this.statusChange.emit() },\n        ];\n        listeners.forEach((obj) => {\n            const os = this._manager.createEventObservable(obj.name, this).subscribe(obj.handler);\n            this._subscriptions.push(os);\n        });\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return `AgmKmlLayer-${this._id.toString()}`; }\n    /** @internal */\n    ngOnDestroy() {\n        this._manager.deleteKmlLayer(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach(s => s.unsubscribe());\n    }\n};\nAgmKmlLayer._kmlLayerOptions = ['clickable', 'preserveViewport', 'screenOverlays', 'suppressInfoWindows', 'url', 'zIndex'];\nAgmKmlLayer.ctorParameters = () => [\n    { type: KmlLayerManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmKmlLayer.prototype, \"clickable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmKmlLayer.prototype, \"preserveViewport\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmKmlLayer.prototype, \"screenOverlays\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmKmlLayer.prototype, \"suppressInfoWindows\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmKmlLayer.prototype, \"url\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmKmlLayer.prototype, \"zIndex\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmKmlLayer.prototype, \"layerClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmKmlLayer.prototype, \"defaultViewportChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmKmlLayer.prototype, \"statusChange\", void 0);\nAgmKmlLayer = AgmKmlLayer_1 = __decorate([\n    Directive({\n        selector: 'agm-kml-layer',\n    }),\n    __metadata(\"design:paramtypes\", [KmlLayerManager])\n], AgmKmlLayer);\n\nfunction createMVCEventObservable(array) {\n    const eventNames = ['insert_at', 'remove_at', 'set_at'];\n    return fromEventPattern((handler) => eventNames.map(evName => array.addListener(evName, (index, previous) => handler.apply(array, [{ 'newArr': array.getArray(), evName, index, previous }]))), (_handler, evListeners) => evListeners.forEach(evListener => evListener.remove()));\n}\nclass MvcArrayMock {\n    constructor() {\n        this.vals = [];\n        this.listeners = {\n            'remove_at': [],\n            'insert_at': [],\n            'set_at': [],\n        };\n    }\n    clear() {\n        for (let i = this.vals.length - 1; i >= 0; i--) {\n            this.removeAt(i);\n        }\n    }\n    getArray() {\n        return [...this.vals];\n    }\n    getAt(i) {\n        return this.vals[i];\n    }\n    getLength() {\n        return this.vals.length;\n    }\n    insertAt(i, elem) {\n        this.vals.splice(i, 0, elem);\n        this.listeners.insert_at.map(listener => listener(i));\n    }\n    pop() {\n        const deleted = this.vals.pop();\n        this.listeners.remove_at.map(listener => listener(this.vals.length, deleted));\n        return deleted;\n    }\n    push(elem) {\n        this.vals.push(elem);\n        this.listeners.insert_at.map(listener => listener(this.vals.length - 1));\n        return this.vals.length;\n    }\n    removeAt(i) {\n        const deleted = this.vals.splice(i, 1)[0];\n        this.listeners.remove_at.map(listener => listener(i, deleted));\n        return deleted;\n    }\n    setAt(i, elem) {\n        const deleted = this.vals[i];\n        this.vals[i] = elem;\n        this.listeners.set_at.map(listener => listener(i, deleted));\n    }\n    forEach(callback) {\n        this.vals.forEach(callback);\n    }\n    addListener(eventName, handler) {\n        const listenerArr = this.listeners[eventName];\n        listenerArr.push(handler);\n        return {\n            remove: () => {\n                listenerArr.splice(listenerArr.indexOf(handler), 1);\n            },\n        };\n    }\n}\n\nlet PolygonManager = class PolygonManager {\n    constructor(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._polygons = new Map();\n    }\n    addPolygon(path) {\n        const polygonPromise = this._mapsWrapper.createPolygon({\n            clickable: path.clickable,\n            draggable: path.draggable,\n            editable: path.editable,\n            fillColor: path.fillColor,\n            fillOpacity: path.fillOpacity,\n            geodesic: path.geodesic,\n            paths: path.paths,\n            strokeColor: path.strokeColor,\n            strokeOpacity: path.strokeOpacity,\n            strokeWeight: path.strokeWeight,\n            visible: path.visible,\n            zIndex: path.zIndex,\n        });\n        this._polygons.set(path, polygonPromise);\n    }\n    updatePolygon(polygon) {\n        const m = this._polygons.get(polygon);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then((l) => this._zone.run(() => { l.setPaths(polygon.paths); }));\n    }\n    setPolygonOptions(path, options) {\n        return this._polygons.get(path).then((l) => { l.setOptions(options); });\n    }\n    deletePolygon(paths) {\n        const m = this._polygons.get(paths);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then((l) => {\n            return this._zone.run(() => {\n                l.setMap(null);\n                this._polygons.delete(paths);\n            });\n        });\n    }\n    getPath(polygon) {\n        return this._polygons.get(polygon)\n            .then((polygon) => polygon.getPath().getArray());\n    }\n    getPaths(polygon) {\n        return this._polygons.get(polygon)\n            .then((polygon) => polygon.getPaths().getArray().map((p) => p.getArray()));\n    }\n    createEventObservable(eventName, path) {\n        return new Observable((observer) => {\n            this._polygons.get(path).then((l) => {\n                l.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n    createPathEventObservable(agmPolygon) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const polygon = yield this._polygons.get(agmPolygon);\n            const paths = polygon.getPaths();\n            const pathsChanges$ = createMVCEventObservable(paths);\n            return pathsChanges$.pipe(startWith({ newArr: paths.getArray() }), // in order to subscribe to them all\n            switchMap(parentMVEvent => merge(... // rest parameter\n            parentMVEvent.newArr.map((chMVC, index) => createMVCEventObservable(chMVC)\n                .pipe(map(chMVCEvent => ({ parentMVEvent, chMVCEvent, pathIndex: index })))))\n                .pipe(startWith({ parentMVEvent, chMVCEvent: null, pathIndex: null }))), // start the merged ob with an event signinifing change to parent\n            skip(1), // skip the manually added event\n            map(({ parentMVEvent, chMVCEvent, pathIndex }) => {\n                let retVal;\n                if (!chMVCEvent) {\n                    retVal = {\n                        newArr: parentMVEvent.newArr.map(subArr => subArr.getArray().map(latLng => latLng.toJSON())),\n                        eventName: parentMVEvent.evName,\n                        index: parentMVEvent.index,\n                    };\n                    if (parentMVEvent.previous) {\n                        retVal.previous = parentMVEvent.previous.getArray();\n                    }\n                }\n                else {\n                    retVal = {\n                        newArr: parentMVEvent.newArr.map(subArr => subArr.getArray().map(latLng => latLng.toJSON())),\n                        pathIndex,\n                        eventName: chMVCEvent.evName,\n                        index: chMVCEvent.index,\n                    };\n                    if (chMVCEvent.previous) {\n                        retVal.previous = chMVCEvent.previous;\n                    }\n                }\n                return retVal;\n            }));\n        });\n    }\n};\nPolygonManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nPolygonManager = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], PolygonManager);\n\nvar PolylineManager_1;\nlet PolylineManager = PolylineManager_1 = class PolylineManager {\n    constructor(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._polylines = new Map();\n    }\n    static _convertPoints(line) {\n        const path = line._getPoints().map((point) => {\n            return { lat: point.latitude, lng: point.longitude };\n        });\n        return path;\n    }\n    static _convertPath(path) {\n        const symbolPath = google.maps.SymbolPath[path];\n        if (typeof symbolPath === 'number') {\n            return symbolPath;\n        }\n        else {\n            return path;\n        }\n    }\n    static _convertIcons(line) {\n        const icons = line._getIcons().map(agmIcon => ({\n            fixedRotation: agmIcon.fixedRotation,\n            offset: agmIcon.offset,\n            repeat: agmIcon.repeat,\n            icon: {\n                anchor: new google.maps.Point(agmIcon.anchorX, agmIcon.anchorY),\n                fillColor: agmIcon.fillColor,\n                fillOpacity: agmIcon.fillOpacity,\n                path: PolylineManager_1._convertPath(agmIcon.path),\n                rotation: agmIcon.rotation,\n                scale: agmIcon.scale,\n                strokeColor: agmIcon.strokeColor,\n                strokeOpacity: agmIcon.strokeOpacity,\n                strokeWeight: agmIcon.strokeWeight,\n            },\n        }));\n        // prune undefineds;\n        icons.forEach(icon => {\n            Object.entries(icon).forEach(([key, val]) => {\n                if (typeof val === 'undefined') {\n                    delete icon[key];\n                }\n            });\n            if (typeof icon.icon.anchor.x === 'undefined' ||\n                typeof icon.icon.anchor.y === 'undefined') {\n                delete icon.icon.anchor;\n            }\n        });\n        return icons;\n    }\n    addPolyline(line) {\n        const polylinePromise = this._mapsWrapper.getNativeMap()\n            .then(() => [PolylineManager_1._convertPoints(line),\n            PolylineManager_1._convertIcons(line)])\n            .then(([path, icons]) => this._mapsWrapper.createPolyline({\n            clickable: line.clickable,\n            draggable: line.draggable,\n            editable: line.editable,\n            geodesic: line.geodesic,\n            strokeColor: line.strokeColor,\n            strokeOpacity: line.strokeOpacity,\n            strokeWeight: line.strokeWeight,\n            visible: line.visible,\n            zIndex: line.zIndex,\n            path: path,\n            icons: icons,\n        }));\n        this._polylines.set(line, polylinePromise);\n    }\n    updatePolylinePoints(line) {\n        const path = PolylineManager_1._convertPoints(line);\n        const m = this._polylines.get(line);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then((l) => { return this._zone.run(() => { l.setPath(path); }); });\n    }\n    updateIconSequences(line) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._mapsWrapper.getNativeMap();\n            const icons = PolylineManager_1._convertIcons(line);\n            const m = this._polylines.get(line);\n            if (m == null) {\n                return;\n            }\n            return m.then(l => this._zone.run(() => l.setOptions({ icons: icons })));\n        });\n    }\n    setPolylineOptions(line, options) {\n        return this._polylines.get(line).then((l) => { l.setOptions(options); });\n    }\n    deletePolyline(line) {\n        const m = this._polylines.get(line);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then((l) => {\n            return this._zone.run(() => {\n                l.setMap(null);\n                this._polylines.delete(line);\n            });\n        });\n    }\n    getMVCPath(agmPolyline) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const polyline = yield this._polylines.get(agmPolyline);\n            return polyline.getPath();\n        });\n    }\n    getPath(agmPolyline) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.getMVCPath(agmPolyline)).getArray();\n        });\n    }\n    createEventObservable(eventName, line) {\n        return new Observable((observer) => {\n            this._polylines.get(line).then((l) => {\n                l.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n    createPathEventObservable(line) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const mvcPath = yield this.getMVCPath(line);\n            return createMVCEventObservable(mvcPath);\n        });\n    }\n};\nPolylineManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nPolylineManager = PolylineManager_1 = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], PolylineManager);\n\nlet RectangleManager = class RectangleManager {\n    constructor(_apiWrapper, _zone) {\n        this._apiWrapper = _apiWrapper;\n        this._zone = _zone;\n        this._rectangles = new Map();\n    }\n    addRectangle(rectangle) {\n        this._rectangles.set(rectangle, this._apiWrapper.createRectangle({\n            bounds: {\n                north: rectangle.north,\n                east: rectangle.east,\n                south: rectangle.south,\n                west: rectangle.west,\n            },\n            clickable: rectangle.clickable,\n            draggable: rectangle.draggable,\n            editable: rectangle.editable,\n            fillColor: rectangle.fillColor,\n            fillOpacity: rectangle.fillOpacity,\n            strokeColor: rectangle.strokeColor,\n            strokeOpacity: rectangle.strokeOpacity,\n            strokePosition: rectangle.strokePosition,\n            strokeWeight: rectangle.strokeWeight,\n            visible: rectangle.visible,\n            zIndex: rectangle.zIndex,\n        }));\n    }\n    /**\n     * Removes the given rectangle from the map.\n     */\n    removeRectangle(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            r.setMap(null);\n            this._rectangles.delete(rectangle);\n        });\n    }\n    setOptions(rectangle, options) {\n        return this._rectangles.get(rectangle).then((r) => r.setOptions(options));\n    }\n    getBounds(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => r.getBounds());\n    }\n    setBounds(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            return r.setBounds({\n                north: rectangle.north,\n                east: rectangle.east,\n                south: rectangle.south,\n                west: rectangle.west,\n            });\n        });\n    }\n    setEditable(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            return r.setEditable(rectangle.editable);\n        });\n    }\n    setDraggable(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            return r.setDraggable(rectangle.draggable);\n        });\n    }\n    setVisible(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            return r.setVisible(rectangle.visible);\n        });\n    }\n    createEventObservable(eventName, rectangle) {\n        return Observable.create((observer) => {\n            let listener = null;\n            this._rectangles.get(rectangle).then((r) => {\n                listener = r.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n            return () => {\n                if (listener !== null) {\n                    listener.remove();\n                }\n            };\n        });\n    }\n};\nRectangleManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nRectangleManager = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], RectangleManager);\n\nvar AgmMap_1;\n/**\n * AgmMap renders a Google Map.\n * **Important note**: To be able see a map in the browser, you have to define a height for the\n * element `agm-map`.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *    </agm-map>\n *  `\n * })\n * ```\n */\nlet AgmMap = AgmMap_1 = class AgmMap {\n    constructor(_elem, _mapsWrapper, _platformId, _fitBoundsService, _zone) {\n        this._elem = _elem;\n        this._mapsWrapper = _mapsWrapper;\n        this._platformId = _platformId;\n        this._fitBoundsService = _fitBoundsService;\n        this._zone = _zone;\n        /**\n         * The longitude that defines the center of the map.\n         */\n        this.longitude = 0;\n        /**\n         * The latitude that defines the center of the map.\n         */\n        this.latitude = 0;\n        /**\n         * The zoom level of the map. The default zoom level is 8.\n         */\n        this.zoom = 8;\n        /**\n         * Enables/disables if map is draggable.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = true;\n        /**\n         * Enables/disables zoom and center on double click. Enabled by default.\n         */\n        this.disableDoubleClickZoom = false;\n        /**\n         * Enables/disables all default UI of the Google map. Please note: When the map is created, this\n         * value cannot get updated.\n         */\n        this.disableDefaultUI = false;\n        /**\n         * If false, disables scrollwheel zooming on the map. The scrollwheel is enabled by default.\n         */\n        this.scrollwheel = true;\n        /**\n         * If false, prevents the map from being controlled by the keyboard. Keyboard shortcuts are\n         * enabled by default.\n         */\n        this.keyboardShortcuts = true;\n        /**\n         * Styles to apply to each of the default map types. Note that for Satellite/Hybrid and Terrain\n         * modes, these styles will only apply to labels and geometry.\n         */\n        this.styles = [];\n        /**\n         * When true and the latitude and/or longitude values changes, the Google Maps panTo method is\n         * used to\n         * center the map. See: https://developers.google.com/maps/documentation/javascript/reference#Map\n         */\n        this.usePanning = false;\n        /**\n         * Sets the viewport to contain the given bounds.\n         * If this option to `true`, the bounds get automatically computed from all elements that use the {@link AgmFitBounds} directive.\n         */\n        this.fitBounds = false;\n        /**\n         * The initial enabled/disabled state of the Scale control. This is disabled by default.\n         */\n        this.scaleControl = false;\n        /**\n         * The initial enabled/disabled state of the Map type control.\n         */\n        this.mapTypeControl = false;\n        /**\n         * The initial enabled/disabled state of the Pan control.\n         */\n        this.panControl = false;\n        /**\n         * The initial enabled/disabled state of the Rotate control.\n         */\n        this.rotateControl = false;\n        /**\n         * The initial enabled/disabled state of the Fullscreen control.\n         */\n        this.fullscreenControl = false;\n        /**\n         * The map mapTypeId. Defaults to 'roadmap'.\n         */\n        this.mapTypeId = 'roadmap';\n        /**\n         * When false, map icons are not clickable. A map icon represents a point of interest,\n         * also known as a POI. By default map icons are clickable.\n         */\n        this.clickableIcons = true;\n        /**\n         * A map icon represents a point of interest, also known as a POI.\n         * When map icons are clickable by default, an info window is displayed.\n         * When this property is set to false, the info window will not be shown but the click event\n         * will still fire\n         */\n        this.showDefaultInfoWindow = true;\n        /**\n         * This setting controls how gestures on the map are handled.\n         * Allowed values:\n         * - 'cooperative' (Two-finger touch gestures pan and zoom the map. One-finger touch gestures are not handled by the map.)\n         * - 'greedy'      (All touch gestures pan or zoom the map.)\n         * - 'none'        (The map cannot be panned or zoomed by user gestures.)\n         * - 'auto'        [default] (Gesture handling is either cooperative or greedy, depending on whether the page is scrollable or not.\n         */\n        this.gestureHandling = 'auto';\n        /**\n         * Controls the automatic switching behavior for the angle of incidence of\n         * the map. The only allowed values are 0 and 45. The value 0 causes the map\n         * to always use a 0° overhead view regardless of the zoom level and\n         * viewport. The value 45 causes the tilt angle to automatically switch to\n         * 45 whenever 45° imagery is available for the current zoom level and\n         * viewport, and switch back to 0 whenever 45° imagery is not available\n         * (this is the default behavior). 45° imagery is only available for\n         * satellite and hybrid map types, within some locations, and at some zoom\n         * levels. Note: getTilt returns the current tilt angle, not the value\n         * specified by this option. Because getTilt and this option refer to\n         * different things, do not bind() the tilt property; doing so may yield\n         * unpredictable effects. (Default of AGM is 0 (disabled). Enable it with value 45.)\n         */\n        this.tilt = 0;\n        this._observableSubscriptions = [];\n        /**\n         * This event emitter gets emitted when the user clicks on the map (but not when they click on a\n         * marker or infoWindow).\n         */\n        this.mapClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user right-clicks on the map (but not when they click\n         * on a marker or infoWindow).\n         */\n        this.mapRightClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user double-clicks on the map (but not when they click\n         * on a marker or infoWindow).\n         */\n        this.mapDblClick = new EventEmitter();\n        /**\n         * This event emitter is fired when the map center changes.\n         */\n        this.centerChange = new EventEmitter();\n        /**\n         * This event is fired when the viewport bounds have changed.\n         */\n        this.boundsChange = new EventEmitter();\n        /**\n         * This event is fired when the mapTypeId property changes.\n         */\n        this.mapTypeIdChange = new EventEmitter();\n        /**\n         * This event is fired when the map becomes idle after panning or zooming.\n         */\n        this.idle = new EventEmitter();\n        /**\n         * This event is fired when the zoom level has changed.\n         */\n        this.zoomChange = new EventEmitter();\n        /**\n         * This event is fired when the google map is fully initialized.\n         * You get the google.maps.Map instance as a result of this EventEmitter.\n         */\n        this.mapReady = new EventEmitter();\n        /**\n         * This event is fired when the visible tiles have finished loading.\n         */\n        this.tilesLoaded = new EventEmitter();\n    }\n    /** @internal */\n    ngOnInit() {\n        if (isPlatformServer(this._platformId)) {\n            // The code is running on the server, do nothing\n            return;\n        }\n        // todo: this should be solved with a new component and a viewChild decorator\n        const container = this._elem.nativeElement.querySelector('.agm-map-container-inner');\n        this._initMapInstance(container);\n    }\n    _initMapInstance(el) {\n        this._mapsWrapper.createMap(el, {\n            center: { lat: this.latitude || 0, lng: this.longitude || 0 },\n            zoom: this.zoom,\n            minZoom: this.minZoom,\n            maxZoom: this.maxZoom,\n            controlSize: this.controlSize,\n            disableDefaultUI: this.disableDefaultUI,\n            disableDoubleClickZoom: this.disableDoubleClickZoom,\n            scrollwheel: this.scrollwheel,\n            backgroundColor: this.backgroundColor,\n            draggable: this.draggable,\n            draggableCursor: this.draggableCursor,\n            draggingCursor: this.draggingCursor,\n            keyboardShortcuts: this.keyboardShortcuts,\n            styles: this.styles,\n            zoomControl: this.zoomControl,\n            zoomControlOptions: this.zoomControlOptions,\n            streetViewControl: this.streetViewControl,\n            streetViewControlOptions: this.streetViewControlOptions,\n            scaleControl: this.scaleControl,\n            scaleControlOptions: this.scaleControlOptions,\n            mapTypeControl: this.mapTypeControl,\n            mapTypeControlOptions: this.mapTypeControlOptions,\n            panControl: this.panControl,\n            panControlOptions: this.panControlOptions,\n            rotateControl: this.rotateControl,\n            rotateControlOptions: this.rotateControlOptions,\n            fullscreenControl: this.fullscreenControl,\n            fullscreenControlOptions: this.fullscreenControlOptions,\n            mapTypeId: this.mapTypeId,\n            clickableIcons: this.clickableIcons,\n            gestureHandling: this.gestureHandling,\n            tilt: this.tilt,\n            restriction: this.restriction,\n        })\n            .then(() => this._mapsWrapper.getNativeMap())\n            .then(map => this.mapReady.emit(map));\n        // register event listeners\n        this._handleMapCenterChange();\n        this._handleMapZoomChange();\n        this._handleMapMouseEvents();\n        this._handleBoundsChange();\n        this._handleMapTypeIdChange();\n        this._handleTilesLoadedEvent();\n        this._handleIdleEvent();\n    }\n    /** @internal */\n    ngOnDestroy() {\n        // unsubscribe all registered observable subscriptions\n        this._observableSubscriptions.forEach((s) => s.unsubscribe());\n        // remove all listeners from the map instance\n        this._mapsWrapper.clearInstanceListeners();\n        if (this._fitBoundsSubscription) {\n            this._fitBoundsSubscription.unsubscribe();\n        }\n    }\n    /* @internal */\n    ngOnChanges(changes) {\n        this._updateMapOptionsChanges(changes);\n        this._updatePosition(changes);\n    }\n    _updateMapOptionsChanges(changes) {\n        let options = {};\n        let optionKeys = Object.keys(changes).filter(k => AgmMap_1._mapOptionsAttributes.indexOf(k) !== -1);\n        optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\n        this._mapsWrapper.setMapOptions(options);\n    }\n    /**\n     * Triggers a resize event on the google map instance.\n     * When recenter is true, the of the google map gets called with the current lat/lng values or fitBounds value to recenter the map.\n     * Returns a promise that gets resolved after the event was triggered.\n     */\n    triggerResize(recenter = true) {\n        // Note: When we would trigger the resize event and show the map in the same turn (which is a\n        // common case for triggering a resize event), then the resize event would not\n        // work (to show the map), so we trigger the event in a timeout.\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                return this._mapsWrapper.triggerMapEvent('resize').then(() => {\n                    if (recenter) {\n                        this.fitBounds != null ? this._fitBounds() : this._setCenter();\n                    }\n                    resolve();\n                });\n            });\n        });\n    }\n    _updatePosition(changes) {\n        if (changes['latitude'] == null && changes['longitude'] == null &&\n            !changes['fitBounds']) {\n            // no position update needed\n            return;\n        }\n        // we prefer fitBounds in changes\n        if ('fitBounds' in changes) {\n            this._fitBounds();\n            return;\n        }\n        if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n            return;\n        }\n        this._setCenter();\n    }\n    _setCenter() {\n        let newCenter = {\n            lat: this.latitude,\n            lng: this.longitude,\n        };\n        if (this.usePanning) {\n            this._mapsWrapper.panTo(newCenter);\n        }\n        else {\n            this._mapsWrapper.setCenter(newCenter);\n        }\n    }\n    _fitBounds() {\n        switch (this.fitBounds) {\n            case true:\n                this._subscribeToFitBoundsUpdates();\n                break;\n            case false:\n                if (this._fitBoundsSubscription) {\n                    this._fitBoundsSubscription.unsubscribe();\n                }\n                break;\n            default:\n                this._updateBounds(this.fitBounds, this.fitBoundsPadding);\n        }\n    }\n    _subscribeToFitBoundsUpdates() {\n        this._zone.runOutsideAngular(() => {\n            this._fitBoundsSubscription = this._fitBoundsService.getBounds$().subscribe(b => {\n                this._zone.run(() => this._updateBounds(b, this.fitBoundsPadding));\n            });\n        });\n    }\n    _updateBounds(bounds, padding) {\n        if (!bounds) {\n            return;\n        }\n        if (this._isLatLngBoundsLiteral(bounds) && typeof google !== 'undefined' && google && google.maps && google.maps.LatLngBounds) {\n            const newBounds = new google.maps.LatLngBounds();\n            newBounds.union(bounds);\n            bounds = newBounds;\n        }\n        if (this.usePanning) {\n            this._mapsWrapper.panToBounds(bounds, padding);\n            return;\n        }\n        this._mapsWrapper.fitBounds(bounds, padding);\n    }\n    _isLatLngBoundsLiteral(bounds) {\n        return bounds != null && bounds.extend === undefined;\n    }\n    _handleMapCenterChange() {\n        const s = this._mapsWrapper.subscribeToMapEvent('center_changed').subscribe(() => {\n            this._mapsWrapper.getCenter().then((center) => {\n                this.latitude = center.lat();\n                this.longitude = center.lng();\n                this.centerChange.emit({ lat: this.latitude, lng: this.longitude });\n            });\n        });\n        this._observableSubscriptions.push(s);\n    }\n    _handleBoundsChange() {\n        const s = this._mapsWrapper.subscribeToMapEvent('bounds_changed').subscribe(() => {\n            this._mapsWrapper.getBounds().then((bounds) => { this.boundsChange.emit(bounds); });\n        });\n        this._observableSubscriptions.push(s);\n    }\n    _handleMapTypeIdChange() {\n        const s = this._mapsWrapper.subscribeToMapEvent('maptypeid_changed').subscribe(() => {\n            this._mapsWrapper.getMapTypeId().then((mapTypeId) => { this.mapTypeIdChange.emit(mapTypeId); });\n        });\n        this._observableSubscriptions.push(s);\n    }\n    _handleMapZoomChange() {\n        const s = this._mapsWrapper.subscribeToMapEvent('zoom_changed').subscribe(() => {\n            this._mapsWrapper.getZoom().then((z) => {\n                this.zoom = z;\n                this.zoomChange.emit(z);\n            });\n        });\n        this._observableSubscriptions.push(s);\n    }\n    _handleIdleEvent() {\n        const s = this._mapsWrapper.subscribeToMapEvent('idle').subscribe(() => { this.idle.emit(void 0); });\n        this._observableSubscriptions.push(s);\n    }\n    _handleTilesLoadedEvent() {\n        const s = this._mapsWrapper.subscribeToMapEvent('tilesloaded').subscribe(() => this.tilesLoaded.emit(void 0));\n        this._observableSubscriptions.push(s);\n    }\n    _handleMapMouseEvents() {\n        const events = [\n            { name: 'click', emitter: this.mapClick },\n            { name: 'rightclick', emitter: this.mapRightClick },\n            { name: 'dblclick', emitter: this.mapDblClick },\n        ];\n        events.forEach((e) => {\n            const s = this._mapsWrapper.subscribeToMapEvent(e.name).subscribe((event) => {\n                let value = {\n                    coords: {\n                        lat: event.latLng.lat(),\n                        lng: event.latLng.lng(),\n                    },\n                    placeId: event.placeId,\n                };\n                // the placeId will be undefined in case the event was not an IconMouseEvent (google types)\n                if (value.placeId && !this.showDefaultInfoWindow) {\n                    event.stop();\n                }\n                e.emitter.emit(value);\n            });\n            this._observableSubscriptions.push(s);\n        });\n    }\n};\n/**\n * Map option attributes that can change over time\n */\nAgmMap._mapOptionsAttributes = [\n    'disableDoubleClickZoom', 'scrollwheel', 'draggable', 'draggableCursor', 'draggingCursor',\n    'keyboardShortcuts', 'zoomControl', 'zoomControlOptions', 'styles', 'streetViewControl',\n    'streetViewControlOptions', 'zoom', 'mapTypeControl', 'mapTypeControlOptions', 'minZoom',\n    'maxZoom', 'panControl', 'panControlOptions', 'rotateControl', 'rotateControlOptions',\n    'fullscreenControl', 'fullscreenControlOptions', 'scaleControl', 'scaleControlOptions',\n    'mapTypeId', 'clickableIcons', 'gestureHandling', 'tilt', 'restriction',\n];\nAgmMap.ctorParameters = () => [\n    { type: ElementRef },\n    { type: GoogleMapsAPIWrapper },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: FitBoundsService },\n    { type: NgZone }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"longitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"latitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"zoom\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmMap.prototype, \"minZoom\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmMap.prototype, \"maxZoom\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmMap.prototype, \"controlSize\", void 0);\n__decorate([\n    Input('mapDraggable'),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"draggable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"disableDoubleClickZoom\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"disableDefaultUI\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"scrollwheel\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMap.prototype, \"backgroundColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMap.prototype, \"draggableCursor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMap.prototype, \"draggingCursor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"keyboardShortcuts\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], AgmMap.prototype, \"zoomControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"zoomControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Array)\n], AgmMap.prototype, \"styles\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"usePanning\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], AgmMap.prototype, \"streetViewControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"streetViewControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"fitBounds\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"fitBoundsPadding\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"scaleControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"scaleControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"mapTypeControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"mapTypeControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"panControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"panControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"rotateControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"rotateControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"fullscreenControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"fullscreenControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMap.prototype, \"mapTypeId\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"clickableIcons\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"showDefaultInfoWindow\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMap.prototype, \"gestureHandling\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"tilt\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"restriction\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"mapClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"mapRightClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"mapDblClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"centerChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"boundsChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"mapTypeIdChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"idle\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"zoomChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"mapReady\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"tilesLoaded\", void 0);\nAgmMap = AgmMap_1 = __decorate([\n    Component({\n        selector: 'agm-map',\n        providers: [\n            CircleManager,\n            DataLayerManager,\n            DataLayerManager,\n            FitBoundsService,\n            GoogleMapsAPIWrapper,\n            InfoWindowManager,\n            KmlLayerManager,\n            LayerManager,\n            MarkerManager,\n            PolygonManager,\n            PolylineManager,\n            RectangleManager,\n        ],\n        host: {\n            // todo: deprecated - we will remove it with the next version\n            '[class.sebm-google-map-container]': 'true',\n        },\n        template: `\n              <div class='agm-map-container-inner sebm-google-map-container-inner'></div>\n              <div class='agm-map-content'>\n                <ng-content></ng-content>\n              </div>\n  `,\n        styles: [`\n    .agm-map-container-inner {\n      width: inherit;\n      height: inherit;\n    }\n    .agm-map-content {\n      display:none;\n    }\n  `]\n    }),\n    __param(2, Inject(PLATFORM_ID)),\n    __metadata(\"design:paramtypes\", [ElementRef,\n        GoogleMapsAPIWrapper,\n        Object,\n        FitBoundsService,\n        NgZone])\n], AgmMap);\n\nvar AgmMarker_1;\nlet markerId = 0;\n/**\n * AgmMarker renders a map marker inside a {@link AgmMap}.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nlet AgmMarker = AgmMarker_1 = class AgmMarker {\n    constructor(_markerManager) {\n        this._markerManager = _markerManager;\n        /**\n         * If true, the marker can be dragged. Default value is false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If true, the marker is visible\n         */\n        this.visible = true;\n        /**\n         * Whether to automatically open the child info window when the marker is clicked.\n         */\n        this.openInfoWindow = true;\n        /**\n         * The marker's opacity between 0.0 and 1.0.\n         */\n        this.opacity = 1;\n        /**\n         * All markers are displayed on the map in order of their zIndex, with higher values displaying in\n         * front of markers with lower values. By default, markers are displayed according to their\n         * vertical position on screen, with lower markers appearing in front of markers further up the\n         * screen.\n         */\n        this.zIndex = 1;\n        /**\n         * If true, the marker can be clicked. Default value is true.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.clickable = true;\n        /**\n         * This event is fired when the marker's animation property changes.\n         *\n         * @memberof AgmMarker\n         */\n        this.animationChange = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the marker.\n         */\n        this.markerClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks twice on the marker.\n         */\n        this.markerDblClick = new EventEmitter();\n        /**\n         * This event is fired when the user rightclicks on the marker.\n         */\n        this.markerRightClick = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the marker.\n         */\n        this.dragStart = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the marker.\n         */\n        this.drag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the marker.\n         */\n        this.dragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user mouses over the marker.\n         */\n        this.mouseOver = new EventEmitter();\n        /**\n         * This event is fired when the user mouses outside the marker.\n         */\n        this.mouseOut = new EventEmitter();\n        /** @internal */\n        this.infoWindow = new QueryList();\n        this._markerAddedToManger = false;\n        this._observableSubscriptions = [];\n        this._fitBoundsDetails$ = new ReplaySubject(1);\n        this._id = (markerId++).toString();\n    }\n    /* @internal */\n    ngAfterContentInit() {\n        this.handleInfoWindowUpdate();\n        this.infoWindow.changes.subscribe(() => this.handleInfoWindowUpdate());\n    }\n    handleInfoWindowUpdate() {\n        if (this.infoWindow.length > 1) {\n            throw new Error('Expected no more than one info window.');\n        }\n        this.infoWindow.forEach(marker => {\n            marker.hostMarker = this;\n        });\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (typeof this.latitude === 'string') {\n            this.latitude = Number(this.latitude);\n        }\n        if (typeof this.longitude === 'string') {\n            this.longitude = Number(this.longitude);\n        }\n        if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n            return;\n        }\n        if (!this._markerAddedToManger) {\n            this._markerManager.addMarker(this);\n            this._updateFitBoundsDetails();\n            this._markerAddedToManger = true;\n            this._addEventListeners();\n            return;\n        }\n        if (changes['latitude'] || changes['longitude']) {\n            this._markerManager.updateMarkerPosition(this);\n            this._updateFitBoundsDetails();\n        }\n        if (changes['title']) {\n            this._markerManager.updateTitle(this);\n        }\n        if (changes['label']) {\n            this._markerManager.updateLabel(this);\n        }\n        if (changes['draggable']) {\n            this._markerManager.updateDraggable(this);\n        }\n        if (changes['iconUrl']) {\n            this._markerManager.updateIcon(this);\n        }\n        if (changes['opacity']) {\n            this._markerManager.updateOpacity(this);\n        }\n        if (changes['visible']) {\n            this._markerManager.updateVisible(this);\n        }\n        if (changes['zIndex']) {\n            this._markerManager.updateZIndex(this);\n        }\n        if (changes['clickable']) {\n            this._markerManager.updateClickable(this);\n        }\n        if (changes['animation']) {\n            this._markerManager.updateAnimation(this);\n        }\n    }\n    /** @internal */\n    getFitBoundsDetails$() {\n        return this._fitBoundsDetails$.asObservable();\n    }\n    _updateFitBoundsDetails() {\n        this._fitBoundsDetails$.next({ latLng: { lat: this.latitude, lng: this.longitude } });\n    }\n    _addEventListeners() {\n        const cs = this._markerManager.createEventObservable('click', this).subscribe(() => {\n            if (this.openInfoWindow) {\n                this.infoWindow.forEach(infoWindow => infoWindow.open());\n            }\n            this.markerClick.emit(this);\n        });\n        this._observableSubscriptions.push(cs);\n        const dcs = this._markerManager.createEventObservable('dblclick', this).subscribe(() => {\n            this.markerDblClick.emit(null);\n        });\n        this._observableSubscriptions.push(dcs);\n        const rc = this._markerManager.createEventObservable('rightclick', this).subscribe(() => {\n            this.markerRightClick.emit(null);\n        });\n        this._observableSubscriptions.push(rc);\n        const ds = this._markerManager.createEventObservable('dragstart', this)\n            .subscribe((e) => {\n            this.dragStart.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(ds);\n        const d = this._markerManager.createEventObservable('drag', this)\n            .subscribe((e) => {\n            this.drag.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(d);\n        const de = this._markerManager.createEventObservable('dragend', this)\n            .subscribe((e) => {\n            this.dragEnd.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(de);\n        const mover = this._markerManager.createEventObservable('mouseover', this)\n            .subscribe((e) => {\n            this.mouseOver.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(mover);\n        const mout = this._markerManager.createEventObservable('mouseout', this)\n            .subscribe((e) => {\n            this.mouseOut.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(mout);\n        const anChng = this._markerManager.createEventObservable('animation_changed', this)\n            .subscribe(() => {\n            this.animationChange.emit(this.animation);\n        });\n        this._observableSubscriptions.push(anChng);\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return 'AgmMarker-' + this._id.toString(); }\n    /** @internal */\n    ngOnDestroy() {\n        this._markerManager.deleteMarker(this);\n        // unsubscribe all registered observable subscriptions\n        this._observableSubscriptions.forEach((s) => s.unsubscribe());\n    }\n};\nAgmMarker.ctorParameters = () => [\n    { type: MarkerManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmMarker.prototype, \"latitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmMarker.prototype, \"longitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMarker.prototype, \"title\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"label\", void 0);\n__decorate([\n    Input('markerDraggable'),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"draggable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMarker.prototype, \"iconUrl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"visible\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"openInfoWindow\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"opacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"zIndex\", void 0);\n__decorate([\n    Input('markerClickable'),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"clickable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMarker.prototype, \"animation\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"animationChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"markerClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"markerDblClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"markerRightClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"dragStart\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"drag\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"dragEnd\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"mouseOver\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"mouseOut\", void 0);\n__decorate([\n    ContentChildren(AgmInfoWindow),\n    __metadata(\"design:type\", QueryList)\n], AgmMarker.prototype, \"infoWindow\", void 0);\nAgmMarker = AgmMarker_1 = __decorate([\n    Directive({\n        selector: 'agm-marker',\n        providers: [\n            { provide: FitBoundsAccessor, useExisting: forwardRef(() => AgmMarker_1) },\n        ],\n        inputs: [\n            'latitude', 'longitude', 'title', 'label', 'draggable: markerDraggable', 'iconUrl',\n            'openInfoWindow', 'opacity', 'visible', 'zIndex', 'animation',\n        ],\n        outputs: ['markerClick', 'dragStart', 'drag', 'dragEnd', 'mouseOver', 'mouseOut'],\n    }),\n    __metadata(\"design:paramtypes\", [MarkerManager])\n], AgmMarker);\n\nvar AgmPolygon_1;\n/**\n * AgmPolygon renders a polygon on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polygon [paths]=\"paths\">\n *      </agm-polygon>\n *    </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = 0;\n *   lng: number = 0;\n *   zoom: number = 10;\n *   paths: Array<LatLngLiteral> = [\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ]\n *   // Nesting paths will create a hole where they overlap;\n *   nestedPaths: Array<Array<LatLngLiteral>> = [[\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ], [\n *     { lat: 0, lng: 15 },\n *     { lat: 0, lng: 20 },\n *     { lat: 5, lng: 20 },\n *     { lat: 5, lng: 15 },\n *     { lat: 0, lng: 15 }\n *   ]]\n * }\n * ```\n */\nlet AgmPolygon = AgmPolygon_1 = class AgmPolygon {\n    constructor(_polygonManager) {\n        this._polygonManager = _polygonManager;\n        /**\n         * Indicates whether this Polygon handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this shape over the map. The geodesic\n         * property defines the mode of dragging. Defaults to false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this shape by dragging the control\n         * points shown at the vertices and on each segment. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * When true, edges of the polygon are interpreted as geodesic and will\n         * follow the curvature of the Earth. When false, edges of the polygon are\n         * rendered as straight lines in screen space. Note that the shape of a\n         * geodesic polygon may appear to change when dragged, as the dimensions\n         * are maintained relative to the surface of the earth. Defaults to false.\n         */\n        this.geodesic = false;\n        /**\n         * The ordered sequence of coordinates that designates a closed loop.\n         * Unlike polylines, a polygon may consist of one or more paths.\n         *  As a result, the paths property may specify one or more arrays of\n         * LatLng coordinates. Paths are closed automatically; do not repeat the\n         * first vertex of the path as the last vertex. Simple polygons may be\n         * defined using a single array of LatLngs. More complex polygons may\n         * specify an array of arrays. Any simple arrays are converted into Arrays.\n         * Inserting or removing LatLngs from the Array will automatically update\n         * the polygon on the map.\n         */\n        this.paths = [];\n        /**\n         * This event is fired when the DOM click event is fired on the Polygon.\n         */\n        this.polyClick = new EventEmitter();\n        /**\n         * This event is fired when the DOM dblclick event is fired on the Polygon.\n         */\n        this.polyDblClick = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the polygon.\n         */\n        this.polyDrag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the polygon.\n         */\n        this.polyDragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the polygon.\n         */\n        this.polyDragStart = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the Polygon.\n         */\n        this.polyMouseDown = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the Polygon.\n         */\n        this.polyMouseMove = new EventEmitter();\n        /**\n         * This event is fired on Polygon mouseout.\n         */\n        this.polyMouseOut = new EventEmitter();\n        /**\n         * This event is fired on Polygon mouseover.\n         */\n        this.polyMouseOver = new EventEmitter();\n        /**\n         * This event is fired whe the DOM mouseup event is fired on the Polygon\n         */\n        this.polyMouseUp = new EventEmitter();\n        /**\n         * This event is fired when the Polygon is right-clicked on.\n         */\n        this.polyRightClick = new EventEmitter();\n        /**\n         * This event is fired after Polygon first path changes.\n         */\n        this.polyPathsChange = new EventEmitter();\n        this._polygonAddedToManager = false;\n        this._subscriptions = [];\n    }\n    /** @internal */\n    ngAfterContentInit() {\n        if (!this._polygonAddedToManager) {\n            this._init();\n        }\n    }\n    ngOnChanges(changes) {\n        if (!this._polygonAddedToManager) {\n            this._init();\n            return;\n        }\n        this._polygonManager.setPolygonOptions(this, this._updatePolygonOptions(changes));\n    }\n    _init() {\n        this._polygonManager.addPolygon(this);\n        this._polygonAddedToManager = true;\n        this._addEventListeners();\n    }\n    _addEventListeners() {\n        const handlers = [\n            { name: 'click', handler: (ev) => this.polyClick.emit(ev) },\n            { name: 'dblclick', handler: (ev) => this.polyDblClick.emit(ev) },\n            { name: 'drag', handler: (ev) => this.polyDrag.emit(ev) },\n            { name: 'dragend', handler: (ev) => this.polyDragEnd.emit(ev) },\n            { name: 'dragstart', handler: (ev) => this.polyDragStart.emit(ev) },\n            { name: 'mousedown', handler: (ev) => this.polyMouseDown.emit(ev) },\n            { name: 'mousemove', handler: (ev) => this.polyMouseMove.emit(ev) },\n            { name: 'mouseout', handler: (ev) => this.polyMouseOut.emit(ev) },\n            { name: 'mouseover', handler: (ev) => this.polyMouseOver.emit(ev) },\n            { name: 'mouseup', handler: (ev) => this.polyMouseUp.emit(ev) },\n            { name: 'rightclick', handler: (ev) => this.polyRightClick.emit(ev) },\n        ];\n        handlers.forEach((obj) => {\n            const os = this._polygonManager.createEventObservable(obj.name, this).subscribe(obj.handler);\n            this._subscriptions.push(os);\n        });\n        this._polygonManager.createPathEventObservable(this)\n            .then(paths$ => {\n            const os = paths$.subscribe(pathEvent => this.polyPathsChange.emit(pathEvent));\n            this._subscriptions.push(os);\n        });\n    }\n    _updatePolygonOptions(changes) {\n        return Object.keys(changes)\n            .filter(k => AgmPolygon_1._polygonOptionsAttributes.indexOf(k) !== -1)\n            .reduce((obj, k) => {\n            obj[k] = changes[k].currentValue;\n            return obj;\n        }, {});\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    ngOnDestroy() {\n        this._polygonManager.deletePolygon(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach((s) => s.unsubscribe());\n    }\n    getPath() {\n        return this._polygonManager.getPath(this);\n    }\n    getPaths() {\n        return this._polygonManager.getPaths(this);\n    }\n};\nAgmPolygon._polygonOptionsAttributes = [\n    'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'geodesic', 'icon', 'map',\n    'paths', 'strokeColor', 'strokeOpacity', 'strokeWeight', 'visible', 'zIndex', 'draggable',\n    'editable', 'visible',\n];\nAgmPolygon.ctorParameters = () => [\n    { type: PolygonManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolygon.prototype, \"clickable\", void 0);\n__decorate([\n    Input('polyDraggable'),\n    __metadata(\"design:type\", Object)\n], AgmPolygon.prototype, \"draggable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolygon.prototype, \"editable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolygon.prototype, \"fillColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolygon.prototype, \"fillOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolygon.prototype, \"geodesic\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Array)\n], AgmPolygon.prototype, \"paths\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolygon.prototype, \"strokeColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolygon.prototype, \"strokeOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolygon.prototype, \"strokeWeight\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], AgmPolygon.prototype, \"visible\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolygon.prototype, \"zIndex\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyDblClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyDrag\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyDragEnd\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyDragStart\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyMouseDown\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyMouseMove\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyMouseOut\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyMouseOver\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyMouseUp\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyRightClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], AgmPolygon.prototype, \"polyPathsChange\", void 0);\nAgmPolygon = AgmPolygon_1 = __decorate([\n    Directive({\n        selector: 'agm-polygon',\n    }),\n    __metadata(\"design:paramtypes\", [PolygonManager])\n], AgmPolygon);\n\n/**\n * AgmPolylineIcon enables to add polyline sequences to add arrows, circle,\n * or custom icons either along the entire line, or in a specific part of it.\n * See https://developers.google.com/maps/documentation/javascript/shapes#polyline_customize\n *\n * ### Example\n * ```html\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-icon-sequence [fixedRotation]=\"true\" [path]=\"'FORWARD_OPEN_ARROW'\">\n *          </agm-icon-sequence>\n *      </agm-polyline>\n *    </agm-map>\n * ```\n *\n * @export\n * @class AgmPolylineIcon\n */\nlet AgmPolylineIcon = class AgmPolylineIcon {\n    ngOnInit() {\n        if (this.path == null) {\n            throw new Error('Icon Sequence path is required');\n        }\n    }\n};\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], AgmPolylineIcon.prototype, \"fixedRotation\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolylineIcon.prototype, \"offset\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolylineIcon.prototype, \"repeat\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"anchorX\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"anchorY\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolylineIcon.prototype, \"fillColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"fillOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolylineIcon.prototype, \"path\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"rotation\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"scale\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolylineIcon.prototype, \"strokeColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"strokeOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"strokeWeight\", void 0);\nAgmPolylineIcon = __decorate([\n    Directive({ selector: 'agm-polyline agm-icon-sequence' })\n], AgmPolylineIcon);\n\nvar AgmPolylinePoint_1;\n/**\n * AgmPolylinePoint represents one element of a polyline within a  {@link\n * AgmPolyline}\n */\nlet AgmPolylinePoint = AgmPolylinePoint_1 = class AgmPolylinePoint {\n    constructor() {\n        /**\n         * This event emitter gets emitted when the position of the point changed.\n         */\n        this.positionChanged = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        if (changes['latitude'] || changes['longitude']) {\n            const position = {\n                lat: changes['latitude'] ? changes['latitude'].currentValue : this.latitude,\n                lng: changes['longitude'] ? changes['longitude'].currentValue : this.longitude,\n            };\n            this.positionChanged.emit(position);\n        }\n    }\n    /** @internal */\n    getFitBoundsDetails$() {\n        return this.positionChanged.pipe(startWith({ lat: this.latitude, lng: this.longitude }), map(position => ({ latLng: position })));\n    }\n};\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylinePoint.prototype, \"latitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylinePoint.prototype, \"longitude\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolylinePoint.prototype, \"positionChanged\", void 0);\nAgmPolylinePoint = AgmPolylinePoint_1 = __decorate([\n    Directive({\n        selector: 'agm-polyline-point',\n        providers: [\n            { provide: FitBoundsAccessor, useExisting: forwardRef(() => AgmPolylinePoint_1) },\n        ],\n    }),\n    __metadata(\"design:paramtypes\", [])\n], AgmPolylinePoint);\n\nvar AgmPolyline_1;\nlet polylineId = 0;\n/**\n * AgmPolyline renders a polyline on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-polyline-point [latitude]=\"latA\" [longitude]=\"lngA\">\n *          </agm-polyline-point>\n *          <agm-polyline-point [latitude]=\"latB\" [longitude]=\"lngB\">\n *          </agm-polyline-point>\n *      </agm-polyline>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nlet AgmPolyline = AgmPolyline_1 = class AgmPolyline {\n    constructor(_polylineManager) {\n        this._polylineManager = _polylineManager;\n        /**\n         * Indicates whether this Polyline handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this shape over the map. The geodesic property defines the\n         * mode of dragging. Defaults to false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this shape by dragging the control points shown at the\n         * vertices and on each segment. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of\n         * the Earth. When false, edges of the polygon are rendered as straight lines in screen space.\n         * Note that the shape of a geodesic polygon may appear to change when dragged, as the dimensions\n         * are maintained relative to the surface of the earth. Defaults to false.\n         */\n        this.geodesic = false;\n        /**\n         * Whether this polyline is visible on the map. Defaults to true.\n         */\n        this.visible = true;\n        /**\n         * This event is fired when the DOM click event is fired on the Polyline.\n         */\n        this.lineClick = new EventEmitter();\n        /**\n         * This event is fired when the DOM dblclick event is fired on the Polyline.\n         */\n        this.lineDblClick = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the polyline.\n         */\n        this.lineDrag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the polyline.\n         */\n        this.lineDragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the polyline.\n         */\n        this.lineDragStart = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the Polyline.\n         */\n        this.lineMouseDown = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the Polyline.\n         */\n        this.lineMouseMove = new EventEmitter();\n        /**\n         * This event is fired on Polyline mouseout.\n         */\n        this.lineMouseOut = new EventEmitter();\n        /**\n         * This event is fired on Polyline mouseover.\n         */\n        this.lineMouseOver = new EventEmitter();\n        /**\n         * This event is fired whe the DOM mouseup event is fired on the Polyline\n         */\n        this.lineMouseUp = new EventEmitter();\n        /**\n         * This event is fired when the Polyline is right-clicked on.\n         */\n        this.lineRightClick = new EventEmitter();\n        /**\n         * This event is fired after Polyline's path changes.\n         */\n        this.polyPathChange = new EventEmitter();\n        this._polylineAddedToManager = false;\n        this._subscriptions = [];\n        this._id = (polylineId++).toString();\n    }\n    /** @internal */\n    ngAfterContentInit() {\n        if (this.points.length) {\n            this.points.forEach((point) => {\n                const s = point.positionChanged.subscribe(() => { this._polylineManager.updatePolylinePoints(this); });\n                this._subscriptions.push(s);\n            });\n        }\n        if (!this._polylineAddedToManager) {\n            this._init();\n        }\n        const pointSub = this.points.changes.subscribe(() => this._polylineManager.updatePolylinePoints(this));\n        this._subscriptions.push(pointSub);\n        this._polylineManager.updatePolylinePoints(this);\n        const iconSub = this.iconSequences.changes.subscribe(() => this._polylineManager.updateIconSequences(this));\n        this._subscriptions.push(iconSub);\n    }\n    ngOnChanges(changes) {\n        if (!this._polylineAddedToManager) {\n            this._init();\n            return;\n        }\n        let options = {};\n        const optionKeys = Object.keys(changes).filter(k => AgmPolyline_1._polylineOptionsAttributes.indexOf(k) !== -1);\n        optionKeys.forEach(k => options[k] = changes[k].currentValue);\n        this._polylineManager.setPolylineOptions(this, options);\n    }\n    getPath() {\n        return this._polylineManager.getPath(this);\n    }\n    _init() {\n        this._polylineManager.addPolyline(this);\n        this._polylineAddedToManager = true;\n        this._addEventListeners();\n    }\n    _addEventListeners() {\n        const handlers = [\n            { name: 'click', handler: (ev) => this.lineClick.emit(ev) },\n            { name: 'dblclick', handler: (ev) => this.lineDblClick.emit(ev) },\n            { name: 'drag', handler: (ev) => this.lineDrag.emit(ev) },\n            { name: 'dragend', handler: (ev) => this.lineDragEnd.emit(ev) },\n            { name: 'dragstart', handler: (ev) => this.lineDragStart.emit(ev) },\n            { name: 'mousedown', handler: (ev) => this.lineMouseDown.emit(ev) },\n            { name: 'mousemove', handler: (ev) => this.lineMouseMove.emit(ev) },\n            { name: 'mouseout', handler: (ev) => this.lineMouseOut.emit(ev) },\n            { name: 'mouseover', handler: (ev) => this.lineMouseOver.emit(ev) },\n            { name: 'mouseup', handler: (ev) => this.lineMouseUp.emit(ev) },\n            { name: 'rightclick', handler: (ev) => this.lineRightClick.emit(ev) },\n        ];\n        handlers.forEach((obj) => {\n            const os = this._polylineManager.createEventObservable(obj.name, this).subscribe(obj.handler);\n            this._subscriptions.push(os);\n        });\n        this._polylineManager.createPathEventObservable(this).then((ob$) => {\n            const os = ob$.subscribe(pathEvent => this.polyPathChange.emit(pathEvent));\n            this._subscriptions.push(os);\n        });\n    }\n    /** @internal */\n    _getPoints() {\n        if (this.points) {\n            return this.points.toArray();\n        }\n        return [];\n    }\n    _getIcons() {\n        if (this.iconSequences) {\n            return this.iconSequences.toArray();\n        }\n        return [];\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    ngOnDestroy() {\n        this._polylineManager.deletePolyline(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach((s) => s.unsubscribe());\n    }\n};\nAgmPolyline._polylineOptionsAttributes = [\n    'draggable', 'editable', 'visible', 'geodesic', 'strokeColor', 'strokeOpacity', 'strokeWeight',\n    'zIndex',\n];\nAgmPolyline.ctorParameters = () => [\n    { type: PolylineManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolyline.prototype, \"clickable\", void 0);\n__decorate([\n    Input('polylineDraggable'),\n    __metadata(\"design:type\", Object)\n], AgmPolyline.prototype, \"draggable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolyline.prototype, \"editable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolyline.prototype, \"geodesic\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolyline.prototype, \"strokeColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolyline.prototype, \"strokeOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolyline.prototype, \"strokeWeight\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolyline.prototype, \"visible\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolyline.prototype, \"zIndex\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineDblClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineDrag\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineDragEnd\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineDragStart\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineMouseDown\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineMouseMove\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineMouseOut\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineMouseOver\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineMouseUp\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineRightClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], AgmPolyline.prototype, \"polyPathChange\", void 0);\n__decorate([\n    ContentChildren(AgmPolylinePoint),\n    __metadata(\"design:type\", QueryList)\n], AgmPolyline.prototype, \"points\", void 0);\n__decorate([\n    ContentChildren(AgmPolylineIcon),\n    __metadata(\"design:type\", QueryList)\n], AgmPolyline.prototype, \"iconSequences\", void 0);\nAgmPolyline = AgmPolyline_1 = __decorate([\n    Directive({\n        selector: 'agm-polyline',\n    }),\n    __metadata(\"design:paramtypes\", [PolylineManager])\n], AgmPolyline);\n\nvar AgmRectangle_1;\nlet AgmRectangle = AgmRectangle_1 = class AgmRectangle {\n    constructor(_manager) {\n        this._manager = _manager;\n        /**\n         * Indicates whether this Rectangle handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this rectangle over the map. Defaults to false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this rectangle by dragging the control points shown at\n         * the center and around the circumference of the rectangle. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * The stroke position. Defaults to CENTER.\n         * This property is not supported on Internet Explorer 8 and earlier.\n         */\n        this.strokePosition = 'CENTER';\n        /**\n         * The stroke width in pixels.\n         */\n        this.strokeWeight = 0;\n        /**\n         * Whether this rectangle is visible on the map. Defaults to true.\n         */\n        this.visible = true;\n        /**\n         * This event is fired when the rectangle's is changed.\n         */\n        this.boundsChange = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the rectangle.\n         */\n        this.rectangleClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the rectangle.\n         */\n        this.rectangleDblClick = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the rectangle.\n         */\n        this.drag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the rectangle.\n         */\n        this.dragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the rectangle.\n         */\n        this.dragStart = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the rectangle.\n         */\n        this.mouseDown = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the rectangle.\n         */\n        this.mouseMove = new EventEmitter();\n        /**\n         * This event is fired on rectangle mouseout.\n         */\n        this.mouseOut = new EventEmitter();\n        /**\n         * This event is fired on rectangle mouseover.\n         */\n        this.mouseOver = new EventEmitter();\n        /**\n         * This event is fired when the DOM mouseup event is fired on the rectangle.\n         */\n        this.mouseUp = new EventEmitter();\n        /**\n         * This event is fired when the rectangle is right-clicked on.\n         */\n        this.rightClick = new EventEmitter();\n        this._rectangleAddedToManager = false;\n        this._eventSubscriptions = [];\n    }\n    /** @internal */\n    ngOnInit() {\n        this._manager.addRectangle(this);\n        this._rectangleAddedToManager = true;\n        this._registerEventListeners();\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (!this._rectangleAddedToManager) {\n            return;\n        }\n        if (changes['north'] ||\n            changes['east'] ||\n            changes['south'] ||\n            changes['west']) {\n            this._manager.setBounds(this);\n        }\n        if (changes['editable']) {\n            this._manager.setEditable(this);\n        }\n        if (changes['draggable']) {\n            this._manager.setDraggable(this);\n        }\n        if (changes['visible']) {\n            this._manager.setVisible(this);\n        }\n        this._updateRectangleOptionsChanges(changes);\n    }\n    _updateRectangleOptionsChanges(changes) {\n        let options = {};\n        let optionKeys = Object.keys(changes).filter(k => AgmRectangle_1._mapOptions.indexOf(k) !== -1);\n        optionKeys.forEach(k => {\n            options[k] = changes[k].currentValue;\n        });\n        if (optionKeys.length > 0) {\n            this._manager.setOptions(this, options);\n        }\n    }\n    _registerEventListeners() {\n        let events = new Map();\n        events.set('bounds_changed', this.boundsChange);\n        events.set('click', this.rectangleClick);\n        events.set('dblclick', this.rectangleDblClick);\n        events.set('drag', this.drag);\n        events.set('dragend', this.dragEnd);\n        events.set('dragStart', this.dragStart);\n        events.set('mousedown', this.mouseDown);\n        events.set('mousemove', this.mouseMove);\n        events.set('mouseout', this.mouseOut);\n        events.set('mouseover', this.mouseOver);\n        events.set('mouseup', this.mouseUp);\n        events.set('rightclick', this.rightClick);\n        events.forEach((eventEmitter, eventName) => {\n            this._eventSubscriptions.push(this._manager\n                .createEventObservable(eventName, this)\n                .subscribe(value => {\n                switch (eventName) {\n                    case 'bounds_changed':\n                        this._manager.getBounds(this).then(bounds => eventEmitter.emit({\n                            north: bounds.getNorthEast().lat(),\n                            east: bounds.getNorthEast().lng(),\n                            south: bounds.getSouthWest().lat(),\n                            west: bounds.getSouthWest().lng(),\n                        }));\n                        break;\n                    default:\n                        eventEmitter.emit({\n                            coords: { lat: value.latLng.lat(), lng: value.latLng.lng() },\n                        });\n                }\n            }));\n        });\n    }\n    /** @internal */\n    ngOnDestroy() {\n        this._eventSubscriptions.forEach(function (s) {\n            s.unsubscribe();\n        });\n        this._eventSubscriptions = null;\n        this._manager.removeRectangle(this);\n    }\n    /**\n     * Gets the LatLngBounds of this Rectangle.\n     */\n    getBounds() {\n        return this._manager.getBounds(this);\n    }\n};\nAgmRectangle._mapOptions = [\n    'fillColor',\n    'fillOpacity',\n    'strokeColor',\n    'strokeOpacity',\n    'strokePosition',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'clickable',\n];\nAgmRectangle.ctorParameters = () => [\n    { type: RectangleManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"north\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"east\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"south\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"west\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmRectangle.prototype, \"clickable\", void 0);\n__decorate([\n    Input('rectangleDraggable'),\n    __metadata(\"design:type\", Object)\n], AgmRectangle.prototype, \"draggable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmRectangle.prototype, \"editable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmRectangle.prototype, \"fillColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"fillOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmRectangle.prototype, \"strokeColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"strokeOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmRectangle.prototype, \"strokePosition\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmRectangle.prototype, \"strokeWeight\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmRectangle.prototype, \"visible\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"zIndex\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"boundsChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"rectangleClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"rectangleDblClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"drag\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"dragEnd\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"dragStart\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"mouseDown\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"mouseMove\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"mouseOut\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"mouseOver\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"mouseUp\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"rightClick\", void 0);\nAgmRectangle = AgmRectangle_1 = __decorate([\n    Directive({\n        selector: 'agm-rectangle',\n    }),\n    __metadata(\"design:paramtypes\", [RectangleManager])\n], AgmRectangle);\n\nlet layerId$3 = 0;\n/*\n * This directive adds a transit layer to a google map instance\n * <agm-transit-layer [visible]=\"true|false\"> <agm-transit-layer>\n * */\nlet AgmTransitLayer = class AgmTransitLayer {\n    constructor(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId$3++).toString();\n        /**\n         * Hide/show transit layer\n         */\n        this.visible = true;\n    }\n    ngOnInit() {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addTransitLayer(this, { visible: this.visible });\n        this._addedToManager = true;\n    }\n    ngOnChanges(changes) {\n        if (!this._addedToManager) {\n            return;\n        }\n        if (changes['visible'] != null) {\n            this._manager.toggleLayerVisibility(this, { visible: changes['visible'].currentValue });\n        }\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return `AgmTransitLayer-${this._id.toString()}`; }\n    /** @internal */\n    ngOnDestroy() {\n        this._manager.deleteLayer(this);\n    }\n};\nAgmTransitLayer.ctorParameters = () => [\n    { type: LayerManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmTransitLayer.prototype, \"visible\", void 0);\nAgmTransitLayer = __decorate([\n    Directive({\n        selector: 'agm-transit-layer',\n    }),\n    __metadata(\"design:paramtypes\", [LayerManager])\n], AgmTransitLayer);\n\nvar google$1;\nvar SymbolPath;\n(function (SymbolPath) {\n    SymbolPath[SymbolPath[\"BACKWARD_CLOSED_ARROW\"] = 3] = \"BACKWARD_CLOSED_ARROW\";\n    SymbolPath[SymbolPath[\"BACKWARD_OPEN_ARROW\"] = 4] = \"BACKWARD_OPEN_ARROW\";\n    SymbolPath[SymbolPath[\"CIRCLE\"] = 0] = \"CIRCLE\";\n    SymbolPath[SymbolPath[\"FORWARD_CLOSED_ARROW\"] = 1] = \"FORWARD_CLOSED_ARROW\";\n    SymbolPath[SymbolPath[\"FORWARD_OPEN_ARROW\"] = 2] = \"FORWARD_OPEN_ARROW\";\n})(SymbolPath || (SymbolPath = {}));\n/**\n * Identifiers used to specify the placement of controls on the map. Controls are\n * positioned relative to other controls in the same layout position. Controls that\n * are added first are positioned closer to the edge of the map.\n */\nvar ControlPosition;\n(function (ControlPosition) {\n    ControlPosition[ControlPosition[\"RIGHT_BOTTOM\"] = 0] = \"RIGHT_BOTTOM\";\n    ControlPosition[ControlPosition[\"TOP_LEFT\"] = 1] = \"TOP_LEFT\";\n    ControlPosition[ControlPosition[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\n    ControlPosition[ControlPosition[\"TOP_RIGHT\"] = 3] = \"TOP_RIGHT\";\n    ControlPosition[ControlPosition[\"LEFT_CENTER\"] = 4] = \"LEFT_CENTER\";\n    ControlPosition[ControlPosition[\"LEFT_TOP\"] = 5] = \"LEFT_TOP\";\n    ControlPosition[ControlPosition[\"LEFT_BOTTOM\"] = 6] = \"LEFT_BOTTOM\";\n    ControlPosition[ControlPosition[\"RIGHT_TOP\"] = 7] = \"RIGHT_TOP\";\n    ControlPosition[ControlPosition[\"RIGHT_CENTER\"] = 8] = \"RIGHT_CENTER\";\n    ControlPosition[ControlPosition[\"BOTTOM_RIGHT\"] = 9] = \"BOTTOM_RIGHT\";\n    ControlPosition[ControlPosition[\"BOTTOM_LEFT\"] = 10] = \"BOTTOM_LEFT\";\n    ControlPosition[ControlPosition[\"BOTTOM_CENTER\"] = 11] = \"BOTTOM_CENTER\";\n})(ControlPosition || (ControlPosition = {}));\nvar MapTypeId;\n(function (MapTypeId) {\n    /** This map type displays a transparent layer of major streets on satellite images. */\n    MapTypeId[MapTypeId[\"HYBRID\"] = 0] = \"HYBRID\";\n    /** This map type displays a normal street map. */\n    MapTypeId[MapTypeId[\"ROADMAP\"] = 1] = \"ROADMAP\";\n    /** This map type displays satellite images. */\n    MapTypeId[MapTypeId[\"SATELLITE\"] = 2] = \"SATELLITE\";\n    /** This map type displays maps with physical features such as terrain and vegetation. */\n    MapTypeId[MapTypeId[\"TERRAIN\"] = 3] = \"TERRAIN\";\n})(MapTypeId || (MapTypeId = {}));\nvar MapTypeControlStyle;\n(function (MapTypeControlStyle) {\n    MapTypeControlStyle[MapTypeControlStyle[\"DEFAULT\"] = 0] = \"DEFAULT\";\n    MapTypeControlStyle[MapTypeControlStyle[\"DROPDOWN_MENU\"] = 2] = \"DROPDOWN_MENU\";\n    MapTypeControlStyle[MapTypeControlStyle[\"HORIZONTAL_BAR\"] = 1] = \"HORIZONTAL_BAR\";\n})(MapTypeControlStyle || (MapTypeControlStyle = {}));\nvar ScaleControlStyle;\n(function (ScaleControlStyle) {\n    ScaleControlStyle[ScaleControlStyle[\"DEFAULT\"] = 0] = \"DEFAULT\";\n})(ScaleControlStyle || (ScaleControlStyle = {}));\nvar ZoomControlStyle;\n(function (ZoomControlStyle) {\n    ZoomControlStyle[ZoomControlStyle[\"DEFAULT\"] = 0] = \"DEFAULT\";\n    ZoomControlStyle[ZoomControlStyle[\"LARGE\"] = 1] = \"LARGE\";\n    ZoomControlStyle[ZoomControlStyle[\"SMALL\"] = 2] = \"SMALL\";\n})(ZoomControlStyle || (ZoomControlStyle = {}));\nvar GeocoderLocationType;\n(function (GeocoderLocationType) {\n    GeocoderLocationType[\"APPROXIMATE\"] = \"APPROXIMATE\";\n    GeocoderLocationType[\"GEOMETRIC_CENTER\"] = \"GEOMETRIC_CENTER\";\n    GeocoderLocationType[\"RANGE_INTERPOLATED\"] = \"RANGE_INTERPOLATED\";\n    GeocoderLocationType[\"ROOFTOP\"] = \"ROOFTOP\";\n})(GeocoderLocationType || (GeocoderLocationType = {}));\nvar GeocoderStatus;\n(function (GeocoderStatus) {\n    GeocoderStatus[\"ERROR\"] = \"ERROR\";\n    GeocoderStatus[\"INVALID_REQUEST\"] = \"INVALID_REQUEST\";\n    GeocoderStatus[\"OK\"] = \"OK\";\n    GeocoderStatus[\"OVER_QUERY_LIMIT\"] = \"OVER_QUERY_LIMIT\";\n    GeocoderStatus[\"REQUEST_DENIED\"] = \"REQUEST_DENIED\";\n    GeocoderStatus[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    GeocoderStatus[\"ZERO_RESULTS\"] = \"ZERO_RESULTS\";\n})(GeocoderStatus || (GeocoderStatus = {}));\n\nlet AgmGeocoder = class AgmGeocoder {\n    constructor(loader) {\n        const connectableGeocoder$ = new Observable(subscriber => {\n            loader.load().then(() => subscriber.next());\n        })\n            .pipe(map(() => this._createGeocoder()), multicast(new ReplaySubject(1)));\n        connectableGeocoder$.connect(); // ignore the subscription\n        // since we will remain subscribed till application exits\n        this.geocoder$ = connectableGeocoder$;\n    }\n    geocode(request) {\n        return this.geocoder$.pipe(switchMap((geocoder) => this._getGoogleResults(geocoder, request)));\n    }\n    _getGoogleResults(geocoder, request) {\n        const geocodeObservable = bindCallback(geocoder.geocode);\n        return geocodeObservable(request).pipe(switchMap(([results, status]) => {\n            if (status === GeocoderStatus.OK) {\n                return of(results);\n            }\n            return throwError(status);\n        }));\n    }\n    _createGeocoder() {\n        return new google.maps.Geocoder();\n    }\n};\nAgmGeocoder.ctorParameters = () => [\n    { type: MapsAPILoader }\n];\nAgmGeocoder.ngInjectableDef = ɵɵdefineInjectable({ factory: function AgmGeocoder_Factory() { return new AgmGeocoder(ɵɵinject(MapsAPILoader)); }, token: AgmGeocoder, providedIn: \"root\" });\nAgmGeocoder = __decorate([\n    Injectable({ providedIn: 'root' }),\n    __metadata(\"design:paramtypes\", [MapsAPILoader])\n], AgmGeocoder);\n\nclass WindowRef {\n    getNativeWindow() { return window; }\n}\nclass DocumentRef {\n    getNativeDocument() { return document; }\n}\nconst BROWSER_GLOBALS_PROVIDERS = [WindowRef, DocumentRef];\n\nvar GoogleMapsScriptProtocol;\n(function (GoogleMapsScriptProtocol) {\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTP\"] = 1] = \"HTTP\";\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTPS\"] = 2] = \"HTTPS\";\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"AUTO\"] = 3] = \"AUTO\";\n})(GoogleMapsScriptProtocol || (GoogleMapsScriptProtocol = {}));\n/**\n * Token for the config of the LazyMapsAPILoader. Please provide an object of type {@link\n * LazyMapsAPILoaderConfig}.\n */\nconst LAZY_MAPS_API_CONFIG = new InjectionToken('angular-google-maps LAZY_MAPS_API_CONFIG');\nlet LazyMapsAPILoader = class LazyMapsAPILoader extends MapsAPILoader {\n    constructor(config = null, w, d, localeId) {\n        super();\n        this.localeId = localeId;\n        this._SCRIPT_ID = 'agmGoogleMapsApiScript';\n        this.callbackName = `agmLazyMapsAPILoader`;\n        this._config = config || {};\n        this._windowRef = w;\n        this._documentRef = d;\n    }\n    load() {\n        const window = this._windowRef.getNativeWindow();\n        if (window.google && window.google.maps) {\n            // Google maps already loaded on the page.\n            return Promise.resolve();\n        }\n        if (this._scriptLoadingPromise) {\n            return this._scriptLoadingPromise;\n        }\n        // this can happen in HMR situations or Stackblitz.io editors.\n        const scriptOnPage = this._documentRef.getNativeDocument().getElementById(this._SCRIPT_ID);\n        if (scriptOnPage) {\n            this._assignScriptLoadingPromise(scriptOnPage);\n            return this._scriptLoadingPromise;\n        }\n        const script = this._documentRef.getNativeDocument().createElement('script');\n        script.type = 'text/javascript';\n        script.async = true;\n        script.defer = true;\n        script.id = this._SCRIPT_ID;\n        script.src = this._getScriptSrc(this.callbackName);\n        this._assignScriptLoadingPromise(script);\n        this._documentRef.getNativeDocument().body.appendChild(script);\n        return this._scriptLoadingPromise;\n    }\n    _assignScriptLoadingPromise(scriptElem) {\n        this._scriptLoadingPromise = new Promise((resolve, reject) => {\n            this._windowRef.getNativeWindow()[this.callbackName] = () => {\n                resolve();\n            };\n            scriptElem.onerror = (error) => {\n                reject(error);\n            };\n        });\n    }\n    _getScriptSrc(callbackName) {\n        let protocolType = (this._config && this._config.protocol) || GoogleMapsScriptProtocol.HTTPS;\n        let protocol;\n        switch (protocolType) {\n            case GoogleMapsScriptProtocol.AUTO:\n                protocol = '';\n                break;\n            case GoogleMapsScriptProtocol.HTTP:\n                protocol = 'http:';\n                break;\n            case GoogleMapsScriptProtocol.HTTPS:\n                protocol = 'https:';\n                break;\n        }\n        const hostAndPath = this._config.hostAndPath || 'maps.googleapis.com/maps/api/js';\n        const queryParams = {\n            v: this._config.apiVersion || 'quarterly',\n            callback: callbackName,\n            key: this._config.apiKey,\n            client: this._config.clientId,\n            channel: this._config.channel,\n            libraries: this._config.libraries,\n            region: this._config.region,\n            language: this._config.language || this.localeId !== 'en-US' ? this.localeId : null,\n        };\n        const params = Object.keys(queryParams)\n            .filter((k) => queryParams[k] != null)\n            .filter((k) => {\n            // remove empty arrays\n            return !Array.isArray(queryParams[k]) ||\n                (Array.isArray(queryParams[k]) && queryParams[k].length > 0);\n        })\n            .map((k) => {\n            // join arrays as comma seperated strings\n            let i = queryParams[k];\n            if (Array.isArray(i)) {\n                return { key: k, value: i.join(',') };\n            }\n            return { key: k, value: queryParams[k] };\n        })\n            .map((entry) => {\n            return `${entry.key}=${entry.value}`;\n        })\n            .join('&');\n        return `${protocol}//${hostAndPath}?${params}`;\n    }\n};\nLazyMapsAPILoader.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LAZY_MAPS_API_CONFIG,] }] },\n    { type: WindowRef },\n    { type: DocumentRef },\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\nLazyMapsAPILoader = __decorate([\n    Injectable(),\n    __param(0, Optional()), __param(0, Inject(LAZY_MAPS_API_CONFIG)),\n    __param(3, Inject(LOCALE_ID)),\n    __metadata(\"design:paramtypes\", [Object, WindowRef, DocumentRef, String])\n], LazyMapsAPILoader);\n\n/**\n * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a `<script>`\n * Tag.\n * It's important that the Google Maps API script gets loaded first on the page.\n */\nclass NoOpMapsAPILoader {\n    load() {\n        if (!window.google || !window.google.maps) {\n            throw new Error('Google Maps API not loaded on page. Make sure window.google.maps is available!');\n        }\n        return Promise.resolve();\n    }\n}\n\n// exported map types\n\nvar AgmCoreModule_1;\n/**\n * @internal\n */\nfunction coreDirectives() {\n    return [\n        AgmBicyclingLayer,\n        AgmCircle,\n        AgmDataLayer,\n        AgmFitBounds,\n        AgmInfoWindow,\n        AgmKmlLayer,\n        AgmMap,\n        AgmMarker,\n        AgmPolygon,\n        AgmPolyline,\n        AgmPolylineIcon,\n        AgmPolylinePoint,\n        AgmRectangle,\n        AgmTransitLayer,\n    ];\n}\n/**\n * The angular-google-maps core module. Contains all Directives/Services/Pipes\n * of the core module. Please use `AgmCoreModule.forRoot()` in your app module.\n */\nlet AgmCoreModule = AgmCoreModule_1 = class AgmCoreModule {\n    /**\n     * Please use this method when you register the module at the root level.\n     */\n    static forRoot(lazyMapsAPILoaderConfig) {\n        return {\n            ngModule: AgmCoreModule_1,\n            providers: [\n                ...BROWSER_GLOBALS_PROVIDERS, { provide: MapsAPILoader, useClass: LazyMapsAPILoader },\n                { provide: LAZY_MAPS_API_CONFIG, useValue: lazyMapsAPILoaderConfig },\n            ],\n        };\n    }\n};\nAgmCoreModule = AgmCoreModule_1 = __decorate([\n    NgModule({ declarations: coreDirectives(), exports: coreDirectives() })\n], AgmCoreModule);\n\n// main modules\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AgmBicyclingLayer, AgmCircle, AgmCoreModule, AgmDataLayer, AgmFitBounds, AgmGeocoder, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMarker, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmTransitLayer, CircleManager, ControlPosition, DataLayerManager, FitBoundsAccessor, GeocoderLocationType, GeocoderStatus, GoogleMapsAPIWrapper, GoogleMapsScriptProtocol, InfoWindowManager, KmlLayerManager, LAZY_MAPS_API_CONFIG, LayerManager, LazyMapsAPILoader, MapTypeId, MapsAPILoader, MarkerManager, NoOpMapsAPILoader, PolygonManager, PolylineManager, RectangleManager, ScaleControlStyle, ZoomControlStyle, FitBoundsService as ɵa, coreDirectives as ɵb, WindowRef as ɵc, DocumentRef as ɵd, BROWSER_GLOBALS_PROVIDERS as ɵe };\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,UAAU,EAAEC,OAAO,EAAEC,SAAS,QAAQ,OAAO;AAClE,SAASC,UAAU,EAAEC,MAAM,EAAEC,KAAK,EAAEC,SAAS,EAAEC,YAAY,EAAEC,MAAM,EAAEC,IAAI,EAAEC,UAAU,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,EAAEC,SAAS,EAAEC,eAAe,EAAEC,UAAU,EAAEC,kBAAkB,EAAEC,QAAQ,EAAEC,cAAc,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,eAAe;AACjQ,SAASC,UAAU,EAAEC,eAAe,EAAEC,IAAI,EAAEC,KAAK,EAAEC,OAAO,EAAEC,gBAAgB,EAAEC,KAAK,EAAEC,aAAa,EAAEC,YAAY,EAAEC,EAAE,EAAEC,UAAU,QAAQ,MAAM;AAC9I,SAASC,OAAO,EAAEC,MAAM,EAAEC,SAAS,EAAEC,GAAG,EAAEC,WAAW,EAAEC,oBAAoB,EAAEC,SAAS,EAAEC,SAAS,EAAEC,IAAI,EAAEC,SAAS,QAAQ,gBAAgB;AAC1I,SAASC,gBAAgB,QAAQ,iBAAiB;AAElD,IAAIC,aAAa,GAAG,MAAMA,aAAa,CAAC,EACvC;AACDA,aAAa,GAAG9C,UAAU,CAAC,CACvBI,UAAU,CAAC,CAAC,CACf,EAAE0C,aAAa,CAAC;;AAEjB;AACA;AACA;AACA;AACA,IAAIC,oBAAoB,GAAG,MAAMA,oBAAoB,CAAC;EAClDC,WAAWA,CAACC,OAAO,EAAEC,KAAK,EAAE;IACxB,IAAI,CAACD,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,IAAI,GACL,IAAIC,OAAO,CAAEC,OAAO,IAAK;MAAE,IAAI,CAACC,YAAY,GAAGD,OAAO;IAAE,CAAC,CAAC;EAClE;EACAE,SAASA,CAACC,EAAE,EAAEC,UAAU,EAAE;IACtB,OAAO,IAAI,CAACP,KAAK,CAACQ,iBAAiB,CAAC,MAAM;MACtC,OAAO,IAAI,CAACT,OAAO,CAACU,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;QAClC,MAAMtB,GAAG,GAAG,IAAIuB,MAAM,CAACC,IAAI,CAACC,GAAG,CAACP,EAAE,EAAEC,UAAU,CAAC;QAC/C,IAAI,CAACH,YAAY,CAAChB,GAAG,CAAC;QACtB;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EACA0B,aAAaA,CAACC,OAAO,EAAE;IACnB,OAAO,IAAI,CAACf,KAAK,CAACQ,iBAAiB,CAAC,MAAM;MACtC,IAAI,CAACP,IAAI,CAACS,IAAI,CAAEM,CAAC,IAAK;QAAEA,CAAC,CAACC,UAAU,CAACF,OAAO,CAAC;MAAE,CAAC,CAAC;IACrD,CAAC,CAAC;EACN;EACA;AACJ;AACA;EACIG,YAAYA,CAACH,OAAO,GAAG,CAAC,CAAC,EAAEI,QAAQ,GAAG,IAAI,EAAE;IACxC,OAAO,IAAI,CAACnB,KAAK,CAACQ,iBAAiB,CAAC,MAAM;MACtC,OAAO,IAAI,CAACP,IAAI,CAACS,IAAI,CAAEtB,GAAG,IAAK;QAC3B,IAAI+B,QAAQ,EAAE;UACVJ,OAAO,CAAC3B,GAAG,GAAGA,GAAG;QACrB;QACA,OAAO,IAAIuB,MAAM,CAACC,IAAI,CAACQ,MAAM,CAACL,OAAO,CAAC;MAC1C,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EACAM,gBAAgBA,CAACN,OAAO,EAAE;IACtB,OAAO,IAAI,CAACf,KAAK,CAACQ,iBAAiB,CAAC,MAAM;MACtC,OAAO,IAAI,CAACP,IAAI,CAACS,IAAI,CAAC,MAAM;QAAE,OAAO,IAAIC,MAAM,CAACC,IAAI,CAACU,UAAU,CAACP,OAAO,CAAC;MAAE,CAAC,CAAC;IAChF,CAAC,CAAC;EACN;EACA;AACJ;AACA;EACIQ,YAAYA,CAACR,OAAO,EAAE;IAClB,OAAO,IAAI,CAACf,KAAK,CAACQ,iBAAiB,CAAC,MAAM;MACtC,OAAO,IAAI,CAACP,IAAI,CAACS,IAAI,CAAEtB,GAAG,IAAK;QAC3B,IAAI,OAAO2B,OAAO,CAACS,cAAc,KAAK,QAAQ,EAAE;UAC5CT,OAAO,CAACS,cAAc,GAAGb,MAAM,CAACC,IAAI,CAACa,cAAc,CAACV,OAAO,CAACS,cAAc,CAAC;QAC/E;QACAT,OAAO,CAAC3B,GAAG,GAAGA,GAAG;QACjB,OAAO,IAAIuB,MAAM,CAACC,IAAI,CAACc,MAAM,CAACX,OAAO,CAAC;MAC1C,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EACA;AACJ;AACA;EACIY,eAAeA,CAACZ,OAAO,EAAE;IACrB,OAAO,IAAI,CAACf,KAAK,CAACQ,iBAAiB,CAAC,MAAM;MACtC,OAAO,IAAI,CAACP,IAAI,CAACS,IAAI,CAAEtB,GAAG,IAAK;QAC3B2B,OAAO,CAAC3B,GAAG,GAAGA,GAAG;QACjB,OAAO,IAAIuB,MAAM,CAACC,IAAI,CAACgB,SAAS,CAACb,OAAO,CAAC;MAC7C,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EACAc,cAAcA,CAACd,OAAO,EAAE;IACpB,OAAO,IAAI,CAACf,KAAK,CAACQ,iBAAiB,CAAC,MAAM;MACtC,OAAO,IAAI,CAACsB,YAAY,CAAC,CAAC,CAACpB,IAAI,CAAEtB,GAAG,IAAK;QACrC,IAAI2C,IAAI,GAAG,IAAIpB,MAAM,CAACC,IAAI,CAACoB,QAAQ,CAACjB,OAAO,CAAC;QAC5CgB,IAAI,CAACE,MAAM,CAAC7C,GAAG,CAAC;QAChB,OAAO2C,IAAI;MACf,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EACAG,aAAaA,CAACnB,OAAO,EAAE;IACnB,OAAO,IAAI,CAACf,KAAK,CAACQ,iBAAiB,CAAC,MAAM;MACtC,OAAO,IAAI,CAACsB,YAAY,CAAC,CAAC,CAACpB,IAAI,CAAEtB,GAAG,IAAK;QACrC,IAAI+C,OAAO,GAAG,IAAIxB,MAAM,CAACC,IAAI,CAACwB,OAAO,CAACrB,OAAO,CAAC;QAC9CoB,OAAO,CAACF,MAAM,CAAC7C,GAAG,CAAC;QACnB,OAAO+C,OAAO;MAClB,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EACA;AACJ;AACA;EACIE,eAAeA,CAACtB,OAAO,EAAE;IACrB,OAAO,IAAI,CAACf,KAAK,CAACQ,iBAAiB,CAAC,MAAM;MACtC,OAAO,IAAI,CAACP,IAAI,CAACS,IAAI,CAACM,CAAC,IAAI;QACvB,IAAIsB,IAAI,GAAG,IAAI3B,MAAM,CAACC,IAAI,CAAC2B,IAAI,CAACxB,OAAO,CAAC;QACxCuB,IAAI,CAACL,MAAM,CAACjB,CAAC,CAAC;QACd,OAAOsB,IAAI;MACf,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;AACA;EACIE,kBAAkBA,CAACzB,OAAO,EAAE;IACxB,OAAO,IAAI,CAACf,KAAK,CAACQ,iBAAiB,CAAC,MAAM;MACtC,OAAO,IAAI,CAACP,IAAI,CAACS,IAAI,CAAEtB,GAAG,IAAK;QAC3B,IAAIqD,QAAQ,GAAG,IAAI9B,MAAM,CAACC,IAAI,CAAC8B,YAAY,CAAC,CAAC;QAC7CD,QAAQ,CAACR,MAAM,CAAClB,OAAO,CAAC4B,OAAO,GAAGvD,GAAG,GAAG,IAAI,CAAC;QAC7C,OAAOqD,QAAQ;MACnB,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;AACA;EACIG,oBAAoBA,CAAC7B,OAAO,EAAE;IAC1B,OAAO,IAAI,CAACf,KAAK,CAACQ,iBAAiB,CAAC,MAAM;MACtC,OAAO,IAAI,CAACP,IAAI,CAACS,IAAI,CAAEtB,GAAG,IAAK;QAC3B,IAAIqD,QAAQ,GAAG,IAAI9B,MAAM,CAACC,IAAI,CAACiC,cAAc,CAAC,CAAC;QAC/CJ,QAAQ,CAACR,MAAM,CAAClB,OAAO,CAAC4B,OAAO,GAAGvD,GAAG,GAAG,IAAI,CAAC;QAC7C,OAAOqD,QAAQ;MACnB,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EACA;AACJ;AACA;EACIK,gBAAgBA,CAACC,MAAM,EAAEZ,OAAO,EAAE;IAC9B,OAAOxB,MAAM,CAACC,IAAI,CAACoC,QAAQ,CAACC,IAAI,CAACH,gBAAgB,CAACC,MAAM,EAAEZ,OAAO,CAAC;EACtE;EACAe,mBAAmBA,CAACC,SAAS,EAAE;IAC3B,OAAO,IAAI7E,UAAU,CAAE8E,QAAQ,IAAK;MAChC,IAAI,CAACnD,IAAI,CAACS,IAAI,CAAEM,CAAC,IAAK;QAClBA,CAAC,CAACqC,WAAW,CAACF,SAAS,EAAGG,GAAG,IAAK;UAAE,IAAI,CAACtD,KAAK,CAACuD,GAAG,CAAC,MAAMH,QAAQ,CAACI,IAAI,CAACF,GAAG,CAAC,CAAC;QAAE,CAAC,CAAC;MACpF,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EACAG,sBAAsBA,CAAA,EAAG;IACrB,OAAO,IAAI,CAACzD,KAAK,CAACQ,iBAAiB,CAAC,MAAM;MACtC,IAAI,CAACP,IAAI,CAACS,IAAI,CAAEtB,GAAG,IAAK;QACpBuB,MAAM,CAACC,IAAI,CAAC8C,KAAK,CAACD,sBAAsB,CAACrE,GAAG,CAAC;MACjD,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EACAuE,SAASA,CAACZ,MAAM,EAAE;IACd,OAAO,IAAI,CAAC/C,KAAK,CAACQ,iBAAiB,CAAC,MAAM;MACtC,OAAO,IAAI,CAACP,IAAI,CAACS,IAAI,CAAEtB,GAAG,IAAKA,GAAG,CAACuE,SAAS,CAACZ,MAAM,CAAC,CAAC;IACzD,CAAC,CAAC;EACN;EACAa,OAAOA,CAAA,EAAG;IACN,OAAO,IAAI,CAAC5D,KAAK,CAACQ,iBAAiB,CAAC,MAAM;MACtC,OAAO,IAAI,CAACP,IAAI,CAACS,IAAI,CAAEtB,GAAG,IAAKA,GAAG,CAACwE,OAAO,CAAC,CAAC,CAAC;IACjD,CAAC,CAAC;EACN;EACAC,SAASA,CAAA,EAAG;IACR,OAAO,IAAI,CAAC7D,KAAK,CAACQ,iBAAiB,CAAC,MAAM;MACtC,OAAO,IAAI,CAACP,IAAI,CAACS,IAAI,CAAEtB,GAAG,IAAKA,GAAG,CAACyE,SAAS,CAAC,CAAC,CAAC;IACnD,CAAC,CAAC;EACN;EACAC,YAAYA,CAAA,EAAG;IACX,OAAO,IAAI,CAAC9D,KAAK,CAACQ,iBAAiB,CAAC,MAAM;MACtC,OAAO,IAAI,CAACP,IAAI,CAACS,IAAI,CAAEtB,GAAG,IAAKA,GAAG,CAAC0E,YAAY,CAAC,CAAC,CAAC;IACtD,CAAC,CAAC;EACN;EACAC,OAAOA,CAACC,IAAI,EAAE;IACV,OAAO,IAAI,CAAChE,KAAK,CAACQ,iBAAiB,CAAC,MAAM;MACtC,OAAO,IAAI,CAACP,IAAI,CAACS,IAAI,CAAEtB,GAAG,IAAKA,GAAG,CAAC2E,OAAO,CAACC,IAAI,CAAC,CAAC;IACrD,CAAC,CAAC;EACN;EACAC,SAASA,CAAA,EAAG;IACR,OAAO,IAAI,CAACjE,KAAK,CAACQ,iBAAiB,CAAC,MAAM;MACtC,OAAO,IAAI,CAACP,IAAI,CAACS,IAAI,CAAEtB,GAAG,IAAKA,GAAG,CAAC6E,SAAS,CAAC,CAAC,CAAC;IACnD,CAAC,CAAC;EACN;EACAC,KAAKA,CAACnB,MAAM,EAAE;IACV,OAAO,IAAI,CAAC/C,KAAK,CAACQ,iBAAiB,CAAC,MAAM;MACtC,OAAO,IAAI,CAACP,IAAI,CAACS,IAAI,CAAEtB,GAAG,IAAKA,GAAG,CAAC8E,KAAK,CAACnB,MAAM,CAAC,CAAC;IACrD,CAAC,CAAC;EACN;EACAoB,KAAKA,CAACC,CAAC,EAAEC,CAAC,EAAE;IACR,OAAO,IAAI,CAACrE,KAAK,CAACQ,iBAAiB,CAAC,MAAM;MACtC,OAAO,IAAI,CAACP,IAAI,CAACS,IAAI,CAAEtB,GAAG,IAAKA,GAAG,CAAC+E,KAAK,CAACC,CAAC,EAAEC,CAAC,CAAC,CAAC;IACnD,CAAC,CAAC;EACN;EACAC,SAASA,CAACvB,MAAM,EAAEwB,OAAO,EAAE;IACvB,OAAO,IAAI,CAACvE,KAAK,CAACQ,iBAAiB,CAAC,MAAM;MACtC,OAAO,IAAI,CAACP,IAAI,CAACS,IAAI,CAAEtB,GAAG,IAAKA,GAAG,CAACkF,SAAS,CAACvB,MAAM,EAAEwB,OAAO,CAAC,CAAC;IAClE,CAAC,CAAC;EACN;EACAC,WAAWA,CAACzB,MAAM,EAAEwB,OAAO,EAAE;IACzB,OAAO,IAAI,CAACvE,KAAK,CAACQ,iBAAiB,CAAC,MAAM;MACtC,OAAO,IAAI,CAACP,IAAI,CAACS,IAAI,CAAEtB,GAAG,IAAKA,GAAG,CAACoF,WAAW,CAACzB,MAAM,EAAEwB,OAAO,CAAC,CAAC;IACpE,CAAC,CAAC;EACN;EACA;AACJ;AACA;EACIzC,YAAYA,CAAA,EAAG;IAAE,OAAO,IAAI,CAAC7B,IAAI;EAAE;EACnC;AACJ;AACA;EACIwE,eAAeA,CAACtB,SAAS,EAAE;IACvB,OAAO,IAAI,CAAClD,IAAI,CAACS,IAAI,CAAEM,CAAC,IAAKL,MAAM,CAACC,IAAI,CAAC8C,KAAK,CAACgB,OAAO,CAAC1D,CAAC,EAAEmC,SAAS,CAAC,CAAC;EACzE;AACJ,CAAC;AACDtD,oBAAoB,CAAC8E,cAAc,GAAG,MAAM,CACxC;EAAEC,IAAI,EAAEhF;AAAc,CAAC,EACvB;EAAEgF,IAAI,EAAEzH;AAAO,CAAC,CACnB;AACD0C,oBAAoB,GAAG/C,UAAU,CAAC,CAC9BI,UAAU,CAAC,CAAC,EACZH,UAAU,CAAC,mBAAmB,EAAE,CAAC6C,aAAa,EAAEzC,MAAM,CAAC,CAAC,CAC3D,EAAE0C,oBAAoB,CAAC;;AAExB;AACA;AACA;AACA,IAAIgF,YAAY,GAAG,MAAMA,YAAY,CAAC;EAClC/E,WAAWA,CAACgF,QAAQ,EAAE;IAClB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,OAAO,GAAG,IAAIlE,GAAG,CAAC,CAAC;EAC5B;EACA;AACJ;AACA;AACA;AACA;AACA;EACImE,eAAeA,CAACC,KAAK,EAAElE,OAAO,EAAE;IAC5B,MAAM0B,QAAQ,GAAG,IAAI,CAACqC,QAAQ,CAACtC,kBAAkB,CAACzB,OAAO,CAAC;IAC1D,IAAI,CAACgE,OAAO,CAACG,GAAG,CAACD,KAAK,EAAExC,QAAQ,CAAC;EACrC;EACA;AACJ;AACA;AACA;AACA;AACA;EACI0C,iBAAiBA,CAACF,KAAK,EAAElE,OAAO,EAAE;IAC9B,MAAM0B,QAAQ,GAAG,IAAI,CAACqC,QAAQ,CAAClC,oBAAoB,CAAC7B,OAAO,CAAC;IAC5D,IAAI,CAACgE,OAAO,CAACG,GAAG,CAACD,KAAK,EAAExC,QAAQ,CAAC;EACrC;EACA;AACJ;AACA;AACA;AACA;EACI2C,WAAWA,CAACH,KAAK,EAAE;IACf,OAAO,IAAI,CAACF,OAAO,CAACM,GAAG,CAACJ,KAAK,CAAC,CAACvE,IAAI,CAAC4E,YAAY,IAAI;MAChDA,YAAY,CAACrD,MAAM,CAAC,IAAI,CAAC;MACzB,IAAI,CAAC8C,OAAO,CAACQ,MAAM,CAACN,KAAK,CAAC;IAC9B,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;AACA;AACA;EACIO,qBAAqBA,CAACP,KAAK,EAAElE,OAAO,EAAE;IAClC,OAAO,IAAI,CAACgE,OAAO,CAACM,GAAG,CAACJ,KAAK,CAAC,CAACvE,IAAI,CAAC4E,YAAY,IAAI;MAChD,IAAI,CAACvE,OAAO,CAAC4B,OAAO,EAAE;QAClB2C,YAAY,CAACrD,MAAM,CAAC,IAAI,CAAC;QACzB;MACJ,CAAC,MACI;QACD,OAAO,IAAI,CAAC6C,QAAQ,CAAChD,YAAY,CAAC,CAAC,CAACpB,IAAI,CAAEtB,GAAG,IAAK;UAC9CkG,YAAY,CAACrD,MAAM,CAAC7C,GAAG,CAAC;QAC5B,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;EACN;AACJ,CAAC;AACDyF,YAAY,CAACF,cAAc,GAAG,MAAM,CAChC;EAAEC,IAAI,EAAE/E;AAAqB,CAAC,CACjC;AACDgF,YAAY,GAAG/H,UAAU,CAAC,CACtBI,UAAU,CAAC,CAAC,EACZH,UAAU,CAAC,mBAAmB,EAAE,CAAC8C,oBAAoB,CAAC,CAAC,CAC1D,EAAEgF,YAAY,CAAC;AAEhB,IAAIY,OAAO,GAAG,CAAC;AACf;AACA;AACA;AACA;AACA,IAAIC,iBAAiB,GAAG,MAAMA,iBAAiB,CAAC;EAC5C5F,WAAWA,CAAC6F,QAAQ,EAAE;IAClB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,eAAe,GAAG,KAAK;IAC5B,IAAI,CAACC,GAAG,GAAG,CAACJ,OAAO,EAAE,EAAEK,QAAQ,CAAC,CAAC;IACjC;AACR;AACA;IACQ,IAAI,CAACnD,OAAO,GAAG,IAAI;EACvB;EACAoD,QAAQA,CAAA,EAAG;IACP,IAAI,IAAI,CAACH,eAAe,EAAE;MACtB;IACJ;IACA,IAAI,CAACD,QAAQ,CAACR,iBAAiB,CAAC,IAAI,EAAE;MAAExC,OAAO,EAAE,IAAI,CAACA;IAAQ,CAAC,CAAC;IAChE,IAAI,CAACiD,eAAe,GAAG,IAAI;EAC/B;EACAI,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAAC,IAAI,CAACL,eAAe,EAAE;MACvB;IACJ;IACA,IAAIK,OAAO,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE;MAC5B,IAAI,CAACN,QAAQ,CAACH,qBAAqB,CAAC,IAAI,EAAE;QAAE7C,OAAO,EAAEsD,OAAO,CAAC,SAAS,CAAC,CAACC;MAAa,CAAC,CAAC;IAC3F;EACJ;EACA;EACAC,EAAEA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACN,GAAG;EAAE;EACxB;EACAC,QAAQA,CAAA,EAAG;IAAE,OAAQ,qBAAoB,IAAI,CAACD,GAAG,CAACC,QAAQ,CAAC,CAAE,EAAC;EAAE;EAChE;EACAM,WAAWA,CAAA,EAAG;IACV,IAAI,CAACT,QAAQ,CAACP,WAAW,CAAC,IAAI,CAAC;EACnC;AACJ,CAAC;AACDM,iBAAiB,CAACf,cAAc,GAAG,MAAM,CACrC;EAAEC,IAAI,EAAEC;AAAa,CAAC,CACzB;AACD/H,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAEX,iBAAiB,CAACY,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AAClDZ,iBAAiB,GAAG5I,UAAU,CAAC,CAC3BO,SAAS,CAAC;EACNkJ,QAAQ,EAAE;AACd,CAAC,CAAC,EACFxJ,UAAU,CAAC,mBAAmB,EAAE,CAAC8H,YAAY,CAAC,CAAC,CAClD,EAAEa,iBAAiB,CAAC;AAErB,IAAIc,aAAa,GAAG,MAAMA,aAAa,CAAC;EACpC1G,WAAWA,CAAC2G,WAAW,EAAEzG,KAAK,EAAE;IAC5B,IAAI,CAACyG,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACzG,KAAK,GAAGA,KAAK;IAClB,IAAI,CAAC0G,QAAQ,GAAG,IAAI7F,GAAG,CAAC,CAAC;EAC7B;EACA8F,SAASA,CAACC,MAAM,EAAE;IACd,IAAI,CAACF,QAAQ,CAACxB,GAAG,CAAC0B,MAAM,EAAE,IAAI,CAACH,WAAW,CAAClF,YAAY,CAAC;MACpDsF,MAAM,EAAE;QAAEC,GAAG,EAAEF,MAAM,CAACG,QAAQ;QAAEC,GAAG,EAAEJ,MAAM,CAACK;MAAU,CAAC;MACvDC,SAAS,EAAEN,MAAM,CAACM,SAAS;MAC3BC,SAAS,EAAEP,MAAM,CAACO,SAAS;MAC3BC,QAAQ,EAAER,MAAM,CAACQ,QAAQ;MACzBC,SAAS,EAAET,MAAM,CAACS,SAAS;MAC3BC,WAAW,EAAEV,MAAM,CAACU,WAAW;MAC/BC,MAAM,EAAEX,MAAM,CAACW,MAAM;MACrBC,WAAW,EAAEZ,MAAM,CAACY,WAAW;MAC/BC,aAAa,EAAEb,MAAM,CAACa,aAAa;MACnCjG,cAAc,EAAEoF,MAAM,CAACpF,cAAc;MACrCkG,YAAY,EAAEd,MAAM,CAACc,YAAY;MACjC/E,OAAO,EAAEiE,MAAM,CAACjE,OAAO;MACvBgF,MAAM,EAAEf,MAAM,CAACe;IACnB,CAAC,CAAC,CAAC;EACP;EACA;AACJ;AACA;EACIC,YAAYA,CAAChB,MAAM,EAAE;IACjB,OAAO,IAAI,CAACF,QAAQ,CAACrB,GAAG,CAACuB,MAAM,CAAC,CAAClG,IAAI,CAAEmH,CAAC,IAAK;MACzCA,CAAC,CAAC5F,MAAM,CAAC,IAAI,CAAC;MACd,IAAI,CAACyE,QAAQ,CAACnB,MAAM,CAACqB,MAAM,CAAC;IAChC,CAAC,CAAC;EACN;EACA3F,UAAUA,CAAC2F,MAAM,EAAE7F,OAAO,EAAE;IACxB,OAAO,IAAI,CAAC2F,QAAQ,CAACrB,GAAG,CAACuB,MAAM,CAAC,CAAClG,IAAI,CAAEmH,CAAC,IAAK;MACzC,IAAI,OAAO9G,OAAO,CAACS,cAAc,KAAK,QAAQ,EAAE;QAC5CT,OAAO,CAACS,cAAc,GAAGb,MAAM,CAACC,IAAI,CAACa,cAAc,CAACV,OAAO,CAACS,cAAc,CAAC;MAC/E;MACAqG,CAAC,CAAC5G,UAAU,CAACF,OAAO,CAAC;IACzB,CAAC,CAAC;EACN;EACA8C,SAASA,CAAC+C,MAAM,EAAE;IACd,OAAO,IAAI,CAACF,QAAQ,CAACrB,GAAG,CAACuB,MAAM,CAAC,CAAClG,IAAI,CAAEmH,CAAC,IAAKA,CAAC,CAAChE,SAAS,CAAC,CAAC,CAAC;EAC/D;EACAI,SAASA,CAAC2C,MAAM,EAAE;IACd,OAAO,IAAI,CAACF,QAAQ,CAACrB,GAAG,CAACuB,MAAM,CAAC,CAAClG,IAAI,CAAEmH,CAAC,IAAKA,CAAC,CAAC5D,SAAS,CAAC,CAAC,CAAC;EAC/D;EACA6D,SAASA,CAAClB,MAAM,EAAE;IACd,OAAO,IAAI,CAACF,QAAQ,CAACrB,GAAG,CAACuB,MAAM,CAAC,CAAClG,IAAI,CAAEmH,CAAC,IAAKA,CAAC,CAACC,SAAS,CAAC,CAAC,CAAC;EAC/D;EACAnE,SAASA,CAACiD,MAAM,EAAE;IACd,OAAO,IAAI,CAACF,QAAQ,CAACrB,GAAG,CAACuB,MAAM,CAAC,CAAClG,IAAI,CAAEmH,CAAC,IAAK;MAAE,OAAOA,CAAC,CAAClE,SAAS,CAAC;QAAEmD,GAAG,EAAEF,MAAM,CAACG,QAAQ;QAAEC,GAAG,EAAEJ,MAAM,CAACK;MAAU,CAAC,CAAC;IAAE,CAAC,CAAC;EAC1H;EACAc,WAAWA,CAACnB,MAAM,EAAE;IAChB,OAAO,IAAI,CAACF,QAAQ,CAACrB,GAAG,CAACuB,MAAM,CAAC,CAAClG,IAAI,CAAEmH,CAAC,IAAK;MAAE,OAAOA,CAAC,CAACE,WAAW,CAACnB,MAAM,CAACQ,QAAQ,CAAC;IAAE,CAAC,CAAC;EAC5F;EACAY,YAAYA,CAACpB,MAAM,EAAE;IACjB,OAAO,IAAI,CAACF,QAAQ,CAACrB,GAAG,CAACuB,MAAM,CAAC,CAAClG,IAAI,CAAEmH,CAAC,IAAK;MAAE,OAAOA,CAAC,CAACG,YAAY,CAACpB,MAAM,CAACO,SAAS,CAAC;IAAE,CAAC,CAAC;EAC9F;EACAc,UAAUA,CAACrB,MAAM,EAAE;IACf,OAAO,IAAI,CAACF,QAAQ,CAACrB,GAAG,CAACuB,MAAM,CAAC,CAAClG,IAAI,CAAEmH,CAAC,IAAK;MAAE,OAAOA,CAAC,CAACI,UAAU,CAACrB,MAAM,CAACjE,OAAO,CAAC;IAAE,CAAC,CAAC;EAC1F;EACAuF,SAASA,CAACtB,MAAM,EAAE;IACd,OAAO,IAAI,CAACF,QAAQ,CAACrB,GAAG,CAACuB,MAAM,CAAC,CAAClG,IAAI,CAAEmH,CAAC,IAAK;MAAE,OAAOA,CAAC,CAACK,SAAS,CAACtB,MAAM,CAACW,MAAM,CAAC;IAAE,CAAC,CAAC;EACxF;EACAY,eAAeA,CAACvB,MAAM,EAAE;IACpB,OAAO,IAAI,CAACF,QAAQ,CAACrB,GAAG,CAACuB,MAAM,CAAC;EACpC;EACAwB,qBAAqBA,CAACjF,SAAS,EAAEyD,MAAM,EAAE;IACrC,OAAO,IAAItI,UAAU,CAAE8E,QAAQ,IAAK;MAChC,IAAIiF,QAAQ,GAAG,IAAI;MACnB,IAAI,CAAC3B,QAAQ,CAACrB,GAAG,CAACuB,MAAM,CAAC,CAAClG,IAAI,CAAEmH,CAAC,IAAK;QAClCQ,QAAQ,GAAGR,CAAC,CAACxE,WAAW,CAACF,SAAS,EAAGmF,CAAC,IAAK,IAAI,CAACtI,KAAK,CAACuD,GAAG,CAAC,MAAMH,QAAQ,CAACI,IAAI,CAAC8E,CAAC,CAAC,CAAC,CAAC;MACtF,CAAC,CAAC;MACF,OAAO,MAAM;QACT,IAAID,QAAQ,KAAK,IAAI,EAAE;UACnBA,QAAQ,CAACE,MAAM,CAAC,CAAC;QACrB;MACJ,CAAC;IACL,CAAC,CAAC;EACN;AACJ,CAAC;AACD/B,aAAa,CAAC7B,cAAc,GAAG,MAAM,CACjC;EAAEC,IAAI,EAAE/E;AAAqB,CAAC,EAC9B;EAAE+E,IAAI,EAAEzH;AAAO,CAAC,CACnB;AACDqJ,aAAa,GAAG1J,UAAU,CAAC,CACvBI,UAAU,CAAC,CAAC,EACZH,UAAU,CAAC,mBAAmB,EAAE,CAAC8C,oBAAoB,EAAE1C,MAAM,CAAC,CAAC,CAClE,EAAEqJ,aAAa,CAAC;AAEjB,IAAIgC,WAAW;AACf,IAAIC,SAAS,GAAGD,WAAW,GAAG,MAAMC,SAAS,CAAC;EAC1C3I,WAAWA,CAAC6F,QAAQ,EAAE;IAClB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IACxB;AACR;AACA;IACQ,IAAI,CAACuB,SAAS,GAAG,IAAI;IACrB;AACR;AACA;IACQ;IACA,IAAI,CAACC,SAAS,GAAG,KAAK;IACtB;AACR;AACA;AACA;IACQ,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB;AACR;AACA;IACQ,IAAI,CAACG,MAAM,GAAG,CAAC;IACf;AACR;AACA;AACA;IACQ,IAAI,CAAC/F,cAAc,GAAG,QAAQ;IAC9B;AACR;AACA;IACQ,IAAI,CAACkG,YAAY,GAAG,CAAC;IACrB;AACR;AACA;IACQ,IAAI,CAAC/E,OAAO,GAAG,IAAI;IACnB;AACR;AACA;IACQ,IAAI,CAAC+F,YAAY,GAAG,IAAIpL,YAAY,CAAC,CAAC;IACtC;AACR;AACA;IACQ,IAAI,CAACqL,WAAW,GAAG,IAAIrL,YAAY,CAAC,CAAC;IACrC;AACR;AACA;IACQ,IAAI,CAACsL,cAAc,GAAG,IAAItL,YAAY,CAAC,CAAC;IACxC;AACR;AACA;IACQ,IAAI,CAACuL,IAAI,GAAG,IAAIvL,YAAY,CAAC,CAAC;IAC9B;AACR;AACA;IACQ,IAAI,CAACwL,OAAO,GAAG,IAAIxL,YAAY,CAAC,CAAC;IACjC;AACR;AACA;IACQ,IAAI,CAACyL,SAAS,GAAG,IAAIzL,YAAY,CAAC,CAAC;IACnC;AACR;AACA;IACQ,IAAI,CAAC0L,SAAS,GAAG,IAAI1L,YAAY,CAAC,CAAC;IACnC;AACR;AACA;IACQ,IAAI,CAAC2L,SAAS,GAAG,IAAI3L,YAAY,CAAC,CAAC;IACnC;AACR;AACA;IACQ,IAAI,CAAC4L,QAAQ,GAAG,IAAI5L,YAAY,CAAC,CAAC;IAClC;AACR;AACA;IACQ,IAAI,CAAC6L,SAAS,GAAG,IAAI7L,YAAY,CAAC,CAAC;IACnC;AACR;AACA;IACQ,IAAI,CAAC8L,OAAO,GAAG,IAAI9L,YAAY,CAAC,CAAC;IACjC;AACR;AACA;IACQ,IAAI,CAAC+L,YAAY,GAAG,IAAI/L,YAAY,CAAC,CAAC;IACtC;AACR;AACA;IACQ,IAAI,CAACgM,UAAU,GAAG,IAAIhM,YAAY,CAAC,CAAC;IACpC,IAAI,CAACiM,qBAAqB,GAAG,KAAK;IAClC,IAAI,CAACC,mBAAmB,GAAG,EAAE;EACjC;EACA;EACAzD,QAAQA,CAAA,EAAG;IACP,IAAI,CAACJ,QAAQ,CAACgB,SAAS,CAAC,IAAI,CAAC;IAC7B,IAAI,CAAC4C,qBAAqB,GAAG,IAAI;IACjC,IAAI,CAACE,uBAAuB,CAAC,CAAC;EAClC;EACA;EACAzD,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAAC,IAAI,CAACsD,qBAAqB,EAAE;MAC7B;IACJ;IACA,IAAItD,OAAO,CAAC,UAAU,CAAC,IAAIA,OAAO,CAAC,WAAW,CAAC,EAAE;MAC7C,IAAI,CAACN,QAAQ,CAAChC,SAAS,CAAC,IAAI,CAAC;IACjC;IACA,IAAIsC,OAAO,CAAC,UAAU,CAAC,EAAE;MACrB,IAAI,CAACN,QAAQ,CAACoC,WAAW,CAAC,IAAI,CAAC;IACnC;IACA,IAAI9B,OAAO,CAAC,WAAW,CAAC,EAAE;MACtB,IAAI,CAACN,QAAQ,CAACqC,YAAY,CAAC,IAAI,CAAC;IACpC;IACA,IAAI/B,OAAO,CAAC,SAAS,CAAC,EAAE;MACpB,IAAI,CAACN,QAAQ,CAACsC,UAAU,CAAC,IAAI,CAAC;IAClC;IACA,IAAIhC,OAAO,CAAC,QAAQ,CAAC,EAAE;MACnB,IAAI,CAACN,QAAQ,CAACuC,SAAS,CAAC,IAAI,CAAC;IACjC;IACA,IAAI,CAACwB,2BAA2B,CAACzD,OAAO,CAAC;EAC7C;EACAyD,2BAA2BA,CAACzD,OAAO,EAAE;IACjC,IAAIlF,OAAO,GAAG,CAAC,CAAC;IAChB,IAAI4I,UAAU,GAAGtD,MAAM,CAACuD,IAAI,CAAC3D,OAAO,CAAC,CAAC4D,MAAM,CAACC,CAAC,IAAItB,WAAW,CAACuB,WAAW,CAACC,OAAO,CAACF,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IAC5FH,UAAU,CAACM,OAAO,CAAEH,CAAC,IAAK;MAAE/I,OAAO,CAAC+I,CAAC,CAAC,GAAG7D,OAAO,CAAC6D,CAAC,CAAC,CAAC5D,YAAY;IAAE,CAAC,CAAC;IACpE,IAAIyD,UAAU,CAACO,MAAM,GAAG,CAAC,EAAE;MACvB,IAAI,CAACvE,QAAQ,CAAC1E,UAAU,CAAC,IAAI,EAAEF,OAAO,CAAC;IAC3C;EACJ;EACA0I,uBAAuBA,CAAA,EAAG;IACtB,IAAIU,MAAM,GAAG,IAAItJ,GAAG,CAAC,CAAC;IACtBsJ,MAAM,CAACjF,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAACwD,YAAY,CAAC;IAC/CyB,MAAM,CAACjF,GAAG,CAAC,OAAO,EAAE,IAAI,CAACyD,WAAW,CAAC;IACrCwB,MAAM,CAACjF,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC0D,cAAc,CAAC;IAC3CuB,MAAM,CAACjF,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC2D,IAAI,CAAC;IAC7BsB,MAAM,CAACjF,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC4D,OAAO,CAAC;IACnCqB,MAAM,CAACjF,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC6D,SAAS,CAAC;IACvCoB,MAAM,CAACjF,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC8D,SAAS,CAAC;IACvCmB,MAAM,CAACjF,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC+D,SAAS,CAAC;IACvCkB,MAAM,CAACjF,GAAG,CAAC,UAAU,EAAE,IAAI,CAACgE,QAAQ,CAAC;IACrCiB,MAAM,CAACjF,GAAG,CAAC,WAAW,EAAE,IAAI,CAACiE,SAAS,CAAC;IACvCgB,MAAM,CAACjF,GAAG,CAAC,SAAS,EAAE,IAAI,CAACkE,OAAO,CAAC;IACnCe,MAAM,CAACjF,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAACmE,YAAY,CAAC;IAC/Cc,MAAM,CAACjF,GAAG,CAAC,YAAY,EAAE,IAAI,CAACoE,UAAU,CAAC;IACzCa,MAAM,CAACF,OAAO,CAAC,CAACG,YAAY,EAAEjH,SAAS,KAAK;MACxC,IAAI,CAACqG,mBAAmB,CAACa,IAAI,CAAC,IAAI,CAAC1E,QAAQ,CAACyC,qBAAqB,CAACjF,SAAS,EAAE,IAAI,CAAC,CAACmH,SAAS,CAAEC,KAAK,IAAK;QACpG,QAAQpH,SAAS;UACb,KAAK,gBAAgB;YACjB,IAAI,CAACwC,QAAQ,CAACmC,SAAS,CAAC,IAAI,CAAC,CAACpH,IAAI,CAAE6G,MAAM,IAAK6C,YAAY,CAACI,IAAI,CAACjD,MAAM,CAAC,CAAC;YACzE;UACJ,KAAK,gBAAgB;YACjB,IAAI,CAAC5B,QAAQ,CAAC1B,SAAS,CAAC,IAAI,CAAC,CAACvD,IAAI,CAAEmG,MAAM,IAAKuD,YAAY,CAACI,IAAI,CAAC;cAAE1D,GAAG,EAAED,MAAM,CAACC,GAAG,CAAC,CAAC;cAAEE,GAAG,EAAEH,MAAM,CAACG,GAAG,CAAC;YAAE,CAAC,CAAC,CAAC;YAC3G;UACJ;YACIoD,YAAY,CAACI,IAAI,CAAC;cAAEC,MAAM,EAAE;gBAAE3D,GAAG,EAAEyD,KAAK,CAACxH,MAAM,CAAC+D,GAAG,CAAC,CAAC;gBAAEE,GAAG,EAAEuD,KAAK,CAACxH,MAAM,CAACiE,GAAG,CAAC;cAAE;YAAE,CAAC,CAAC;QAC3F;MACJ,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;EACN;EACA;EACAZ,WAAWA,CAAA,EAAG;IACV,IAAI,CAACoD,mBAAmB,CAACS,OAAO,CAAC,UAAUS,CAAC,EAAE;MAAEA,CAAC,CAACC,WAAW,CAAC,CAAC;IAAE,CAAC,CAAC;IACnE,IAAI,CAACnB,mBAAmB,GAAG,IAAI;IAC/B,IAAI,CAAC7D,QAAQ,CAACiC,YAAY,CAAC,IAAI,CAAC;EACpC;EACA;AACJ;AACA;EACI/D,SAASA,CAAA,EAAG;IAAE,OAAO,IAAI,CAAC8B,QAAQ,CAAC9B,SAAS,CAAC,IAAI,CAAC;EAAE;EACpDI,SAASA,CAAA,EAAG;IAAE,OAAO,IAAI,CAAC0B,QAAQ,CAAC1B,SAAS,CAAC,IAAI,CAAC;EAAE;AACxD,CAAC;AACDwE,SAAS,CAACsB,WAAW,GAAG,CACpB,WAAW,EAAE,aAAa,EAAE,aAAa,EAAE,eAAe,EAAE,gBAAgB,EAAE,cAAc,EAC5F,SAAS,EAAE,QAAQ,EAAE,WAAW,CACnC;AACDtB,SAAS,CAAC9D,cAAc,GAAG,MAAM,CAC7B;EAAEC,IAAI,EAAE4B;AAAc,CAAC,CAC1B;AACD1J,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAEnC,SAAS,CAACnC,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;AAC3CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAEnC,SAAS,CAACnC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAC5CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAEoC,SAAS,CAACnC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAC5CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,iBAAiB,CAAC,EACxBL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAEoC,SAAS,CAACnC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAC5CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAEoC,SAAS,CAACnC,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;AAC3CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE8N,MAAM,CAAC,CACpC,EAAEpC,SAAS,CAACnC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAC5CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAEnC,SAAS,CAACnC,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;AAC9CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAEoC,SAAS,CAACnC,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;AACzCxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE8N,MAAM,CAAC,CACpC,EAAEpC,SAAS,CAACnC,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;AAC9CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAEnC,SAAS,CAACnC,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;AAChDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE8N,MAAM,CAAC,CACpC,EAAEpC,SAAS,CAACnC,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;AACjDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAEoC,SAAS,CAACnC,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;AAC/CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAEoC,SAAS,CAACnC,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AAC1CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAEnC,SAAS,CAACnC,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;AACzCxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEmL,SAAS,CAACnC,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;AAC/CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEmL,SAAS,CAACnC,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;AAC9CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEmL,SAAS,CAACnC,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;AACjDxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEmL,SAAS,CAACnC,SAAS,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;AACvCxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEmL,SAAS,CAACnC,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AAC1CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEmL,SAAS,CAACnC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAC5CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEmL,SAAS,CAACnC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAC5CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEmL,SAAS,CAACnC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAC5CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEmL,SAAS,CAACnC,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;AAC3CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEmL,SAAS,CAACnC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAC5CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEmL,SAAS,CAACnC,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AAC1CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEmL,SAAS,CAACnC,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;AAC/CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEmL,SAAS,CAACnC,SAAS,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;AAC7CmC,SAAS,GAAGD,WAAW,GAAG1L,UAAU,CAAC,CACjCO,SAAS,CAAC;EACNkJ,QAAQ,EAAE;AACd,CAAC,CAAC,EACFxJ,UAAU,CAAC,mBAAmB,EAAE,CAACyJ,aAAa,CAAC,CAAC,CACnD,EAAEiC,SAAS,CAAC;;AAEb;AACA;AACA;AACA,IAAIqC,gBAAgB,GAAG,MAAMA,gBAAgB,CAAC;EAC1ChL,WAAWA,CAACgF,QAAQ,EAAE9E,KAAK,EAAE;IACzB,IAAI,CAAC8E,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAAC9E,KAAK,GAAGA,KAAK;IAClB,IAAI,CAAC+E,OAAO,GAAG,IAAIlE,GAAG,CAAC,CAAC;EAC5B;EACA;AACJ;AACA;EACIkK,YAAYA,CAAC9F,KAAK,EAAE;IAChB,MAAMxC,QAAQ,GAAG,IAAI,CAACqC,QAAQ,CAACzC,eAAe,CAAC;MAC3C2I,KAAK,EAAE/F,KAAK,CAAC+F;IACjB,CAAC,CAAC,CACGtK,IAAI,CAACuK,CAAC,IAAI;MACX,IAAIhG,KAAK,CAACiG,OAAO,EAAE;QACf,IAAI,CAACC,eAAe,CAACF,CAAC,EAAEhG,KAAK,CAACiG,OAAO,CAAC,CAACxK,IAAI,CAAC0K,QAAQ,IAAIH,CAAC,CAACG,QAAQ,GAAGA,QAAQ,CAAC;MAClF;MACA,OAAOH,CAAC;IACZ,CAAC,CAAC;IACF,IAAI,CAAClG,OAAO,CAACG,GAAG,CAACD,KAAK,EAAExC,QAAQ,CAAC;EACrC;EACA4I,eAAeA,CAACpG,KAAK,EAAE;IACnB,IAAI,CAACF,OAAO,CAACM,GAAG,CAACJ,KAAK,CAAC,CAACvE,IAAI,CAAC4K,CAAC,IAAI;MAC9BA,CAAC,CAACrJ,MAAM,CAAC,IAAI,CAAC;MACd,IAAI,CAAC8C,OAAO,CAACQ,MAAM,CAACN,KAAK,CAAC;IAC9B,CAAC,CAAC;EACN;EACAsG,aAAaA,CAACtG,KAAK,EAAEiG,OAAO,EAAE;IAC1B,IAAI,CAACnG,OAAO,CAACM,GAAG,CAACJ,KAAK,CAAC,CAACvE,IAAI,CAAC4K,CAAC,IAAI;MAC9BA,CAAC,CAACrB,OAAO,CAAC,UAAUuB,OAAO,EAAE;QACzBF,CAAC,CAAC/C,MAAM,CAACiD,OAAO,CAAC;QACjB,IAAIC,KAAK,GAAGH,CAAC,CAACF,QAAQ,CAACpB,OAAO,CAACwB,OAAO,EAAE,CAAC,CAAC;QAC1C,IAAIC,KAAK,GAAG,CAAC,CAAC,EAAE;UACZH,CAAC,CAACF,QAAQ,CAACM,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;QAC/B;MACJ,CAAC,CAAC;MACF,IAAI,CAACN,eAAe,CAACG,CAAC,EAAEJ,OAAO,CAAC,CAACxK,IAAI,CAAC0K,QAAQ,IAAIE,CAAC,CAACF,QAAQ,GAAGA,QAAQ,CAAC;IAC5E,CAAC,CAAC;EACN;EACAO,cAAcA,CAAC1G,KAAK,EAAElE,OAAO,EAAE;IAC3B,IAAI,CAACgE,OAAO,CAACM,GAAG,CAACJ,KAAK,CAAC,CAACvE,IAAI,CAAC4K,CAAC,IAAI;MAC9BA,CAAC,CAACM,kBAAkB,CAAC7K,OAAO,CAAC8K,eAAe,CAAC;MAC7CP,CAAC,CAACQ,WAAW,CAAC/K,OAAO,CAACgL,QAAQ,CAAC;MAC/BT,CAAC,CAACU,cAAc,CAACjL,OAAO,CAACkL,WAAW,CAAC;MACrCX,CAAC,CAACY,QAAQ,CAACnL,OAAO,CAACiK,KAAK,CAAC;IAC7B,CAAC,CAAC;EACN;EACA;AACJ;AACA;EACI5C,qBAAqBA,CAACjF,SAAS,EAAE8B,KAAK,EAAE;IACpC,OAAO,IAAI3G,UAAU,CAAE8E,QAAQ,IAAK;MAChC,IAAI,CAAC2B,OAAO,CAACM,GAAG,CAACJ,KAAK,CAAC,CAACvE,IAAI,CAAEuK,CAAC,IAAK;QAChCA,CAAC,CAAC5H,WAAW,CAACF,SAAS,EAAGmF,CAAC,IAAK,IAAI,CAACtI,KAAK,CAACuD,GAAG,CAAC,MAAMH,QAAQ,CAACI,IAAI,CAAC8E,CAAC,CAAC,CAAC,CAAC;MAC3E,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;AACA;EACI6C,eAAeA,CAACF,CAAC,EAAEC,OAAO,EAAE;IACxB,OAAO,IAAIhL,OAAO,CAAC,CAACC,OAAO,EAAEgM,MAAM,KAAK;MACpC,IAAI,OAAOjB,OAAO,KAAK,QAAQ,EAAE;QAC7B,IAAI;UACA,MAAME,QAAQ,GAAGH,CAAC,CAACmB,UAAU,CAAClB,OAAO,CAAC;UACtC/K,OAAO,CAACiL,QAAQ,CAAC;QACrB,CAAC,CACD,OAAO9C,CAAC,EAAE;UACN6D,MAAM,CAAC7D,CAAC,CAAC;QACb;MACJ,CAAC,MACI,IAAI,OAAO4C,OAAO,KAAK,QAAQ,EAAE;QAClCD,CAAC,CAACoB,WAAW,CAACnB,OAAO,EAAE,IAAI,EAAE/K,OAAO,CAAC;MACzC,CAAC,MACI;QACDgM,MAAM,CAAE,kEAAiE,CAAC;MAC9E;IACJ,CAAC,CAAC;EACN;AACJ,CAAC;AACDrB,gBAAgB,CAACnG,cAAc,GAAG,MAAM,CACpC;EAAEC,IAAI,EAAE/E;AAAqB,CAAC,EAC9B;EAAE+E,IAAI,EAAEzH;AAAO,CAAC,CACnB;AACD2N,gBAAgB,GAAGhO,UAAU,CAAC,CAC1BI,UAAU,CAAC,CAAC,EACZH,UAAU,CAAC,mBAAmB,EAAE,CAAC8C,oBAAoB,EAAE1C,MAAM,CAAC,CAAC,CAClE,EAAE2N,gBAAgB,CAAC;AAEpB,IAAIwB,cAAc;AAClB,IAAIC,SAAS,GAAG,CAAC;AACjcAAc,GAAG,MAAME,YAAY,CAAC;EACnD1M,WAAWA,CAAC6F,QAAQ,EAAE;IAClB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,eAAe,GAAG,KAAK;IAC5B,IAAI,CAACC,GAAG,GAAG,CAAC0G,SAAS,EAAE,EAAEzG,QAAQ,CAAC,CAAC;IACnC,IAAI,CAAC2G,cAAc,GAAG,EAAE;IACxB;AACR;AACA;IACQ,IAAI,CAACC,UAAU,GAAG,IAAIpP,YAAY,CAAC,CAAC;IACpC;AACR;AACA;IACQ,IAAI,CAAC4N,OAAO,GAAG,IAAI;EACvB;EACAnF,QAAQA,CAAA,EAAG;IACP,IAAI,IAAI,CAACH,eAAe,EAAE;MACtB;IACJ;IACA,IAAI,CAACD,QAAQ,CAACoF,YAAY,CAAC,IAAI,CAAC;IAChC,IAAI,CAACnF,eAAe,GAAG,IAAI;IAC3B,IAAI,CAAC+G,kBAAkB,CAAC,CAAC;EAC7B;EACAA,kBAAkBA,CAAA,EAAG;IACjB,MAAMC,SAAS,GAAG,CACd;MAAEC,IAAI,EAAE,OAAO;MAAEC,OAAO,EAAGC,EAAE,IAAK,IAAI,CAACL,UAAU,CAAClC,IAAI,CAACuC,EAAE;IAAE,CAAC,CAC/D;IACDH,SAAS,CAAC3C,OAAO,CAAE+C,GAAG,IAAK;MACvB,MAAMC,EAAE,GAAG,IAAI,CAACtH,QAAQ,CAACyC,qBAAqB,CAAC4E,GAAG,CAACH,IAAI,EAAE,IAAI,CAAC,CAACvC,SAAS,CAAC0C,GAAG,CAACF,OAAO,CAAC;MACrF,IAAI,CAACL,cAAc,CAACpC,IAAI,CAAC4C,EAAE,CAAC;IAChC,CAAC,CAAC;EACN;EACA;EACA9G,EAAEA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACN,GAAG;EAAE;EACxB;EACAC,QAAQA,CAAA,EAAG;IAAE,OAAQ,gBAAe,IAAI,CAACD,GAAG,CAACC,QAAQ,CAAC,CAAE,EAAC;EAAE;EAC3D;EACAM,WAAWA,CAAA,EAAG;IACV,IAAI,CAACT,QAAQ,CAAC0F,eAAe,CAAC,IAAI,CAAC;IACnC;IACA,IAAI,CAACoB,cAAc,CAACxC,OAAO,CAACS,CAAC,IAAIA,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;EACrD;EACA;EACA3E,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAAC,IAAI,CAACL,eAAe,EAAE;MACvB;IACJ;IACA,IAAIsH,aAAa,GAAGjH,OAAO,CAAC,SAAS,CAAC;IACtC,IAAIiH,aAAa,EAAE;MACf,IAAI,CAACvH,QAAQ,CAAC4F,aAAa,CAAC,IAAI,EAAE2B,aAAa,CAAChH,YAAY,CAAC;IACjE;IACA,IAAIiH,WAAW,GAAG,CAAC,CAAC;IACpBb,cAAc,CAACc,sBAAsB,CAACnD,OAAO,CAACH,CAAC,IAAIqD,WAAW,CAACrD,CAAC,CAAC,GAAG7D,OAAO,CAACoH,cAAc,CAACvD,CAAC,CAAC,GAAG7D,OAAO,CAAC6D,CAAC,CAAC,CAAC5D,YAAY,GAAG,IAAI,CAAC4D,CAAC,CAAC,CAAC;IAClI,IAAI,CAACnE,QAAQ,CAACgG,cAAc,CAAC,IAAI,EAAEwB,WAAW,CAAC;EACnD;AACJ,CAAC;AACDX,YAAY,CAACY,sBAAsB,GAAG,CAAC,OAAO,CAAC;AAC/CZ,YAAY,CAAC7H,cAAc,GAAG,MAAM,CAChC;EAAEC,IAAI,EAAEkG;AAAiB,CAAC,CAC7B;AACDhO,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEkP,YAAY,CAAClG,SAAS,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;AAChDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAEmG,YAAY,CAAClG,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AAC7CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEuQ,QAAQ,CAAC,CACtC,EAAEd,YAAY,CAAClG,SAAS,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;AAC3CkG,YAAY,GAAGF,cAAc,GAAGxP,UAAU,CAAC,CACvCO,SAAS,CAAC;EACNkJ,QAAQ,EAAE;AACd,CAAC,CAAC,EACFxJ,UAAU,CAAC,mBAAmB,EAAE,CAAC+N,gBAAgB,CAAC,CAAC,CACtD,EAAE0B,YAAY,CAAC;;AAEhB;AACA;AACA;AACA;AACA,MAAMe,iBAAiB,CAAC;AAExB;AACA;AACA;AACA,IAAIC,gBAAgB,GAAG,MAAMA,gBAAgB,CAAC;EAC1C1N,WAAWA,CAAC2N,MAAM,EAAE;IAChB,IAAI,CAACC,wBAAwB,GAAG,IAAInP,eAAe,CAAC,GAAG,CAAC;IACxD,IAAI,CAACoP,iBAAiB,GAAG,IAAIpP,eAAe,CAAC,IAAIsC,GAAG,CAAC,CAAC,CAAC;IACvD,IAAI,CAAC+M,OAAO,GAAGpP,IAAI,CAACiP,MAAM,CAAChN,IAAI,CAAC,CAAC,CAAC,CAACoN,IAAI,CAAC5O,OAAO,CAAC,MAAM,IAAI,CAAC0O,iBAAiB,CAAC,EAAEzO,MAAM,CAAC,IAAI,CAACwO,wBAAwB,CAACG,IAAI,CAAC1O,SAAS,CAAC2O,IAAI,IAAIrP,KAAK,CAAC,CAAC,EAAEqP,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE1O,GAAG,CAAC2O,eAAe,IAAI,IAAI,CAACC,eAAe,CAACD,eAAe,CAAC,CAAC,EAAE1O,WAAW,CAAC,CAAC,CAAC,CAAC;EAChP;EACA2O,eAAeA,CAACD,eAAe,EAAE;IAC7B,MAAME,MAAM,GAAG,IAAItN,MAAM,CAACC,IAAI,CAACsN,YAAY,CAAC,CAAC;IAC7CH,eAAe,CAAC9D,OAAO,CAACkE,CAAC,IAAIF,MAAM,CAACG,MAAM,CAACD,CAAC,CAAC,CAAC;IAC9C,OAAOF,MAAM;EACjB;EACAI,WAAWA,CAACtL,MAAM,EAAE;IAChB,MAAMoD,EAAE,GAAG,IAAI,CAACmI,iBAAiB,CAACvL,MAAM,CAAC;IACzC,IAAI,IAAI,CAAC4K,iBAAiB,CAACpD,KAAK,CAACgE,GAAG,CAACpI,EAAE,CAAC,EAAE;MACtC;IACJ;IACA,MAAM/G,GAAG,GAAG,IAAI,CAACuO,iBAAiB,CAACpD,KAAK;IACxCnL,GAAG,CAAC8F,GAAG,CAACiB,EAAE,EAAEpD,MAAM,CAAC;IACnB,IAAI,CAAC4K,iBAAiB,CAACnK,IAAI,CAACpE,GAAG,CAAC;EACpC;EACAoP,gBAAgBA,CAACzL,MAAM,EAAE;IACrB,MAAM3D,GAAG,GAAG,IAAI,CAACuO,iBAAiB,CAACpD,KAAK;IACxCnL,GAAG,CAACmG,MAAM,CAAC,IAAI,CAAC+I,iBAAiB,CAACvL,MAAM,CAAC,CAAC;IAC1C,IAAI,CAAC4K,iBAAiB,CAACnK,IAAI,CAACpE,GAAG,CAAC;EACpC;EACAqP,+BAA+BA,CAACC,MAAM,EAAE;IACpC,IAAI,CAAChB,wBAAwB,CAAClK,IAAI,CAACkL,MAAM,CAAC;EAC9C;EACAC,UAAUA,CAAA,EAAG;IACT,OAAO,IAAI,CAACf,OAAO;EACvB;EACAU,iBAAiBA,CAACvL,MAAM,EAAE;IACtB,OAAQ,GAAEA,MAAM,CAAC+D,GAAI,IAAG/D,MAAM,CAACiE,GAAI,EAAC;EACxC;AACJ,CAAC;AACDwG,gBAAgB,CAAC7I,cAAc,GAAG,MAAM,CACpC;EAAEC,IAAI,EAAEhF;AAAc,CAAC,CAC1B;AACD4N,gBAAgB,GAAG1Q,UAAU,CAAC,CAC1BI,UAAU,CAAC,CAAC,EACZH,UAAU,CAAC,mBAAmB,EAAE,CAAC6C,aAAa,CAAC,CAAC,CACnD,EAAE4N,gBAAgB,CAAC;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA,IAAIoB,YAAY,GAAG,MAAMA,YAAY,CAAC;EAClC9O,WAAWA,CAAC+O,kBAAkB,EAAEC,iBAAiB,EAAE;IAC/C,IAAI,CAACD,kBAAkB,GAAGA,kBAAkB;IAC5C,IAAI,CAACC,iBAAiB,GAAGA,iBAAiB;IAC1C;AACR;AACA;AACA;IACQ,IAAI,CAACC,YAAY,GAAG,IAAI;IACxB,IAAI,CAACC,WAAW,GAAG,IAAItQ,OAAO,CAAC,CAAC;IAChC,IAAI,CAACuQ,uBAAuB,GAAG,IAAI;EACvC;EACA;AACJ;AACA;EACIjJ,WAAWA,CAAA,EAAG;IACV,IAAI,CAACkJ,aAAa,CAAC,CAAC;EACxB;EACA;AACJ;AACA;EACInJ,QAAQA,CAAA,EAAG;IACP,IAAI,CAAC8I,kBAAkB,CAClBM,oBAAoB,CAAC,CAAC,CACtBtB,IAAI,CAACvO,oBAAoB,CAAC,CAAC8E,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACrB,MAAM,CAAC+D,GAAG,KAAKzC,CAAC,CAACtB,MAAM,CAAC+D,GAAG,IAAI1C,CAAC,CAACrB,MAAM,CAACiE,GAAG,KAAK3C,CAAC,CAACtB,MAAM,CAACiE,GAAG,CAAC,EAAEzH,SAAS,CAAC,IAAI,CAACyP,WAAW,CAAC,CAAC,CACjI1E,SAAS,CAAC8E,OAAO,IAAI,IAAI,CAACF,aAAa,CAACE,OAAO,CAAC,CAAC;EAC1D;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIF,aAAaA,CAACG,mBAAmB,EAAE;IAC/B;IACA,IAAI,IAAI,CAACJ,uBAAuB,EAAE;MAC9B,IAAI,CAACH,iBAAiB,CAACN,gBAAgB,CAAC,IAAI,CAACS,uBAAuB,CAAClM,MAAM,CAAC;MAC5E;MACA;IACJ;;IACA,IAAIsM,mBAAmB,EAAE;MACrB,IAAI,CAACJ,uBAAuB,GAAGI,mBAAmB;IACtD;IACA,IAAI,CAAC,IAAI,CAACJ,uBAAuB,EAAE;MAC/B;IACJ;IACA,IAAI,IAAI,CAACF,YAAY,KAAK,IAAI,EAAE;MAC5B,IAAI,CAACD,iBAAiB,CAACT,WAAW,CAAC,IAAI,CAACY,uBAAuB,CAAClM,MAAM,CAAC;IAC3E;EACJ;EACA;AACJ;AACA;EACIqD,WAAWA,CAAA,EAAG;IACV,IAAI,CAAC4I,WAAW,CAACxL,IAAI,CAAC,CAAC;IACvB,IAAI,CAACwL,WAAW,CAACM,QAAQ,CAAC,CAAC;IAC3B,IAAI,IAAI,CAACL,uBAAuB,KAAK,IAAI,EAAE;MACvC,IAAI,CAACH,iBAAiB,CAACN,gBAAgB,CAAC,IAAI,CAACS,uBAAuB,CAAClM,MAAM,CAAC;IAChF;EACJ;AACJ,CAAC;AACD6L,YAAY,CAACjK,cAAc,GAAG,MAAM,CAChC;EAAEC,IAAI,EAAE2I,iBAAiB;EAAEgC,UAAU,EAAE,CAAC;IAAE3K,IAAI,EAAEpH;EAAK,CAAC;AAAE,CAAC,EACzD;EAAEoH,IAAI,EAAE4I;AAAiB,CAAC,CAC7B;AACD1Q,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAEuI,YAAY,CAACtI,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;AAClDsI,YAAY,GAAG9R,UAAU,CAAC,CACtBO,SAAS,CAAC;EACNkJ,QAAQ,EAAE;AACd,CAAC,CAAC,EACFvJ,OAAO,CAAC,CAAC,EAAEQ,IAAI,CAAC,CAAC,CAAC,EAClBT,UAAU,CAAC,mBAAmB,EAAE,CAACwQ,iBAAiB,EAC9CC,gBAAgB,CAAC,CAAC,CACzB,EAAEoB,YAAY,CAAC;AAEhB,IAAIY,aAAa,GAAG,MAAMA,aAAa,CAAC;EACpC1P,WAAWA,CAAC2P,YAAY,EAAEzP,KAAK,EAAE;IAC7B,IAAI,CAACyP,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACzP,KAAK,GAAGA,KAAK;IAClB,IAAI,CAAC0P,QAAQ,GAAG,IAAI7O,GAAG,CAAC,CAAC;EAC7B;EACA8O,gBAAgBA,CAACC,MAAM,EAAE;IACrB,OAAO3S,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,IAAI2S,MAAM,KAAK,IAAI,EAAE;QACjB,OAAO,IAAI;MACf,CAAC,MACI;QACD,OAAO,IAAI,CAACH,YAAY,CAAC3N,YAAY,CAAC,CAAC,CAACpB,IAAI,CAAC,MAAMC,MAAM,CAACC,IAAI,CAACiP,SAAS,CAACD,MAAM,CAAC,CAAC;MACrF;IACJ,CAAC,CAAC;EACN;EACAE,YAAYA,CAACC,MAAM,EAAE;IACjB,MAAM/O,CAAC,GAAG,IAAI,CAAC0O,QAAQ,CAACrK,GAAG,CAAC0K,MAAM,CAAC;IACnC,IAAI/O,CAAC,IAAI,IAAI,EAAE;MACX;MACA,OAAOd,OAAO,CAACC,OAAO,CAAC,CAAC;IAC5B;IACA,OAAOa,CAAC,CAACN,IAAI,CAAEM,CAAC,IAAK;MACjB,OAAO,IAAI,CAAChB,KAAK,CAACuD,GAAG,CAAC,MAAM;QACxBvC,CAAC,CAACiB,MAAM,CAAC,IAAI,CAAC;QACd,IAAI,CAACyN,QAAQ,CAACnK,MAAM,CAACwK,MAAM,CAAC;MAChC,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EACAC,oBAAoBA,CAACD,MAAM,EAAE;IACzB,OAAO,IAAI,CAACL,QAAQ,CAACrK,GAAG,CAAC0K,MAAM,CAAC,CAACrP,IAAI,CAAEM,CAAC,IAAKA,CAAC,CAACiP,WAAW,CAAC;MAAEnJ,GAAG,EAAEiJ,MAAM,CAAChJ,QAAQ;MAAEC,GAAG,EAAE+I,MAAM,CAAC9I;IAAU,CAAC,CAAC,CAAC;EAChH;EACAiJ,WAAWA,CAACH,MAAM,EAAE;IAChB,OAAO,IAAI,CAACL,QAAQ,CAACrK,GAAG,CAAC0K,MAAM,CAAC,CAACrP,IAAI,CAAEM,CAAC,IAAKA,CAAC,CAACmP,QAAQ,CAACJ,MAAM,CAACK,KAAK,CAAC,CAAC;EAC1E;EACAC,WAAWA,CAACN,MAAM,EAAE;IAChB,OAAO,IAAI,CAACL,QAAQ,CAACrK,GAAG,CAAC0K,MAAM,CAAC,CAACrP,IAAI,CAAEM,CAAC,IAAK;MAAEA,CAAC,CAACsP,QAAQ,CAACP,MAAM,CAACQ,KAAK,CAAC;IAAE,CAAC,CAAC;EAC/E;EACAC,eAAeA,CAACT,MAAM,EAAE;IACpB,OAAO,IAAI,CAACL,QAAQ,CAACrK,GAAG,CAAC0K,MAAM,CAAC,CAACrP,IAAI,CAAEM,CAAC,IAAKA,CAAC,CAACgH,YAAY,CAAC+H,MAAM,CAAC5I,SAAS,CAAC,CAAC;EAClF;EACAsJ,UAAUA,CAACV,MAAM,EAAE;IACf,OAAO,IAAI,CAACL,QAAQ,CAACrK,GAAG,CAAC0K,MAAM,CAAC,CAACrP,IAAI,CAAEM,CAAC,IAAKA,CAAC,CAAC0P,OAAO,CAACX,MAAM,CAACY,OAAO,CAAC,CAAC;EAC3E;EACAC,aAAaA,CAACb,MAAM,EAAE;IAClB,OAAO,IAAI,CAACL,QAAQ,CAACrK,GAAG,CAAC0K,MAAM,CAAC,CAACrP,IAAI,CAAEM,CAAC,IAAKA,CAAC,CAAC6P,UAAU,CAACd,MAAM,CAACe,OAAO,CAAC,CAAC;EAC9E;EACAC,aAAaA,CAAChB,MAAM,EAAE;IAClB,OAAO,IAAI,CAACL,QAAQ,CAACrK,GAAG,CAAC0K,MAAM,CAAC,CAACrP,IAAI,CAAEM,CAAC,IAAKA,CAAC,CAACiH,UAAU,CAAC8H,MAAM,CAACpN,OAAO,CAAC,CAAC;EAC9E;EACAqO,YAAYA,CAACjB,MAAM,EAAE;IACjB,OAAO,IAAI,CAACL,QAAQ,CAACrK,GAAG,CAAC0K,MAAM,CAAC,CAACrP,IAAI,CAAEM,CAAC,IAAKA,CAAC,CAACiQ,SAAS,CAAClB,MAAM,CAACpI,MAAM,CAAC,CAAC;EAC5E;EACAuJ,eAAeA,CAACnB,MAAM,EAAE;IACpB,OAAO,IAAI,CAACL,QAAQ,CAACrK,GAAG,CAAC0K,MAAM,CAAC,CAACrP,IAAI,CAAEM,CAAC,IAAKA,CAAC,CAACmQ,YAAY,CAACpB,MAAM,CAAC7I,SAAS,CAAC,CAAC;EAClF;EACAkK,eAAeA,CAACrB,MAAM,EAAE;IACpB,OAAO9S,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,MAAM+D,CAAC,GAAG,MAAM,IAAI,CAAC0O,QAAQ,CAACrK,GAAG,CAAC0K,MAAM,CAAC;MACzC/O,CAAC,CAACqQ,YAAY,CAAC,MAAM,IAAI,CAAC1B,gBAAgB,CAACI,MAAM,CAACuB,SAAS,CAAC,CAAC;IACjE,CAAC,CAAC;EACN;EACAC,SAASA,CAACxB,MAAM,EAAE;IACd,MAAMyB,aAAa,GAAG,IAAItR,OAAO,CAAEC,OAAO,IAAKlD,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MACxF,OAAO,IAAI,CAACwS,YAAY,CAACvO,YAAY,CAAC;QAClCuQ,QAAQ,EAAE;UAAE3K,GAAG,EAAEiJ,MAAM,CAAChJ,QAAQ;UAAEC,GAAG,EAAE+I,MAAM,CAAC9I;QAAU,CAAC;QACzDsJ,KAAK,EAAER,MAAM,CAACQ,KAAK;QACnBpJ,SAAS,EAAE4I,MAAM,CAAC5I,SAAS;QAC3BuK,IAAI,EAAE3B,MAAM,CAACY,OAAO;QACpBG,OAAO,EAAEf,MAAM,CAACe,OAAO;QACvBnO,OAAO,EAAEoN,MAAM,CAACpN,OAAO;QACvBgF,MAAM,EAAEoI,MAAM,CAACpI,MAAM;QACrByI,KAAK,EAAEL,MAAM,CAACK,KAAK;QACnBlJ,SAAS,EAAE6I,MAAM,CAAC7I,SAAS;QAC3BoK,SAAS,EAAE,MAAM,IAAI,CAAC3B,gBAAgB,CAACI,MAAM,CAACuB,SAAS;MAC3D,CAAC,CAAC,CAAC5Q,IAAI,CAACP,OAAO,CAAC;IACpB,CAAC,CAAC,CAAC;IACH,IAAI,CAACuP,QAAQ,CAACxK,GAAG,CAAC6K,MAAM,EAAEyB,aAAa,CAAC;EAC5C;EACAG,eAAeA,CAAC5B,MAAM,EAAE;IACpB,OAAO,IAAI,CAACL,QAAQ,CAACrK,GAAG,CAAC0K,MAAM,CAAC;EACpC;EACA3H,qBAAqBA,CAACjF,SAAS,EAAE4M,MAAM,EAAE;IACrC,OAAO,IAAIzR,UAAU,CAAE8E,QAAQ,IAAK;MAChC,IAAI,CAACsM,QAAQ,CAACrK,GAAG,CAAC0K,MAAM,CAAC,CAACrP,IAAI,CAAEM,CAAC,IAAK;QAClCA,CAAC,CAACqC,WAAW,CAACF,SAAS,EAAGmF,CAAC,IAAK,IAAI,CAACtI,KAAK,CAACuD,GAAG,CAAC,MAAMH,QAAQ,CAACI,IAAI,CAAC8E,CAAC,CAAC,CAAC,CAAC;MAC3E,CAAC,CAAC;IACN,CAAC,CAAC;EACN;AACJ,CAAC;AACDkH,aAAa,CAAC7K,cAAc,GAAG,MAAM,CACjC;EAAEC,IAAI,EAAE/E;AAAqB,CAAC,EAC9B;EAAE+E,IAAI,EAAEzH;AAAO,CAAC,CACnB;AACDqS,aAAa,GAAG1S,UAAU,CAAC,CACvBI,UAAU,CAAC,CAAC,EACZH,UAAU,CAAC,mBAAmB,EAAE,CAAC8C,oBAAoB,EAAE1C,MAAM,CAAC,CAAC,CAClE,EAAEqS,aAAa,CAAC;AAEjB,IAAIoC,iBAAiB,GAAG,MAAMA,iBAAiB,CAAC;EAC5C9R,WAAWA,CAAC2P,YAAY,EAAEzP,KAAK,EAAE6R,cAAc,EAAE;IAC7C,IAAI,CAACpC,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACzP,KAAK,GAAGA,KAAK;IAClB,IAAI,CAAC6R,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,YAAY,GAAG,IAAIjR,GAAG,CAAC,CAAC;EACjC;EACAkR,gBAAgBA,CAACC,UAAU,EAAE;IACzB,MAAMC,OAAO,GAAG,IAAI,CAACH,YAAY,CAACzM,GAAG,CAAC2M,UAAU,CAAC;IACjD,IAAIC,OAAO,IAAI,IAAI,EAAE;MACjB;MACA,OAAO/R,OAAO,CAACC,OAAO,CAAC,CAAC;IAC5B;IACA,OAAO8R,OAAO,CAACvR,IAAI,CAAEwR,CAAC,IAAK;MACvB,OAAO,IAAI,CAAClS,KAAK,CAACuD,GAAG,CAAC,MAAM;QACxB2O,CAAC,CAACC,KAAK,CAAC,CAAC;QACT,IAAI,CAACL,YAAY,CAACvM,MAAM,CAACyM,UAAU,CAAC;MACxC,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EACA/B,WAAWA,CAAC+B,UAAU,EAAE;IACpB,OAAO,IAAI,CAACF,YAAY,CAACzM,GAAG,CAAC2M,UAAU,CAAC,CAACtR,IAAI,CAAEwR,CAAC,IAAKA,CAAC,CAACjC,WAAW,CAAC;MAC/DnJ,GAAG,EAAEkL,UAAU,CAACjL,QAAQ;MACxBC,GAAG,EAAEgL,UAAU,CAAC/K;IACpB,CAAC,CAAC,CAAC;EACP;EACAgK,SAASA,CAACe,UAAU,EAAE;IAClB,OAAO,IAAI,CAACF,YAAY,CAACzM,GAAG,CAAC2M,UAAU,CAAC,CACnCtR,IAAI,CAAEwR,CAAC,IAAKA,CAAC,CAACjB,SAAS,CAACe,UAAU,CAACrK,MAAM,CAAC,CAAC;EACpD;EACAyK,IAAIA,CAACJ,UAAU,EAAE;IACb,OAAO,IAAI,CAACF,YAAY,CAACzM,GAAG,CAAC2M,UAAU,CAAC,CAACtR,IAAI,CAAE2R,CAAC,IAAK;MACjD,IAAIL,UAAU,CAACM,UAAU,IAAI,IAAI,EAAE;QAC/B,OAAO,IAAI,CAACT,cAAc,CAACF,eAAe,CAACK,UAAU,CAACM,UAAU,CAAC,CAAC5R,IAAI,CAAEqP,MAAM,IAAK;UAC/E,OAAO,IAAI,CAACN,YAAY,CAAC3N,YAAY,CAAC,CAAC,CAACpB,IAAI,CAAEtB,GAAG,IAAKiT,CAAC,CAACD,IAAI,CAAChT,GAAG,EAAE2Q,MAAM,CAAC,CAAC;QAC9E,CAAC,CAAC;MACN;MACA,OAAO,IAAI,CAACN,YAAY,CAAC3N,YAAY,CAAC,CAAC,CAACpB,IAAI,CAAEtB,GAAG,IAAKiT,CAAC,CAACD,IAAI,CAAChT,GAAG,CAAC,CAAC;IACtE,CAAC,CAAC;EACN;EACA+S,KAAKA,CAACH,UAAU,EAAE;IACd,OAAO,IAAI,CAACF,YAAY,CAACzM,GAAG,CAAC2M,UAAU,CAAC,CAACtR,IAAI,CAAE2R,CAAC,IAAKA,CAAC,CAACF,KAAK,CAAC,CAAC,CAAC;EACnE;EACAlR,UAAUA,CAAC+Q,UAAU,EAAEjR,OAAO,EAAE;IAC5B,OAAO,IAAI,CAAC+Q,YAAY,CAACzM,GAAG,CAAC2M,UAAU,CAAC,CAACtR,IAAI,CAAEwR,CAAC,IAAKA,CAAC,CAACjR,UAAU,CAACF,OAAO,CAAC,CAAC;EAC/E;EACAwR,aAAaA,CAACP,UAAU,EAAE;IACtB,MAAMjR,OAAO,GAAG;MACZyR,OAAO,EAAER,UAAU,CAACQ,OAAO;MAC3BC,QAAQ,EAAET,UAAU,CAACS,QAAQ;MAC7B9K,MAAM,EAAEqK,UAAU,CAACrK,MAAM;MACzB+K,cAAc,EAAEV,UAAU,CAACU;IAC/B,CAAC;IACD,IAAI,OAAOV,UAAU,CAACjL,QAAQ,KAAK,QAAQ,IAAI,OAAOiL,UAAU,CAAC/K,SAAS,KAAK,QAAQ,EAAE;MACrFlG,OAAO,CAAC0Q,QAAQ,GAAG;QAAE3K,GAAG,EAAEkL,UAAU,CAACjL,QAAQ;QAAEC,GAAG,EAAEgL,UAAU,CAAC/K;MAAU,CAAC;IAC9E;IACA,MAAM0L,iBAAiB,GAAG,IAAI,CAAClD,YAAY,CAACpO,gBAAgB,CAACN,OAAO,CAAC;IACrE,IAAI,CAAC+Q,YAAY,CAAC5M,GAAG,CAAC8M,UAAU,EAAEW,iBAAiB,CAAC;EACxD;EACA;AACJ;AACA;EACIvK,qBAAqBA,CAACjF,SAAS,EAAE6O,UAAU,EAAE;IACzC,OAAO,IAAI1T,UAAU,CAAE8E,QAAQ,IAAK;MAChC,IAAI,CAAC0O,YAAY,CAACzM,GAAG,CAAC2M,UAAU,CAAC,CAACtR,IAAI,CAAEwR,CAAC,IAAK;QAC1CA,CAAC,CAAC7O,WAAW,CAACF,SAAS,EAAGmF,CAAC,IAAK,IAAI,CAACtI,KAAK,CAACuD,GAAG,CAAC,MAAMH,QAAQ,CAACI,IAAI,CAAC8E,CAAC,CAAC,CAAC,CAAC;MAC3E,CAAC,CAAC;IACN,CAAC,CAAC;EACN;AACJ,CAAC;AACDsJ,iBAAiB,CAACjN,cAAc,GAAG,MAAM,CACrC;EAAEC,IAAI,EAAE/E;AAAqB,CAAC,EAC9B;EAAE+E,IAAI,EAAEzH;AAAO,CAAC,EAChB;EAAEyH,IAAI,EAAE4K;AAAc,CAAC,CAC1B;AACDoC,iBAAiB,GAAG9U,UAAU,CAAC,CAC3BI,UAAU,CAAC,CAAC,EACZH,UAAU,CAAC,mBAAmB,EAAE,CAAC8C,oBAAoB,EAAE1C,MAAM,EACzDqS,aAAa,CAAC,CAAC,CACtB,EAAEoC,iBAAiB,CAAC;AAErB,IAAIgB,eAAe;AACnB,IAAIC,YAAY,GAAG,CAAC;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,aAAa,GAAGF,eAAe,GAAG,MAAME,aAAa,CAAC;EACtDhT,WAAWA,CAACiT,kBAAkB,EAAEC,GAAG,EAAE;IACjC,IAAI,CAACD,kBAAkB,GAAGA,kBAAkB;IAC5C,IAAI,CAACC,GAAG,GAAGA,GAAG;IACd;AACR;AACA;IACQ,IAAI,CAACC,MAAM,GAAG,KAAK;IACnB;AACR;AACA;IACQ,IAAI,CAACC,eAAe,GAAG,IAAI5V,YAAY,CAAC,CAAC;IACzC,IAAI,CAAC6V,yBAAyB,GAAG,KAAK;IACtC,IAAI,CAACtN,GAAG,GAAG,CAACgN,YAAY,EAAE,EAAE/M,QAAQ,CAAC,CAAC;EAC1C;EACAC,QAAQA,CAAA,EAAG;IACP,IAAI,CAACyM,OAAO,GAAG,IAAI,CAACQ,GAAG,CAACI,aAAa,CAACC,aAAa,CAAC,0BAA0B,CAAC;IAC/E,IAAI,CAACN,kBAAkB,CAACR,aAAa,CAAC,IAAI,CAAC;IAC3C,IAAI,CAACY,yBAAyB,GAAG,IAAI;IACrC,IAAI,CAACG,gBAAgB,CAAC,CAAC;IACvB,IAAI,CAAC7J,uBAAuB,CAAC,CAAC;EAClC;EACA;EACAzD,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAAC,IAAI,CAACkN,yBAAyB,EAAE;MACjC;IACJ;IACA,IAAI,CAAClN,OAAO,CAAC,UAAU,CAAC,IAAIA,OAAO,CAAC,WAAW,CAAC,KAAK,OAAO,IAAI,CAACc,QAAQ,KAAK,QAAQ,IAClF,OAAO,IAAI,CAACE,SAAS,KAAK,QAAQ,EAAE;MACpC,IAAI,CAAC8L,kBAAkB,CAAC9C,WAAW,CAAC,IAAI,CAAC;IAC7C;IACA,IAAIhK,OAAO,CAAC,QAAQ,CAAC,EAAE;MACnB,IAAI,CAAC8M,kBAAkB,CAAC9B,SAAS,CAAC,IAAI,CAAC;IAC3C;IACA,IAAIhL,OAAO,CAAC,QAAQ,CAAC,EAAE;MACnB,IAAI,CAACqN,gBAAgB,CAAC,CAAC;IAC3B;IACA,IAAI,CAACC,qBAAqB,CAACtN,OAAO,CAAC;EACvC;EACAwD,uBAAuBA,CAAA,EAAG;IACtB,IAAI,CAACsJ,kBAAkB,CAAC3K,qBAAqB,CAAC,YAAY,EAAE,IAAI,CAAC,CAACkC,SAAS,CAAC,MAAM;MAC9E,IAAI,CAAC2I,MAAM,GAAG,KAAK;MACnB,IAAI,CAACC,eAAe,CAAC1I,IAAI,CAAC,CAAC;IAC/B,CAAC,CAAC;EACN;EACA8I,gBAAgBA,CAAA,EAAG;IACf,IAAI,CAACL,MAAM,GAAG,IAAI,CAACb,IAAI,CAAC,CAAC,GAAG,IAAI,CAACD,KAAK,CAAC,CAAC;EAC5C;EACAoB,qBAAqBA,CAACtN,OAAO,EAAE;IAC3B,IAAIlF,OAAO,GAAG,CAAC,CAAC;IAChB,IAAI4I,UAAU,GAAGtD,MAAM,CAACuD,IAAI,CAAC3D,OAAO,CAAC,CAAC4D,MAAM,CAACC,CAAC,IAAI8I,eAAe,CAACY,wBAAwB,CAACxJ,OAAO,CAACF,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IAC7GH,UAAU,CAACM,OAAO,CAAEH,CAAC,IAAK;MAAE/I,OAAO,CAAC+I,CAAC,CAAC,GAAG7D,OAAO,CAAC6D,CAAC,CAAC,CAAC5D,YAAY;IAAE,CAAC,CAAC;IACpE,IAAI,CAAC6M,kBAAkB,CAAC9R,UAAU,CAAC,IAAI,EAAEF,OAAO,CAAC;EACrD;EACA;AACJ;AACA;EACIqR,IAAIA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACW,kBAAkB,CAACX,IAAI,CAAC,IAAI,CAAC;EAAE;EACpD;AACJ;AACA;EACID,KAAKA,CAAA,EAAG;IACJ,OAAO,IAAI,CAACY,kBAAkB,CAACZ,KAAK,CAAC,IAAI,CAAC,CAACzR,IAAI,CAAC,MAAM;MAAE,IAAI,CAACwS,eAAe,CAAC1I,IAAI,CAAC,CAAC;IAAE,CAAC,CAAC;EAC3F;EACA;EACArE,EAAEA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACN,GAAG;EAAE;EACxB;EACAC,QAAQA,CAAA,EAAG;IAAE,OAAO,gBAAgB,GAAG,IAAI,CAACD,GAAG,CAACC,QAAQ,CAAC,CAAC;EAAE;EAC5D;EACAM,WAAWA,CAAA,EAAG;IAAE,IAAI,CAAC2M,kBAAkB,CAAChB,gBAAgB,CAAC,IAAI,CAAC;EAAE;AACpE,CAAC;AACDe,aAAa,CAACU,wBAAwB,GAAG,CAAC,gBAAgB,EAAE,UAAU,CAAC;AACvEV,aAAa,CAACnO,cAAc,GAAG,MAAM,CACjC;EAAEC,IAAI,EAAEgN;AAAkB,CAAC,EAC3B;EAAEhN,IAAI,EAAEnH;AAAW,CAAC,CACvB;AACDX,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAEkI,aAAa,CAACxM,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;AAC/CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAEkI,aAAa,CAACxM,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAChDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE0W,OAAO,CAAC,CACrC,EAAEX,aAAa,CAACxM,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;AACrDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAEkI,aAAa,CAACxM,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;AAC7CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAEkI,aAAa,CAACxM,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;AAC/CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAEyM,aAAa,CAACxM,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;AAC7CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEwV,aAAa,CAACxM,SAAS,EAAE,iBAAiB,EAAE,KAAK,CAAC,CAAC;AACtDwM,aAAa,GAAGF,eAAe,GAAG9V,UAAU,CAAC,CACzCY,SAAS,CAAC;EACN6I,QAAQ,EAAE,iBAAiB;EAC3BmN,QAAQ,EAAG;AACnB;AACA;AACA;AACI,CAAC,CAAC,EACF3W,UAAU,CAAC,mBAAmB,EAAE,CAAC6U,iBAAiB,EAAEnU,UAAU,CAAC,CAAC,CACnE,EAAEqV,aAAa,CAAC;;AAEjB;AACA;AACA;AACA,IAAIa,eAAe,GAAG,MAAMA,eAAe,CAAC;EACxC7T,WAAWA,CAACgF,QAAQ,EAAE9E,KAAK,EAAE;IACzB,IAAI,CAAC8E,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAAC9E,KAAK,GAAGA,KAAK;IAClB,IAAI,CAAC+E,OAAO,GAAG,IAAIlE,GAAG,CAAC,CAAC;EAC5B;EACA;AACJ;AACA;EACI+S,WAAWA,CAAC3O,KAAK,EAAE;IACf,MAAMxC,QAAQ,GAAG,IAAI,CAACqC,QAAQ,CAAChD,YAAY,CAAC,CAAC,CAACpB,IAAI,CAACM,CAAC,IAAI;MACpD,OAAO,IAAIL,MAAM,CAACC,IAAI,CAACiT,QAAQ,CAAC;QAC5B3M,SAAS,EAAEjC,KAAK,CAACiC,SAAS;QAC1B9H,GAAG,EAAE4B,CAAC;QACN8S,gBAAgB,EAAE7O,KAAK,CAAC6O,gBAAgB;QACxCC,cAAc,EAAE9O,KAAK,CAAC8O,cAAc;QACpCC,mBAAmB,EAAE/O,KAAK,CAAC+O,mBAAmB;QAC9CC,GAAG,EAAEhP,KAAK,CAACgP,GAAG;QACdtM,MAAM,EAAE1C,KAAK,CAAC0C;MAClB,CAAC,CAAC;IACN,CAAC,CAAC;IACF,IAAI,CAAC5C,OAAO,CAACG,GAAG,CAACD,KAAK,EAAExC,QAAQ,CAAC;EACrC;EACAxB,UAAUA,CAACgE,KAAK,EAAElE,OAAO,EAAE;IACvB,IAAI,CAACgE,OAAO,CAACM,GAAG,CAACJ,KAAK,CAAC,CAACvE,IAAI,CAAC4K,CAAC,IAAIA,CAAC,CAACrK,UAAU,CAACF,OAAO,CAAC,CAAC;EAC5D;EACAmT,cAAcA,CAACjP,KAAK,EAAE;IAClB,IAAI,CAACF,OAAO,CAACM,GAAG,CAACJ,KAAK,CAAC,CAACvE,IAAI,CAAC4K,CAAC,IAAI;MAC9BA,CAAC,CAACrJ,MAAM,CAAC,IAAI,CAAC;MACd,IAAI,CAAC8C,OAAO,CAACQ,MAAM,CAACN,KAAK,CAAC;IAC9B,CAAC,CAAC;EACN;EACA;AACJ;AACA;EACImD,qBAAqBA,CAACjF,SAAS,EAAE8B,KAAK,EAAE;IACpC,OAAO,IAAI3G,UAAU,CAAE8E,QAAQ,IAAK;MAChC,IAAI,CAAC2B,OAAO,CAACM,GAAG,CAACJ,KAAK,CAAC,CAACvE,IAAI,CAAEM,CAAC,IAAK;QAChCA,CAAC,CAACqC,WAAW,CAACF,SAAS,EAAGmF,CAAC,IAAK,IAAI,CAACtI,KAAK,CAACuD,GAAG,CAAC,MAAMH,QAAQ,CAACI,IAAI,CAAC8E,CAAC,CAAC,CAAC,CAAC;MAC3E,CAAC,CAAC;IACN,CAAC,CAAC;EACN;AACJ,CAAC;AACDqL,eAAe,CAAChP,cAAc,GAAG,MAAM,CACnC;EAAEC,IAAI,EAAE/E;AAAqB,CAAC,EAC9B;EAAE+E,IAAI,EAAEzH;AAAO,CAAC,CACnB;AACDwW,eAAe,GAAG7W,UAAU,CAAC,CACzBI,UAAU,CAAC,CAAC,EACZH,UAAU,CAAC,mBAAmB,EAAE,CAAC8C,oBAAoB,EAAE1C,MAAM,CAAC,CAAC,CAClE,EAAEwW,eAAe,CAAC;AAEnB,IAAIQ,aAAa;AACjB,IAAIC,SAAS,GAAG,CAAC;AACjB,IAAIC,WAAW,GAAGF,aAAa,GAAG,MAAME,WAAW,CAAC;EAChDvU,WAAWA,CAAC6F,QAAQ,EAAE;IAClB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,eAAe,GAAG,KAAK;IAC5B,IAAI,CAACC,GAAG,GAAG,CAACuO,SAAS,EAAE,EAAEtO,QAAQ,CAAC,CAAC;IACnC,IAAI,CAAC2G,cAAc,GAAG,EAAE;IACxB;AACR;AACA;IACQ,IAAI,CAACvF,SAAS,GAAG,IAAI;IACrB;AACR;AACA;AACA;AACA;AACA;IACQ,IAAI,CAAC4M,gBAAgB,GAAG,KAAK;IAC7B;AACR;AACA;IACQ,IAAI,CAACC,cAAc,GAAG,IAAI;IAC1B;AACR;AACA;IACQ,IAAI,CAACC,mBAAmB,GAAG,KAAK;IAChC;AACR;AACA;IACQ,IAAI,CAACC,GAAG,GAAG,IAAI;IACf;AACR;AACA;IACQ,IAAI,CAACtM,MAAM,GAAG,IAAI;IAClB;AACR;AACA;IACQ,IAAI,CAAC+E,UAAU,GAAG,IAAIpP,YAAY,CAAC,CAAC;IACpC;AACR;AACA;IACQ,IAAI,CAACgX,qBAAqB,GAAG,IAAIhX,YAAY,CAAC,CAAC;IAC/C;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACiX,YAAY,GAAG,IAAIjX,YAAY,CAAC,CAAC;EAC1C;EACAyI,QAAQA,CAAA,EAAG;IACP,IAAI,IAAI,CAACH,eAAe,EAAE;MACtB;IACJ;IACA,IAAI,CAACD,QAAQ,CAACiO,WAAW,CAAC,IAAI,CAAC;IAC/B,IAAI,CAAChO,eAAe,GAAG,IAAI;IAC3B,IAAI,CAAC+G,kBAAkB,CAAC,CAAC;EAC7B;EACA3G,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAAC,IAAI,CAACL,eAAe,EAAE;MACvB;IACJ;IACA,IAAI,CAAC4O,qBAAqB,CAACvO,OAAO,CAAC;EACvC;EACAuO,qBAAqBA,CAACvO,OAAO,EAAE;IAC3B,MAAMlF,OAAO,GAAGsF,MAAM,CAACuD,IAAI,CAAC3D,OAAO,CAAC,CAC/B4D,MAAM,CAACC,CAAC,IAAIqK,aAAa,CAACM,gBAAgB,CAACzK,OAAO,CAACF,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAC7D4K,MAAM,CAAC,CAAC1H,GAAG,EAAElD,CAAC,KAAK;MACpBkD,GAAG,CAAClD,CAAC,CAAC,GAAG7D,OAAO,CAAC6D,CAAC,CAAC,CAAC5D,YAAY;MAChC,OAAO8G,GAAG;IACd,CAAC,EAAE,CAAC,CAAC,CAAC;IACN,IAAI3G,MAAM,CAACuD,IAAI,CAAC7I,OAAO,CAAC,CAACmJ,MAAM,GAAG,CAAC,EAAE;MACjC,IAAI,CAACvE,QAAQ,CAAC1E,UAAU,CAAC,IAAI,EAAEF,OAAO,CAAC;IAC3C;EACJ;EACA4L,kBAAkBA,CAAA,EAAG;IACjB,MAAMC,SAAS,GAAG,CACd;MAAEC,IAAI,EAAE,OAAO;MAAEC,OAAO,EAAGC,EAAE,IAAK,IAAI,CAACL,UAAU,CAAClC,IAAI,CAACuC,EAAE;IAAE,CAAC,EAC5D;MAAEF,IAAI,EAAE,yBAAyB;MAAEC,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACwH,qBAAqB,CAAC9J,IAAI,CAAC;IAAE,CAAC,EACrF;MAAEqC,IAAI,EAAE,gBAAgB;MAAEC,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACyH,YAAY,CAAC/J,IAAI,CAAC;IAAE,CAAC,CACtE;IACDoC,SAAS,CAAC3C,OAAO,CAAE+C,GAAG,IAAK;MACvB,MAAMC,EAAE,GAAG,IAAI,CAACtH,QAAQ,CAACyC,qBAAqB,CAAC4E,GAAG,CAACH,IAAI,EAAE,IAAI,CAAC,CAACvC,SAAS,CAAC0C,GAAG,CAACF,OAAO,CAAC;MACrF,IAAI,CAACL,cAAc,CAACpC,IAAI,CAAC4C,EAAE,CAAC;IAChC,CAAC,CAAC;EACN;EACA;EACA9G,EAAEA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACN,GAAG;EAAE;EACxB;EACAC,QAAQA,CAAA,EAAG;IAAE,OAAQ,eAAc,IAAI,CAACD,GAAG,CAACC,QAAQ,CAAC,CAAE,EAAC;EAAE;EAC1D;EACAM,WAAWA,CAAA,EAAG;IACV,IAAI,CAACT,QAAQ,CAACuO,cAAc,CAAC,IAAI,CAAC;IAClC;IACA,IAAI,CAACzH,cAAc,CAACxC,OAAO,CAACS,CAAC,IAAIA,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;EACrD;AACJ,CAAC;AACD0J,WAAW,CAACI,gBAAgB,GAAG,CAAC,WAAW,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,qBAAqB,EAAE,KAAK,EAAE,QAAQ,CAAC;AAC1HJ,WAAW,CAAC1P,cAAc,GAAG,MAAM,CAC/B;EAAEC,IAAI,EAAE+O;AAAgB,CAAC,CAC5B;AACD7W,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAEgO,WAAW,CAAC/N,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAC9CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAEgO,WAAW,CAAC/N,SAAS,EAAE,kBAAkB,EAAE,KAAK,CAAC,CAAC;AACrDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAEgO,WAAW,CAAC/N,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;AACnDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAEgO,WAAW,CAAC/N,SAAS,EAAE,qBAAqB,EAAE,KAAK,CAAC,CAAC;AACxDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE8N,MAAM,CAAC,CACpC,EAAEwJ,WAAW,CAAC/N,SAAS,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AACxCxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAEyJ,WAAW,CAAC/N,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;AAC3CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAE+W,WAAW,CAAC/N,SAAS,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;AAC/CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAE+W,WAAW,CAAC/N,SAAS,EAAE,uBAAuB,EAAE,KAAK,CAAC,CAAC;AAC1DxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAE+W,WAAW,CAAC/N,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;AACjD+N,WAAW,GAAGF,aAAa,GAAGrX,UAAU,CAAC,CACrCO,SAAS,CAAC;EACNkJ,QAAQ,EAAE;AACd,CAAC,CAAC,EACFxJ,UAAU,CAAC,mBAAmB,EAAE,CAAC4W,eAAe,CAAC,CAAC,CACrD,EAAEU,WAAW,CAAC;AAEf,SAASM,wBAAwBA,CAACC,KAAK,EAAE;EACrC,MAAMC,UAAU,GAAG,CAAC,WAAW,EAAE,WAAW,EAAE,QAAQ,CAAC;EACvD,OAAOlW,gBAAgB,CAAEmO,OAAO,IAAK+H,UAAU,CAACzV,GAAG,CAAC0V,MAAM,IAAIF,KAAK,CAACvR,WAAW,CAACyR,MAAM,EAAE,CAACrJ,KAAK,EAAEsJ,QAAQ,KAAKjI,OAAO,CAACkI,KAAK,CAACJ,KAAK,EAAE,CAAC;IAAE,QAAQ,EAAEA,KAAK,CAACK,QAAQ,CAAC,CAAC;IAAEH,MAAM;IAAErJ,KAAK;IAAEsJ;EAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACG,QAAQ,EAAEC,WAAW,KAAKA,WAAW,CAAClL,OAAO,CAACmL,UAAU,IAAIA,UAAU,CAAC7M,MAAM,CAAC,CAAC,CAAC,CAAC;AACtR;AACA,MAAM8M,YAAY,CAAC;EACfvV,WAAWA,CAAA,EAAG;IACV,IAAI,CAACwV,IAAI,GAAG,EAAE;IACd,IAAI,CAAC1I,SAAS,GAAG;MACb,WAAW,EAAE,EAAE;MACf,WAAW,EAAE,EAAE;MACf,QAAQ,EAAE;IACd,CAAC;EACL;EACA2I,KAAKA,CAAA,EAAG;IACJ,KAAK,IAAIrD,CAAC,GAAG,IAAI,CAACoD,IAAI,CAACpL,MAAM,GAAG,CAAC,EAAEgI,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC5C,IAAI,CAACsD,QAAQ,CAACtD,CAAC,CAAC;IACpB;EACJ;EACA+C,QAAQA,CAAA,EAAG;IACP,OAAO,CAAC,GAAG,IAAI,CAACK,IAAI,CAAC;EACzB;EACAG,KAAKA,CAACvD,CAAC,EAAE;IACL,OAAO,IAAI,CAACoD,IAAI,CAACpD,CAAC,CAAC;EACvB;EACAwD,SAASA,CAAA,EAAG;IACR,OAAO,IAAI,CAACJ,IAAI,CAACpL,MAAM;EAC3B;EACAyL,QAAQA,CAACzD,CAAC,EAAE0D,IAAI,EAAE;IACd,IAAI,CAACN,IAAI,CAAC5J,MAAM,CAACwG,CAAC,EAAE,CAAC,EAAE0D,IAAI,CAAC;IAC5B,IAAI,CAAChJ,SAAS,CAACiJ,SAAS,CAACzW,GAAG,CAACiJ,QAAQ,IAAIA,QAAQ,CAAC6J,CAAC,CAAC,CAAC;EACzD;EACA4D,GAAGA,CAAA,EAAG;IACF,MAAMC,OAAO,GAAG,IAAI,CAACT,IAAI,CAACQ,GAAG,CAAC,CAAC;IAC/B,IAAI,CAAClJ,SAAS,CAACoJ,SAAS,CAAC5W,GAAG,CAACiJ,QAAQ,IAAIA,QAAQ,CAAC,IAAI,CAACiN,IAAI,CAACpL,MAAM,EAAE6L,OAAO,CAAC,CAAC;IAC7E,OAAOA,OAAO;EAClB;EACA1L,IAAIA,CAACuL,IAAI,EAAE;IACP,IAAI,CAACN,IAAI,CAACjL,IAAI,CAACuL,IAAI,CAAC;IACpB,IAAI,CAAChJ,SAAS,CAACiJ,SAAS,CAACzW,GAAG,CAACiJ,QAAQ,IAAIA,QAAQ,CAAC,IAAI,CAACiN,IAAI,CAACpL,MAAM,GAAG,CAAC,CAAC,CAAC;IACxE,OAAO,IAAI,CAACoL,IAAI,CAACpL,MAAM;EAC3B;EACAsL,QAAQA,CAACtD,CAAC,EAAE;IACR,MAAM6D,OAAO,GAAG,IAAI,CAACT,IAAI,CAAC5J,MAAM,CAACwG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACzC,IAAI,CAACtF,SAAS,CAACoJ,SAAS,CAAC5W,GAAG,CAACiJ,QAAQ,IAAIA,QAAQ,CAAC6J,CAAC,EAAE6D,OAAO,CAAC,CAAC;IAC9D,OAAOA,OAAO;EAClB;EACAE,KAAKA,CAAC/D,CAAC,EAAE0D,IAAI,EAAE;IACX,MAAMG,OAAO,GAAG,IAAI,CAACT,IAAI,CAACpD,CAAC,CAAC;IAC5B,IAAI,CAACoD,IAAI,CAACpD,CAAC,CAAC,GAAG0D,IAAI;IACnB,IAAI,CAAChJ,SAAS,CAACsJ,MAAM,CAAC9W,GAAG,CAACiJ,QAAQ,IAAIA,QAAQ,CAAC6J,CAAC,EAAE6D,OAAO,CAAC,CAAC;EAC/D;EACA9L,OAAOA,CAACkM,QAAQ,EAAE;IACd,IAAI,CAACb,IAAI,CAACrL,OAAO,CAACkM,QAAQ,CAAC;EAC/B;EACA9S,WAAWA,CAACF,SAAS,EAAE2J,OAAO,EAAE;IAC5B,MAAMsJ,WAAW,GAAG,IAAI,CAACxJ,SAAS,CAACzJ,SAAS,CAAC;IAC7CiT,WAAW,CAAC/L,IAAI,CAACyC,OAAO,CAAC;IACzB,OAAO;MACHvE,MAAM,EAAEA,CAAA,KAAM;QACV6N,WAAW,CAAC1K,MAAM,CAAC0K,WAAW,CAACpM,OAAO,CAAC8C,OAAO,CAAC,EAAE,CAAC,CAAC;MACvD;IACJ,CAAC;EACL;AACJ;AAEA,IAAIuJ,cAAc,GAAG,MAAMA,cAAc,CAAC;EACtCvW,WAAWA,CAAC2P,YAAY,EAAEzP,KAAK,EAAE;IAC7B,IAAI,CAACyP,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACzP,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACsW,SAAS,GAAG,IAAIzV,GAAG,CAAC,CAAC;EAC9B;EACA0V,UAAUA,CAACC,IAAI,EAAE;IACb,MAAMC,cAAc,GAAG,IAAI,CAAChH,YAAY,CAACvN,aAAa,CAAC;MACnDgF,SAAS,EAAEsP,IAAI,CAACtP,SAAS;MACzBC,SAAS,EAAEqP,IAAI,CAACrP,SAAS;MACzBC,QAAQ,EAAEoP,IAAI,CAACpP,QAAQ;MACvBC,SAAS,EAAEmP,IAAI,CAACnP,SAAS;MACzBC,WAAW,EAAEkP,IAAI,CAAClP,WAAW;MAC7BoP,QAAQ,EAAEF,IAAI,CAACE,QAAQ;MACvBC,KAAK,EAAEH,IAAI,CAACG,KAAK;MACjBnP,WAAW,EAAEgP,IAAI,CAAChP,WAAW;MAC7BC,aAAa,EAAE+O,IAAI,CAAC/O,aAAa;MACjCC,YAAY,EAAE8O,IAAI,CAAC9O,YAAY;MAC/B/E,OAAO,EAAE6T,IAAI,CAAC7T,OAAO;MACrBgF,MAAM,EAAE6O,IAAI,CAAC7O;IACjB,CAAC,CAAC;IACF,IAAI,CAAC2O,SAAS,CAACpR,GAAG,CAACsR,IAAI,EAAEC,cAAc,CAAC;EAC5C;EACAG,aAAaA,CAACzU,OAAO,EAAE;IACnB,MAAMnB,CAAC,GAAG,IAAI,CAACsV,SAAS,CAACjR,GAAG,CAAClD,OAAO,CAAC;IACrC,IAAInB,CAAC,IAAI,IAAI,EAAE;MACX,OAAOd,OAAO,CAACC,OAAO,CAAC,CAAC;IAC5B;IACA,OAAOa,CAAC,CAACN,IAAI,CAAE4K,CAAC,IAAK,IAAI,CAACtL,KAAK,CAACuD,GAAG,CAAC,MAAM;MAAE+H,CAAC,CAACuL,QAAQ,CAAC1U,OAAO,CAACwU,KAAK,CAAC;IAAE,CAAC,CAAC,CAAC;EAC9E;EACAG,iBAAiBA,CAACN,IAAI,EAAEzV,OAAO,EAAE;IAC7B,OAAO,IAAI,CAACuV,SAAS,CAACjR,GAAG,CAACmR,IAAI,CAAC,CAAC9V,IAAI,CAAE4K,CAAC,IAAK;MAAEA,CAAC,CAACrK,UAAU,CAACF,OAAO,CAAC;IAAE,CAAC,CAAC;EAC3E;EACAgW,aAAaA,CAACJ,KAAK,EAAE;IACjB,MAAM3V,CAAC,GAAG,IAAI,CAACsV,SAAS,CAACjR,GAAG,CAACsR,KAAK,CAAC;IACnC,IAAI3V,CAAC,IAAI,IAAI,EAAE;MACX,OAAOd,OAAO,CAACC,OAAO,CAAC,CAAC;IAC5B;IACA,OAAOa,CAAC,CAACN,IAAI,CAAE4K,CAAC,IAAK;MACjB,OAAO,IAAI,CAACtL,KAAK,CAACuD,GAAG,CAAC,MAAM;QACxB+H,CAAC,CAACrJ,MAAM,CAAC,IAAI,CAAC;QACd,IAAI,CAACqU,SAAS,CAAC/Q,MAAM,CAACoR,KAAK,CAAC;MAChC,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EACAK,OAAOA,CAAC7U,OAAO,EAAE;IACb,OAAO,IAAI,CAACmU,SAAS,CAACjR,GAAG,CAAClD,OAAO,CAAC,CAC7BzB,IAAI,CAAEyB,OAAO,IAAKA,OAAO,CAAC6U,OAAO,CAAC,CAAC,CAAC/B,QAAQ,CAAC,CAAC,CAAC;EACxD;EACAgC,QAAQA,CAAC9U,OAAO,EAAE;IACd,OAAO,IAAI,CAACmU,SAAS,CAACjR,GAAG,CAAClD,OAAO,CAAC,CAC7BzB,IAAI,CAAEyB,OAAO,IAAKA,OAAO,CAAC8U,QAAQ,CAAC,CAAC,CAAChC,QAAQ,CAAC,CAAC,CAAC7V,GAAG,CAAE8X,CAAC,IAAKA,CAAC,CAACjC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClF;EACA7M,qBAAqBA,CAACjF,SAAS,EAAEqT,IAAI,EAAE;IACnC,OAAO,IAAIlY,UAAU,CAAE8E,QAAQ,IAAK;MAChC,IAAI,CAACkT,SAAS,CAACjR,GAAG,CAACmR,IAAI,CAAC,CAAC9V,IAAI,CAAE4K,CAAC,IAAK;QACjCA,CAAC,CAACjI,WAAW,CAACF,SAAS,EAAGmF,CAAC,IAAK,IAAI,CAACtI,KAAK,CAACuD,GAAG,CAAC,MAAMH,QAAQ,CAACI,IAAI,CAAC8E,CAAC,CAAC,CAAC,CAAC;MAC3E,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EACA6O,yBAAyBA,CAACC,UAAU,EAAE;IAClC,OAAOna,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,MAAMkF,OAAO,GAAG,MAAM,IAAI,CAACmU,SAAS,CAACjR,GAAG,CAAC+R,UAAU,CAAC;MACpD,MAAMT,KAAK,GAAGxU,OAAO,CAAC8U,QAAQ,CAAC,CAAC;MAChC,MAAMI,aAAa,GAAG1C,wBAAwB,CAACgC,KAAK,CAAC;MACrD,OAAOU,aAAa,CAACxJ,IAAI,CAACrO,SAAS,CAAC;QAAE8X,MAAM,EAAEX,KAAK,CAAC1B,QAAQ,CAAC;MAAE,CAAC,CAAC;MAAE;MACnE9V,SAAS,CAACoY,aAAa,IAAI3Y,KAAK,CAAC;MAAI;MACrC2Y,aAAa,CAACD,MAAM,CAAClY,GAAG,CAAC,CAACoY,KAAK,EAAE/L,KAAK,KAAKkJ,wBAAwB,CAAC6C,KAAK,CAAC,CACrE3J,IAAI,CAACzO,GAAG,CAACqY,UAAU,KAAK;QAAEF,aAAa;QAAEE,UAAU;QAAEC,SAAS,EAAEjM;MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC5EoC,IAAI,CAACrO,SAAS,CAAC;QAAE+X,aAAa;QAAEE,UAAU,EAAE,IAAI;QAAEC,SAAS,EAAE;MAAK,CAAC,CAAC,CAAC,CAAC;MAAE;MAC7EjY,IAAI,CAAC,CAAC,CAAC;MAAE;MACTL,GAAG,CAAC,CAAC;QAAEmY,aAAa;QAAEE,UAAU;QAAEC;MAAU,CAAC,KAAK;QAC9C,IAAIC,MAAM;QACV,IAAI,CAACF,UAAU,EAAE;UACbE,MAAM,GAAG;YACLL,MAAM,EAAEC,aAAa,CAACD,MAAM,CAAClY,GAAG,CAACwY,MAAM,IAAIA,MAAM,CAAC3C,QAAQ,CAAC,CAAC,CAAC7V,GAAG,CAAC2D,MAAM,IAAIA,MAAM,CAAC8U,MAAM,CAAC,CAAC,CAAC,CAAC;YAC5F1U,SAAS,EAAEoU,aAAa,CAACzC,MAAM;YAC/BrJ,KAAK,EAAE8L,aAAa,CAAC9L;UACzB,CAAC;UACD,IAAI8L,aAAa,CAACxC,QAAQ,EAAE;YACxB4C,MAAM,CAAC5C,QAAQ,GAAGwC,aAAa,CAACxC,QAAQ,CAACE,QAAQ,CAAC,CAAC;UACvD;QACJ,CAAC,MACI;UACD0C,MAAM,GAAG;YACLL,MAAM,EAAEC,aAAa,CAACD,MAAM,CAAClY,GAAG,CAACwY,MAAM,IAAIA,MAAM,CAAC3C,QAAQ,CAAC,CAAC,CAAC7V,GAAG,CAAC2D,MAAM,IAAIA,MAAM,CAAC8U,MAAM,CAAC,CAAC,CAAC,CAAC;YAC5FH,SAAS;YACTvU,SAAS,EAAEsU,UAAU,CAAC3C,MAAM;YAC5BrJ,KAAK,EAAEgM,UAAU,CAAChM;UACtB,CAAC;UACD,IAAIgM,UAAU,CAAC1C,QAAQ,EAAE;YACrB4C,MAAM,CAAC5C,QAAQ,GAAG0C,UAAU,CAAC1C,QAAQ;UACzC;QACJ;QACA,OAAO4C,MAAM;MACjB,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;EACN;AACJ,CAAC;AACDtB,cAAc,CAAC1R,cAAc,GAAG,MAAM,CAClC;EAAEC,IAAI,EAAE/E;AAAqB,CAAC,EAC9B;EAAE+E,IAAI,EAAEzH;AAAO,CAAC,CACnB;AACDkZ,cAAc,GAAGvZ,UAAU,CAAC,CACxBI,UAAU,CAAC,CAAC,EACZH,UAAU,CAAC,mBAAmB,EAAE,CAAC8C,oBAAoB,EAAE1C,MAAM,CAAC,CAAC,CAClE,EAAEkZ,cAAc,CAAC;AAElB,IAAIyB,iBAAiB;AACrB,IAAIC,eAAe,GAAGD,iBAAiB,GAAG,MAAMC,eAAe,CAAC;EAC5DjY,WAAWA,CAAC2P,YAAY,EAAEzP,KAAK,EAAE;IAC7B,IAAI,CAACyP,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACzP,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACgY,UAAU,GAAG,IAAInX,GAAG,CAAC,CAAC;EAC/B;EACA,OAAOoX,cAAcA,CAAClW,IAAI,EAAE;IACxB,MAAMyU,IAAI,GAAGzU,IAAI,CAACmW,UAAU,CAAC,CAAC,CAAC9Y,GAAG,CAAE+Y,KAAK,IAAK;MAC1C,OAAO;QAAErR,GAAG,EAAEqR,KAAK,CAACpR,QAAQ;QAAEC,GAAG,EAAEmR,KAAK,CAAClR;MAAU,CAAC;IACxD,CAAC,CAAC;IACF,OAAOuP,IAAI;EACf;EACA,OAAO4B,YAAYA,CAAC5B,IAAI,EAAE;IACtB,MAAM6B,UAAU,GAAG1X,MAAM,CAACC,IAAI,CAAC0X,UAAU,CAAC9B,IAAI,CAAC;IAC/C,IAAI,OAAO6B,UAAU,KAAK,QAAQ,EAAE;MAChC,OAAOA,UAAU;IACrB,CAAC,MACI;MACD,OAAO7B,IAAI;IACf;EACJ;EACA,OAAO+B,aAAaA,CAACxW,IAAI,EAAE;IACvB,MAAMyW,KAAK,GAAGzW,IAAI,CAAC0W,SAAS,CAAC,CAAC,CAACrZ,GAAG,CAACsZ,OAAO,KAAK;MAC3CC,aAAa,EAAED,OAAO,CAACC,aAAa;MACpCC,MAAM,EAAEF,OAAO,CAACE,MAAM;MACtBC,MAAM,EAAEH,OAAO,CAACG,MAAM;MACtBnH,IAAI,EAAE;QACFoH,MAAM,EAAE,IAAInY,MAAM,CAACC,IAAI,CAACmY,KAAK,CAACL,OAAO,CAACM,OAAO,EAAEN,OAAO,CAACO,OAAO,CAAC;QAC/D5R,SAAS,EAAEqR,OAAO,CAACrR,SAAS;QAC5BC,WAAW,EAAEoR,OAAO,CAACpR,WAAW;QAChCkP,IAAI,EAAEsB,iBAAiB,CAACM,YAAY,CAACM,OAAO,CAAClC,IAAI,CAAC;QAClD0C,QAAQ,EAAER,OAAO,CAACQ,QAAQ;QAC1BC,KAAK,EAAET,OAAO,CAACS,KAAK;QACpB3R,WAAW,EAAEkR,OAAO,CAAClR,WAAW;QAChCC,aAAa,EAAEiR,OAAO,CAACjR,aAAa;QACpCC,YAAY,EAAEgR,OAAO,CAAChR;MAC1B;IACJ,CAAC,CAAC,CAAC;IACH;IACA8Q,KAAK,CAACvO,OAAO,CAACyH,IAAI,IAAI;MAClBrL,MAAM,CAAC+S,OAAO,CAAC1H,IAAI,CAAC,CAACzH,OAAO,CAAC,CAAC,CAACoP,GAAG,EAAEC,GAAG,CAAC,KAAK;QACzC,IAAI,OAAOA,GAAG,KAAK,WAAW,EAAE;UAC5B,OAAO5H,IAAI,CAAC2H,GAAG,CAAC;QACpB;MACJ,CAAC,CAAC;MACF,IAAI,OAAO3H,IAAI,CAACA,IAAI,CAACoH,MAAM,CAAC1U,CAAC,KAAK,WAAW,IACzC,OAAOsN,IAAI,CAACA,IAAI,CAACoH,MAAM,CAACzU,CAAC,KAAK,WAAW,EAAE;QAC3C,OAAOqN,IAAI,CAACA,IAAI,CAACoH,MAAM;MAC3B;IACJ,CAAC,CAAC;IACF,OAAON,KAAK;EAChB;EACAe,WAAWA,CAACxX,IAAI,EAAE;IACd,MAAMyX,eAAe,GAAG,IAAI,CAAC/J,YAAY,CAAC3N,YAAY,CAAC,CAAC,CACnDpB,IAAI,CAAC,MAAM,CAACoX,iBAAiB,CAACG,cAAc,CAAClW,IAAI,CAAC,EACnD+V,iBAAiB,CAACS,aAAa,CAACxW,IAAI,CAAC,CAAC,CAAC,CACtCrB,IAAI,CAAC,CAAC,CAAC8V,IAAI,EAAEgC,KAAK,CAAC,KAAK,IAAI,CAAC/I,YAAY,CAAC5N,cAAc,CAAC;MAC1DqF,SAAS,EAAEnF,IAAI,CAACmF,SAAS;MACzBC,SAAS,EAAEpF,IAAI,CAACoF,SAAS;MACzBC,QAAQ,EAAErF,IAAI,CAACqF,QAAQ;MACvBsP,QAAQ,EAAE3U,IAAI,CAAC2U,QAAQ;MACvBlP,WAAW,EAAEzF,IAAI,CAACyF,WAAW;MAC7BC,aAAa,EAAE1F,IAAI,CAAC0F,aAAa;MACjCC,YAAY,EAAE3F,IAAI,CAAC2F,YAAY;MAC/B/E,OAAO,EAAEZ,IAAI,CAACY,OAAO;MACrBgF,MAAM,EAAE5F,IAAI,CAAC4F,MAAM;MACnB6O,IAAI,EAAEA,IAAI;MACVgC,KAAK,EAAEA;IACX,CAAC,CAAC,CAAC;IACH,IAAI,CAACR,UAAU,CAAC9S,GAAG,CAACnD,IAAI,EAAEyX,eAAe,CAAC;EAC9C;EACAC,oBAAoBA,CAAC1X,IAAI,EAAE;IACvB,MAAMyU,IAAI,GAAGsB,iBAAiB,CAACG,cAAc,CAAClW,IAAI,CAAC;IACnD,MAAMf,CAAC,GAAG,IAAI,CAACgX,UAAU,CAAC3S,GAAG,CAACtD,IAAI,CAAC;IACnC,IAAIf,CAAC,IAAI,IAAI,EAAE;MACX,OAAOd,OAAO,CAACC,OAAO,CAAC,CAAC;IAC5B;IACA,OAAOa,CAAC,CAACN,IAAI,CAAE4K,CAAC,IAAK;MAAE,OAAO,IAAI,CAACtL,KAAK,CAACuD,GAAG,CAAC,MAAM;QAAE+H,CAAC,CAACoO,OAAO,CAAClD,IAAI,CAAC;MAAE,CAAC,CAAC;IAAE,CAAC,CAAC;EAChF;EACAmD,mBAAmBA,CAAC5X,IAAI,EAAE;IACtB,OAAO9E,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,MAAM,IAAI,CAACwS,YAAY,CAAC3N,YAAY,CAAC,CAAC;MACtC,MAAM0W,KAAK,GAAGV,iBAAiB,CAACS,aAAa,CAACxW,IAAI,CAAC;MACnD,MAAMf,CAAC,GAAG,IAAI,CAACgX,UAAU,CAAC3S,GAAG,CAACtD,IAAI,CAAC;MACnC,IAAIf,CAAC,IAAI,IAAI,EAAE;QACX;MACJ;MACA,OAAOA,CAAC,CAACN,IAAI,CAAC4K,CAAC,IAAI,IAAI,CAACtL,KAAK,CAACuD,GAAG,CAAC,MAAM+H,CAAC,CAACrK,UAAU,CAAC;QAAEuX,KAAK,EAAEA;MAAM,CAAC,CAAC,CAAC,CAAC;IAC5E,CAAC,CAAC;EACN;EACAoB,kBAAkBA,CAAC7X,IAAI,EAAEhB,OAAO,EAAE;IAC9B,OAAO,IAAI,CAACiX,UAAU,CAAC3S,GAAG,CAACtD,IAAI,CAAC,CAACrB,IAAI,CAAE4K,CAAC,IAAK;MAAEA,CAAC,CAACrK,UAAU,CAACF,OAAO,CAAC;IAAE,CAAC,CAAC;EAC5E;EACA8Y,cAAcA,CAAC9X,IAAI,EAAE;IACjB,MAAMf,CAAC,GAAG,IAAI,CAACgX,UAAU,CAAC3S,GAAG,CAACtD,IAAI,CAAC;IACnC,IAAIf,CAAC,IAAI,IAAI,EAAE;MACX,OAAOd,OAAO,CAACC,OAAO,CAAC,CAAC;IAC5B;IACA,OAAOa,CAAC,CAACN,IAAI,CAAE4K,CAAC,IAAK;MACjB,OAAO,IAAI,CAACtL,KAAK,CAACuD,GAAG,CAAC,MAAM;QACxB+H,CAAC,CAACrJ,MAAM,CAAC,IAAI,CAAC;QACd,IAAI,CAAC+V,UAAU,CAACzS,MAAM,CAACxD,IAAI,CAAC;MAChC,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EACA+X,UAAUA,CAACC,WAAW,EAAE;IACpB,OAAO9c,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,MAAM+c,QAAQ,GAAG,MAAM,IAAI,CAAChC,UAAU,CAAC3S,GAAG,CAAC0U,WAAW,CAAC;MACvD,OAAOC,QAAQ,CAAChD,OAAO,CAAC,CAAC;IAC7B,CAAC,CAAC;EACN;EACAA,OAAOA,CAAC+C,WAAW,EAAE;IACjB,OAAO9c,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,OAAO,CAAC,MAAM,IAAI,CAAC6c,UAAU,CAACC,WAAW,CAAC,EAAE9E,QAAQ,CAAC,CAAC;IAC1D,CAAC,CAAC;EACN;EACA7M,qBAAqBA,CAACjF,SAAS,EAAEpB,IAAI,EAAE;IACnC,OAAO,IAAIzD,UAAU,CAAE8E,QAAQ,IAAK;MAChC,IAAI,CAAC4U,UAAU,CAAC3S,GAAG,CAACtD,IAAI,CAAC,CAACrB,IAAI,CAAE4K,CAAC,IAAK;QAClCA,CAAC,CAACjI,WAAW,CAACF,SAAS,EAAGmF,CAAC,IAAK,IAAI,CAACtI,KAAK,CAACuD,GAAG,CAAC,MAAMH,QAAQ,CAACI,IAAI,CAAC8E,CAAC,CAAC,CAAC,CAAC;MAC3E,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EACA6O,yBAAyBA,CAACpV,IAAI,EAAE;IAC5B,OAAO9E,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,MAAMgd,OAAO,GAAG,MAAM,IAAI,CAACH,UAAU,CAAC/X,IAAI,CAAC;MAC3C,OAAO4S,wBAAwB,CAACsF,OAAO,CAAC;IAC5C,CAAC,CAAC;EACN;AACJ,CAAC;AACDlC,eAAe,CAACpT,cAAc,GAAG,MAAM,CACnC;EAAEC,IAAI,EAAE/E;AAAqB,CAAC,EAC9B;EAAE+E,IAAI,EAAEzH;AAAO,CAAC,CACnB;AACD4a,eAAe,GAAGD,iBAAiB,GAAGhb,UAAU,CAAC,CAC7CI,UAAU,CAAC,CAAC,EACZH,UAAU,CAAC,mBAAmB,EAAE,CAAC8C,oBAAoB,EAAE1C,MAAM,CAAC,CAAC,CAClE,EAAE4a,eAAe,CAAC;AAEnB,IAAImC,gBAAgB,GAAG,MAAMA,gBAAgB,CAAC;EAC1Cpa,WAAWA,CAAC2G,WAAW,EAAEzG,KAAK,EAAE;IAC5B,IAAI,CAACyG,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACzG,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACma,WAAW,GAAG,IAAItZ,GAAG,CAAC,CAAC;EAChC;EACAuZ,YAAYA,CAACC,SAAS,EAAE;IACpB,IAAI,CAACF,WAAW,CAACjV,GAAG,CAACmV,SAAS,EAAE,IAAI,CAAC5T,WAAW,CAAC9E,eAAe,CAAC;MAC7DsM,MAAM,EAAE;QACJqM,KAAK,EAAED,SAAS,CAACC,KAAK;QACtBC,IAAI,EAAEF,SAAS,CAACE,IAAI;QACpBC,KAAK,EAAEH,SAAS,CAACG,KAAK;QACtBC,IAAI,EAAEJ,SAAS,CAACI;MACpB,CAAC;MACDvT,SAAS,EAAEmT,SAAS,CAACnT,SAAS;MAC9BC,SAAS,EAAEkT,SAAS,CAAClT,SAAS;MAC9BC,QAAQ,EAAEiT,SAAS,CAACjT,QAAQ;MAC5BC,SAAS,EAAEgT,SAAS,CAAChT,SAAS;MAC9BC,WAAW,EAAE+S,SAAS,CAAC/S,WAAW;MAClCE,WAAW,EAAE6S,SAAS,CAAC7S,WAAW;MAClCC,aAAa,EAAE4S,SAAS,CAAC5S,aAAa;MACtCjG,cAAc,EAAE6Y,SAAS,CAAC7Y,cAAc;MACxCkG,YAAY,EAAE2S,SAAS,CAAC3S,YAAY;MACpC/E,OAAO,EAAE0X,SAAS,CAAC1X,OAAO;MAC1BgF,MAAM,EAAE0S,SAAS,CAAC1S;IACtB,CAAC,CAAC,CAAC;EACP;EACA;AACJ;AACA;EACI+S,eAAeA,CAACL,SAAS,EAAE;IACvB,OAAO,IAAI,CAACF,WAAW,CAAC9U,GAAG,CAACgV,SAAS,CAAC,CAAC3Z,IAAI,CAAEia,CAAC,IAAK;MAC/CA,CAAC,CAAC1Y,MAAM,CAAC,IAAI,CAAC;MACd,IAAI,CAACkY,WAAW,CAAC5U,MAAM,CAAC8U,SAAS,CAAC;IACtC,CAAC,CAAC;EACN;EACApZ,UAAUA,CAACoZ,SAAS,EAAEtZ,OAAO,EAAE;IAC3B,OAAO,IAAI,CAACoZ,WAAW,CAAC9U,GAAG,CAACgV,SAAS,CAAC,CAAC3Z,IAAI,CAAEia,CAAC,IAAKA,CAAC,CAAC1Z,UAAU,CAACF,OAAO,CAAC,CAAC;EAC7E;EACA8C,SAASA,CAACwW,SAAS,EAAE;IACjB,OAAO,IAAI,CAACF,WAAW,CAAC9U,GAAG,CAACgV,SAAS,CAAC,CAAC3Z,IAAI,CAAEia,CAAC,IAAKA,CAAC,CAAC9W,SAAS,CAAC,CAAC,CAAC;EACrE;EACA+W,SAASA,CAACP,SAAS,EAAE;IACjB,OAAO,IAAI,CAACF,WAAW,CAAC9U,GAAG,CAACgV,SAAS,CAAC,CAAC3Z,IAAI,CAAEia,CAAC,IAAK;MAC/C,OAAOA,CAAC,CAACC,SAAS,CAAC;QACfN,KAAK,EAAED,SAAS,CAACC,KAAK;QACtBC,IAAI,EAAEF,SAAS,CAACE,IAAI;QACpBC,KAAK,EAAEH,SAAS,CAACG,KAAK;QACtBC,IAAI,EAAEJ,SAAS,CAACI;MACpB,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EACA1S,WAAWA,CAACsS,SAAS,EAAE;IACnB,OAAO,IAAI,CAACF,WAAW,CAAC9U,GAAG,CAACgV,SAAS,CAAC,CAAC3Z,IAAI,CAAEia,CAAC,IAAK;MAC/C,OAAOA,CAAC,CAAC5S,WAAW,CAACsS,SAAS,CAACjT,QAAQ,CAAC;IAC5C,CAAC,CAAC;EACN;EACAY,YAAYA,CAACqS,SAAS,EAAE;IACpB,OAAO,IAAI,CAACF,WAAW,CAAC9U,GAAG,CAACgV,SAAS,CAAC,CAAC3Z,IAAI,CAAEia,CAAC,IAAK;MAC/C,OAAOA,CAAC,CAAC3S,YAAY,CAACqS,SAAS,CAAClT,SAAS,CAAC;IAC9C,CAAC,CAAC;EACN;EACAc,UAAUA,CAACoS,SAAS,EAAE;IAClB,OAAO,IAAI,CAACF,WAAW,CAAC9U,GAAG,CAACgV,SAAS,CAAC,CAAC3Z,IAAI,CAAEia,CAAC,IAAK;MAC/C,OAAOA,CAAC,CAAC1S,UAAU,CAACoS,SAAS,CAAC1X,OAAO,CAAC;IAC1C,CAAC,CAAC;EACN;EACAyF,qBAAqBA,CAACjF,SAAS,EAAEkX,SAAS,EAAE;IACxC,OAAO/b,UAAU,CAACuc,MAAM,CAAEzX,QAAQ,IAAK;MACnC,IAAIiF,QAAQ,GAAG,IAAI;MACnB,IAAI,CAAC8R,WAAW,CAAC9U,GAAG,CAACgV,SAAS,CAAC,CAAC3Z,IAAI,CAAEia,CAAC,IAAK;QACxCtS,QAAQ,GAAGsS,CAAC,CAACtX,WAAW,CAACF,SAAS,EAAGmF,CAAC,IAAK,IAAI,CAACtI,KAAK,CAACuD,GAAG,CAAC,MAAMH,QAAQ,CAACI,IAAI,CAAC8E,CAAC,CAAC,CAAC,CAAC;MACtF,CAAC,CAAC;MACF,OAAO,MAAM;QACT,IAAID,QAAQ,KAAK,IAAI,EAAE;UACnBA,QAAQ,CAACE,MAAM,CAAC,CAAC;QACrB;MACJ,CAAC;IACL,CAAC,CAAC;EACN;AACJ,CAAC;AACD2R,gBAAgB,CAACvV,cAAc,GAAG,MAAM,CACpC;EAAEC,IAAI,EAAE/E;AAAqB,CAAC,EAC9B;EAAE+E,IAAI,EAAEzH;AAAO,CAAC,CACnB;AACD+c,gBAAgB,GAAGpd,UAAU,CAAC,CAC1BI,UAAU,CAAC,CAAC,EACZH,UAAU,CAAC,mBAAmB,EAAE,CAAC8C,oBAAoB,EAAE1C,MAAM,CAAC,CAAC,CAClE,EAAE+c,gBAAgB,CAAC;AAEpB,IAAIY,QAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,MAAM,GAAGD,QAAQ,GAAG,MAAMC,MAAM,CAAC;EACjCjb,WAAWA,CAACkb,KAAK,EAAEvL,YAAY,EAAEwL,WAAW,EAAEnM,iBAAiB,EAAE9O,KAAK,EAAE;IACpE,IAAI,CAACgb,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACvL,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACwL,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACnM,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAAC9O,KAAK,GAAGA,KAAK;IAClB;AACR;AACA;IACQ,IAAI,CAACiH,SAAS,GAAG,CAAC;IAClB;AACR;AACA;IACQ,IAAI,CAACF,QAAQ,GAAG,CAAC;IACjB;AACR;AACA;IACQ,IAAI,CAAC/C,IAAI,GAAG,CAAC;IACb;AACR;AACA;IACQ;IACA,IAAI,CAACmD,SAAS,GAAG,IAAI;IACrB;AACR;AACA;IACQ,IAAI,CAAC+T,sBAAsB,GAAG,KAAK;IACnC;AACR;AACA;AACA;IACQ,IAAI,CAACC,gBAAgB,GAAG,KAAK;IAC7B;AACR;AACA;IACQ,IAAI,CAACC,WAAW,GAAG,IAAI;IACvB;AACR;AACA;AACA;IACQ,IAAI,CAACC,iBAAiB,GAAG,IAAI;IAC7B;AACR;AACA;AACA;IACQ,IAAI,CAACC,MAAM,GAAG,EAAE;IAChB;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACC,UAAU,GAAG,KAAK;IACvB;AACR;AACA;AACA;IACQ,IAAI,CAACjX,SAAS,GAAG,KAAK;IACtB;AACR;AACA;IACQ,IAAI,CAACkX,YAAY,GAAG,KAAK;IACzB;AACR;AACA;IACQ,IAAI,CAACC,cAAc,GAAG,KAAK;IAC3B;AACR;AACA;IACQ,IAAI,CAACC,UAAU,GAAG,KAAK;IACvB;AACR;AACA;IACQ,IAAI,CAACC,aAAa,GAAG,KAAK;IAC1B;AACR;AACA;IACQ,IAAI,CAACC,iBAAiB,GAAG,KAAK;IAC9B;AACR;AACA;IACQ,IAAI,CAACC,SAAS,GAAG,SAAS;IAC1B;AACR;AACA;AACA;IACQ,IAAI,CAACC,cAAc,GAAG,IAAI;IAC1B;AACR;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACC,qBAAqB,GAAG,IAAI;IACjC;AACR;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACC,eAAe,GAAG,MAAM;IAC7B;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACC,IAAI,GAAG,CAAC;IACb,IAAI,CAACC,wBAAwB,GAAG,EAAE;IAClC;AACR;AACA;AACA;IACQ,IAAI,CAACC,QAAQ,GAAG,IAAI7e,YAAY,CAAC,CAAC;IAClC;AACR;AACA;AACA;IACQ,IAAI,CAAC8e,aAAa,GAAG,IAAI9e,YAAY,CAAC,CAAC;IACvC;AACR;AACA;AACA;IACQ,IAAI,CAAC+e,WAAW,GAAG,IAAI/e,YAAY,CAAC,CAAC;IACrC;AACR;AACA;IACQ,IAAI,CAACoL,YAAY,GAAG,IAAIpL,YAAY,CAAC,CAAC;IACtC;AACR;AACA;IACQ,IAAI,CAACgf,YAAY,GAAG,IAAIhf,YAAY,CAAC,CAAC;IACtC;AACR;AACA;IACQ,IAAI,CAACif,eAAe,GAAG,IAAIjf,YAAY,CAAC,CAAC;IACzC;AACR;AACA;IACQ,IAAI,CAACkf,IAAI,GAAG,IAAIlf,YAAY,CAAC,CAAC;IAC9B;AACR;AACA;IACQ,IAAI,CAACmf,UAAU,GAAG,IAAInf,YAAY,CAAC,CAAC;IACpC;AACR;AACA;AACA;IACQ,IAAI,CAACof,QAAQ,GAAG,IAAIpf,YAAY,CAAC,CAAC;IAClC;AACR;AACA;IACQ,IAAI,CAACqf,WAAW,GAAG,IAAIrf,YAAY,CAAC,CAAC;EACzC;EACA;EACAyI,QAAQA,CAAA,EAAG;IACP,IAAIpG,gBAAgB,CAAC,IAAI,CAACsb,WAAW,CAAC,EAAE;MACpC;MACA;IACJ;IACA;IACA,MAAM2B,SAAS,GAAG,IAAI,CAAC5B,KAAK,CAAC5H,aAAa,CAACC,aAAa,CAAC,0BAA0B,CAAC;IACpF,IAAI,CAACwJ,gBAAgB,CAACD,SAAS,CAAC;EACpC;EACAC,gBAAgBA,CAACvc,EAAE,EAAE;IACjB,IAAI,CAACmP,YAAY,CAACpP,SAAS,CAACC,EAAE,EAAE;MAC5BuG,MAAM,EAAE;QAAEC,GAAG,EAAE,IAAI,CAACC,QAAQ,IAAI,CAAC;QAAEC,GAAG,EAAE,IAAI,CAACC,SAAS,IAAI;MAAE,CAAC;MAC7DjD,IAAI,EAAE,IAAI,CAACA,IAAI;MACf8Y,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBC,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBC,WAAW,EAAE,IAAI,CAACA,WAAW;MAC7B7B,gBAAgB,EAAE,IAAI,CAACA,gBAAgB;MACvCD,sBAAsB,EAAE,IAAI,CAACA,sBAAsB;MACnDE,WAAW,EAAE,IAAI,CAACA,WAAW;MAC7B6B,eAAe,EAAE,IAAI,CAACA,eAAe;MACrC9V,SAAS,EAAE,IAAI,CAACA,SAAS;MACzB+V,eAAe,EAAE,IAAI,CAACA,eAAe;MACrCC,cAAc,EAAE,IAAI,CAACA,cAAc;MACnC9B,iBAAiB,EAAE,IAAI,CAACA,iBAAiB;MACzCC,MAAM,EAAE,IAAI,CAACA,MAAM;MACnB8B,WAAW,EAAE,IAAI,CAACA,WAAW;MAC7BC,kBAAkB,EAAE,IAAI,CAACA,kBAAkB;MAC3CC,iBAAiB,EAAE,IAAI,CAACA,iBAAiB;MACzCC,wBAAwB,EAAE,IAAI,CAACA,wBAAwB;MACvD/B,YAAY,EAAE,IAAI,CAACA,YAAY;MAC/BgC,mBAAmB,EAAE,IAAI,CAACA,mBAAmB;MAC7C/B,cAAc,EAAE,IAAI,CAACA,cAAc;MACnCgC,qBAAqB,EAAE,IAAI,CAACA,qBAAqB;MACjD/B,UAAU,EAAE,IAAI,CAACA,UAAU;MAC3BgC,iBAAiB,EAAE,IAAI,CAACA,iBAAiB;MACzC/B,aAAa,EAAE,IAAI,CAACA,aAAa;MACjCgC,oBAAoB,EAAE,IAAI,CAACA,oBAAoB;MAC/C/B,iBAAiB,EAAE,IAAI,CAACA,iBAAiB;MACzCgC,wBAAwB,EAAE,IAAI,CAACA,wBAAwB;MACvD/B,SAAS,EAAE,IAAI,CAACA,SAAS;MACzBC,cAAc,EAAE,IAAI,CAACA,cAAc;MACnCE,eAAe,EAAE,IAAI,CAACA,eAAe;MACrCC,IAAI,EAAE,IAAI,CAACA,IAAI;MACf4B,WAAW,EAAE,IAAI,CAACA;IACtB,CAAC,CAAC,CACGnd,IAAI,CAAC,MAAM,IAAI,CAAC+O,YAAY,CAAC3N,YAAY,CAAC,CAAC,CAAC,CAC5CpB,IAAI,CAACtB,GAAG,IAAI,IAAI,CAACsd,QAAQ,CAAClS,IAAI,CAACpL,GAAG,CAAC,CAAC;IACzC;IACA,IAAI,CAAC0e,sBAAsB,CAAC,CAAC;IAC7B,IAAI,CAACC,oBAAoB,CAAC,CAAC;IAC3B,IAAI,CAACC,qBAAqB,CAAC,CAAC;IAC5B,IAAI,CAACC,mBAAmB,CAAC,CAAC;IAC1B,IAAI,CAACC,sBAAsB,CAAC,CAAC;IAC7B,IAAI,CAACC,uBAAuB,CAAC,CAAC;IAC9B,IAAI,CAACC,gBAAgB,CAAC,CAAC;EAC3B;EACA;EACAhY,WAAWA,CAAA,EAAG;IACV;IACA,IAAI,CAAC8V,wBAAwB,CAACjS,OAAO,CAAES,CAAC,IAAKA,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;IAC7D;IACA,IAAI,CAAC8E,YAAY,CAAChM,sBAAsB,CAAC,CAAC;IAC1C,IAAI,IAAI,CAAC4a,sBAAsB,EAAE;MAC7B,IAAI,CAACA,sBAAsB,CAAC1T,WAAW,CAAC,CAAC;IAC7C;EACJ;EACA;EACA3E,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACqY,wBAAwB,CAACrY,OAAO,CAAC;IACtC,IAAI,CAACsY,eAAe,CAACtY,OAAO,CAAC;EACjC;EACAqY,wBAAwBA,CAACrY,OAAO,EAAE;IAC9B,IAAIlF,OAAO,GAAG,CAAC,CAAC;IAChB,IAAI4I,UAAU,GAAGtD,MAAM,CAACuD,IAAI,CAAC3D,OAAO,CAAC,CAAC4D,MAAM,CAACC,CAAC,IAAIgR,QAAQ,CAAC0D,qBAAqB,CAACxU,OAAO,CAACF,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IACnGH,UAAU,CAACM,OAAO,CAAEH,CAAC,IAAK;MAAE/I,OAAO,CAAC+I,CAAC,CAAC,GAAG7D,OAAO,CAAC6D,CAAC,CAAC,CAAC5D,YAAY;IAAE,CAAC,CAAC;IACpE,IAAI,CAACuJ,YAAY,CAAC3O,aAAa,CAACC,OAAO,CAAC;EAC5C;EACA;AACJ;AACA;AACA;AACA;EACI0d,aAAaA,CAACC,QAAQ,GAAG,IAAI,EAAE;IAC3B;IACA;IACA;IACA,OAAO,IAAIxe,OAAO,CAAEC,OAAO,IAAK;MAC5Bwe,UAAU,CAAC,MAAM;QACb,OAAO,IAAI,CAAClP,YAAY,CAAChL,eAAe,CAAC,QAAQ,CAAC,CAAC/D,IAAI,CAAC,MAAM;UAC1D,IAAIge,QAAQ,EAAE;YACV,IAAI,CAACpa,SAAS,IAAI,IAAI,GAAG,IAAI,CAACsa,UAAU,CAAC,CAAC,GAAG,IAAI,CAACC,UAAU,CAAC,CAAC;UAClE;UACA1e,OAAO,CAAC,CAAC;QACb,CAAC,CAAC;MACN,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EACAoe,eAAeA,CAACtY,OAAO,EAAE;IACrB,IAAIA,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,IAAIA,OAAO,CAAC,WAAW,CAAC,IAAI,IAAI,IAC3D,CAACA,OAAO,CAAC,WAAW,CAAC,EAAE;MACvB;MACA;IACJ;IACA;IACA,IAAI,WAAW,IAAIA,OAAO,EAAE;MACxB,IAAI,CAAC2Y,UAAU,CAAC,CAAC;MACjB;IACJ;IACA,IAAI,OAAO,IAAI,CAAC7X,QAAQ,KAAK,QAAQ,IAAI,OAAO,IAAI,CAACE,SAAS,KAAK,QAAQ,EAAE;MACzE;IACJ;IACA,IAAI,CAAC4X,UAAU,CAAC,CAAC;EACrB;EACAA,UAAUA,CAAA,EAAG;IACT,IAAIC,SAAS,GAAG;MACZhY,GAAG,EAAE,IAAI,CAACC,QAAQ;MAClBC,GAAG,EAAE,IAAI,CAACC;IACd,CAAC;IACD,IAAI,IAAI,CAACsU,UAAU,EAAE;MACjB,IAAI,CAAC9L,YAAY,CAACvL,KAAK,CAAC4a,SAAS,CAAC;IACtC,CAAC,MACI;MACD,IAAI,CAACrP,YAAY,CAAC9L,SAAS,CAACmb,SAAS,CAAC;IAC1C;EACJ;EACAF,UAAUA,CAAA,EAAG;IACT,QAAQ,IAAI,CAACta,SAAS;MAClB,KAAK,IAAI;QACL,IAAI,CAACya,4BAA4B,CAAC,CAAC;QACnC;MACJ,KAAK,KAAK;QACN,IAAI,IAAI,CAACV,sBAAsB,EAAE;UAC7B,IAAI,CAACA,sBAAsB,CAAC1T,WAAW,CAAC,CAAC;QAC7C;QACA;MACJ;QACI,IAAI,CAACuE,aAAa,CAAC,IAAI,CAAC5K,SAAS,EAAE,IAAI,CAAC0a,gBAAgB,CAAC;IACjE;EACJ;EACAD,4BAA4BA,CAAA,EAAG;IAC3B,IAAI,CAAC/e,KAAK,CAACQ,iBAAiB,CAAC,MAAM;MAC/B,IAAI,CAAC6d,sBAAsB,GAAG,IAAI,CAACvP,iBAAiB,CAACH,UAAU,CAAC,CAAC,CAACrE,SAAS,CAAC6D,CAAC,IAAI;QAC7E,IAAI,CAACnO,KAAK,CAACuD,GAAG,CAAC,MAAM,IAAI,CAAC2L,aAAa,CAACf,CAAC,EAAE,IAAI,CAAC6Q,gBAAgB,CAAC,CAAC;MACtE,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EACA9P,aAAaA,CAACjB,MAAM,EAAE1J,OAAO,EAAE;IAC3B,IAAI,CAAC0J,MAAM,EAAE;MACT;IACJ;IACA,IAAI,IAAI,CAACgR,sBAAsB,CAAChR,MAAM,CAAC,IAAI,OAAOtN,MAAM,KAAK,WAAW,IAAIA,MAAM,IAAIA,MAAM,CAACC,IAAI,IAAID,MAAM,CAACC,IAAI,CAACsN,YAAY,EAAE;MAC3H,MAAMgR,SAAS,GAAG,IAAIve,MAAM,CAACC,IAAI,CAACsN,YAAY,CAAC,CAAC;MAChDgR,SAAS,CAACC,KAAK,CAAClR,MAAM,CAAC;MACvBA,MAAM,GAAGiR,SAAS;IACtB;IACA,IAAI,IAAI,CAAC3D,UAAU,EAAE;MACjB,IAAI,CAAC9L,YAAY,CAACjL,WAAW,CAACyJ,MAAM,EAAE1J,OAAO,CAAC;MAC9C;IACJ;IACA,IAAI,CAACkL,YAAY,CAACnL,SAAS,CAAC2J,MAAM,EAAE1J,OAAO,CAAC;EAChD;EACA0a,sBAAsBA,CAAChR,MAAM,EAAE;IAC3B,OAAOA,MAAM,IAAI,IAAI,IAAIA,MAAM,CAACG,MAAM,KAAKgR,SAAS;EACxD;EACAtB,sBAAsBA,CAAA,EAAG;IACrB,MAAMpT,CAAC,GAAG,IAAI,CAAC+E,YAAY,CAACvM,mBAAmB,CAAC,gBAAgB,CAAC,CAACoH,SAAS,CAAC,MAAM;MAC9E,IAAI,CAACmF,YAAY,CAACxL,SAAS,CAAC,CAAC,CAACvD,IAAI,CAAEmG,MAAM,IAAK;QAC3C,IAAI,CAACE,QAAQ,GAAGF,MAAM,CAACC,GAAG,CAAC,CAAC;QAC5B,IAAI,CAACG,SAAS,GAAGJ,MAAM,CAACG,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC0B,YAAY,CAAC8B,IAAI,CAAC;UAAE1D,GAAG,EAAE,IAAI,CAACC,QAAQ;UAAEC,GAAG,EAAE,IAAI,CAACC;QAAU,CAAC,CAAC;MACvE,CAAC,CAAC;IACN,CAAC,CAAC;IACF,IAAI,CAACiV,wBAAwB,CAAC7R,IAAI,CAACK,CAAC,CAAC;EACzC;EACAuT,mBAAmBA,CAAA,EAAG;IAClB,MAAMvT,CAAC,GAAG,IAAI,CAAC+E,YAAY,CAACvM,mBAAmB,CAAC,gBAAgB,CAAC,CAACoH,SAAS,CAAC,MAAM;MAC9E,IAAI,CAACmF,YAAY,CAAC5L,SAAS,CAAC,CAAC,CAACnD,IAAI,CAAEuN,MAAM,IAAK;QAAE,IAAI,CAACqO,YAAY,CAAC9R,IAAI,CAACyD,MAAM,CAAC;MAAE,CAAC,CAAC;IACvF,CAAC,CAAC;IACF,IAAI,CAACiO,wBAAwB,CAAC7R,IAAI,CAACK,CAAC,CAAC;EACzC;EACAwT,sBAAsBA,CAAA,EAAG;IACrB,MAAMxT,CAAC,GAAG,IAAI,CAAC+E,YAAY,CAACvM,mBAAmB,CAAC,mBAAmB,CAAC,CAACoH,SAAS,CAAC,MAAM;MACjF,IAAI,CAACmF,YAAY,CAAC3L,YAAY,CAAC,CAAC,CAACpD,IAAI,CAAEmb,SAAS,IAAK;QAAE,IAAI,CAACU,eAAe,CAAC/R,IAAI,CAACqR,SAAS,CAAC;MAAE,CAAC,CAAC;IACnG,CAAC,CAAC;IACF,IAAI,CAACK,wBAAwB,CAAC7R,IAAI,CAACK,CAAC,CAAC;EACzC;EACAqT,oBAAoBA,CAAA,EAAG;IACnB,MAAMrT,CAAC,GAAG,IAAI,CAAC+E,YAAY,CAACvM,mBAAmB,CAAC,cAAc,CAAC,CAACoH,SAAS,CAAC,MAAM;MAC5E,IAAI,CAACmF,YAAY,CAAC7L,OAAO,CAAC,CAAC,CAAClD,IAAI,CAAE2e,CAAC,IAAK;QACpC,IAAI,CAACrb,IAAI,GAAGqb,CAAC;QACb,IAAI,CAAC5C,UAAU,CAACjS,IAAI,CAAC6U,CAAC,CAAC;MAC3B,CAAC,CAAC;IACN,CAAC,CAAC;IACF,IAAI,CAACnD,wBAAwB,CAAC7R,IAAI,CAACK,CAAC,CAAC;EACzC;EACA0T,gBAAgBA,CAAA,EAAG;IACf,MAAM1T,CAAC,GAAG,IAAI,CAAC+E,YAAY,CAACvM,mBAAmB,CAAC,MAAM,CAAC,CAACoH,SAAS,CAAC,MAAM;MAAE,IAAI,CAACkS,IAAI,CAAChS,IAAI,CAAC,KAAK,CAAC,CAAC;IAAE,CAAC,CAAC;IACpG,IAAI,CAAC0R,wBAAwB,CAAC7R,IAAI,CAACK,CAAC,CAAC;EACzC;EACAyT,uBAAuBA,CAAA,EAAG;IACtB,MAAMzT,CAAC,GAAG,IAAI,CAAC+E,YAAY,CAACvM,mBAAmB,CAAC,aAAa,CAAC,CAACoH,SAAS,CAAC,MAAM,IAAI,CAACqS,WAAW,CAACnS,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IAC7G,IAAI,CAAC0R,wBAAwB,CAAC7R,IAAI,CAACK,CAAC,CAAC;EACzC;EACAsT,qBAAqBA,CAAA,EAAG;IACpB,MAAM7T,MAAM,GAAG,CACX;MAAE0C,IAAI,EAAE,OAAO;MAAEyS,OAAO,EAAE,IAAI,CAACnD;IAAS,CAAC,EACzC;MAAEtP,IAAI,EAAE,YAAY;MAAEyS,OAAO,EAAE,IAAI,CAAClD;IAAc,CAAC,EACnD;MAAEvP,IAAI,EAAE,UAAU;MAAEyS,OAAO,EAAE,IAAI,CAACjD;IAAY,CAAC,CAClD;IACDlS,MAAM,CAACF,OAAO,CAAE3B,CAAC,IAAK;MAClB,MAAMoC,CAAC,GAAG,IAAI,CAAC+E,YAAY,CAACvM,mBAAmB,CAACoF,CAAC,CAACuE,IAAI,CAAC,CAACvC,SAAS,CAAE5G,KAAK,IAAK;QACzE,IAAI6G,KAAK,GAAG;UACRE,MAAM,EAAE;YACJ3D,GAAG,EAAEpD,KAAK,CAACX,MAAM,CAAC+D,GAAG,CAAC,CAAC;YACvBE,GAAG,EAAEtD,KAAK,CAACX,MAAM,CAACiE,GAAG,CAAC;UAC1B,CAAC;UACDuY,OAAO,EAAE7b,KAAK,CAAC6b;QACnB,CAAC;QACD;QACA,IAAIhV,KAAK,CAACgV,OAAO,IAAI,CAAC,IAAI,CAACxD,qBAAqB,EAAE;UAC9CrY,KAAK,CAAC8b,IAAI,CAAC,CAAC;QAChB;QACAlX,CAAC,CAACgX,OAAO,CAAC9U,IAAI,CAACD,KAAK,CAAC;MACzB,CAAC,CAAC;MACF,IAAI,CAAC2R,wBAAwB,CAAC7R,IAAI,CAACK,CAAC,CAAC;IACzC,CAAC,CAAC;EACN;AACJ,CAAC;AACD;AACA;AACA;AACAqQ,MAAM,CAACyD,qBAAqB,GAAG,CAC3B,wBAAwB,EAAE,aAAa,EAAE,WAAW,EAAE,iBAAiB,EAAE,gBAAgB,EACzF,mBAAmB,EAAE,aAAa,EAAE,oBAAoB,EAAE,QAAQ,EAAE,mBAAmB,EACvF,0BAA0B,EAAE,MAAM,EAAE,gBAAgB,EAAE,uBAAuB,EAAE,SAAS,EACxF,SAAS,EAAE,YAAY,EAAE,mBAAmB,EAAE,eAAe,EAAE,sBAAsB,EACrF,mBAAmB,EAAE,0BAA0B,EAAE,cAAc,EAAE,qBAAqB,EACtF,WAAW,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,MAAM,EAAE,aAAa,CAC1E;AACDzD,MAAM,CAACpW,cAAc,GAAG,MAAM,CAC1B;EAAEC,IAAI,EAAEnH;AAAW,CAAC,EACpB;EAAEmH,IAAI,EAAE/E;AAAqB,CAAC,EAC9B;EAAE+E,IAAI,EAAEyB,MAAM;EAAEkJ,UAAU,EAAE,CAAC;IAAE3K,IAAI,EAAEjH,MAAM;IAAE8hB,IAAI,EAAE,CAAC7hB,WAAW;EAAG,CAAC;AAAE,CAAC,EACtE;EAAEgH,IAAI,EAAE4I;AAAiB,CAAC,EAC1B;EAAE5I,IAAI,EAAEzH;AAAO,CAAC,CACnB;AACDL,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0U,MAAM,CAACzU,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AACzCxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0U,MAAM,CAACzU,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;AACxCxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0U,MAAM,CAACzU,SAAS,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;AACpCxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAEmQ,MAAM,CAACzU,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AACvCxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAEmQ,MAAM,CAACzU,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AACvCxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAEmQ,MAAM,CAACzU,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;AAC3CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,cAAc,CAAC,EACrBL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0U,MAAM,CAACzU,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AACzCxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0U,MAAM,CAACzU,SAAS,EAAE,wBAAwB,EAAE,KAAK,CAAC,CAAC;AACtDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0U,MAAM,CAACzU,SAAS,EAAE,kBAAkB,EAAE,KAAK,CAAC,CAAC;AAChDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0U,MAAM,CAACzU,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;AAC3CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE8N,MAAM,CAAC,CACpC,EAAEkQ,MAAM,CAACzU,SAAS,EAAE,iBAAiB,EAAE,KAAK,CAAC,CAAC;AAC/CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE8N,MAAM,CAAC,CACpC,EAAEkQ,MAAM,CAACzU,SAAS,EAAE,iBAAiB,EAAE,KAAK,CAAC,CAAC;AAC/CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE8N,MAAM,CAAC,CACpC,EAAEkQ,MAAM,CAACzU,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;AAC9CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0U,MAAM,CAACzU,SAAS,EAAE,mBAAmB,EAAE,KAAK,CAAC,CAAC;AACjDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE0W,OAAO,CAAC,CACrC,EAAEsH,MAAM,CAACzU,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;AAC3CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0U,MAAM,CAACzU,SAAS,EAAE,oBAAoB,EAAE,KAAK,CAAC,CAAC;AAClDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE2iB,KAAK,CAAC,CACnC,EAAE3E,MAAM,CAACzU,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;AACtCxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0U,MAAM,CAACzU,SAAS,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;AAC1CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE0W,OAAO,CAAC,CACrC,EAAEsH,MAAM,CAACzU,SAAS,EAAE,mBAAmB,EAAE,KAAK,CAAC,CAAC;AACjDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0U,MAAM,CAACzU,SAAS,EAAE,0BAA0B,EAAE,KAAK,CAAC,CAAC;AACxDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0U,MAAM,CAACzU,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AACzCxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0U,MAAM,CAACzU,SAAS,EAAE,kBAAkB,EAAE,KAAK,CAAC,CAAC;AAChDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0U,MAAM,CAACzU,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;AAC5CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0U,MAAM,CAACzU,SAAS,EAAE,qBAAqB,EAAE,KAAK,CAAC,CAAC;AACnDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0U,MAAM,CAACzU,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;AAC9CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0U,MAAM,CAACzU,SAAS,EAAE,uBAAuB,EAAE,KAAK,CAAC,CAAC;AACrDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0U,MAAM,CAACzU,SAAS,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;AAC1CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0U,MAAM,CAACzU,SAAS,EAAE,mBAAmB,EAAE,KAAK,CAAC,CAAC;AACjDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0U,MAAM,CAACzU,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;AAC7CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0U,MAAM,CAACzU,SAAS,EAAE,sBAAsB,EAAE,KAAK,CAAC,CAAC;AACpDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0U,MAAM,CAACzU,SAAS,EAAE,mBAAmB,EAAE,KAAK,CAAC,CAAC;AACjDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0U,MAAM,CAACzU,SAAS,EAAE,0BAA0B,EAAE,KAAK,CAAC,CAAC;AACxDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE8N,MAAM,CAAC,CACpC,EAAEkQ,MAAM,CAACzU,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AACzCxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0U,MAAM,CAACzU,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;AAC9CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0U,MAAM,CAACzU,SAAS,EAAE,uBAAuB,EAAE,KAAK,CAAC,CAAC;AACrDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE8N,MAAM,CAAC,CACpC,EAAEkQ,MAAM,CAACzU,SAAS,EAAE,iBAAiB,EAAE,KAAK,CAAC,CAAC;AAC/CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0U,MAAM,CAACzU,SAAS,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;AACpCxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0U,MAAM,CAACzU,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;AAC3CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEyd,MAAM,CAACzU,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;AACxCxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEyd,MAAM,CAACzU,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;AAC7CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEyd,MAAM,CAACzU,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;AAC3CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEyd,MAAM,CAACzU,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;AAC5CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEyd,MAAM,CAACzU,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;AAC5CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEyd,MAAM,CAACzU,SAAS,EAAE,iBAAiB,EAAE,KAAK,CAAC,CAAC;AAC/CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEyd,MAAM,CAACzU,SAAS,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;AACpCxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEyd,MAAM,CAACzU,SAAS,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;AAC1CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEyd,MAAM,CAACzU,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;AACxCxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEyd,MAAM,CAACzU,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;AAC3CyU,MAAM,GAAGD,QAAQ,GAAGhe,UAAU,CAAC,CAC3BY,SAAS,CAAC;EACN6I,QAAQ,EAAE,SAAS;EACnBoZ,SAAS,EAAE,CACPnZ,aAAa,EACbsE,gBAAgB,EAChBA,gBAAgB,EAChB0C,gBAAgB,EAChB3N,oBAAoB,EACpB+R,iBAAiB,EACjB+B,eAAe,EACf9O,YAAY,EACZ2K,aAAa,EACb6G,cAAc,EACd0B,eAAe,EACfmC,gBAAgB,CACnB;EACD0F,IAAI,EAAE;IACF;IACA,mCAAmC,EAAE;EACzC,CAAC;EACDlM,QAAQ,EAAG;AACnB;AACA;AACA;AACA;AACA,GAAG;EACK4H,MAAM,EAAE,CAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACC,CAAC,CAAC,EACFte,OAAO,CAAC,CAAC,EAAEW,MAAM,CAACC,WAAW,CAAC,CAAC,EAC/Bb,UAAU,CAAC,mBAAmB,EAAE,CAACU,UAAU,EACvCoC,oBAAoB,EACpBwG,MAAM,EACNmH,gBAAgB,EAChBrQ,MAAM,CAAC,CAAC,CACf,EAAE4d,MAAM,CAAC;AAEV,IAAI8E,WAAW;AACf,IAAIC,QAAQ,GAAG,CAAC;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,SAAS,GAAGF,WAAW,GAAG,MAAME,SAAS,CAAC;EAC1CjgB,WAAWA,CAAC+R,cAAc,EAAE;IACxB,IAAI,CAACA,cAAc,GAAGA,cAAc;IACpC;AACR;AACA;IACQ;IACA,IAAI,CAAC1K,SAAS,GAAG,KAAK;IACtB;AACR;AACA;IACQ,IAAI,CAACxE,OAAO,GAAG,IAAI;IACnB;AACR;AACA;IACQ,IAAI,CAACqd,cAAc,GAAG,IAAI;IAC1B;AACR;AACA;IACQ,IAAI,CAAClP,OAAO,GAAG,CAAC;IAChB;AACR;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACnJ,MAAM,GAAG,CAAC;IACf;AACR;AACA;IACQ;IACA,IAAI,CAACT,SAAS,GAAG,IAAI;IACrB;AACR;AACA;AACA;AACA;IACQ,IAAI,CAAC+Y,eAAe,GAAG,IAAI3iB,YAAY,CAAC,CAAC;IACzC;AACR;AACA;IACQ,IAAI,CAAC4iB,WAAW,GAAG,IAAI5iB,YAAY,CAAC,CAAC;IACrC;AACR;AACA;IACQ,IAAI,CAAC6iB,cAAc,GAAG,IAAI7iB,YAAY,CAAC,CAAC;IACxC;AACR;AACA;IACQ,IAAI,CAAC8iB,gBAAgB,GAAG,IAAI9iB,YAAY,CAAC,CAAC;IAC1C;AACR;AACA;IACQ,IAAI,CAACyL,SAAS,GAAG,IAAIzL,YAAY,CAAC,CAAC;IACnC;AACR;AACA;IACQ,IAAI,CAACuL,IAAI,GAAG,IAAIvL,YAAY,CAAC,CAAC;IAC9B;AACR;AACA;IACQ,IAAI,CAACwL,OAAO,GAAG,IAAIxL,YAAY,CAAC,CAAC;IACjC;AACR;AACA;IACQ,IAAI,CAAC6L,SAAS,GAAG,IAAI7L,YAAY,CAAC,CAAC;IACnC;AACR;AACA;IACQ,IAAI,CAAC4L,QAAQ,GAAG,IAAI5L,YAAY,CAAC,CAAC;IAClC;IACA,IAAI,CAAC0U,UAAU,GAAG,IAAInU,SAAS,CAAC,CAAC;IACjC,IAAI,CAACwiB,oBAAoB,GAAG,KAAK;IACjC,IAAI,CAACnE,wBAAwB,GAAG,EAAE;IAClC,IAAI,CAACoE,kBAAkB,GAAG,IAAIzhB,aAAa,CAAC,CAAC,CAAC;IAC9C,IAAI,CAACgH,GAAG,GAAG,CAACia,QAAQ,EAAE,EAAEha,QAAQ,CAAC,CAAC;EACtC;EACA;EACAya,kBAAkBA,CAAA,EAAG;IACjB,IAAI,CAACC,sBAAsB,CAAC,CAAC;IAC7B,IAAI,CAACxO,UAAU,CAAC/L,OAAO,CAACqE,SAAS,CAAC,MAAM,IAAI,CAACkW,sBAAsB,CAAC,CAAC,CAAC;EAC1E;EACAA,sBAAsBA,CAAA,EAAG;IACrB,IAAI,IAAI,CAACxO,UAAU,CAAC9H,MAAM,GAAG,CAAC,EAAE;MAC5B,MAAM,IAAIuW,KAAK,CAAC,wCAAwC,CAAC;IAC7D;IACA,IAAI,CAACzO,UAAU,CAAC/H,OAAO,CAAC8F,MAAM,IAAI;MAC9BA,MAAM,CAACuC,UAAU,GAAG,IAAI;IAC5B,CAAC,CAAC;EACN;EACA;EACAtM,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,OAAO,IAAI,CAACc,QAAQ,KAAK,QAAQ,EAAE;MACnC,IAAI,CAACA,QAAQ,GAAG6D,MAAM,CAAC,IAAI,CAAC7D,QAAQ,CAAC;IACzC;IACA,IAAI,OAAO,IAAI,CAACE,SAAS,KAAK,QAAQ,EAAE;MACpC,IAAI,CAACA,SAAS,GAAG2D,MAAM,CAAC,IAAI,CAAC3D,SAAS,CAAC;IAC3C;IACA,IAAI,OAAO,IAAI,CAACF,QAAQ,KAAK,QAAQ,IAAI,OAAO,IAAI,CAACE,SAAS,KAAK,QAAQ,EAAE;MACzE;IACJ;IACA,IAAI,CAAC,IAAI,CAACoZ,oBAAoB,EAAE;MAC5B,IAAI,CAACxO,cAAc,CAACN,SAAS,CAAC,IAAI,CAAC;MACnC,IAAI,CAACmP,uBAAuB,CAAC,CAAC;MAC9B,IAAI,CAACL,oBAAoB,GAAG,IAAI;MAChC,IAAI,CAAC1T,kBAAkB,CAAC,CAAC;MACzB;IACJ;IACA,IAAI1G,OAAO,CAAC,UAAU,CAAC,IAAIA,OAAO,CAAC,WAAW,CAAC,EAAE;MAC7C,IAAI,CAAC4L,cAAc,CAAC7B,oBAAoB,CAAC,IAAI,CAAC;MAC9C,IAAI,CAAC0Q,uBAAuB,CAAC,CAAC;IAClC;IACA,IAAIza,OAAO,CAAC,OAAO,CAAC,EAAE;MAClB,IAAI,CAAC4L,cAAc,CAAC3B,WAAW,CAAC,IAAI,CAAC;IACzC;IACA,IAAIjK,OAAO,CAAC,OAAO,CAAC,EAAE;MAClB,IAAI,CAAC4L,cAAc,CAACxB,WAAW,CAAC,IAAI,CAAC;IACzC;IACA,IAAIpK,OAAO,CAAC,WAAW,CAAC,EAAE;MACtB,IAAI,CAAC4L,cAAc,CAACrB,eAAe,CAAC,IAAI,CAAC;IAC7C;IACA,IAAIvK,OAAO,CAAC,SAAS,CAAC,EAAE;MACpB,IAAI,CAAC4L,cAAc,CAACpB,UAAU,CAAC,IAAI,CAAC;IACxC;IACA,IAAIxK,OAAO,CAAC,SAAS,CAAC,EAAE;MACpB,IAAI,CAAC4L,cAAc,CAACjB,aAAa,CAAC,IAAI,CAAC;IAC3C;IACA,IAAI3K,OAAO,CAAC,SAAS,CAAC,EAAE;MACpB,IAAI,CAAC4L,cAAc,CAACd,aAAa,CAAC,IAAI,CAAC;IAC3C;IACA,IAAI9K,OAAO,CAAC,QAAQ,CAAC,EAAE;MACnB,IAAI,CAAC4L,cAAc,CAACb,YAAY,CAAC,IAAI,CAAC;IAC1C;IACA,IAAI/K,OAAO,CAAC,WAAW,CAAC,EAAE;MACtB,IAAI,CAAC4L,cAAc,CAACX,eAAe,CAAC,IAAI,CAAC;IAC7C;IACA,IAAIjL,OAAO,CAAC,WAAW,CAAC,EAAE;MACtB,IAAI,CAAC4L,cAAc,CAACT,eAAe,CAAC,IAAI,CAAC;IAC7C;EACJ;EACA;EACAjC,oBAAoBA,CAAA,EAAG;IACnB,OAAO,IAAI,CAACmR,kBAAkB,CAACK,YAAY,CAAC,CAAC;EACjD;EACAD,uBAAuBA,CAAA,EAAG;IACtB,IAAI,CAACJ,kBAAkB,CAAC9c,IAAI,CAAC;MAAET,MAAM,EAAE;QAAE+D,GAAG,EAAE,IAAI,CAACC,QAAQ;QAAEC,GAAG,EAAE,IAAI,CAACC;MAAU;IAAE,CAAC,CAAC;EACzF;EACA0F,kBAAkBA,CAAA,EAAG;IACjB,MAAMiU,EAAE,GAAG,IAAI,CAAC/O,cAAc,CAACzJ,qBAAqB,CAAC,OAAO,EAAE,IAAI,CAAC,CAACkC,SAAS,CAAC,MAAM;MAChF,IAAI,IAAI,CAAC0V,cAAc,EAAE;QACrB,IAAI,CAAChO,UAAU,CAAC/H,OAAO,CAAC+H,UAAU,IAAIA,UAAU,CAACI,IAAI,CAAC,CAAC,CAAC;MAC5D;MACA,IAAI,CAAC8N,WAAW,CAAC1V,IAAI,CAAC,IAAI,CAAC;IAC/B,CAAC,CAAC;IACF,IAAI,CAAC0R,wBAAwB,CAAC7R,IAAI,CAACuW,EAAE,CAAC;IACtC,MAAMC,GAAG,GAAG,IAAI,CAAChP,cAAc,CAACzJ,qBAAqB,CAAC,UAAU,EAAE,IAAI,CAAC,CAACkC,SAAS,CAAC,MAAM;MACpF,IAAI,CAAC6V,cAAc,CAAC3V,IAAI,CAAC,IAAI,CAAC;IAClC,CAAC,CAAC;IACF,IAAI,CAAC0R,wBAAwB,CAAC7R,IAAI,CAACwW,GAAG,CAAC;IACvC,MAAMC,EAAE,GAAG,IAAI,CAACjP,cAAc,CAACzJ,qBAAqB,CAAC,YAAY,EAAE,IAAI,CAAC,CAACkC,SAAS,CAAC,MAAM;MACrF,IAAI,CAAC8V,gBAAgB,CAAC5V,IAAI,CAAC,IAAI,CAAC;IACpC,CAAC,CAAC;IACF,IAAI,CAAC0R,wBAAwB,CAAC7R,IAAI,CAACyW,EAAE,CAAC;IACtC,MAAMC,EAAE,GAAG,IAAI,CAAClP,cAAc,CAACzJ,qBAAqB,CAAC,WAAW,EAAE,IAAI,CAAC,CAClEkC,SAAS,CAAEhC,CAAC,IAAK;MAClB,IAAI,CAACS,SAAS,CAACyB,IAAI,CAAC;QAAEC,MAAM,EAAE;UAAE3D,GAAG,EAAEwB,CAAC,CAACvF,MAAM,CAAC+D,GAAG,CAAC,CAAC;UAAEE,GAAG,EAAEsB,CAAC,CAACvF,MAAM,CAACiE,GAAG,CAAC;QAAE;MAAE,CAAC,CAAC;IACjF,CAAC,CAAC;IACF,IAAI,CAACkV,wBAAwB,CAAC7R,IAAI,CAAC0W,EAAE,CAAC;IACtC,MAAM9V,CAAC,GAAG,IAAI,CAAC4G,cAAc,CAACzJ,qBAAqB,CAAC,MAAM,EAAE,IAAI,CAAC,CAC5DkC,SAAS,CAAEhC,CAAC,IAAK;MAClB,IAAI,CAACO,IAAI,CAAC2B,IAAI,CAAC;QAAEC,MAAM,EAAE;UAAE3D,GAAG,EAAEwB,CAAC,CAACvF,MAAM,CAAC+D,GAAG,CAAC,CAAC;UAAEE,GAAG,EAAEsB,CAAC,CAACvF,MAAM,CAACiE,GAAG,CAAC;QAAE;MAAE,CAAC,CAAC;IAC5E,CAAC,CAAC;IACF,IAAI,CAACkV,wBAAwB,CAAC7R,IAAI,CAACY,CAAC,CAAC;IACrC,MAAM+V,EAAE,GAAG,IAAI,CAACnP,cAAc,CAACzJ,qBAAqB,CAAC,SAAS,EAAE,IAAI,CAAC,CAChEkC,SAAS,CAAEhC,CAAC,IAAK;MAClB,IAAI,CAACQ,OAAO,CAAC0B,IAAI,CAAC;QAAEC,MAAM,EAAE;UAAE3D,GAAG,EAAEwB,CAAC,CAACvF,MAAM,CAAC+D,GAAG,CAAC,CAAC;UAAEE,GAAG,EAAEsB,CAAC,CAACvF,MAAM,CAACiE,GAAG,CAAC;QAAE;MAAE,CAAC,CAAC;IAC/E,CAAC,CAAC;IACF,IAAI,CAACkV,wBAAwB,CAAC7R,IAAI,CAAC2W,EAAE,CAAC;IACtC,MAAMC,KAAK,GAAG,IAAI,CAACpP,cAAc,CAACzJ,qBAAqB,CAAC,WAAW,EAAE,IAAI,CAAC,CACrEkC,SAAS,CAAEhC,CAAC,IAAK;MAClB,IAAI,CAACa,SAAS,CAACqB,IAAI,CAAC;QAAEC,MAAM,EAAE;UAAE3D,GAAG,EAAEwB,CAAC,CAACvF,MAAM,CAAC+D,GAAG,CAAC,CAAC;UAAEE,GAAG,EAAEsB,CAAC,CAACvF,MAAM,CAACiE,GAAG,CAAC;QAAE;MAAE,CAAC,CAAC;IACjF,CAAC,CAAC;IACF,IAAI,CAACkV,wBAAwB,CAAC7R,IAAI,CAAC4W,KAAK,CAAC;IACzC,MAAMC,IAAI,GAAG,IAAI,CAACrP,cAAc,CAACzJ,qBAAqB,CAAC,UAAU,EAAE,IAAI,CAAC,CACnEkC,SAAS,CAAEhC,CAAC,IAAK;MAClB,IAAI,CAACY,QAAQ,CAACsB,IAAI,CAAC;QAAEC,MAAM,EAAE;UAAE3D,GAAG,EAAEwB,CAAC,CAACvF,MAAM,CAAC+D,GAAG,CAAC,CAAC;UAAEE,GAAG,EAAEsB,CAAC,CAACvF,MAAM,CAACiE,GAAG,CAAC;QAAE;MAAE,CAAC,CAAC;IAChF,CAAC,CAAC;IACF,IAAI,CAACkV,wBAAwB,CAAC7R,IAAI,CAAC6W,IAAI,CAAC;IACxC,MAAMC,MAAM,GAAG,IAAI,CAACtP,cAAc,CAACzJ,qBAAqB,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAC9EkC,SAAS,CAAC,MAAM;MACjB,IAAI,CAAC2V,eAAe,CAACzV,IAAI,CAAC,IAAI,CAAC8G,SAAS,CAAC;IAC7C,CAAC,CAAC;IACF,IAAI,CAAC4K,wBAAwB,CAAC7R,IAAI,CAAC8W,MAAM,CAAC;EAC9C;EACA;EACAhb,EAAEA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACN,GAAG;EAAE;EACxB;EACAC,QAAQA,CAAA,EAAG;IAAE,OAAO,YAAY,GAAG,IAAI,CAACD,GAAG,CAACC,QAAQ,CAAC,CAAC;EAAE;EACxD;EACAM,WAAWA,CAAA,EAAG;IACV,IAAI,CAACyL,cAAc,CAAC/B,YAAY,CAAC,IAAI,CAAC;IACtC;IACA,IAAI,CAACoM,wBAAwB,CAACjS,OAAO,CAAES,CAAC,IAAKA,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;EACjE;AACJ,CAAC;AACDoV,SAAS,CAACpb,cAAc,GAAG,MAAM,CAC7B;EAAEC,IAAI,EAAE4K;AAAc,CAAC,CAC1B;AACD1S,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAEmV,SAAS,CAACzZ,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;AAC3CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAEmV,SAAS,CAACzZ,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAC5CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE8N,MAAM,CAAC,CACpC,EAAEkV,SAAS,CAACzZ,SAAS,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;AACxCxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0Z,SAAS,CAACzZ,SAAS,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;AACxCxJ,UAAU,CAAC,CACPM,KAAK,CAAC,iBAAiB,CAAC,EACxBL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0Z,SAAS,CAACzZ,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAC5CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE8N,MAAM,CAAC,CACpC,EAAEkV,SAAS,CAACzZ,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AAC1CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0Z,SAAS,CAACzZ,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AAC1CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0Z,SAAS,CAACzZ,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;AACjDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0Z,SAAS,CAACzZ,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AAC1CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0Z,SAAS,CAACzZ,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;AACzCxJ,UAAU,CAAC,CACPM,KAAK,CAAC,iBAAiB,CAAC,EACxBL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0Z,SAAS,CAACzZ,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAC5CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE8N,MAAM,CAAC,CACpC,EAAEkV,SAAS,CAACzZ,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAC5CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE0Z,SAAS,CAACzZ,SAAS,EAAE,iBAAiB,EAAE,KAAK,CAAC,CAAC;AAClDxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEyiB,SAAS,CAACzZ,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;AAC9CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEyiB,SAAS,CAACzZ,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;AACjDxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEyiB,SAAS,CAACzZ,SAAS,EAAE,kBAAkB,EAAE,KAAK,CAAC,CAAC;AACnDxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEyiB,SAAS,CAACzZ,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAC5CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEyiB,SAAS,CAACzZ,SAAS,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;AACvCxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEyiB,SAAS,CAACzZ,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AAC1CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEyiB,SAAS,CAACzZ,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAC5CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEyiB,SAAS,CAACzZ,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;AAC3CxJ,UAAU,CAAC,CACPgB,eAAe,CAACgV,aAAa,CAAC,EAC9B/V,UAAU,CAAC,aAAa,EAAEc,SAAS,CAAC,CACvC,EAAEkiB,SAAS,CAACzZ,SAAS,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;AAC7CyZ,SAAS,GAAGF,WAAW,GAAG/iB,UAAU,CAAC,CACjCO,SAAS,CAAC;EACNkJ,QAAQ,EAAE,YAAY;EACtBoZ,SAAS,EAAE,CACP;IAAEyB,OAAO,EAAE7T,iBAAiB;IAAE8T,WAAW,EAAEtjB,UAAU,CAAC,MAAM8hB,WAAW;EAAE,CAAC,CAC7E;EACDyB,MAAM,EAAE,CACJ,UAAU,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,EAAE,4BAA4B,EAAE,SAAS,EAClF,gBAAgB,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,CAChE;EACDC,OAAO,EAAE,CAAC,aAAa,EAAE,WAAW,EAAE,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU;AACpF,CAAC,CAAC,EACFxkB,UAAU,CAAC,mBAAmB,EAAE,CAACyS,aAAa,CAAC,CAAC,CACnD,EAAEuQ,SAAS,CAAC;AAEb,IAAIyB,YAAY;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,UAAU,GAAGD,YAAY,GAAG,MAAMC,UAAU,CAAC;EAC7C3hB,WAAWA,CAAC4hB,eAAe,EAAE;IACzB,IAAI,CAACA,eAAe,GAAGA,eAAe;IACtC;AACR;AACA;IACQ,IAAI,CAACxa,SAAS,GAAG,IAAI;IACrB;AACR;AACA;AACA;IACQ;IACA,IAAI,CAACC,SAAS,GAAG,KAAK;IACtB;AACR;AACA;AACA;IACQ,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB;AACR;AACA;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACsP,QAAQ,GAAG,KAAK;IACrB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACC,KAAK,GAAG,EAAE;IACf;AACR;AACA;IACQ,IAAI,CAACgL,SAAS,GAAG,IAAIrkB,YAAY,CAAC,CAAC;IACnC;AACR;AACA;IACQ,IAAI,CAACskB,YAAY,GAAG,IAAItkB,YAAY,CAAC,CAAC;IACtC;AACR;AACA;IACQ,IAAI,CAACukB,QAAQ,GAAG,IAAIvkB,YAAY,CAAC,CAAC;IAClC;AACR;AACA;IACQ,IAAI,CAACwkB,WAAW,GAAG,IAAIxkB,YAAY,CAAC,CAAC;IACrC;AACR;AACA;IACQ,IAAI,CAACykB,aAAa,GAAG,IAAIzkB,YAAY,CAAC,CAAC;IACvC;AACR;AACA;IACQ,IAAI,CAAC0kB,aAAa,GAAG,IAAI1kB,YAAY,CAAC,CAAC;IACvC;AACR;AACA;IACQ,IAAI,CAAC2kB,aAAa,GAAG,IAAI3kB,YAAY,CAAC,CAAC;IACvC;AACR;AACA;IACQ,IAAI,CAAC4kB,YAAY,GAAG,IAAI5kB,YAAY,CAAC,CAAC;IACtC;AACR;AACA;IACQ,IAAI,CAAC6kB,aAAa,GAAG,IAAI7kB,YAAY,CAAC,CAAC;IACvC;AACR;AACA;IACQ,IAAI,CAAC8kB,WAAW,GAAG,IAAI9kB,YAAY,CAAC,CAAC;IACrC;AACR;AACA;IACQ,IAAI,CAAC+kB,cAAc,GAAG,IAAI/kB,YAAY,CAAC,CAAC;IACxC;AACR;AACA;IACQ,IAAI,CAACglB,eAAe,GAAG,IAAIhlB,YAAY,CAAC,CAAC;IACzC,IAAI,CAACilB,sBAAsB,GAAG,KAAK;IACnC,IAAI,CAAC9V,cAAc,GAAG,EAAE;EAC5B;EACA;EACA8T,kBAAkBA,CAAA,EAAG;IACjB,IAAI,CAAC,IAAI,CAACgC,sBAAsB,EAAE;MAC9B,IAAI,CAACC,KAAK,CAAC,CAAC;IAChB;EACJ;EACAxc,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAAC,IAAI,CAACsc,sBAAsB,EAAE;MAC9B,IAAI,CAACC,KAAK,CAAC,CAAC;MACZ;IACJ;IACA,IAAI,CAACd,eAAe,CAAC5K,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAACtC,qBAAqB,CAACvO,OAAO,CAAC,CAAC;EACrF;EACAuc,KAAKA,CAAA,EAAG;IACJ,IAAI,CAACd,eAAe,CAACnL,UAAU,CAAC,IAAI,CAAC;IACrC,IAAI,CAACgM,sBAAsB,GAAG,IAAI;IAClC,IAAI,CAAC5V,kBAAkB,CAAC,CAAC;EAC7B;EACAA,kBAAkBA,CAAA,EAAG;IACjB,MAAM8V,QAAQ,GAAG,CACb;MAAE5V,IAAI,EAAE,OAAO;MAAEC,OAAO,EAAGC,EAAE,IAAK,IAAI,CAAC4U,SAAS,CAACnX,IAAI,CAACuC,EAAE;IAAE,CAAC,EAC3D;MAAEF,IAAI,EAAE,UAAU;MAAEC,OAAO,EAAGC,EAAE,IAAK,IAAI,CAAC6U,YAAY,CAACpX,IAAI,CAACuC,EAAE;IAAE,CAAC,EACjE;MAAEF,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAGC,EAAE,IAAK,IAAI,CAAC8U,QAAQ,CAACrX,IAAI,CAACuC,EAAE;IAAE,CAAC,EACzD;MAAEF,IAAI,EAAE,SAAS;MAAEC,OAAO,EAAGC,EAAE,IAAK,IAAI,CAAC+U,WAAW,CAACtX,IAAI,CAACuC,EAAE;IAAE,CAAC,EAC/D;MAAEF,IAAI,EAAE,WAAW;MAAEC,OAAO,EAAGC,EAAE,IAAK,IAAI,CAACgV,aAAa,CAACvX,IAAI,CAACuC,EAAE;IAAE,CAAC,EACnE;MAAEF,IAAI,EAAE,WAAW;MAAEC,OAAO,EAAGC,EAAE,IAAK,IAAI,CAACiV,aAAa,CAACxX,IAAI,CAACuC,EAAE;IAAE,CAAC,EACnE;MAAEF,IAAI,EAAE,WAAW;MAAEC,OAAO,EAAGC,EAAE,IAAK,IAAI,CAACkV,aAAa,CAACzX,IAAI,CAACuC,EAAE;IAAE,CAAC,EACnE;MAAEF,IAAI,EAAE,UAAU;MAAEC,OAAO,EAAGC,EAAE,IAAK,IAAI,CAACmV,YAAY,CAAC1X,IAAI,CAACuC,EAAE;IAAE,CAAC,EACjE;MAAEF,IAAI,EAAE,WAAW;MAAEC,OAAO,EAAGC,EAAE,IAAK,IAAI,CAACoV,aAAa,CAAC3X,IAAI,CAACuC,EAAE;IAAE,CAAC,EACnE;MAAEF,IAAI,EAAE,SAAS;MAAEC,OAAO,EAAGC,EAAE,IAAK,IAAI,CAACqV,WAAW,CAAC5X,IAAI,CAACuC,EAAE;IAAE,CAAC,EAC/D;MAAEF,IAAI,EAAE,YAAY;MAAEC,OAAO,EAAGC,EAAE,IAAK,IAAI,CAACsV,cAAc,CAAC7X,IAAI,CAACuC,EAAE;IAAE,CAAC,CACxE;IACD0V,QAAQ,CAACxY,OAAO,CAAE+C,GAAG,IAAK;MACtB,MAAMC,EAAE,GAAG,IAAI,CAACyU,eAAe,CAACtZ,qBAAqB,CAAC4E,GAAG,CAACH,IAAI,EAAE,IAAI,CAAC,CAACvC,SAAS,CAAC0C,GAAG,CAACF,OAAO,CAAC;MAC5F,IAAI,CAACL,cAAc,CAACpC,IAAI,CAAC4C,EAAE,CAAC;IAChC,CAAC,CAAC;IACF,IAAI,CAACyU,eAAe,CAACvK,yBAAyB,CAAC,IAAI,CAAC,CAC/CzW,IAAI,CAACgiB,MAAM,IAAI;MAChB,MAAMzV,EAAE,GAAGyV,MAAM,CAACpY,SAAS,CAACqY,SAAS,IAAI,IAAI,CAACL,eAAe,CAAC9X,IAAI,CAACmY,SAAS,CAAC,CAAC;MAC9E,IAAI,CAAClW,cAAc,CAACpC,IAAI,CAAC4C,EAAE,CAAC;IAChC,CAAC,CAAC;EACN;EACAuH,qBAAqBA,CAACvO,OAAO,EAAE;IAC3B,OAAOI,MAAM,CAACuD,IAAI,CAAC3D,OAAO,CAAC,CACtB4D,MAAM,CAACC,CAAC,IAAI0X,YAAY,CAACoB,yBAAyB,CAAC5Y,OAAO,CAACF,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CACrE4K,MAAM,CAAC,CAAC1H,GAAG,EAAElD,CAAC,KAAK;MACpBkD,GAAG,CAAClD,CAAC,CAAC,GAAG7D,OAAO,CAAC6D,CAAC,CAAC,CAAC5D,YAAY;MAChC,OAAO8G,GAAG;IACd,CAAC,EAAE,CAAC,CAAC,CAAC;EACV;EACA;EACA7G,EAAEA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACN,GAAG;EAAE;EACxB;EACAO,WAAWA,CAAA,EAAG;IACV,IAAI,CAACsb,eAAe,CAAC3K,aAAa,CAAC,IAAI,CAAC;IACxC;IACA,IAAI,CAACtK,cAAc,CAACxC,OAAO,CAAES,CAAC,IAAKA,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;EACvD;EACAqM,OAAOA,CAAA,EAAG;IACN,OAAO,IAAI,CAAC0K,eAAe,CAAC1K,OAAO,CAAC,IAAI,CAAC;EAC7C;EACAC,QAAQA,CAAA,EAAG;IACP,OAAO,IAAI,CAACyK,eAAe,CAACzK,QAAQ,CAAC,IAAI,CAAC;EAC9C;AACJ,CAAC;AACDwK,UAAU,CAACmB,yBAAyB,GAAG,CACnC,WAAW,EAAE,WAAW,EAAE,UAAU,EAAE,WAAW,EAAE,aAAa,EAAE,UAAU,EAAE,MAAM,EAAE,KAAK,EAC3F,OAAO,EAAE,aAAa,EAAE,eAAe,EAAE,cAAc,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,EACzF,UAAU,EAAE,SAAS,CACxB;AACDnB,UAAU,CAAC9c,cAAc,GAAG,MAAM,CAC9B;EAAEC,IAAI,EAAEyR;AAAe,CAAC,CAC3B;AACDvZ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAEob,UAAU,CAACnb,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAC7CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,eAAe,CAAC,EACtBL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAEob,UAAU,CAACnb,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAC7CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAEob,UAAU,CAACnb,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;AAC5CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE8N,MAAM,CAAC,CACpC,EAAE4W,UAAU,CAACnb,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAC7CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAE6W,UAAU,CAACnb,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;AAC/CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAEob,UAAU,CAACnb,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;AAC5CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE2iB,KAAK,CAAC,CACnC,EAAE+B,UAAU,CAACnb,SAAS,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;AACzCxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE8N,MAAM,CAAC,CACpC,EAAE4W,UAAU,CAACnb,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;AAC/CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAE6W,UAAU,CAACnb,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;AACjDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAE6W,UAAU,CAACnb,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;AAChDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE0W,OAAO,CAAC,CACrC,EAAEgO,UAAU,CAACnb,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AAC3CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAE6W,UAAU,CAACnb,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;AAC1CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEmkB,UAAU,CAACnb,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAC7CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEmkB,UAAU,CAACnb,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;AAChDxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEmkB,UAAU,CAACnb,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;AAC5CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEmkB,UAAU,CAACnb,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;AAC/CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEmkB,UAAU,CAACnb,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;AACjDxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEmkB,UAAU,CAACnb,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;AACjDxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEmkB,UAAU,CAACnb,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;AACjDxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEmkB,UAAU,CAACnb,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;AAChDxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEmkB,UAAU,CAACnb,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;AACjDxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEmkB,UAAU,CAACnb,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;AAC/CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEmkB,UAAU,CAACnb,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;AAClDxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAEob,UAAU,CAACnb,SAAS,EAAE,iBAAiB,EAAE,KAAK,CAAC,CAAC;AACnDmb,UAAU,GAAGD,YAAY,GAAG1kB,UAAU,CAAC,CACnCO,SAAS,CAAC;EACNkJ,QAAQ,EAAE;AACd,CAAC,CAAC,EACFxJ,UAAU,CAAC,mBAAmB,EAAE,CAACsZ,cAAc,CAAC,CAAC,CACpD,EAAEoL,UAAU,CAAC;;AAEd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIoB,eAAe,GAAG,MAAMA,eAAe,CAAC;EACxC9c,QAAQA,CAAA,EAAG;IACP,IAAI,IAAI,CAACyQ,IAAI,IAAI,IAAI,EAAE;MACnB,MAAM,IAAIiK,KAAK,CAAC,gCAAgC,CAAC;IACrD;EACJ;AACJ,CAAC;AACD3jB,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE0W,OAAO,CAAC,CACrC,EAAEoP,eAAe,CAACvc,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;AACtDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE8N,MAAM,CAAC,CACpC,EAAEgY,eAAe,CAACvc,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;AAC/CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE8N,MAAM,CAAC,CACpC,EAAEgY,eAAe,CAACvc,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;AAC/CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAEiY,eAAe,CAACvc,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AAChDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAEiY,eAAe,CAACvc,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AAChDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE8N,MAAM,CAAC,CACpC,EAAEgY,eAAe,CAACvc,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAClDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAEiY,eAAe,CAACvc,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;AACpDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE8N,MAAM,CAAC,CACpC,EAAEgY,eAAe,CAACvc,SAAS,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;AAC7CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAEiY,eAAe,CAACvc,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;AACjDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAEiY,eAAe,CAACvc,SAAS,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;AAC9CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE8N,MAAM,CAAC,CACpC,EAAEgY,eAAe,CAACvc,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;AACpDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAEiY,eAAe,CAACvc,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;AACtDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAEiY,eAAe,CAACvc,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;AACrDuc,eAAe,GAAG/lB,UAAU,CAAC,CACzBO,SAAS,CAAC;EAAEkJ,QAAQ,EAAE;AAAiC,CAAC,CAAC,CAC5D,EAAEsc,eAAe,CAAC;AAEnB,IAAIC,kBAAkB;AACtB;AACA;AACA;AACA;AACA,IAAIC,gBAAgB,GAAGD,kBAAkB,GAAG,MAAMC,gBAAgB,CAAC;EAC/DjjB,WAAWA,CAAA,EAAG;IACV;AACR;AACA;IACQ,IAAI,CAACkjB,eAAe,GAAG,IAAI1lB,YAAY,CAAC,CAAC;EAC7C;EACA0I,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAIA,OAAO,CAAC,UAAU,CAAC,IAAIA,OAAO,CAAC,WAAW,CAAC,EAAE;MAC7C,MAAMwL,QAAQ,GAAG;QACb3K,GAAG,EAAEb,OAAO,CAAC,UAAU,CAAC,GAAGA,OAAO,CAAC,UAAU,CAAC,CAACC,YAAY,GAAG,IAAI,CAACa,QAAQ;QAC3EC,GAAG,EAAEf,OAAO,CAAC,WAAW,CAAC,GAAGA,OAAO,CAAC,WAAW,CAAC,CAACC,YAAY,GAAG,IAAI,CAACe;MACzE,CAAC;MACD,IAAI,CAAC+b,eAAe,CAACxY,IAAI,CAACiH,QAAQ,CAAC;IACvC;EACJ;EACA;EACAtC,oBAAoBA,CAAA,EAAG;IACnB,OAAO,IAAI,CAAC6T,eAAe,CAACnV,IAAI,CAACrO,SAAS,CAAC;MAAEsH,GAAG,EAAE,IAAI,CAACC,QAAQ;MAAEC,GAAG,EAAE,IAAI,CAACC;IAAU,CAAC,CAAC,EAAE7H,GAAG,CAACqS,QAAQ,KAAK;MAAE1O,MAAM,EAAE0O;IAAS,CAAC,CAAC,CAAC,CAAC;EACrI;AACJ,CAAC;AACD3U,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAEmY,gBAAgB,CAACzc,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;AAClDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAEmY,gBAAgB,CAACzc,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AACnDxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEylB,gBAAgB,CAACzc,SAAS,EAAE,iBAAiB,EAAE,KAAK,CAAC,CAAC;AACzDyc,gBAAgB,GAAGD,kBAAkB,GAAGhmB,UAAU,CAAC,CAC/CO,SAAS,CAAC;EACNkJ,QAAQ,EAAE,oBAAoB;EAC9BoZ,SAAS,EAAE,CACP;IAAEyB,OAAO,EAAE7T,iBAAiB;IAAE8T,WAAW,EAAEtjB,UAAU,CAAC,MAAM+kB,kBAAkB;EAAE,CAAC;AAEzF,CAAC,CAAC,EACF/lB,UAAU,CAAC,mBAAmB,EAAE,EAAE,CAAC,CACtC,EAAEgmB,gBAAgB,CAAC;AAEpB,IAAIE,aAAa;AACjB,IAAIC,UAAU,GAAG,CAAC;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,WAAW,GAAGF,aAAa,GAAG,MAAME,WAAW,CAAC;EAChDrjB,WAAWA,CAACsjB,gBAAgB,EAAE;IAC1B,IAAI,CAACA,gBAAgB,GAAGA,gBAAgB;IACxC;AACR;AACA;IACQ,IAAI,CAAClc,SAAS,GAAG,IAAI;IACrB;AACR;AACA;AACA;IACQ;IACA,IAAI,CAACC,SAAS,GAAG,KAAK;IACtB;AACR;AACA;AACA;IACQ,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB;AACR;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACsP,QAAQ,GAAG,KAAK;IACrB;AACR;AACA;IACQ,IAAI,CAAC/T,OAAO,GAAG,IAAI;IACnB;AACR;AACA;IACQ,IAAI,CAAC0gB,SAAS,GAAG,IAAI/lB,YAAY,CAAC,CAAC;IACnC;AACR;AACA;IACQ,IAAI,CAACgmB,YAAY,GAAG,IAAIhmB,YAAY,CAAC,CAAC;IACtC;AACR;AACA;IACQ,IAAI,CAACimB,QAAQ,GAAG,IAAIjmB,YAAY,CAAC,CAAC;IAClC;AACR;AACA;IACQ,IAAI,CAACkmB,WAAW,GAAG,IAAIlmB,YAAY,CAAC,CAAC;IACrC;AACR;AACA;IACQ,IAAI,CAACmmB,aAAa,GAAG,IAAInmB,YAAY,CAAC,CAAC;IACvC;AACR;AACA;IACQ,IAAI,CAAComB,aAAa,GAAG,IAAIpmB,YAAY,CAAC,CAAC;IACvC;AACR;AACA;IACQ,IAAI,CAACqmB,aAAa,GAAG,IAAIrmB,YAAY,CAAC,CAAC;IACvC;AACR;AACA;IACQ,IAAI,CAACsmB,YAAY,GAAG,IAAItmB,YAAY,CAAC,CAAC;IACtC;AACR;AACA;IACQ,IAAI,CAACumB,aAAa,GAAG,IAAIvmB,YAAY,CAAC,CAAC;IACvC;AACR;AACA;IACQ,IAAI,CAACwmB,WAAW,GAAG,IAAIxmB,YAAY,CAAC,CAAC;IACrC;AACR;AACA;IACQ,IAAI,CAACymB,cAAc,GAAG,IAAIzmB,YAAY,CAAC,CAAC;IACxC;AACR;AACA;IACQ,IAAI,CAAC0mB,cAAc,GAAG,IAAI1mB,YAAY,CAAC,CAAC;IACxC,IAAI,CAAC2mB,uBAAuB,GAAG,KAAK;IACpC,IAAI,CAACxX,cAAc,GAAG,EAAE;IACxB,IAAI,CAAC5G,GAAG,GAAG,CAACqd,UAAU,EAAE,EAAEpd,QAAQ,CAAC,CAAC;EACxC;EACA;EACAya,kBAAkBA,CAAA,EAAG;IACjB,IAAI,IAAI,CAAC2D,MAAM,CAACha,MAAM,EAAE;MACpB,IAAI,CAACga,MAAM,CAACja,OAAO,CAAEkO,KAAK,IAAK;QAC3B,MAAMzN,CAAC,GAAGyN,KAAK,CAAC6K,eAAe,CAAC1Y,SAAS,CAAC,MAAM;UAAE,IAAI,CAAC8Y,gBAAgB,CAAC3J,oBAAoB,CAAC,IAAI,CAAC;QAAE,CAAC,CAAC;QACtG,IAAI,CAAChN,cAAc,CAACpC,IAAI,CAACK,CAAC,CAAC;MAC/B,CAAC,CAAC;IACN;IACA,IAAI,CAAC,IAAI,CAACuZ,uBAAuB,EAAE;MAC/B,IAAI,CAACzB,KAAK,CAAC,CAAC;IAChB;IACA,MAAM2B,QAAQ,GAAG,IAAI,CAACD,MAAM,CAACje,OAAO,CAACqE,SAAS,CAAC,MAAM,IAAI,CAAC8Y,gBAAgB,CAAC3J,oBAAoB,CAAC,IAAI,CAAC,CAAC;IACtG,IAAI,CAAChN,cAAc,CAACpC,IAAI,CAAC8Z,QAAQ,CAAC;IAClC,IAAI,CAACf,gBAAgB,CAAC3J,oBAAoB,CAAC,IAAI,CAAC;IAChD,MAAM2K,OAAO,GAAG,IAAI,CAACC,aAAa,CAACpe,OAAO,CAACqE,SAAS,CAAC,MAAM,IAAI,CAAC8Y,gBAAgB,CAACzJ,mBAAmB,CAAC,IAAI,CAAC,CAAC;IAC3G,IAAI,CAAClN,cAAc,CAACpC,IAAI,CAAC+Z,OAAO,CAAC;EACrC;EACApe,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAAC,IAAI,CAACge,uBAAuB,EAAE;MAC/B,IAAI,CAACzB,KAAK,CAAC,CAAC;MACZ;IACJ;IACA,IAAIzhB,OAAO,GAAG,CAAC,CAAC;IAChB,MAAM4I,UAAU,GAAGtD,MAAM,CAACuD,IAAI,CAAC3D,OAAO,CAAC,CAAC4D,MAAM,CAACC,CAAC,IAAImZ,aAAa,CAACqB,0BAA0B,CAACta,OAAO,CAACF,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IAC/GH,UAAU,CAACM,OAAO,CAACH,CAAC,IAAI/I,OAAO,CAAC+I,CAAC,CAAC,GAAG7D,OAAO,CAAC6D,CAAC,CAAC,CAAC5D,YAAY,CAAC;IAC7D,IAAI,CAACkd,gBAAgB,CAACxJ,kBAAkB,CAAC,IAAI,EAAE7Y,OAAO,CAAC;EAC3D;EACAiW,OAAOA,CAAA,EAAG;IACN,OAAO,IAAI,CAACoM,gBAAgB,CAACpM,OAAO,CAAC,IAAI,CAAC;EAC9C;EACAwL,KAAKA,CAAA,EAAG;IACJ,IAAI,CAACY,gBAAgB,CAAC7J,WAAW,CAAC,IAAI,CAAC;IACvC,IAAI,CAAC0K,uBAAuB,GAAG,IAAI;IACnC,IAAI,CAACtX,kBAAkB,CAAC,CAAC;EAC7B;EACAA,kBAAkBA,CAAA,EAAG;IACjB,MAAM8V,QAAQ,GAAG,CACb;MAAE5V,IAAI,EAAE,OAAO;MAAEC,OAAO,EAAGC,EAAE,IAAK,IAAI,CAACsW,SAAS,CAAC7Y,IAAI,CAACuC,EAAE;IAAE,CAAC,EAC3D;MAAEF,IAAI,EAAE,UAAU;MAAEC,OAAO,EAAGC,EAAE,IAAK,IAAI,CAACuW,YAAY,CAAC9Y,IAAI,CAACuC,EAAE;IAAE,CAAC,EACjE;MAAEF,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAGC,EAAE,IAAK,IAAI,CAACwW,QAAQ,CAAC/Y,IAAI,CAACuC,EAAE;IAAE,CAAC,EACzD;MAAEF,IAAI,EAAE,SAAS;MAAEC,OAAO,EAAGC,EAAE,IAAK,IAAI,CAACyW,WAAW,CAAChZ,IAAI,CAACuC,EAAE;IAAE,CAAC,EAC/D;MAAEF,IAAI,EAAE,WAAW;MAAEC,OAAO,EAAGC,EAAE,IAAK,IAAI,CAAC0W,aAAa,CAACjZ,IAAI,CAACuC,EAAE;IAAE,CAAC,EACnE;MAAEF,IAAI,EAAE,WAAW;MAAEC,OAAO,EAAGC,EAAE,IAAK,IAAI,CAAC2W,aAAa,CAAClZ,IAAI,CAACuC,EAAE;IAAE,CAAC,EACnE;MAAEF,IAAI,EAAE,WAAW;MAAEC,OAAO,EAAGC,EAAE,IAAK,IAAI,CAAC4W,aAAa,CAACnZ,IAAI,CAACuC,EAAE;IAAE,CAAC,EACnE;MAAEF,IAAI,EAAE,UAAU;MAAEC,OAAO,EAAGC,EAAE,IAAK,IAAI,CAAC6W,YAAY,CAACpZ,IAAI,CAACuC,EAAE;IAAE,CAAC,EACjE;MAAEF,IAAI,EAAE,WAAW;MAAEC,OAAO,EAAGC,EAAE,IAAK,IAAI,CAAC8W,aAAa,CAACrZ,IAAI,CAACuC,EAAE;IAAE,CAAC,EACnE;MAAEF,IAAI,EAAE,SAAS;MAAEC,OAAO,EAAGC,EAAE,IAAK,IAAI,CAAC+W,WAAW,CAACtZ,IAAI,CAACuC,EAAE;IAAE,CAAC,EAC/D;MAAEF,IAAI,EAAE,YAAY;MAAEC,OAAO,EAAGC,EAAE,IAAK,IAAI,CAACgX,cAAc,CAACvZ,IAAI,CAACuC,EAAE;IAAE,CAAC,CACxE;IACD0V,QAAQ,CAACxY,OAAO,CAAE+C,GAAG,IAAK;MACtB,MAAMC,EAAE,GAAG,IAAI,CAACmW,gBAAgB,CAAChb,qBAAqB,CAAC4E,GAAG,CAACH,IAAI,EAAE,IAAI,CAAC,CAACvC,SAAS,CAAC0C,GAAG,CAACF,OAAO,CAAC;MAC7F,IAAI,CAACL,cAAc,CAACpC,IAAI,CAAC4C,EAAE,CAAC;IAChC,CAAC,CAAC;IACF,IAAI,CAACmW,gBAAgB,CAACjM,yBAAyB,CAAC,IAAI,CAAC,CAACzW,IAAI,CAAE6jB,GAAG,IAAK;MAChE,MAAMtX,EAAE,GAAGsX,GAAG,CAACja,SAAS,CAACqY,SAAS,IAAI,IAAI,CAACqB,cAAc,CAACxZ,IAAI,CAACmY,SAAS,CAAC,CAAC;MAC1E,IAAI,CAAClW,cAAc,CAACpC,IAAI,CAAC4C,EAAE,CAAC;IAChC,CAAC,CAAC;EACN;EACA;EACAiL,UAAUA,CAAA,EAAG;IACT,IAAI,IAAI,CAACgM,MAAM,EAAE;MACb,OAAO,IAAI,CAACA,MAAM,CAACM,OAAO,CAAC,CAAC;IAChC;IACA,OAAO,EAAE;EACb;EACA/L,SAASA,CAAA,EAAG;IACR,IAAI,IAAI,CAAC4L,aAAa,EAAE;MACpB,OAAO,IAAI,CAACA,aAAa,CAACG,OAAO,CAAC,CAAC;IACvC;IACA,OAAO,EAAE;EACb;EACA;EACAre,EAAEA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACN,GAAG;EAAE;EACxB;EACAO,WAAWA,CAAA,EAAG;IACV,IAAI,CAACgd,gBAAgB,CAACvJ,cAAc,CAAC,IAAI,CAAC;IAC1C;IACA,IAAI,CAACpN,cAAc,CAACxC,OAAO,CAAES,CAAC,IAAKA,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;EACvD;AACJ,CAAC;AACDwY,WAAW,CAACmB,0BAA0B,GAAG,CACrC,WAAW,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,aAAa,EAAE,eAAe,EAAE,cAAc,EAC9F,QAAQ,CACX;AACDnB,WAAW,CAACxe,cAAc,GAAG,MAAM,CAC/B;EAAEC,IAAI,EAAEmT;AAAgB,CAAC,CAC5B;AACDjb,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE8c,WAAW,CAAC7c,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAC9CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,mBAAmB,CAAC,EAC1BL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE8c,WAAW,CAAC7c,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAC9CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE8c,WAAW,CAAC7c,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;AAC7CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE8c,WAAW,CAAC7c,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;AAC7CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE8N,MAAM,CAAC,CACpC,EAAEsY,WAAW,CAAC7c,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;AAChDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAEuY,WAAW,CAAC7c,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;AAClDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAEuY,WAAW,CAAC7c,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;AACjDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE8c,WAAW,CAAC7c,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AAC5CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAEuY,WAAW,CAAC7c,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;AAC3CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAE6lB,WAAW,CAAC7c,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAC9CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAE6lB,WAAW,CAAC7c,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;AACjDxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAE6lB,WAAW,CAAC7c,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;AAC7CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAE6lB,WAAW,CAAC7c,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;AAChDxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAE6lB,WAAW,CAAC7c,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;AAClDxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAE6lB,WAAW,CAAC7c,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;AAClDxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAE6lB,WAAW,CAAC7c,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;AAClDxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAE6lB,WAAW,CAAC7c,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;AACjDxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAE6lB,WAAW,CAAC7c,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;AAClDxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAE6lB,WAAW,CAAC7c,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;AAChDxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAE6lB,WAAW,CAAC7c,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;AACnDxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE8c,WAAW,CAAC7c,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;AACnDxJ,UAAU,CAAC,CACPgB,eAAe,CAACilB,gBAAgB,CAAC,EACjChmB,UAAU,CAAC,aAAa,EAAEc,SAAS,CAAC,CACvC,EAAEslB,WAAW,CAAC7c,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;AAC3CxJ,UAAU,CAAC,CACPgB,eAAe,CAAC+kB,eAAe,CAAC,EAChC9lB,UAAU,CAAC,aAAa,EAAEc,SAAS,CAAC,CACvC,EAAEslB,WAAW,CAAC7c,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;AAClD6c,WAAW,GAAGF,aAAa,GAAGnmB,UAAU,CAAC,CACrCO,SAAS,CAAC;EACNkJ,QAAQ,EAAE;AACd,CAAC,CAAC,EACFxJ,UAAU,CAAC,mBAAmB,EAAE,CAACgb,eAAe,CAAC,CAAC,CACrD,EAAEoL,WAAW,CAAC;AAEf,IAAIsB,cAAc;AAClB,IAAIC,YAAY,GAAGD,cAAc,GAAG,MAAMC,YAAY,CAAC;EACnD5kB,WAAWA,CAAC6F,QAAQ,EAAE;IAClB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IACxB;AACR;AACA;IACQ,IAAI,CAACuB,SAAS,GAAG,IAAI;IACrB;AACR;AACA;IACQ;IACA,IAAI,CAACC,SAAS,GAAG,KAAK;IACtB;AACR;AACA;AACA;IACQ,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB;AACR;AACA;AACA;IACQ,IAAI,CAAC5F,cAAc,GAAG,QAAQ;IAC9B;AACR;AACA;IACQ,IAAI,CAACkG,YAAY,GAAG,CAAC;IACrB;AACR;AACA;IACQ,IAAI,CAAC/E,OAAO,GAAG,IAAI;IACnB;AACR;AACA;IACQ,IAAI,CAAC2Z,YAAY,GAAG,IAAIhf,YAAY,CAAC,CAAC;IACtC;AACR;AACA;IACQ,IAAI,CAACqnB,cAAc,GAAG,IAAIrnB,YAAY,CAAC,CAAC;IACxC;AACR;AACA;IACQ,IAAI,CAACsnB,iBAAiB,GAAG,IAAItnB,YAAY,CAAC,CAAC;IAC3C;AACR;AACA;IACQ,IAAI,CAACuL,IAAI,GAAG,IAAIvL,YAAY,CAAC,CAAC;IAC9B;AACR;AACA;IACQ,IAAI,CAACwL,OAAO,GAAG,IAAIxL,YAAY,CAAC,CAAC;IACjC;AACR;AACA;IACQ,IAAI,CAACyL,SAAS,GAAG,IAAIzL,YAAY,CAAC,CAAC;IACnC;AACR;AACA;IACQ,IAAI,CAAC0L,SAAS,GAAG,IAAI1L,YAAY,CAAC,CAAC;IACnC;AACR;AACA;IACQ,IAAI,CAAC2L,SAAS,GAAG,IAAI3L,YAAY,CAAC,CAAC;IACnC;AACR;AACA;IACQ,IAAI,CAAC4L,QAAQ,GAAG,IAAI5L,YAAY,CAAC,CAAC;IAClC;AACR;AACA;IACQ,IAAI,CAAC6L,SAAS,GAAG,IAAI7L,YAAY,CAAC,CAAC;IACnC;AACR;AACA;IACQ,IAAI,CAAC8L,OAAO,GAAG,IAAI9L,YAAY,CAAC,CAAC;IACjC;AACR;AACA;IACQ,IAAI,CAACgM,UAAU,GAAG,IAAIhM,YAAY,CAAC,CAAC;IACpC,IAAI,CAACunB,wBAAwB,GAAG,KAAK;IACrC,IAAI,CAACrb,mBAAmB,GAAG,EAAE;EACjC;EACA;EACAzD,QAAQA,CAAA,EAAG;IACP,IAAI,CAACJ,QAAQ,CAACyU,YAAY,CAAC,IAAI,CAAC;IAChC,IAAI,CAACyK,wBAAwB,GAAG,IAAI;IACpC,IAAI,CAACpb,uBAAuB,CAAC,CAAC;EAClC;EACA;EACAzD,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAAC,IAAI,CAAC4e,wBAAwB,EAAE;MAChC;IACJ;IACA,IAAI5e,OAAO,CAAC,OAAO,CAAC,IAChBA,OAAO,CAAC,MAAM,CAAC,IACfA,OAAO,CAAC,OAAO,CAAC,IAChBA,OAAO,CAAC,MAAM,CAAC,EAAE;MACjB,IAAI,CAACN,QAAQ,CAACiV,SAAS,CAAC,IAAI,CAAC;IACjC;IACA,IAAI3U,OAAO,CAAC,UAAU,CAAC,EAAE;MACrB,IAAI,CAACN,QAAQ,CAACoC,WAAW,CAAC,IAAI,CAAC;IACnC;IACA,IAAI9B,OAAO,CAAC,WAAW,CAAC,EAAE;MACtB,IAAI,CAACN,QAAQ,CAACqC,YAAY,CAAC,IAAI,CAAC;IACpC;IACA,IAAI/B,OAAO,CAAC,SAAS,CAAC,EAAE;MACpB,IAAI,CAACN,QAAQ,CAACsC,UAAU,CAAC,IAAI,CAAC;IAClC;IACA,IAAI,CAAC6c,8BAA8B,CAAC7e,OAAO,CAAC;EAChD;EACA6e,8BAA8BA,CAAC7e,OAAO,EAAE;IACpC,IAAIlF,OAAO,GAAG,CAAC,CAAC;IAChB,IAAI4I,UAAU,GAAGtD,MAAM,CAACuD,IAAI,CAAC3D,OAAO,CAAC,CAAC4D,MAAM,CAACC,CAAC,IAAI2a,cAAc,CAAC1a,WAAW,CAACC,OAAO,CAACF,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IAC/FH,UAAU,CAACM,OAAO,CAACH,CAAC,IAAI;MACpB/I,OAAO,CAAC+I,CAAC,CAAC,GAAG7D,OAAO,CAAC6D,CAAC,CAAC,CAAC5D,YAAY;IACxC,CAAC,CAAC;IACF,IAAIyD,UAAU,CAACO,MAAM,GAAG,CAAC,EAAE;MACvB,IAAI,CAACvE,QAAQ,CAAC1E,UAAU,CAAC,IAAI,EAAEF,OAAO,CAAC;IAC3C;EACJ;EACA0I,uBAAuBA,CAAA,EAAG;IACtB,IAAIU,MAAM,GAAG,IAAItJ,GAAG,CAAC,CAAC;IACtBsJ,MAAM,CAACjF,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAACoX,YAAY,CAAC;IAC/CnS,MAAM,CAACjF,GAAG,CAAC,OAAO,EAAE,IAAI,CAACyf,cAAc,CAAC;IACxCxa,MAAM,CAACjF,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC0f,iBAAiB,CAAC;IAC9Cza,MAAM,CAACjF,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC2D,IAAI,CAAC;IAC7BsB,MAAM,CAACjF,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC4D,OAAO,CAAC;IACnCqB,MAAM,CAACjF,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC6D,SAAS,CAAC;IACvCoB,MAAM,CAACjF,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC8D,SAAS,CAAC;IACvCmB,MAAM,CAACjF,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC+D,SAAS,CAAC;IACvCkB,MAAM,CAACjF,GAAG,CAAC,UAAU,EAAE,IAAI,CAACgE,QAAQ,CAAC;IACrCiB,MAAM,CAACjF,GAAG,CAAC,WAAW,EAAE,IAAI,CAACiE,SAAS,CAAC;IACvCgB,MAAM,CAACjF,GAAG,CAAC,SAAS,EAAE,IAAI,CAACkE,OAAO,CAAC;IACnCe,MAAM,CAACjF,GAAG,CAAC,YAAY,EAAE,IAAI,CAACoE,UAAU,CAAC;IACzCa,MAAM,CAACF,OAAO,CAAC,CAACG,YAAY,EAAEjH,SAAS,KAAK;MACxC,IAAI,CAACqG,mBAAmB,CAACa,IAAI,CAAC,IAAI,CAAC1E,QAAQ,CACtCyC,qBAAqB,CAACjF,SAAS,EAAE,IAAI,CAAC,CACtCmH,SAAS,CAACC,KAAK,IAAI;QACpB,QAAQpH,SAAS;UACb,KAAK,gBAAgB;YACjB,IAAI,CAACwC,QAAQ,CAAC9B,SAAS,CAAC,IAAI,CAAC,CAACnD,IAAI,CAACuN,MAAM,IAAI7D,YAAY,CAACI,IAAI,CAAC;cAC3D8P,KAAK,EAAErM,MAAM,CAAC8W,YAAY,CAAC,CAAC,CAACje,GAAG,CAAC,CAAC;cAClCyT,IAAI,EAAEtM,MAAM,CAAC8W,YAAY,CAAC,CAAC,CAAC/d,GAAG,CAAC,CAAC;cACjCwT,KAAK,EAAEvM,MAAM,CAAC+W,YAAY,CAAC,CAAC,CAACle,GAAG,CAAC,CAAC;cAClC2T,IAAI,EAAExM,MAAM,CAAC+W,YAAY,CAAC,CAAC,CAAChe,GAAG,CAAC;YACpC,CAAC,CAAC,CAAC;YACH;UACJ;YACIoD,YAAY,CAACI,IAAI,CAAC;cACdC,MAAM,EAAE;gBAAE3D,GAAG,EAAEyD,KAAK,CAACxH,MAAM,CAAC+D,GAAG,CAAC,CAAC;gBAAEE,GAAG,EAAEuD,KAAK,CAACxH,MAAM,CAACiE,GAAG,CAAC;cAAE;YAC/D,CAAC,CAAC;QACV;MACJ,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;EACN;EACA;EACAZ,WAAWA,CAAA,EAAG;IACV,IAAI,CAACoD,mBAAmB,CAACS,OAAO,CAAC,UAAUS,CAAC,EAAE;MAC1CA,CAAC,CAACC,WAAW,CAAC,CAAC;IACnB,CAAC,CAAC;IACF,IAAI,CAACnB,mBAAmB,GAAG,IAAI;IAC/B,IAAI,CAAC7D,QAAQ,CAAC+U,eAAe,CAAC,IAAI,CAAC;EACvC;EACA;AACJ;AACA;EACI7W,SAASA,CAAA,EAAG;IACR,OAAO,IAAI,CAAC8B,QAAQ,CAAC9B,SAAS,CAAC,IAAI,CAAC;EACxC;AACJ,CAAC;AACD6gB,YAAY,CAAC3a,WAAW,GAAG,CACvB,WAAW,EACX,aAAa,EACb,aAAa,EACb,eAAe,EACf,gBAAgB,EAChB,cAAc,EACd,SAAS,EACT,QAAQ,EACR,WAAW,CACd;AACD2a,YAAY,CAAC/f,cAAc,GAAG,MAAM,CAChC;EAAEC,IAAI,EAAEsV;AAAiB,CAAC,CAC7B;AACDpd,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAE8Z,YAAY,CAACpe,SAAS,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;AAC3CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAE8Z,YAAY,CAACpe,SAAS,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAE8Z,YAAY,CAACpe,SAAS,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;AAC3CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAE8Z,YAAY,CAACpe,SAAS,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAEqe,YAAY,CAACpe,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAC/CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,oBAAoB,CAAC,EAC3BL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAEqe,YAAY,CAACpe,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAC/CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAEqe,YAAY,CAACpe,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;AAC9CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE8N,MAAM,CAAC,CACpC,EAAE6Z,YAAY,CAACpe,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAC/CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAE8Z,YAAY,CAACpe,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;AACjDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE8N,MAAM,CAAC,CACpC,EAAE6Z,YAAY,CAACpe,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;AACjDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAE8Z,YAAY,CAACpe,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;AACnDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE8N,MAAM,CAAC,CACpC,EAAE6Z,YAAY,CAACpe,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;AACpDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAEqe,YAAY,CAACpe,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;AAClDxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAEqe,YAAY,CAACpe,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AAC7CxJ,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAE6N,MAAM,CAAC,CACpC,EAAE8Z,YAAY,CAACpe,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;AAC5CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEonB,YAAY,CAACpe,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;AAClDxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEonB,YAAY,CAACpe,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;AACpDxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEonB,YAAY,CAACpe,SAAS,EAAE,mBAAmB,EAAE,KAAK,CAAC,CAAC;AACvDxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEonB,YAAY,CAACpe,SAAS,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;AAC1CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEonB,YAAY,CAACpe,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AAC7CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEonB,YAAY,CAACpe,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAC/CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEonB,YAAY,CAACpe,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAC/CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEonB,YAAY,CAACpe,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAC/CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEonB,YAAY,CAACpe,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;AAC9CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEonB,YAAY,CAACpe,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAC/CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEonB,YAAY,CAACpe,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AAC7CxJ,UAAU,CAAC,CACPS,MAAM,CAAC,CAAC,EACRR,UAAU,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC1C,EAAEonB,YAAY,CAACpe,SAAS,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;AAChDoe,YAAY,GAAGD,cAAc,GAAG3nB,UAAU,CAAC,CACvCO,SAAS,CAAC;EACNkJ,QAAQ,EAAE;AACd,CAAC,CAAC,EACFxJ,UAAU,CAAC,mBAAmB,EAAE,CAACmd,gBAAgB,CAAC,CAAC,CACtD,EAAEwK,YAAY,CAAC;AAEhB,IAAIO,SAAS,GAAG,CAAC;AACjB;AACA;AACA;AACA;AACA,IAAIC,eAAe,GAAG,MAAMA,eAAe,CAAC;EACxCplB,WAAWA,CAAC6F,QAAQ,EAAE;IAClB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,eAAe,GAAG,KAAK;IAC5B,IAAI,CAACC,GAAG,GAAG,CAACof,SAAS,EAAE,EAAEnf,QAAQ,CAAC,CAAC;IACnC;AACR;AACA;IACQ,IAAI,CAACnD,OAAO,GAAG,IAAI;EACvB;EACAoD,QAAQA,CAAA,EAAG;IACP,IAAI,IAAI,CAACH,eAAe,EAAE;MACtB;IACJ;IACA,IAAI,CAACD,QAAQ,CAACX,eAAe,CAAC,IAAI,EAAE;MAAErC,OAAO,EAAE,IAAI,CAACA;IAAQ,CAAC,CAAC;IAC9D,IAAI,CAACiD,eAAe,GAAG,IAAI;EAC/B;EACAI,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAAC,IAAI,CAACL,eAAe,EAAE;MACvB;IACJ;IACA,IAAIK,OAAO,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE;MAC5B,IAAI,CAACN,QAAQ,CAACH,qBAAqB,CAAC,IAAI,EAAE;QAAE7C,OAAO,EAAEsD,OAAO,CAAC,SAAS,CAAC,CAACC;MAAa,CAAC,CAAC;IAC3F;EACJ;EACA;EACAC,EAAEA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACN,GAAG;EAAE;EACxB;EACAC,QAAQA,CAAA,EAAG;IAAE,OAAQ,mBAAkB,IAAI,CAACD,GAAG,CAACC,QAAQ,CAAC,CAAE,EAAC;EAAE;EAC9D;EACAM,WAAWA,CAAA,EAAG;IACV,IAAI,CAACT,QAAQ,CAACP,WAAW,CAAC,IAAI,CAAC;EACnC;AACJ,CAAC;AACD8f,eAAe,CAACvgB,cAAc,GAAG,MAAM,CACnC;EAAEC,IAAI,EAAEC;AAAa,CAAC,CACzB;AACD/H,UAAU,CAAC,CACPM,KAAK,CAAC,CAAC,EACPL,UAAU,CAAC,aAAa,EAAEsJ,MAAM,CAAC,CACpC,EAAE6e,eAAe,CAAC5e,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AAChD4e,eAAe,GAAGpoB,UAAU,CAAC,CACzBO,SAAS,CAAC;EACNkJ,QAAQ,EAAE;AACd,CAAC,CAAC,EACFxJ,UAAU,CAAC,mBAAmB,EAAE,CAAC8H,YAAY,CAAC,CAAC,CAClD,EAAEqgB,eAAe,CAAC;AAEnB,IAAIC,QAAQ;AACZ,IAAI7M,UAAU;AACd,CAAC,UAAUA,UAAU,EAAE;EACnBA,UAAU,CAACA,UAAU,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC,GAAG,uBAAuB;EAC7EA,UAAU,CAACA,UAAU,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC,GAAG,qBAAqB;EACzEA,UAAU,CAACA,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ;EAC/CA,UAAU,CAACA,UAAU,CAAC,sBAAsB,CAAC,GAAG,CAAC,CAAC,GAAG,sBAAsB;EAC3EA,UAAU,CAACA,UAAU,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC,GAAG,oBAAoB;AAC3E,CAAC,EAAEA,UAAU,KAAKA,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA,IAAI8M,eAAe;AACnB,CAAC,UAAUA,eAAe,EAAE;EACxBA,eAAe,CAACA,eAAe,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,GAAG,cAAc;EACrEA,eAAe,CAACA,eAAe,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU;EAC7DA,eAAe,CAACA,eAAe,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,GAAG,YAAY;EACjEA,eAAe,CAACA,eAAe,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW;EAC/DA,eAAe,CAACA,eAAe,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,GAAG,aAAa;EACnEA,eAAe,CAACA,eAAe,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU;EAC7DA,eAAe,CAACA,eAAe,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,GAAG,aAAa;EACnEA,eAAe,CAACA,eAAe,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW;EAC/DA,eAAe,CAACA,eAAe,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,GAAG,cAAc;EACrEA,eAAe,CAACA,eAAe,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,GAAG,cAAc;EACrEA,eAAe,CAACA,eAAe,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,GAAG,aAAa;EACpEA,eAAe,CAACA,eAAe,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC,GAAG,eAAe;AAC5E,CAAC,EAAEA,eAAe,KAAKA,eAAe,GAAG,CAAC,CAAC,CAAC,CAAC;AAC7C,IAAIC,SAAS;AACb,CAAC,UAAUA,SAAS,EAAE;EAClB;EACAA,SAAS,CAACA,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ;EAC7C;EACAA,SAAS,CAACA,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS;EAC/C;EACAA,SAAS,CAACA,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW;EACnD;EACAA,SAAS,CAACA,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS;AACnD,CAAC,EAAEA,SAAS,KAAKA,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;AACjC,IAAIC,mBAAmB;AACvB,CAAC,UAAUA,mBAAmB,EAAE;EAC5BA,mBAAmB,CAACA,mBAAmB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS;EACnEA,mBAAmB,CAACA,mBAAmB,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,GAAG,eAAe;EAC/EA,mBAAmB,CAACA,mBAAmB,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,GAAG,gBAAgB;AACrF,CAAC,EAAEA,mBAAmB,KAAKA,mBAAmB,GAAG,CAAC,CAAC,CAAC,CAAC;AACrD,IAAIC,iBAAiB;AACrB,CAAC,UAAUA,iBAAiB,EAAE;EAC1BA,iBAAiB,CAACA,iBAAiB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS;AACnE,CAAC,EAAEA,iBAAiB,KAAKA,iBAAiB,GAAG,CAAC,CAAC,CAAC,CAAC;AACjD,IAAIC,gBAAgB;AACpB,CAAC,UAAUA,gBAAgB,EAAE;EACzBA,gBAAgB,CAACA,gBAAgB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS;EAC7DA,gBAAgB,CAACA,gBAAgB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO;EACzDA,gBAAgB,CAACA,gBAAgB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO;AAC7D,CAAC,EAAEA,gBAAgB,KAAKA,gBAAgB,GAAG,CAAC,CAAC,CAAC,CAAC;AAC/C,IAAIC,oBAAoB;AACxB,CAAC,UAAUA,oBAAoB,EAAE;EAC7BA,oBAAoB,CAAC,aAAa,CAAC,GAAG,aAAa;EACnDA,oBAAoB,CAAC,kBAAkB,CAAC,GAAG,kBAAkB;EAC7DA,oBAAoB,CAAC,oBAAoB,CAAC,GAAG,oBAAoB;EACjEA,oBAAoB,CAAC,SAAS,CAAC,GAAG,SAAS;AAC/C,CAAC,EAAEA,oBAAoB,KAAKA,oBAAoB,GAAG,CAAC,CAAC,CAAC,CAAC;AACvD,IAAIC,cAAc;AAClB,CAAC,UAAUA,cAAc,EAAE;EACvBA,cAAc,CAAC,OAAO,CAAC,GAAG,OAAO;EACjCA,cAAc,CAAC,iBAAiB,CAAC,GAAG,iBAAiB;EACrDA,cAAc,CAAC,IAAI,CAAC,GAAG,IAAI;EAC3BA,cAAc,CAAC,kBAAkB,CAAC,GAAG,kBAAkB;EACvDA,cAAc,CAAC,gBAAgB,CAAC,GAAG,gBAAgB;EACnDA,cAAc,CAAC,eAAe,CAAC,GAAG,eAAe;EACjDA,cAAc,CAAC,cAAc,CAAC,GAAG,cAAc;AACnD,CAAC,EAAEA,cAAc,KAAKA,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC;AAE3C,IAAIC,WAAW,GAAG,MAAMA,WAAW,CAAC;EAChC7lB,WAAWA,CAAC2N,MAAM,EAAE;IAChB,MAAMmY,oBAAoB,GAAG,IAAItnB,UAAU,CAACunB,UAAU,IAAI;MACtDpY,MAAM,CAAChN,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC,MAAMmlB,UAAU,CAACriB,IAAI,CAAC,CAAC,CAAC;IAC/C,CAAC,CAAC,CACGqK,IAAI,CAACzO,GAAG,CAAC,MAAM,IAAI,CAAC0mB,eAAe,CAAC,CAAC,CAAC,EAAEpmB,SAAS,CAAC,IAAIb,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7E+mB,oBAAoB,CAACG,OAAO,CAAC,CAAC,CAAC,CAAC;IAChC;IACA,IAAI,CAACC,SAAS,GAAGJ,oBAAoB;EACzC;EACAK,OAAOA,CAACC,OAAO,EAAE;IACb,OAAO,IAAI,CAACF,SAAS,CAACnY,IAAI,CAAC1O,SAAS,CAAEgnB,QAAQ,IAAK,IAAI,CAACC,iBAAiB,CAACD,QAAQ,EAAED,OAAO,CAAC,CAAC,CAAC;EAClG;EACAE,iBAAiBA,CAACD,QAAQ,EAAED,OAAO,EAAE;IACjC,MAAMG,iBAAiB,GAAGvnB,YAAY,CAACqnB,QAAQ,CAACF,OAAO,CAAC;IACxD,OAAOI,iBAAiB,CAACH,OAAO,CAAC,CAACrY,IAAI,CAAC1O,SAAS,CAAC,CAAC,CAACmnB,OAAO,EAAEC,MAAM,CAAC,KAAK;MACpE,IAAIA,MAAM,KAAKb,cAAc,CAACc,EAAE,EAAE;QAC9B,OAAOznB,EAAE,CAACunB,OAAO,CAAC;MACtB;MACA,OAAOtnB,UAAU,CAACunB,MAAM,CAAC;IAC7B,CAAC,CAAC,CAAC;EACP;EACAT,eAAeA,CAAA,EAAG;IACd,OAAO,IAAInlB,MAAM,CAACC,IAAI,CAAC6lB,QAAQ,CAAC,CAAC;EACrC;AACJ,CAAC;AACDd,WAAW,CAAChhB,cAAc,GAAG,MAAM,CAC/B;EAAEC,IAAI,EAAEhF;AAAc,CAAC,CAC1B;AACD+lB,WAAW,CAACe,eAAe,GAAG1oB,kBAAkB,CAAC;EAAE2oB,OAAO,EAAE,SAASC,mBAAmBA,CAAA,EAAG;IAAE,OAAO,IAAIjB,WAAW,CAAC1nB,QAAQ,CAAC2B,aAAa,CAAC,CAAC;EAAE,CAAC;EAAEinB,KAAK,EAAElB,WAAW;EAAEmB,UAAU,EAAE;AAAO,CAAC,CAAC;AAC1LnB,WAAW,GAAG7oB,UAAU,CAAC,CACrBI,UAAU,CAAC;EAAE4pB,UAAU,EAAE;AAAO,CAAC,CAAC,EAClC/pB,UAAU,CAAC,mBAAmB,EAAE,CAAC6C,aAAa,CAAC,CAAC,CACnD,EAAE+lB,WAAW,CAAC;AAEf,MAAMoB,SAAS,CAAC;EACZC,eAAeA,CAAA,EAAG;IAAE,OAAOC,MAAM;EAAE;AACvC;AACA,MAAMC,WAAW,CAAC;EACdC,iBAAiBA,CAAA,EAAG;IAAE,OAAOC,QAAQ;EAAE;AAC3C;AACA,MAAMC,yBAAyB,GAAG,CAACN,SAAS,EAAEG,WAAW,CAAC;AAE1D,IAAII,wBAAwB;AAC5B,CAAC,UAAUA,wBAAwB,EAAE;EACjCA,wBAAwB,CAACA,wBAAwB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;EACvEA,wBAAwB,CAACA,wBAAwB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO;EACzEA,wBAAwB,CAACA,wBAAwB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;AAC3E,CAAC,EAAEA,wBAAwB,KAAKA,wBAAwB,GAAG,CAAC,CAAC,CAAC,CAAC;AAC/D;AACA;AACA;AACA;AACA,MAAMC,oBAAoB,GAAG,IAAIrpB,cAAc,CAAC,0CAA0C,CAAC;AAC3F,IAAIspB,iBAAiB,GAAG,MAAMA,iBAAiB,SAAS5nB,aAAa,CAAC;EAClEE,WAAWA,CAAC2nB,MAAM,GAAG,IAAI,EAAEpV,CAAC,EAAEpH,CAAC,EAAEyc,QAAQ,EAAE;IACvC,KAAK,CAAC,CAAC;IACP,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,UAAU,GAAG,wBAAwB;IAC1C,IAAI,CAACC,YAAY,GAAI,sBAAqB;IAC1C,IAAI,CAACC,OAAO,GAAGJ,MAAM,IAAI,CAAC,CAAC;IAC3B,IAAI,CAACK,UAAU,GAAGzV,CAAC;IACnB,IAAI,CAAC0V,YAAY,GAAG9c,CAAC;EACzB;EACAxK,IAAIA,CAAA,EAAG;IACH,MAAMwmB,MAAM,GAAG,IAAI,CAACa,UAAU,CAACd,eAAe,CAAC,CAAC;IAChD,IAAIC,MAAM,CAACtmB,MAAM,IAAIsmB,MAAM,CAACtmB,MAAM,CAACC,IAAI,EAAE;MACrC;MACA,OAAOV,OAAO,CAACC,OAAO,CAAC,CAAC;IAC5B;IACA,IAAI,IAAI,CAAC6nB,qBAAqB,EAAE;MAC5B,OAAO,IAAI,CAACA,qBAAqB;IACrC;IACA;IACA,MAAMC,YAAY,GAAG,IAAI,CAACF,YAAY,CAACZ,iBAAiB,CAAC,CAAC,CAACe,cAAc,CAAC,IAAI,CAACP,UAAU,CAAC;IAC1F,IAAIM,YAAY,EAAE;MACd,IAAI,CAACE,2BAA2B,CAACF,YAAY,CAAC;MAC9C,OAAO,IAAI,CAACD,qBAAqB;IACrC;IACA,MAAMI,MAAM,GAAG,IAAI,CAACL,YAAY,CAACZ,iBAAiB,CAAC,CAAC,CAACkB,aAAa,CAAC,QAAQ,CAAC;IAC5ED,MAAM,CAACxjB,IAAI,GAAG,iBAAiB;IAC/BwjB,MAAM,CAACE,KAAK,GAAG,IAAI;IACnBF,MAAM,CAACG,KAAK,GAAG,IAAI;IACnBH,MAAM,CAACjiB,EAAE,GAAG,IAAI,CAACwhB,UAAU;IAC3BS,MAAM,CAACI,GAAG,GAAG,IAAI,CAACC,aAAa,CAAC,IAAI,CAACb,YAAY,CAAC;IAClD,IAAI,CAACO,2BAA2B,CAACC,MAAM,CAAC;IACxC,IAAI,CAACL,YAAY,CAACZ,iBAAiB,CAAC,CAAC,CAACuB,IAAI,CAACC,WAAW,CAACP,MAAM,CAAC;IAC9D,OAAO,IAAI,CAACJ,qBAAqB;EACrC;EACAG,2BAA2BA,CAACS,UAAU,EAAE;IACpC,IAAI,CAACZ,qBAAqB,GAAG,IAAI9nB,OAAO,CAAC,CAACC,OAAO,EAAEgM,MAAM,KAAK;MAC1D,IAAI,CAAC2b,UAAU,CAACd,eAAe,CAAC,CAAC,CAAC,IAAI,CAACY,YAAY,CAAC,GAAG,MAAM;QACzDznB,OAAO,CAAC,CAAC;MACb,CAAC;MACDyoB,UAAU,CAACC,OAAO,GAAIC,KAAK,IAAK;QAC5B3c,MAAM,CAAC2c,KAAK,CAAC;MACjB,CAAC;IACL,CAAC,CAAC;EACN;EACAL,aAAaA,CAACb,YAAY,EAAE;IACxB,IAAImB,YAAY,GAAI,IAAI,CAAClB,OAAO,IAAI,IAAI,CAACA,OAAO,CAACmB,QAAQ,IAAK1B,wBAAwB,CAAC2B,KAAK;IAC5F,IAAID,QAAQ;IACZ,QAAQD,YAAY;MAChB,KAAKzB,wBAAwB,CAAC4B,IAAI;QAC9BF,QAAQ,GAAG,EAAE;QACb;MACJ,KAAK1B,wBAAwB,CAAC6B,IAAI;QAC9BH,QAAQ,GAAG,OAAO;QAClB;MACJ,KAAK1B,wBAAwB,CAAC2B,KAAK;QAC/BD,QAAQ,GAAG,QAAQ;QACnB;IACR;IACA,MAAMI,WAAW,GAAG,IAAI,CAACvB,OAAO,CAACuB,WAAW,IAAI,iCAAiC;IACjF,MAAMC,WAAW,GAAG;MAChBC,CAAC,EAAE,IAAI,CAACzB,OAAO,CAAC0B,UAAU,IAAI,WAAW;MACzCpT,QAAQ,EAAEyR,YAAY;MACtBvO,GAAG,EAAE,IAAI,CAACwO,OAAO,CAAC2B,MAAM;MACxBC,MAAM,EAAE,IAAI,CAAC5B,OAAO,CAAC6B,QAAQ;MAC7BC,OAAO,EAAE,IAAI,CAAC9B,OAAO,CAAC8B,OAAO;MAC7BC,SAAS,EAAE,IAAI,CAAC/B,OAAO,CAAC+B,SAAS;MACjCC,MAAM,EAAE,IAAI,CAAChC,OAAO,CAACgC,MAAM;MAC3BC,QAAQ,EAAE,IAAI,CAACjC,OAAO,CAACiC,QAAQ,IAAI,IAAI,CAACpC,QAAQ,KAAK,OAAO,GAAG,IAAI,CAACA,QAAQ,GAAG;IACnF,CAAC;IACD,MAAMqC,MAAM,GAAG1jB,MAAM,CAACuD,IAAI,CAACyf,WAAW,CAAC,CAClCxf,MAAM,CAAEC,CAAC,IAAKuf,WAAW,CAACvf,CAAC,CAAC,IAAI,IAAI,CAAC,CACrCD,MAAM,CAAEC,CAAC,IAAK;MACf;MACA,OAAO,CAAC4V,KAAK,CAACsK,OAAO,CAACX,WAAW,CAACvf,CAAC,CAAC,CAAC,IAChC4V,KAAK,CAACsK,OAAO,CAACX,WAAW,CAACvf,CAAC,CAAC,CAAC,IAAIuf,WAAW,CAACvf,CAAC,CAAC,CAACI,MAAM,GAAG,CAAE;IACpE,CAAC,CAAC,CACG9K,GAAG,CAAE0K,CAAC,IAAK;MACZ;MACA,IAAIoI,CAAC,GAAGmX,WAAW,CAACvf,CAAC,CAAC;MACtB,IAAI4V,KAAK,CAACsK,OAAO,CAAC9X,CAAC,CAAC,EAAE;QAClB,OAAO;UAAEmH,GAAG,EAAEvP,CAAC;UAAES,KAAK,EAAE2H,CAAC,CAAC+X,IAAI,CAAC,GAAG;QAAE,CAAC;MACzC;MACA,OAAO;QAAE5Q,GAAG,EAAEvP,CAAC;QAAES,KAAK,EAAE8e,WAAW,CAACvf,CAAC;MAAE,CAAC;IAC5C,CAAC,CAAC,CACG1K,GAAG,CAAE8qB,KAAK,IAAK;MAChB,OAAQ,GAAEA,KAAK,CAAC7Q,GAAI,IAAG6Q,KAAK,CAAC3f,KAAM,EAAC;IACxC,CAAC,CAAC,CACG0f,IAAI,CAAC,GAAG,CAAC;IACd,OAAQ,GAAEjB,QAAS,KAAII,WAAY,IAAGW,MAAO,EAAC;EAClD;AACJ,CAAC;AACDvC,iBAAiB,CAAC7iB,cAAc,GAAG,MAAM,CACrC;EAAEC,IAAI,EAAEwa,SAAS;EAAE7P,UAAU,EAAE,CAAC;IAAE3K,IAAI,EAAEzG;EAAS,CAAC,EAAE;IAAEyG,IAAI,EAAEjH,MAAM;IAAE8hB,IAAI,EAAE,CAAC8H,oBAAoB;EAAG,CAAC;AAAE,CAAC,EACtG;EAAE3iB,IAAI,EAAEmiB;AAAU,CAAC,EACnB;EAAEniB,IAAI,EAAEsiB;AAAY,CAAC,EACrB;EAAEtiB,IAAI,EAAEiG,MAAM;EAAE0E,UAAU,EAAE,CAAC;IAAE3K,IAAI,EAAEjH,MAAM;IAAE8hB,IAAI,EAAE,CAACrhB,SAAS;EAAG,CAAC;AAAE,CAAC,CACvE;AACDopB,iBAAiB,GAAG1qB,UAAU,CAAC,CAC3BI,UAAU,CAAC,CAAC,EACZF,OAAO,CAAC,CAAC,EAAEmB,QAAQ,CAAC,CAAC,CAAC,EAAEnB,OAAO,CAAC,CAAC,EAAEW,MAAM,CAAC4pB,oBAAoB,CAAC,CAAC,EAChEvqB,OAAO,CAAC,CAAC,EAAEW,MAAM,CAACS,SAAS,CAAC,CAAC,EAC7BrB,UAAU,CAAC,mBAAmB,EAAE,CAACsJ,MAAM,EAAE0gB,SAAS,EAAEG,WAAW,EAAErc,MAAM,CAAC,CAAC,CAC5E,EAAE2c,iBAAiB,CAAC;;AAErB;AACA;AACA;AACA;AACA;AACA,MAAM2C,iBAAiB,CAAC;EACpB1pB,IAAIA,CAAA,EAAG;IACH,IAAI,CAACwmB,MAAM,CAACtmB,MAAM,IAAI,CAACsmB,MAAM,CAACtmB,MAAM,CAACC,IAAI,EAAE;MACvC,MAAM,IAAI6f,KAAK,CAAC,gFAAgF,CAAC;IACrG;IACA,OAAOvgB,OAAO,CAACC,OAAO,CAAC,CAAC;EAC5B;AACJ;;AAEA;;AAEA,IAAIiqB,eAAe;AACnB;AACA;AACA;AACA,SAASC,cAAcA,CAAA,EAAG;EACtB,OAAO,CACH3kB,iBAAiB,EACjB+C,SAAS,EACT+D,YAAY,EACZoC,YAAY,EACZkE,aAAa,EACbuB,WAAW,EACX0G,MAAM,EACNgF,SAAS,EACT0B,UAAU,EACV0B,WAAW,EACXN,eAAe,EACfE,gBAAgB,EAChB2B,YAAY,EACZQ,eAAe,CAClB;AACL;AACA;AACA;AACA;AACA;AACA,IAAIoF,aAAa,GAAGF,eAAe,GAAG,MAAME,aAAa,CAAC;EACtD;AACJ;AACA;EACI,OAAOC,OAAOA,CAACC,uBAAuB,EAAE;IACpC,OAAO;MACHC,QAAQ,EAAEL,eAAe;MACzBzK,SAAS,EAAE,CACP,GAAG0H,yBAAyB,EAAE;QAAEjG,OAAO,EAAExhB,aAAa;QAAE8qB,QAAQ,EAAElD;MAAkB,CAAC,EACrF;QAAEpG,OAAO,EAAEmG,oBAAoB;QAAEoD,QAAQ,EAAEH;MAAwB,CAAC;IAE5E,CAAC;EACL;AACJ,CAAC;AACDF,aAAa,GAAGF,eAAe,GAAGttB,UAAU,CAAC,CACzCuB,QAAQ,CAAC;EAAEusB,YAAY,EAAEP,cAAc,CAAC,CAAC;EAAEQ,OAAO,EAAER,cAAc,CAAC;AAAE,CAAC,CAAC,CAC1E,EAAEC,aAAa,CAAC;;AAEjB;;AAEA;AACA;AACA;;AAEA,SAAS5kB,iBAAiB,EAAE+C,SAAS,EAAE6hB,aAAa,EAAE9d,YAAY,EAAEoC,YAAY,EAAE+W,WAAW,EAAE7S,aAAa,EAAEuB,WAAW,EAAE0G,MAAM,EAAEgF,SAAS,EAAE0B,UAAU,EAAE0B,WAAW,EAAEN,eAAe,EAAEE,gBAAgB,EAAE2B,YAAY,EAAEQ,eAAe,EAAE1e,aAAa,EAAE4e,eAAe,EAAEta,gBAAgB,EAAEyC,iBAAiB,EAAEkY,oBAAoB,EAAEC,cAAc,EAAE7lB,oBAAoB,EAAEynB,wBAAwB,EAAE1V,iBAAiB,EAAE+B,eAAe,EAAE4T,oBAAoB,EAAE1iB,YAAY,EAAE2iB,iBAAiB,EAAEnC,SAAS,EAAEzlB,aAAa,EAAE4P,aAAa,EAAE2a,iBAAiB,EAAE9T,cAAc,EAAE0B,eAAe,EAAEmC,gBAAgB,EAAEqL,iBAAiB,EAAEC,gBAAgB,EAAEhY,gBAAgB,IAAIsd,EAAE,EAAET,cAAc,IAAIU,EAAE,EAAEhE,SAAS,IAAIiE,EAAE,EAAE9D,WAAW,IAAI+D,EAAE,EAAE5D,yBAAyB,IAAI6D,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}