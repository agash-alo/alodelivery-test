{"ast":null,"code":"/**\r\n * AmChartsLogo module.\r\n *\r\n * AmChartsLogo shows amCharts logo for non-commercial users of a library.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Container } from \"../Container\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\nimport { Polyspline } from \"./Polyspline\";\nimport { color } from \"../utils/Color\";\nimport { LinearGradient } from \"../rendering/fills/LinearGradient\";\nimport { DesaturateFilter } from \"../rendering/filters/DesaturateFilter\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * A class used to draw and display progress indicator.\r\n *\r\n * @see {@link IAmChartsLogoEvents} for a list of available events\r\n * @see {@link IAmChartsLogoAdapters} for a list of available Adapters\r\n * @ignore Exclude from docs\r\n */\nvar AmChartsLogo = /** @class */function (_super) {\n  __extends(AmChartsLogo, _super);\n  /**\r\n   * Constructor\r\n   */\n  function AmChartsLogo() {\n    var _this =\n    // Init\n    _super.call(this) || this;\n    _this.className = \"AmChartsLogo\";\n    _this.valign = \"bottom\";\n    var d = 0.3;\n    _this.opacity = 0.3;\n    _this.defaultState.properties.opacity = 0.4;\n    _this.url = \"https://www.amcharts.com/\";\n    _this.urlTarget = \"_blank\";\n    _this.showSystemTooltip = true;\n    _this.readerTitle = \"Chart created using amCharts library\";\n    _this.width = 220 * d;\n    _this.height = 70 * d;\n    _this.background.opacity = 0;\n    var aColor = color(\"#474758\");\n    if (new InterfaceColorSet().getFor(\"background\").alternative.hex == \"#ffffff\") {\n      aColor = color(\"#ffffff\");\n    }\n    var aGradient = new LinearGradient();\n    aGradient.addColor(aColor);\n    aGradient.addColor(aColor, 1, 0.75);\n    aGradient.addColor(color(\"#3cabff\"), 1, 0.755);\n    aGradient.rotation = -10;\n    var aStroke = aGradient;\n    var m = _this.createChild(Polyspline);\n    m.shouldClone = false;\n    m.isMeasured = false;\n    m.segments = [[{\n      x: 50 * d,\n      y: 50 * d\n    }, {\n      x: 90 * d,\n      y: 50 * d\n    }, {\n      x: 120 * d,\n      y: 20 * d\n    }, {\n      x: 135 * d,\n      y: 35 * d\n    }, {\n      x: 150 * d,\n      y: 20 * d\n    }, {\n      x: 180 * d,\n      y: 50 * d\n    }, {\n      x: 200 * d,\n      y: 50 * d\n    }]];\n    m.strokeWidth = 6 * d;\n    m.tensionX = 0.8;\n    m.tensionY = 1;\n    m.stroke = color(\"#3cabff\");\n    var a = _this.createChild(Polyspline);\n    a.shouldClone = false;\n    a.isMeasured = false;\n    a.segments = [[{\n      x: 20 * d,\n      y: 50 * d\n    }, {\n      x: 50 * d,\n      y: 50 * d\n    }, {\n      x: 90 * d,\n      y: 12 * d\n    }, {\n      x: 133 * d,\n      y: 50 * d\n    }, {\n      x: 170 * d,\n      y: 50 * d\n    }, {\n      x: 200 * d,\n      y: 50 * d\n    }]];\n    a.strokeWidth = 6 * d;\n    a.tensionX = 0.75;\n    a.tensionY = 1;\n    a.stroke = aStroke;\n    _this._disposers.push(a);\n    var desaturateFilter = new DesaturateFilter();\n    _this.filters.push(desaturateFilter);\n    var desaturateFilterHover = new DesaturateFilter();\n    desaturateFilterHover.saturation = 1;\n    var hoverState = _this.states.create(\"hover\");\n    hoverState.properties.opacity = 1;\n    hoverState.filters.push(desaturateFilterHover);\n    // Apply theme\n    _this.applyTheme();\n    return _this;\n  }\n  return AmChartsLogo;\n}(Container);\nexport { AmChartsLogo };","map":{"version":3,"names":["__extends","Container","InterfaceColorSet","Polyspline","color","LinearGradient","DesaturateFilter","AmChartsLogo","_super","_this","call","className","valign","d","opacity","defaultState","properties","url","urlTarget","showSystemTooltip","readerTitle","width","height","background","aColor","getFor","alternative","hex","aGradient","addColor","rotation","aStroke","m","createChild","shouldClone","isMeasured","segments","x","y","strokeWidth","tensionX","tensionY","stroke","a","_disposers","push","desaturateFilter","filters","desaturateFilterHover","saturation","hoverState","states","create","applyTheme"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/core/elements/AmChartsLogo.js"],"sourcesContent":["/**\r\n * AmChartsLogo module.\r\n *\r\n * AmChartsLogo shows amCharts logo for non-commercial users of a library.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../Container\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { Polyspline } from \"./Polyspline\";\r\nimport { color } from \"../utils/Color\";\r\nimport { LinearGradient } from \"../rendering/fills/LinearGradient\";\r\nimport { DesaturateFilter } from \"../rendering/filters/DesaturateFilter\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A class used to draw and display progress indicator.\r\n *\r\n * @see {@link IAmChartsLogoEvents} for a list of available events\r\n * @see {@link IAmChartsLogoAdapters} for a list of available Adapters\r\n * @ignore Exclude from docs\r\n */\r\nvar AmChartsLogo = /** @class */ (function (_super) {\r\n    __extends(AmChartsLogo, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function AmChartsLogo() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"AmChartsLogo\";\r\n        _this.valign = \"bottom\";\r\n        var d = 0.3;\r\n        _this.opacity = 0.3;\r\n        _this.defaultState.properties.opacity = 0.4;\r\n        _this.url = \"https://www.amcharts.com/\";\r\n        _this.urlTarget = \"_blank\";\r\n        _this.showSystemTooltip = true;\r\n        _this.readerTitle = \"Chart created using amCharts library\";\r\n        _this.width = 220 * d;\r\n        _this.height = 70 * d;\r\n        _this.background.opacity = 0;\r\n        var aColor = color(\"#474758\");\r\n        if (new InterfaceColorSet().getFor(\"background\").alternative.hex == \"#ffffff\") {\r\n            aColor = color(\"#ffffff\");\r\n        }\r\n        var aGradient = new LinearGradient();\r\n        aGradient.addColor(aColor);\r\n        aGradient.addColor(aColor, 1, 0.75);\r\n        aGradient.addColor(color(\"#3cabff\"), 1, 0.755);\r\n        aGradient.rotation = -10;\r\n        var aStroke = aGradient;\r\n        var m = _this.createChild(Polyspline);\r\n        m.shouldClone = false;\r\n        m.isMeasured = false;\r\n        m.segments = [[{ x: 50 * d, y: 50 * d }, { x: 90 * d, y: 50 * d }, { x: 120 * d, y: 20 * d }, { x: 135 * d, y: 35 * d }, { x: 150 * d, y: 20 * d }, { x: 180 * d, y: 50 * d }, { x: 200 * d, y: 50 * d }]];\r\n        m.strokeWidth = 6 * d;\r\n        m.tensionX = 0.8;\r\n        m.tensionY = 1;\r\n        m.stroke = color(\"#3cabff\");\r\n        var a = _this.createChild(Polyspline);\r\n        a.shouldClone = false;\r\n        a.isMeasured = false;\r\n        a.segments = [[{ x: 20 * d, y: 50 * d }, { x: 50 * d, y: 50 * d }, { x: 90 * d, y: 12 * d }, { x: 133 * d, y: 50 * d }, { x: 170 * d, y: 50 * d }, { x: 200 * d, y: 50 * d }]];\r\n        a.strokeWidth = 6 * d;\r\n        a.tensionX = 0.75;\r\n        a.tensionY = 1;\r\n        a.stroke = aStroke;\r\n        _this._disposers.push(a);\r\n        var desaturateFilter = new DesaturateFilter();\r\n        _this.filters.push(desaturateFilter);\r\n        var desaturateFilterHover = new DesaturateFilter();\r\n        desaturateFilterHover.saturation = 1;\r\n        var hoverState = _this.states.create(\"hover\");\r\n        hoverState.properties.opacity = 1;\r\n        hoverState.filters.push(desaturateFilterHover);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return AmChartsLogo;\r\n}(Container));\r\nexport { AmChartsLogo };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}