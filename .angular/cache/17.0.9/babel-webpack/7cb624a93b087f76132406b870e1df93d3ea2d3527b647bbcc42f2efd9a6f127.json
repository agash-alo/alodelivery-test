{"ast":null,"code":"/**\r\n * Functionality for drawing rectangles.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Sprite } from \"../Sprite\";\nimport { registry } from \"../Registry\";\nimport * as $math from \"../utils/Math\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Used to draw a rectangle.\r\n *\r\n * @see {@link IRectangleEvents} for a list of available events\r\n * @see {@link IRectangleAdapters} for a list of available Adapters\r\n */\nvar Rectangle = /** @class */function (_super) {\n  __extends(Rectangle, _super);\n  /**\r\n   * Constructor\r\n   * * Creates a `<rect>` element\r\n   * * Creates default state\r\n   */\n  function Rectangle() {\n    var _this = _super.call(this) || this;\n    _this.className = \"Rectangle\";\n    _this.element = _this.paper.add(\"rect\");\n    //this.pixelPerfect = false;\n    _this.applyTheme();\n    return _this;\n  }\n  /**\r\n   * Draws the element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Rectangle.prototype.draw = function () {\n    _super.prototype.draw.call(this);\n    var precision = this._positionPrecision;\n    if (this.pixelPerfect) {\n      precision = 0;\n    }\n    var w = $math.round(this.innerWidth, precision);\n    var h = $math.round(this.innerHeight, precision);\n    this.element.attr({\n      \"width\": w,\n      \"height\": h\n    });\n  };\n  /**\r\n   * Measures the element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Rectangle.prototype.measureElement = function () {};\n  Object.defineProperty(Rectangle.prototype, \"bbox\", {\n    /**\r\n     * Returns bounding box (square) for this element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\n    get: function () {\n      if (this.definedBBox) {\n        return this.definedBBox;\n      }\n      if (this.isMeasured) {\n        return {\n          x: 0,\n          y: 0,\n          width: this.innerWidth,\n          height: this.innerHeight\n        };\n      } else {\n        return {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Rectangle;\n}(Sprite);\nexport { Rectangle };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"Rectangle\"] = Rectangle;","map":{"version":3,"names":["__extends","Sprite","registry","$math","Rectangle","_super","_this","call","className","element","paper","add","applyTheme","prototype","draw","precision","_positionPrecision","pixelPerfect","w","round","innerWidth","h","innerHeight","attr","measureElement","Object","defineProperty","get","definedBBox","isMeasured","x","y","width","height","enumerable","configurable","registeredClasses"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/core/elements/Rectangle.js"],"sourcesContent":["/**\r\n * Functionality for drawing rectangles.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../Sprite\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $math from \"../utils/Math\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Used to draw a rectangle.\r\n *\r\n * @see {@link IRectangleEvents} for a list of available events\r\n * @see {@link IRectangleAdapters} for a list of available Adapters\r\n */\r\nvar Rectangle = /** @class */ (function (_super) {\r\n    __extends(Rectangle, _super);\r\n    /**\r\n     * Constructor\r\n     * * Creates a `<rect>` element\r\n     * * Creates default state\r\n     */\r\n    function Rectangle() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"Rectangle\";\r\n        _this.element = _this.paper.add(\"rect\");\r\n        //this.pixelPerfect = false;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Rectangle.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        var precision = this._positionPrecision;\r\n        if (this.pixelPerfect) {\r\n            precision = 0;\r\n        }\r\n        var w = $math.round(this.innerWidth, precision);\r\n        var h = $math.round(this.innerHeight, precision);\r\n        this.element.attr({\r\n            \"width\": w,\r\n            \"height\": h\r\n        });\r\n    };\r\n    /**\r\n     * Measures the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Rectangle.prototype.measureElement = function () {\r\n    };\r\n    Object.defineProperty(Rectangle.prototype, \"bbox\", {\r\n        /**\r\n         * Returns bounding box (square) for this element.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        get: function () {\r\n            if (this.definedBBox) {\r\n                return this.definedBBox;\r\n            }\r\n            if (this.isMeasured) {\r\n                return {\r\n                    x: 0,\r\n                    y: 0,\r\n                    width: this.innerWidth,\r\n                    height: this.innerHeight\r\n                };\r\n            }\r\n            else {\r\n                return { x: 0, y: 0, width: 0, height: 0 };\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Rectangle;\r\n}(Sprite));\r\nexport { Rectangle };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Rectangle\"] = Rectangle;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,MAAM,QAAQ,WAAW;AAClC,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAO,KAAKC,KAAK,MAAM,eAAe;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,SAAS,GAAG,aAAe,UAAUC,MAAM,EAAE;EAC7CL,SAAS,CAACI,SAAS,EAAEC,MAAM,CAAC;EAC5B;AACJ;AACA;AACA;AACA;EACI,SAASD,SAASA,CAAA,EAAG;IACjB,IAAIE,KAAK,GAAGD,MAAM,CAACE,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI;IACrCD,KAAK,CAACE,SAAS,GAAG,WAAW;IAC7BF,KAAK,CAACG,OAAO,GAAGH,KAAK,CAACI,KAAK,CAACC,GAAG,CAAC,MAAM,CAAC;IACvC;IACAL,KAAK,CAACM,UAAU,CAAC,CAAC;IAClB,OAAON,KAAK;EAChB;EACA;AACJ;AACA;AACA;AACA;EACIF,SAAS,CAACS,SAAS,CAACC,IAAI,GAAG,YAAY;IACnCT,MAAM,CAACQ,SAAS,CAACC,IAAI,CAACP,IAAI,CAAC,IAAI,CAAC;IAChC,IAAIQ,SAAS,GAAG,IAAI,CAACC,kBAAkB;IACvC,IAAI,IAAI,CAACC,YAAY,EAAE;MACnBF,SAAS,GAAG,CAAC;IACjB;IACA,IAAIG,CAAC,GAAGf,KAAK,CAACgB,KAAK,CAAC,IAAI,CAACC,UAAU,EAAEL,SAAS,CAAC;IAC/C,IAAIM,CAAC,GAAGlB,KAAK,CAACgB,KAAK,CAAC,IAAI,CAACG,WAAW,EAAEP,SAAS,CAAC;IAChD,IAAI,CAACN,OAAO,CAACc,IAAI,CAAC;MACd,OAAO,EAAEL,CAAC;MACV,QAAQ,EAAEG;IACd,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIjB,SAAS,CAACS,SAAS,CAACW,cAAc,GAAG,YAAY,CACjD,CAAC;EACDC,MAAM,CAACC,cAAc,CAACtB,SAAS,CAACS,SAAS,EAAE,MAAM,EAAE;IAC/C;AACR;AACA;AACA;AACA;IACQc,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,IAAI,IAAI,CAACC,WAAW,EAAE;QAClB,OAAO,IAAI,CAACA,WAAW;MAC3B;MACA,IAAI,IAAI,CAACC,UAAU,EAAE;QACjB,OAAO;UACHC,CAAC,EAAE,CAAC;UACJC,CAAC,EAAE,CAAC;UACJC,KAAK,EAAE,IAAI,CAACZ,UAAU;UACtBa,MAAM,EAAE,IAAI,CAACX;QACjB,CAAC;MACL,CAAC,MACI;QACD,OAAO;UAAEQ,CAAC,EAAE,CAAC;UAAEC,CAAC,EAAE,CAAC;UAAEC,KAAK,EAAE,CAAC;UAAEC,MAAM,EAAE;QAAE,CAAC;MAC9C;IACJ,CAAC;IACDC,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF,OAAO/B,SAAS;AACpB,CAAC,CAACH,MAAM,CAAE;AACV,SAASG,SAAS;AAClB;AACA;AACA;AACA;AACA;AACA;AACAF,QAAQ,CAACkC,iBAAiB,CAAC,WAAW,CAAC,GAAGhC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}