{"ast":null,"code":"/**\r\n * Bullet module\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Bullet } from \"./Bullet\";\nimport { Sprite } from \"../../core/Sprite\";\nimport { registry } from \"../../core/Registry\";\nimport * as $path from \"../../core/rendering/Path\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Creates a bullet with a textual label.\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\nvar ErrorBullet = /** @class */function (_super) {\n  __extends(ErrorBullet, _super);\n  /**\r\n   * Constructor\r\n   */\n  function ErrorBullet() {\n    var _this = _super.call(this) || this;\n    _this.className = \"ErrorBullet\";\n    _this.errorLine = _this.createChild(Sprite);\n    _this.errorLine.shouldClone = false;\n    _this.width = 20;\n    _this.height = 20;\n    _this.strokeOpacity = 1;\n    _this.isDynamic = true;\n    return _this;\n  }\n  ErrorBullet.prototype.validatePosition = function () {\n    _super.prototype.validatePosition.call(this);\n    var w = this.pixelWidth / 2;\n    var h = this.pixelHeight / 2;\n    this.errorLine.path = $path.moveTo({\n      x: -w,\n      y: -h\n    }) + $path.lineTo({\n      x: w,\n      y: -h\n    }) + $path.moveTo({\n      x: 0,\n      y: -h\n    }) + $path.lineTo({\n      x: 0,\n      y: h\n    }) + $path.moveTo({\n      x: -w,\n      y: h\n    }) + $path.lineTo({\n      x: w,\n      y: h\n    });\n  };\n  /**\r\n   * Copies all proprities and related stuff from another instance of\r\n   * [[ErrorBullet]].\r\n   *\r\n   * @param source  Source element\r\n   */\n  ErrorBullet.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n    this.errorLine.copyFrom(source.errorLine);\n  };\n  return ErrorBullet;\n}(Bullet);\nexport { ErrorBullet };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"ErrorBullet\"] = ErrorBullet;","map":{"version":3,"names":["__extends","Bullet","Sprite","registry","$path","ErrorBullet","_super","_this","call","className","errorLine","createChild","shouldClone","width","height","strokeOpacity","isDynamic","prototype","validatePosition","w","pixelWidth","h","pixelHeight","path","moveTo","x","y","lineTo","copyFrom","source","registeredClasses"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/charts/elements/ErrorBullet.js"],"sourcesContent":["/**\r\n * Bullet module\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Bullet } from \"./Bullet\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a bullet with a textual label.\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nvar ErrorBullet = /** @class */ (function (_super) {\r\n    __extends(ErrorBullet, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ErrorBullet() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ErrorBullet\";\r\n        _this.errorLine = _this.createChild(Sprite);\r\n        _this.errorLine.shouldClone = false;\r\n        _this.width = 20;\r\n        _this.height = 20;\r\n        _this.strokeOpacity = 1;\r\n        _this.isDynamic = true;\r\n        return _this;\r\n    }\r\n    ErrorBullet.prototype.validatePosition = function () {\r\n        _super.prototype.validatePosition.call(this);\r\n        var w = this.pixelWidth / 2;\r\n        var h = this.pixelHeight / 2;\r\n        this.errorLine.path = $path.moveTo({ x: -w, y: -h }) + $path.lineTo({ x: w, y: -h }) + $path.moveTo({ x: 0, y: -h }) + $path.lineTo({ x: 0, y: h }) + $path.moveTo({ x: -w, y: h }) + $path.lineTo({ x: w, y: h });\r\n    };\r\n    /**\r\n     * Copies all proprities and related stuff from another instance of\r\n     * [[ErrorBullet]].\r\n     *\r\n     * @param source  Source element\r\n     */\r\n    ErrorBullet.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.errorLine.copyFrom(source.errorLine);\r\n    };\r\n    return ErrorBullet;\r\n}(Bullet));\r\nexport { ErrorBullet };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ErrorBullet\"] = ErrorBullet;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,OAAO,KAAKC,KAAK,MAAM,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,WAAW,GAAG,aAAe,UAAUC,MAAM,EAAE;EAC/CN,SAAS,CAACK,WAAW,EAAEC,MAAM,CAAC;EAC9B;AACJ;AACA;EACI,SAASD,WAAWA,CAAA,EAAG;IACnB,IAAIE,KAAK,GAAGD,MAAM,CAACE,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI;IACrCD,KAAK,CAACE,SAAS,GAAG,aAAa;IAC/BF,KAAK,CAACG,SAAS,GAAGH,KAAK,CAACI,WAAW,CAACT,MAAM,CAAC;IAC3CK,KAAK,CAACG,SAAS,CAACE,WAAW,GAAG,KAAK;IACnCL,KAAK,CAACM,KAAK,GAAG,EAAE;IAChBN,KAAK,CAACO,MAAM,GAAG,EAAE;IACjBP,KAAK,CAACQ,aAAa,GAAG,CAAC;IACvBR,KAAK,CAACS,SAAS,GAAG,IAAI;IACtB,OAAOT,KAAK;EAChB;EACAF,WAAW,CAACY,SAAS,CAACC,gBAAgB,GAAG,YAAY;IACjDZ,MAAM,CAACW,SAAS,CAACC,gBAAgB,CAACV,IAAI,CAAC,IAAI,CAAC;IAC5C,IAAIW,CAAC,GAAG,IAAI,CAACC,UAAU,GAAG,CAAC;IAC3B,IAAIC,CAAC,GAAG,IAAI,CAACC,WAAW,GAAG,CAAC;IAC5B,IAAI,CAACZ,SAAS,CAACa,IAAI,GAAGnB,KAAK,CAACoB,MAAM,CAAC;MAAEC,CAAC,EAAE,CAACN,CAAC;MAAEO,CAAC,EAAE,CAACL;IAAE,CAAC,CAAC,GAAGjB,KAAK,CAACuB,MAAM,CAAC;MAAEF,CAAC,EAAEN,CAAC;MAAEO,CAAC,EAAE,CAACL;IAAE,CAAC,CAAC,GAAGjB,KAAK,CAACoB,MAAM,CAAC;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE,CAACL;IAAE,CAAC,CAAC,GAAGjB,KAAK,CAACuB,MAAM,CAAC;MAAEF,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAEL;IAAE,CAAC,CAAC,GAAGjB,KAAK,CAACoB,MAAM,CAAC;MAAEC,CAAC,EAAE,CAACN,CAAC;MAAEO,CAAC,EAAEL;IAAE,CAAC,CAAC,GAAGjB,KAAK,CAACuB,MAAM,CAAC;MAAEF,CAAC,EAAEN,CAAC;MAAEO,CAAC,EAAEL;IAAE,CAAC,CAAC;EACtN,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIhB,WAAW,CAACY,SAAS,CAACW,QAAQ,GAAG,UAAUC,MAAM,EAAE;IAC/CvB,MAAM,CAACW,SAAS,CAACW,QAAQ,CAACpB,IAAI,CAAC,IAAI,EAAEqB,MAAM,CAAC;IAC5C,IAAI,CAACnB,SAAS,CAACkB,QAAQ,CAACC,MAAM,CAACnB,SAAS,CAAC;EAC7C,CAAC;EACD,OAAOL,WAAW;AACtB,CAAC,CAACJ,MAAM,CAAE;AACV,SAASI,WAAW;AACpB;AACA;AACA;AACA;AACA;AACA;AACAF,QAAQ,CAAC2B,iBAAiB,CAAC,aAAa,CAAC,GAAGzB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}