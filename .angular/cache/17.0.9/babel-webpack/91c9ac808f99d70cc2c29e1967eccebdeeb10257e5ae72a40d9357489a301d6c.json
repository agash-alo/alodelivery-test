{"ast":null,"code":"/**\r\n * XY series module.\r\n */\nimport { __extends, __values } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Series, SeriesDataItem } from \"./Series\";\nimport { Sprite, visualProperties } from \"../../core/Sprite\";\nimport { ValueAxis } from \"../axes/ValueAxis\";\nimport { Dictionary } from \"../../core/utils/Dictionary\";\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\nimport { XYChart } from \"../types/XYChart\";\nimport { CategoryAxis } from \"../axes/CategoryAxis\";\nimport { DateAxis } from \"../axes/DateAxis\";\nimport { registry } from \"../../core/Registry\";\nimport * as $iter from \"../../core/utils/Iterator\";\nimport * as $math from \"../../core/utils/Math\";\nimport * as $utils from \"../../core/utils/Utils\";\nimport * as $type from \"../../core/utils/Type\";\nimport * as $time from \"../../core/utils/Time\";\nimport * as $array from \"../../core/utils/Array\";\nimport * as $object from \"../../core/utils/Object\";\nimport * as $path from \"../../core/rendering/Path\";\nimport { options } from \"../../core/Options\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Defines a [[DataItem]] for [[XYSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\nvar XYSeriesDataItem = /** @class */function (_super) {\n  __extends(XYSeriesDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n  function XYSeriesDataItem() {\n    var _this = _super.call(this) || this;\n    _this.className = \"XYSeriesDataItem\";\n    _this.values.customValue = {};\n    _this.values.valueX = {\n      stack: 0\n    };\n    _this.values.valueY = {\n      stack: 0\n    };\n    _this.values.openValueX = {};\n    _this.values.openValueY = {};\n    _this.values.dateX = {};\n    _this.values.dateY = {};\n    _this.values.openDateX = {};\n    _this.values.openDateY = {};\n    _this.setLocation(\"dateX\", 0.5, 0);\n    _this.setLocation(\"dateY\", 0.5, 0);\n    _this.setLocation(\"categoryX\", 0.5, 0);\n    _this.setLocation(\"categoryY\", 0.5, 0);\n    _this.applyTheme();\n    return _this;\n  }\n  Object.defineProperty(XYSeriesDataItem.prototype, \"valueX\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function () {\n      return this.values.valueX.value;\n    },\n    /**\r\n     * Item's numeric value on X value axis.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function (value) {\n      this.setValue(\"valueX\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"customValue\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function () {\n      return this.values.customValue.value;\n    },\n    /**\r\n     * Item's custom numeric value.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function (value) {\n      this.setValue(\"customValue\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"valueY\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function () {\n      return this.values.valueY.value;\n    },\n    /**\r\n     * Item's numeric value on Y value axis.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function (value) {\n      this.setValue(\"valueY\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"dateX\", {\n    /**\r\n     * @return Date\r\n     */\n    get: function () {\n      return this.getDate(\"dateX\");\n    },\n    /**\r\n     * Item's date value on X date-based axis.\r\n     *\r\n     * @param date  Date\r\n     */\n    set: function (date) {\n      this.setDate(\"dateX\", date);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"dateY\", {\n    /**\r\n     * @return Date\r\n     */\n    get: function () {\n      return this.getDate(\"dateY\");\n    },\n    /**\r\n     * Item's date value on Y date-based axis.\r\n     *\r\n     * @param date  Date\r\n     */\n    set: function (date) {\n      this.setDate(\"dateY\", date);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"categoryX\", {\n    /**\r\n     * @return Category\r\n     */\n    get: function () {\n      return this.categories.categoryX;\n    },\n    /**\r\n     * Item's category on X category axis.\r\n     *\r\n     * @param category  Category\r\n     */\n    set: function (category) {\n      this.setCategory(\"categoryX\", category);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"categoryY\", {\n    /**\r\n     * @return Category\r\n     */\n    get: function () {\n      return this.categories.categoryY;\n    },\n    /**\r\n     * Item's category on Y category axis.\r\n     *\r\n     * @param category  Category\r\n     */\n    set: function (category) {\n      this.setCategory(\"categoryY\", category);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"openValueX\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function () {\n      return this.values.openValueX.value;\n    },\n    /**\r\n     * Item's open numeric value on X value axis.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function (value) {\n      this.setValue(\"openValueX\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"openValueY\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function () {\n      return this.values.openValueY.value;\n    },\n    /**\r\n     * Item's open numeric value on Y value axis.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function (value) {\n      this.setValue(\"openValueY\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"openDateX\", {\n    /**\r\n     * @return Date\r\n     */\n    get: function () {\n      return this.getDate(\"openDateX\");\n    },\n    /**\r\n     * Item's open date value on X date-based axis.\r\n     *\r\n     * @param date  Date\r\n     */\n    set: function (date) {\n      this.setDate(\"openDateX\", date);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"openDateY\", {\n    /**\r\n     * @return Date\r\n     */\n    get: function () {\n      return this.getDate(\"openDateY\");\n    },\n    /**\r\n     * Item's open date value on Y date-based axis.\r\n     *\r\n     * @param date  Date\r\n     */\n    set: function (date) {\n      this.setDate(\"openDateY\", date);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"openCategoryX\", {\n    /**\r\n     * @return Category\r\n     */\n    get: function () {\n      return this.categories.openCategoryX;\n    },\n    /**\r\n     * Item's open category on X category axis.\r\n     *\r\n     * @param category  Category\r\n     */\n    set: function (category) {\n      this.setCategory(\"openCategoryX\", category);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"openCategoryY\", {\n    /**\r\n     * @return Category\r\n     */\n    get: function () {\n      return this.categories.openCategoryY;\n    },\n    /**\r\n     * Item's open category on Y category axis.\r\n     *\r\n     * @param category  Category\r\n     */\n    set: function (category) {\n      this.setCategory(\"openCategoryY\", category);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Return smallest value out of all item's value fields.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param fields      Fields to check in\r\n   * @param working     Include working (temporary) values\r\n   * @param stackValue  If item is in a stack, the value item starts as\r\n   * @return Value\r\n   */\n  XYSeriesDataItem.prototype.getMin = function (fields, working, stackValue) {\n    var _this = this;\n    //if (this.visible) {  // dumped because of non smooth zooming\n    var min;\n    if (!$type.isNumber(stackValue)) {\n      stackValue = 0;\n    }\n    $array.each(fields, function (field) {\n      var value;\n      if (working) {\n        value = _this.getWorkingValue(field);\n      } else {\n        value = _this.getValue(field);\n      }\n      value += stackValue;\n      if (value < min || !$type.isNumber(min)) {\n        min = value;\n      }\n    });\n    return min;\n    //}\n  };\n  /**\r\n   * Return biggest value out of all item's value fields.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param fields      Fields to check in\r\n   * @param working     Include working (temporary) values\r\n   * @param stackValue  If item is in a stack, the value item starts as\r\n   * @return Value\r\n   */\n  XYSeriesDataItem.prototype.getMax = function (fields, working, stackValue) {\n    var _this = this;\n    //if (this.visible) { // dumped because of non smooth zooming\n    var max;\n    if (!$type.isNumber(stackValue)) {\n      stackValue = 0;\n    }\n    $array.each(fields, function (field) {\n      var value;\n      if (working) {\n        value = _this.getWorkingValue(field);\n      } else {\n        value = _this.getValue(field);\n      }\n      value += stackValue;\n      if (value > max || !$type.isNumber(max)) {\n        max = value;\n      }\n    });\n    return max;\n    //}\n  };\n\n  return XYSeriesDataItem;\n}(SeriesDataItem);\nexport { XYSeriesDataItem };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Defines Series for [[XYChart]].\r\n *\r\n * @see {@link IXYSeriesEvents} for a list of available Events\r\n * @see {@link IXYSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\nvar XYSeries = /** @class */function (_super) {\n  __extends(XYSeries, _super);\n  /**\r\n   * Constructor\r\n   */\n  function XYSeries() {\n    var _this = _super.call(this) || this;\n    /**\r\n     * Indicates which of the series' `dataFields` to calculate aggregate values\r\n     * for.\r\n     *\r\n     * Available data fields for all [[XYSeries]] are:\r\n     * `valueX`, `valueY`, `openValueX`, and `openValueY`.\r\n     *\r\n     * [[CandlestickSeries]] adds:\r\n     * `lowValueX`, `lowValueY`, `highValueX`, and `highValueY`.\r\n     *\r\n     * Available options:\r\n     * `\"open\"`, `\"close\"`, `\"low\"`, `\"high\"`, `\"average\"`, `\"sum\"`.\r\n     *\r\n     * Defaults are as follows:\r\n     * * `valueX`: `\"close\"`\r\n     * * `valueY`: `\"close\"`\r\n     * * `openValueX`: `\"open\"`\r\n     * * `openValueY`: `\"open\"`\r\n     * * `lowValueX`: `\"low\"`\r\n     * * `lowValueY`: `\"low\"`\r\n     * * `highValueX`: `\"high\"`\r\n     * * `highValueY`: `\"high\"`\r\n     *\r\n     * Is required only if data being plotted on a `DateAxis` and\r\n     * its `groupData` is set to `true`.\r\n     *\r\n     * ```TypeScript\r\n     * let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n     * dateAxis.groupData = true;\r\n     *\r\n     * let valueAxis = chart.xAxes.push(new am4charts.valueAxis());\r\n     *\r\n     * let series = chart.series.push(new am4charts.LineSeries());\r\n     * series.dataFields.dateX = \"date\";\r\n     * series.dataFields.valueY = \"value\";\r\n     * series.groupFields.valueY = \"average\";\r\n     * ```\r\n     * ```JavaScript\r\n     * var dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n     * dateAxis.groupData = true;\r\n     *\r\n     * var valueAxis = chart.xAxes.push(new am4charts.valueAxis());\r\n     *\r\n     * var series = chart.series.push(new am4charts.LineSeries());\r\n     * series.dataFields.dateX = \"date\";\r\n     * series.dataFields.valueY = \"value\";\r\n     * series.groupFields.valueY = \"average\";\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"xAxes\": [{\r\n     *     \"type\": \"DateAxis\",\r\n     *     \"groupData\": true\r\n     *   }],\r\n     *   \"yAxes\": [{\r\n     *     \"type\": \"ValueAxis\"\r\n     *   }],\r\n     *   \"series\": [{\r\n     *     \"type\": \"LineSeries\",\r\n     *     \"dataFields\": {\r\n     *       \"dateX\": \"date\",\r\n     *       \"valueY\": \"value\"\r\n     *     },\r\n     *     \"groupFields\": {\r\n     *       \"valueY\": \"average\"\r\n     *     }\r\n     *   }]\r\n     * }\r\n     * ```\r\n     *\r\n     * The above setup will ensure, that if there are many data items within\r\n     * selected range, they will be grouped into aggregated data points, using\r\n     * average value of all the values.\r\n     *\r\n     * For example if we have 2 years worth of daily data (~700 data items), when\r\n     * fully zoomed out, the chart would show ~100 data items instead: one for\r\n     * each week in those two years.\r\n     *\r\n     * Grouping will occur automatically, based on current selection range, and\r\n     * will change dynamically when user zooms in/out the chart.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/date-axis/#Dynamic_data_item_grouping} for more information about dynamic data item grouping.\r\n     * @since 4.7.0\r\n     */\n    _this.groupFields = {};\n    /**\r\n     * X axis the series is attached to.\r\n     */\n    _this._xAxis = new MutableValueDisposer();\n    /**\r\n     * Y axis the series is attached to.\r\n     */\n    _this._yAxis = new MutableValueDisposer();\n    /**\r\n     * [_xValueFields description]\r\n     *\r\n     * @todo Description\r\n     */\n    _this._xValueFields = [];\n    /**\r\n     * [_yValueFields description]\r\n     *\r\n     * @todo Description\r\n     */\n    _this._yValueFields = [];\n    /**\r\n     * @ignore\r\n     */\n    _this._baseInterval = {};\n    /**\r\n     * @ignore\r\n     */\n    _this.dataGrouped = false;\n    /**\r\n     * @ignore\r\n     */\n    _this.usesShowFields = false;\n    /**\r\n     * @ignore\r\n     */\n    _this._dataSetChanged = false;\n    _this._maxxX = 100000;\n    _this._maxxY = 100000;\n    _this._propertiesChanged = false;\n    /**\r\n     * @ignore\r\n     */\n    _this.outOfRange = false;\n    _this.className = \"XYSeries\";\n    _this.isMeasured = false;\n    _this.groupFields.valueX = \"close\";\n    _this.groupFields.valueY = \"close\";\n    _this.groupFields.customValue = \"close\";\n    _this.groupFields.openValueX = \"open\";\n    _this.groupFields.openValueY = \"open\";\n    _this.cursorTooltipEnabled = true;\n    _this.cursorHoverEnabled = true;\n    _this.excludeFromTotal = false;\n    _this.mainContainer.mask = new Sprite();\n    _this.mainContainer.mask.setElement(_this.paper.add(\"path\"));\n    _this.stacked = false;\n    _this.snapTooltip = false;\n    _this._showBullets = false;\n    _this.tooltip.pointerOrientation = \"horizontal\";\n    _this.properties.stackToNegative = true;\n    _this.hideTooltipWhileZooming = true;\n    _this.setPropertyValue(\"maskBullets\", true);\n    _this.tooltip.events.on(\"hidden\", function () {\n      _this.returnBulletDefaultState();\n    }, undefined, false);\n    _this._disposers.push(_this._xAxis);\n    _this._disposers.push(_this._yAxis);\n    _this.observe(visualProperties, function () {\n      if (_this.inited) {\n        _this._propertiesChanged = true;\n        if (_this.legendDataItem) {\n          _this.legendDataItem.childrenCreated = false;\n        }\n        if (_this.chart && _this.chart.legend) {\n          _this.chart.legend.invalidateDataItems();\n        }\n        _this.invalidate();\n      }\n    }, undefined, false);\n    _this.applyTheme();\n    return _this;\n  }\n  /**\r\n   * Sets defaults that instantiate some objects that rely on parent, so they\r\n   * cannot be set in constructor.\r\n   */\n  XYSeries.prototype.applyInternalDefaults = function () {\n    _super.prototype.applyInternalDefaults.call(this);\n    if (!$type.hasValue(this.readerTitle)) {\n      this.readerTitle = this.language.translate(\"X/Y Series\");\n    }\n  };\n  /**\r\n   * Returns a new/empty DataItem of the type appropriate for this object.\r\n   *\r\n   * @see {@link DataItem}\r\n   * @return Data Item\r\n   */\n  XYSeries.prototype.createDataItem = function () {\n    return new XYSeriesDataItem();\n  };\n  /**\r\n   * @ignore\r\n   */\n  XYSeries.prototype.resetExtremes = function () {\n    this._tmin.clear();\n    this._tmax.clear();\n    this._smin.clear();\n    this._smax.clear();\n  };\n  /**\r\n   * @ignore\r\n   */\n  XYSeries.prototype.dataChangeUpdate = function () {\n    this.dataGrouped = false;\n    this._baseInterval = {};\n    this._currentDataSetId = \"\";\n    this.resetExtremes();\n    if (this.xAxis) {\n      this.xAxis.seriesDataChangeUpdate(this);\n    }\n    if (this.yAxis) {\n      this.yAxis.seriesDataChangeUpdate(this);\n    }\n  };\n  /**\r\n   * (Re)validates the series' data.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  XYSeries.prototype.validateData = function () {\n    this._baseInterval = {};\n    var dataFields = this.dataFields;\n    if (dataFields.valueYShow || dataFields.openValueXShow || dataFields.openValueXShow || dataFields.openValueYShow) {\n      this.usesShowFields = true;\n    } else {\n      this.usesShowFields = false;\n    }\n    this.defineFields();\n    if (this.data.length > 0) {\n      this.dataChangeUpdate();\n    }\n    _super.prototype.validateData.call(this);\n    this.updateItemReaderText();\n    if (this.chart) {\n      if (!$type.hasValue(this.dataFields[this._xField]) || !$type.hasValue(this.dataFields[this._yField])) {\n        throw Error(\"Data fields for series \\\"\" + (this.name ? this.name : this.uid) + \"\\\" are not properly defined.\");\n      }\n    }\n    // 4.7.21 solves 51540\n    if (this.inited && this.isHidden) {\n      this.hide(0);\n    }\n    this.dataGrouped = false;\n  };\n  /**\r\n   * Processes data item.\r\n   *\r\n   * @param dataItem     Data item\r\n   * @param dataContext  Raw data\r\n   * @param index        Index of the data item\r\n   */\n  XYSeries.prototype.processDataItem = function (dataItem, dataContext) {\n    try {\n      _super.prototype.processDataItem.call(this, dataItem, dataContext);\n      this.xAxis.processSeriesDataItem(dataItem, \"X\");\n      this.yAxis.processSeriesDataItem(dataItem, \"Y\");\n      this.setInitialWorkingValues(dataItem);\n    } catch (e) {\n      if (this._chart) {\n        this._chart.raiseCriticalError(e);\n      }\n    }\n  };\n  /**\r\n   *\r\n   * When validating raw data, instead of processing data item, we update it\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param item\r\n   */\n  XYSeries.prototype.updateDataItem = function (dataItem) {\n    _super.prototype.updateDataItem.call(this, dataItem);\n    //dataItem.events.disable();\n    this.xAxis.processSeriesDataItem(dataItem, \"X\");\n    this.yAxis.processSeriesDataItem(dataItem, \"Y\");\n    //dataItem.events.enable();\t\t\n  };\n  /**\r\n   * Inits data item's working values.\r\n   *\r\n   * @param dataItem  Data item\r\n   * @param index     Data item's index\r\n   */\n  XYSeries.prototype.setInitialWorkingValues = function (dataItem) {};\n  /**\r\n   * @ignore\r\n   */\n  XYSeries.prototype.disposeData = function () {\n    _super.prototype.disposeData.call(this);\n    var xAxis = this.xAxis;\n    var yAxis = this.yAxis;\n    if (xAxis) {\n      var dataItemsX = this.dataItemsByAxis.getKey(xAxis.uid);\n      if (dataItemsX) {\n        dataItemsX.clear();\n      }\n      if (xAxis instanceof CategoryAxis) {\n        this.clearCatAxis(xAxis);\n      }\n    }\n    if (yAxis) {\n      var dataItemsY = this.dataItemsByAxis.getKey(yAxis.uid);\n      if (dataItemsY) {\n        dataItemsY.clear();\n      }\n      if (yAxis instanceof CategoryAxis) {\n        this.clearCatAxis(yAxis);\n      }\n    }\n  };\n  /**\r\n   * @ignore\r\n   */\n  XYSeries.prototype.clearCatAxis = function (axis) {\n    var uid = this.uid;\n    axis.dataItems.each(function (dataItem) {\n      if (dataItem.seriesDataItems[uid]) {\n        dataItem.seriesDataItems[uid] = [];\n      }\n    });\n  };\n  /**\r\n   * Sets up which data fields to use for data access.\r\n   */\n  XYSeries.prototype.defineFields = function () {\n    var xAxis = this.xAxis;\n    var yAxis = this.yAxis;\n    if (xAxis && yAxis) {\n      var xAxisFieldName = xAxis.axisFieldName;\n      var xField = xAxisFieldName + \"X\";\n      var xOpenField = \"open\" + $utils.capitalize(xAxisFieldName) + \"X\";\n      var yAxisFieldName = yAxis.axisFieldName;\n      var yField = yAxisFieldName + \"Y\";\n      var yOpenField = \"open\" + $utils.capitalize(yAxisFieldName) + \"Y\";\n      this._xField = xField;\n      this._yField = yField;\n      if (this.dataFields[xOpenField]) {\n        this._xOpenField = xOpenField;\n      }\n      if (this.dataFields[yOpenField]) {\n        this._yOpenField = yOpenField;\n      }\n      if (!this.dataFields[yOpenField] && this.baseAxis == yAxis) {\n        this._yOpenField = yField;\n      }\n      if (!this.dataFields[xOpenField] && this.baseAxis == xAxis) {\n        this._xOpenField = xField;\n      }\n      if (this.stacked && this.baseAxis == xAxis) {\n        this._xOpenField = xField;\n      }\n      if (this.stacked && this.baseAxis == yAxis) {\n        this._yOpenField = yField;\n      }\n      if (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n        if (!this._yOpenField) {\n          this._yOpenField = yField;\n        }\n      }\n      this._xValueFields = [];\n      this._yValueFields = [];\n      this.addValueField(xAxis, this._xValueFields, this._xField);\n      this.addValueField(xAxis, this._xValueFields, this._xOpenField);\n      this.addValueField(yAxis, this._yValueFields, this._yField);\n      this.addValueField(yAxis, this._yValueFields, this._yOpenField);\n    }\n  };\n  /**\r\n   * [axis description]\r\n   *\r\n   * @todo Description\r\n   * @param axis    Axis\r\n   * @param fields  Fields (?)\r\n   * @param field   Field\r\n   */\n  XYSeries.prototype.addValueField = function (axis, fields, field) {\n    if (axis instanceof ValueAxis) {\n      if ($type.hasValue(this.dataFields[field]) && fields.indexOf(field) == -1) {\n        fields.push(field);\n      }\n    }\n  };\n  /**\r\n   * Sets category field from the category axis.\r\n   *\r\n   * User might set field for category axis only, but not for series. In such\r\n   * case, we take field value from axis and set it for series.\r\n   *\r\n   * @param field  Field\r\n   * @param axis   Axis\r\n   */\n  XYSeries.prototype.setCategoryAxisField = function (field, axis) {\n    if (!$type.hasValue(this.dataFields[field])) {\n      this.dataFields[field] = axis.dataFields.category;\n    }\n  };\n  /**\r\n   * Sets date field from the date axis.\r\n   *\r\n   * User might set field for category axis only, but not for series. In such\r\n   * case, we take field value from axis and set it for series.\r\n   *\r\n   * @param field  Field\r\n   * @param axis   Axis\r\n   */\n  XYSeries.prototype.setDateAxisField = function (field, axis) {\n    if (!$type.hasValue(this.dataFields[field])) {\n      this.dataFields[field] = axis.dataFields.date;\n    }\n  };\n  /**\r\n   * Performs after-draw tasks, e.g. creates masks.\r\n   */\n  XYSeries.prototype.afterDraw = function () {\n    _super.prototype.afterDraw.call(this);\n    this.createMask();\n  };\n  /**\r\n   * Create a mask for the series.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  XYSeries.prototype.createMask = function () {\n    // this mask from which we cut out ranges. does not work well if ranges overlap.\n    if (this.mainContainer.mask) {\n      var path_1 = this.getMaskPath();\n      // @todo: this approach won't work well on circluar or other non x/y axes\n      $iter.each(this.axisRanges.iterator(), function (range) {\n        if (range.axisFill.fillPath) {\n          range.axisFill.validate();\n          path_1 += range.axisFill.fillPath;\n        }\n      });\n      this.mainContainer.mask.path = path_1;\n    }\n  };\n  /**\r\n   * Returns an SVG path to use as series mask.\r\n   *\r\n   * @return SVG path\r\n   */\n  XYSeries.prototype.getMaskPath = function () {\n    if (this.xAxis && this.yAxis) {\n      return $path.rectToPath({\n        x: 0,\n        y: 0,\n        width: this.xAxis.axisLength,\n        height: this.yAxis.axisLength\n      });\n    }\n    return \"\";\n  };\n  /**\r\n   * Returns axis data field to use.\r\n   *\r\n   * @param axis  Axis\r\n   * @return Field name\r\n   */\n  XYSeries.prototype.getAxisField = function (axis) {\n    if (axis == this.xAxis) {\n      return this.xField;\n    }\n    if (axis == this.yAxis) {\n      return this.yField;\n    }\n  };\n  /**\r\n   * Validates data items.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  XYSeries.prototype.validateDataItems = function () {\n    var chart = this.chart;\n    if (chart) {\n      this._maxxX = $math.max(100000, chart.plotContainer.maxWidth * 2);\n      this._maxxY = $math.max(100000, chart.plotContainer.maxHeight * 2);\n    }\n    // this helps date axis to check which baseInterval we should use\n    var xAxis = this.xAxis;\n    var yAxis = this.yAxis;\n    if (xAxis && yAxis) {\n      xAxis.updateAxisBySeries();\n      yAxis.updateAxisBySeries();\n    }\n    _super.prototype.validateDataItems.call(this);\n    if (xAxis && yAxis) {\n      xAxis.postProcessSeriesDataItems(this);\n      yAxis.postProcessSeriesDataItems(this);\n    }\n  };\n  /**\r\n   * Validates data range.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  XYSeries.prototype.validateDataRange = function () {\n    var xAxis = this.xAxis;\n    var yAxis = this.yAxis;\n    if (xAxis && yAxis) {\n      if (xAxis.dataRangeInvalid) {\n        xAxis.validateDataRange();\n      }\n      if (yAxis.dataRangeInvalid) {\n        yAxis.validateDataRange();\n      }\n    }\n    _super.prototype.validateDataRange.call(this);\n  };\n  /**\r\n   * (Re)validates the whole series, effectively causing it to redraw.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  XYSeries.prototype.validate = function () {\n    var xAxis = this.xAxis;\n    var yAxis = this.yAxis;\n    if (xAxis && yAxis) {\n      if (xAxis.invalid) {\n        xAxis.validate();\n      }\n      if (yAxis.invalid) {\n        yAxis.validate();\n      }\n      this.y = yAxis.pixelY;\n      this.x = xAxis.pixelX;\n      this._showBullets = true;\n      var minBulletDistance = this.minBulletDistance;\n      if ($type.isNumber(minBulletDistance)) {\n        if (this.baseAxis.axisLength / (this.endIndex - this.startIndex) < minBulletDistance) {\n          this._showBullets = false;\n        }\n      }\n    }\n    this.updateTooltip();\n    if (xAxis instanceof DateAxis && xAxis.groupData && !this.dataGrouped || yAxis instanceof DateAxis && yAxis.groupData && !this.dataGrouped) {\n      return;\n    }\n    _super.prototype.validate.call(this);\n    var chart = this.chart;\n    var maskBullets = this.maskBullets;\n    if (chart && maskBullets) {\n      if (chart.className == \"XYChart\") {\n        if (chart.leftAxesContainer.layout == \"vertical\" || chart.rightAxesContainer.layout == \"vertical\") {\n          if (this.yAxis) {\n            this.bulletsContainer.mask = this.yAxis.renderer.gridContainer;\n          } else {\n            this.bulletsContainer.mask = undefined;\n          }\n        }\n        if (chart.topAxesContainer.layout == \"horizontal\" || chart.bottomAxesContainer.layout == \"horizontal\") {\n          if (this.xAxis) {\n            this.bulletsContainer.mask = this.xAxis.renderer.gridContainer;\n          } else {\n            this.bulletsContainer.mask = undefined;\n          }\n        }\n      }\n    }\n  };\n  Object.defineProperty(XYSeries.prototype, \"xAxis\", {\n    /**\r\n     * @return Axis\r\n     */\n    get: function () {\n      if (this.chart) {\n        if (!this._xAxis.get()) {\n          var axis = this.chart.xAxes.getIndex(0);\n          if (!axis) {\n            throw Error(\"There are no X axes on chart.\");\n          }\n          this.xAxis = axis;\n        }\n        return this._xAxis.get();\n      }\n    },\n    /**\r\n     * X axis the series is attached to.\r\n     *\r\n     * @param axis  Axis\r\n     */\n    set: function (axis) {\n      this.setXAxis(axis);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  XYSeries.prototype.setXAxis = function (axis) {\n    var oldAxis = this._xAxis.get();\n    if (oldAxis != axis) {\n      if (oldAxis) {\n        this.dataItemsByAxis.removeKey(oldAxis.uid);\n        // TODO why is this here ?\n        this._xAxis.dispose();\n        // temp @todo: why it is not disposed?\n        oldAxis.series.removeValue(this);\n      }\n      this._xAxis.set(axis, axis.registerSeries(this));\n      this.dataItemsByAxis.setKey(axis.uid, new Dictionary());\n      this.invalidateData();\n    }\n  };\n  Object.defineProperty(XYSeries.prototype, \"yAxis\", {\n    /**\r\n     * @return Axis\r\n     */\n    get: function () {\n      if (this.chart) {\n        if (!this._yAxis.get()) {\n          var axis = this.chart.yAxes.getIndex(0);\n          if (!axis) {\n            throw Error(\"There are no Y axes on chart.\");\n          }\n          this.yAxis = axis;\n        }\n        return this._yAxis.get();\n      }\n    },\n    /**\r\n     * Y axis the series is attached to.\r\n     *\r\n     * @param axis  Axis\r\n     */\n    set: function (axis) {\n      this.setYAxis(axis);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  XYSeries.prototype.setYAxis = function (axis) {\n    var oldAxis = this._yAxis.get();\n    if (oldAxis != axis) {\n      if (oldAxis) {\n        this.dataItemsByAxis.removeKey(oldAxis.uid);\n        // TODO why is this here ?\n        this._yAxis.dispose();\n        // temp @todo: why it is not disposed?\n        oldAxis.series.removeValue(this);\n      }\n      this._yAxis.set(axis, axis.registerSeries(this));\n      if (axis.chart instanceof XYChart) {\n        axis.chart.handleYAxisSet(this);\n      }\n      this.dataItemsByAxis.setKey(axis.uid, new Dictionary());\n      this.invalidateData();\n    }\n  };\n  Object.defineProperty(XYSeries.prototype, \"baseAxis\", {\n    /**\r\n     * @return Axis\r\n     */\n    get: function () {\n      var xAxis = this.xAxis;\n      var yAxis = this.yAxis;\n      if (!this._baseAxis && xAxis && yAxis) {\n        if (yAxis instanceof DateAxis) {\n          this._baseAxis = yAxis;\n        }\n        if (xAxis instanceof DateAxis) {\n          this._baseAxis = xAxis;\n        }\n        if (yAxis instanceof CategoryAxis) {\n          this._baseAxis = yAxis;\n        }\n        if (xAxis instanceof CategoryAxis) {\n          this._baseAxis = xAxis;\n        }\n        if (!this._baseAxis) {\n          this._baseAxis = xAxis;\n        }\n      }\n      return this._baseAxis;\n    },\n    /**\r\n     * The main (base) axis.\r\n     *\r\n     * This is the axis that series fills will go to, or grow animations will\r\n     * happen from.\r\n     *\r\n     * @param value  Axis\r\n     */\n    set: function (value) {\n      if (this._baseAxis != value) {\n        this._baseAxis = value;\n        this.invalidate();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Adds one or several (array) of data items to the existing data.\r\n   *\r\n   * @param rawDataItem One or many raw data item objects\r\n   */\n  XYSeries.prototype.addData = function (rawDataItem, removeCount, skipRaw) {\n    _super.prototype.addData.call(this, rawDataItem, removeCount, skipRaw);\n    var scrollbarSeries = this.scrollbarSeries;\n    if (scrollbarSeries) {\n      this.scrollbarSeries.addData(rawDataItem, removeCount, true);\n      this.scrollbarSeries._parseDataFrom = this._parseDataFrom;\n    }\n  };\n  XYSeries.prototype.setData = function (value) {\n    _super.prototype.setData.call(this, value);\n    if (this.scrollbarSeries) {\n      this.scrollbarSeries.setData(value);\n    }\n  };\n  /**\r\n   * Makes the chart use particular data set.\r\n   *\r\n   * If `id` is not provided or there is no such data set, main data will be\r\n   * used.\r\n   *\r\n   * @ignore\r\n   * @since 4.7.0\r\n   * @param  id  Data set id\r\n   */\n  XYSeries.prototype.setDataSet = function (id) {\n    var changed = _super.prototype.setDataSet.call(this, id);\n    if (changed) {\n      this._dataSetChanged = true;\n      var dataItems = this.dataItems;\n      this.resetExtremes();\n      if (dataItems && dataItems.length > 0) {\n        var xAxis = this.xAxis;\n        var yAxis = this.yAxis;\n        this._prevStartIndex = undefined;\n        this._prevEndIndex = undefined;\n        this._startIndex = undefined;\n        this._endIndex = undefined;\n        if (!this.appeared) {\n          this.processValues(false); // this will slow down!\n        }\n\n        if (xAxis instanceof DateAxis && xAxis == this.baseAxis) {\n          this._tmin.setKey(xAxis.uid, dataItems.getIndex(0).dateX.getTime());\n          this._tmax.setKey(xAxis.uid, dataItems.getIndex(dataItems.length - 1).dateX.getTime());\n          this.dispatch(\"extremeschanged\");\n        }\n        if (yAxis instanceof DateAxis && yAxis == this.baseAxis) {\n          this._tmin.setKey(yAxis.uid, dataItems.getIndex(0).dateY.getTime());\n          this._tmax.setKey(yAxis.uid, dataItems.getIndex(dataItems.length - 1).dateY.getTime());\n          this.dispatch(\"extremeschanged\");\n        }\n      }\n    }\n    return changed;\n  };\n  /**\r\n   * Processes values after data items' were added.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItems  Data items\r\n   */\n  XYSeries.prototype.processValues = function (working) {\n    _super.prototype.processValues.call(this, working);\n    var xAxis = this.xAxis;\n    var yAxis = this.yAxis;\n    if (!xAxis || !yAxis) {\n      return;\n    }\n    var dataItems = this.dataItems;\n    var minX = Infinity;\n    var maxX = -Infinity;\n    var minY = Infinity;\n    var maxY = -Infinity;\n    var startIndex = this.startIndex;\n    var endIndex = this.endIndex;\n    var workingStartIndex = startIndex;\n    var workingEndIndex = endIndex;\n    if (!working) {\n      startIndex = 0;\n      endIndex = this.dataItems.length;\n    }\n    for (var i = startIndex; i < endIndex; i++) {\n      var dataItem = dataItems.getIndex(i);\n      this.getStackValue(dataItem, working);\n      var stackX = dataItem.getValue(\"valueX\", \"stack\");\n      var stackY = dataItem.getValue(\"valueY\", \"stack\");\n      if (!working) {\n        stackX = dataItem.getValue(\"valueX\", \"stackTrue\");\n        stackY = dataItem.getValue(\"valueY\", \"stackTrue\");\n      }\n      minX = $math.min(dataItem.getMin(this._xValueFields, working, stackX), minX);\n      minY = $math.min(dataItem.getMin(this._yValueFields, working, stackY), minY);\n      maxX = $math.max(dataItem.getMax(this._xValueFields, working, stackX), maxX);\n      maxY = $math.max(dataItem.getMax(this._yValueFields, working, stackY), maxY);\n      // if it's stacked, pay attention to stack value\n      if (this.stacked) {\n        if (this.baseAxis == xAxis) {\n          if (stackY < minY) {\n            minY = stackY;\n          }\n          if (stackY > maxY) {\n            maxY = stackY;\n          }\n        }\n        if (this.baseAxis == yAxis) {\n          if (stackX < minX) {\n            minX = stackX;\n          }\n          if (stackX > maxX) {\n            maxX = stackX;\n          }\n        }\n      }\n    }\n    // this is mainly for value axis to calculate total and perecent.total of each series category\n    xAxis.processSeriesDataItems();\n    yAxis.processSeriesDataItems();\n    var xAxisId = xAxis.uid;\n    var yAxisId = yAxis.uid;\n    if (this.xAxis instanceof ValueAxis && (minX == Infinity || maxX == -Infinity)) {\n      this._smin.setKey(xAxisId, undefined);\n      this._smax.setKey(xAxisId, undefined);\n      this.dispatchImmediately(\"selectionextremeschanged\");\n      return;\n    }\n    if (this.yAxis instanceof ValueAxis && (minY == Infinity || maxY == -Infinity)) {\n      this._smin.setKey(yAxisId, undefined);\n      this._smax.setKey(yAxisId, undefined);\n      this.dispatchImmediately(\"selectionextremeschanged\");\n      return;\n    }\n    if (!working) {\n      if (this._tmin.getKey(xAxisId) != minX || this._tmax.getKey(xAxisId) != maxX || this._tmin.getKey(yAxisId) != minY || this._tmax.getKey(yAxisId) != maxY) {\n        this._tmin.setKey(xAxisId, minX);\n        this._tmax.setKey(xAxisId, maxX);\n        this._tmin.setKey(yAxisId, minY);\n        this._tmax.setKey(yAxisId, maxY);\n        var stackedSeries = this.stackedSeries;\n        if (stackedSeries) {\n          if (stackedSeries.isDisposed()) {\n            this.stackedSeries = undefined;\n          } else {\n            stackedSeries.processValues(false);\n          }\n        }\n        this.dispatchImmediately(\"extremeschanged\");\n      }\n    }\n    if (startIndex != workingStartIndex || endIndex != workingEndIndex) {\n      minX = Infinity;\n      maxX = -Infinity;\n      minY = Infinity;\n      maxY = -Infinity;\n      for (var i = workingStartIndex; i < workingEndIndex; i++) {\n        var dataItem = dataItems.getIndex(i);\n        this.getStackValue(dataItem, working);\n        var stackX = dataItem.getValue(\"valueX\", \"stack\");\n        var stackY = dataItem.getValue(\"valueY\", \"stack\");\n        if (!working) {\n          stackX = dataItem.getValue(\"valueX\", \"stackTrue\");\n          stackY = dataItem.getValue(\"valueY\", \"stackTrue\");\n        }\n        minX = $math.min(dataItem.getMin(this._xValueFields, working, stackX), minX);\n        minY = $math.min(dataItem.getMin(this._yValueFields, working, stackY), minY);\n        maxX = $math.max(dataItem.getMax(this._xValueFields, working, stackX), maxX);\n        maxY = $math.max(dataItem.getMax(this._yValueFields, working, stackY), maxY);\n        // if it's stacked, pay attention to stack value\n        if (this.stacked) {\n          if (this.baseAxis == xAxis) {\n            if (stackY < minY) {\n              minY = stackY;\n            }\n            if (stackY > maxY) {\n              maxY = stackY;\n            }\n          }\n          if (this.baseAxis == yAxis) {\n            if (stackX < minX) {\n              minX = stackX;\n            }\n            if (stackX > maxX) {\n              maxX = stackX;\n            }\n          }\n        }\n      }\n    }\n    if (this.xAxis instanceof ValueAxis && (minX == Infinity || maxX == -Infinity)) {\n      this._smin.setKey(xAxisId, undefined);\n      this._smax.setKey(xAxisId, undefined);\n      this.dispatchImmediately(\"selectionextremeschanged\");\n      return;\n    }\n    if (this.yAxis instanceof ValueAxis && (minY == Infinity || maxY == -Infinity)) {\n      this._smin.setKey(yAxisId, undefined);\n      this._smax.setKey(yAxisId, undefined);\n      this.dispatchImmediately(\"selectionextremeschanged\");\n      return;\n    }\n    if (this._smin.getKey(xAxisId) != minX || this._smax.getKey(xAxisId) != maxX || this._smin.getKey(yAxisId) != minY || this._smax.getKey(yAxisId) != maxY) {\n      this._smin.setKey(xAxisId, minX);\n      this._smax.setKey(xAxisId, maxX);\n      this._smin.setKey(yAxisId, minY);\n      this._smax.setKey(yAxisId, maxY);\n      if (this.appeared || this.start != 0 || this.end != 1 || this.dataItems != this.mainDataSet) {\n        /// new, helps to handle issues with change percent\n        var changed = false;\n        if (yAxis instanceof ValueAxis && !(yAxis instanceof DateAxis)) {\n          var tmin = this._tmin.getKey(yAxisId);\n          if (!$type.isNumber(tmin) || (this.usesShowFields || this._dataSetChanged || xAxis instanceof DateAxis && xAxis.groupData && this.isShowing) && minY < tmin || this.stackedSeries && !this.isHidden && !working) {\n            this._tmin.setKey(yAxisId, minY);\n            changed = true;\n          }\n          var tmax = this._tmax.getKey(yAxisId);\n          if (!$type.isNumber(tmax) || (this.usesShowFields || this._dataSetChanged || xAxis instanceof DateAxis && xAxis.groupData && this.isShowing) && maxY > tmax || this.stackedSeries && !this.isHidden && !working) {\n            this._tmax.setKey(yAxisId, maxY);\n            changed = true;\n          }\n        }\n        if (xAxis instanceof ValueAxis && !(xAxis instanceof DateAxis)) {\n          var tmin = this._tmin.getKey(xAxisId);\n          if (!$type.isNumber(tmin) || (this.usesShowFields || this._dataSetChanged || yAxis instanceof DateAxis && yAxis.groupData && this.isShowing) && minX < tmin || this.stackedSeries && !this.isHidden && !working) {\n            this._tmin.setKey(xAxisId, minX);\n            changed = true;\n          }\n          var tmax = this._tmax.getKey(xAxisId);\n          if (!$type.isNumber(tmax) || (this.usesShowFields || this._dataSetChanged || yAxis instanceof DateAxis && yAxis.groupData && this.isShowing) && maxX > tmax || this.stackedSeries && !this.isHidden && !working) {\n            this._tmax.setKey(xAxisId, maxX);\n            changed = true;\n          }\n        }\n        if (changed) {\n          this.dispatchImmediately(\"extremeschanged\");\n        }\n        if (this.start == 0 && this.end == 1) {\n          // yes, its ok. otherwise min/max won't be updated when zooming out\n          this._dataSetChanged = false;\n        }\n        this.dispatchImmediately(\"selectionextremeschanged\");\n      }\n    }\n    if (!working && this.stacked) {\n      this.processValues(true);\n    }\n  };\n  /**\r\n   * Hides element's [[Tooltip]].\r\n   *\r\n   * @see {@link Tooltip}\r\n   */\n  XYSeries.prototype.hideTooltip = function (duration) {\n    _super.prototype.hideTooltip.call(this, duration);\n    this.returnBulletDefaultState();\n    this._prevTooltipDataItem = undefined;\n  };\n  /**\r\n   * Shows series tooltip at specific position.\r\n   *\r\n   * @param xPosition  X\r\n   * @param yPosition  Y\r\n   */\n  XYSeries.prototype.showTooltipAtPosition = function (xPosition, yPosition) {\n    var dataItem;\n    if (this.visible && !this.isHiding && !this.isShowing) {\n      var xAxis = this._xAxis.get();\n      var yAxis = this._yAxis.get();\n      if (xAxis == this.baseAxis) {\n        dataItem = xAxis.getSeriesDataItem(this, xAxis.toAxisPosition(xPosition), this.snapTooltip);\n      }\n      if (yAxis == this.baseAxis) {\n        dataItem = yAxis.getSeriesDataItem(this, yAxis.toAxisPosition(yPosition), this.snapTooltip);\n      }\n      var point = this.showTooltipAtDataItem(dataItem);\n      if (point) {\n        return point;\n      }\n      // so that if tooltip is shown on columns or bullets for it not to be hidden\n      if (!this.tooltipText && !this.tooltipHTML) {\n        return;\n      }\n    }\n    this.hideTooltip();\n  };\n  XYSeries.prototype.getAdjustedXLocation = function (dataItem, field, bulletLocationX) {\n    return dataItem.locations[field];\n  };\n  XYSeries.prototype.getAdjustedYLocation = function (dataItem, field, bulletLocationY) {\n    return dataItem.locations[field];\n  };\n  /**\r\n   * Shows series tooltip at specific dataItem.\r\n   *\r\n   * @param dataItem\r\n   */\n  XYSeries.prototype.showTooltipAtDataItem = function (dataItem) {\n    var e_1, _a;\n    var cursor = this.chart.cursor;\n    if (cursor && cursor.hideSeriesTooltipsOnSelection && cursor.selection.visible && cursor.downPoint) {\n      this.hideTooltip();\n      return;\n    }\n    this.returnBulletDefaultState(dataItem);\n    if (dataItem && dataItem.visible) {\n      this.updateLegendValue(dataItem);\n      if (this.cursorTooltipEnabled) {\n        this.tooltipDataItem = dataItem;\n        // todo: add tooltipXField and tooltipYField.\n        var tooltipXField = this.tooltipXField;\n        var tooltipYField = this.tooltipYField;\n        if ($type.hasValue(dataItem[tooltipXField]) && $type.hasValue(dataItem[tooltipYField])) {\n          var tooltipPoint = this.getPoint(dataItem, tooltipXField, tooltipYField, this.getAdjustedXLocation(dataItem, tooltipXField), this.getAdjustedYLocation(dataItem, tooltipYField));\n          if (tooltipPoint) {\n            if (this.chart.className == \"XYChart\" && (tooltipPoint.y < -1 || tooltipPoint.y > this.yAxis.pixelHeight + 1 || tooltipPoint.x < -1 || tooltipPoint.x > this.xAxis.pixelWidth + 1)) {\n              // void\n            } else {\n              this.tooltipX = tooltipPoint.x;\n              this.tooltipY = tooltipPoint.y;\n              if (this._prevTooltipDataItem != dataItem) {\n                this.dispatchImmediately(\"tooltipshownat\", {\n                  type: \"tooltipshownat\",\n                  target: this,\n                  dataItem: dataItem\n                });\n                this._prevTooltipDataItem = dataItem;\n              }\n              if (this.cursorHoverEnabled) {\n                try {\n                  for (var _b = __values(dataItem.sprites), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var sprite = _c.value;\n                    if (!sprite.parent.visible || sprite.isHidden || sprite.__disabled || sprite.disabled || sprite.isHiding) {} else {\n                      if (!sprite.interactions.isRealHover) {\n                        sprite.dispatchImmediately(\"over\");\n                        sprite.interactions.isRealHover = true;\n                      }\n                      sprite.isHover = true;\n                    }\n                  }\n                } catch (e_1_1) {\n                  e_1 = {\n                    error: e_1_1\n                  };\n                } finally {\n                  try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                  } finally {\n                    if (e_1) throw e_1.error;\n                  }\n                }\n              }\n              if (this.showTooltip()) {\n                return $utils.spritePointToSvg({\n                  x: tooltipPoint.x,\n                  y: tooltipPoint.y\n                }, this);\n              }\n              return;\n            }\n          }\n        }\n      }\n    } else {\n      this.updateLegendValue(dataItem, true);\n    }\n  };\n  /**\r\n   * Returns default state to bullets when tooltip is shown at some other data\r\n   * item or hidden\r\n   */\n  XYSeries.prototype.returnBulletDefaultState = function (dataItem) {\n    var e_2, _a;\n    if (this._prevTooltipDataItem && this._prevTooltipDataItem != dataItem) {\n      try {\n        for (var _b = __values(this._prevTooltipDataItem.sprites), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var sprite = _c.value;\n          if (!sprite.isDisposed()) {\n            var fireEvent = sprite.interactions.isRealHover;\n            sprite.isHover = false;\n            if (fireEvent) {\n              sprite.dispatchImmediately(\"out\");\n            }\n          } else {\n            this._prevTooltipDataItem = undefined;\n          }\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    }\n  };\n  XYSeries.prototype.shouldCreateBullet = function (dataItem, bulletTemplate) {\n    // use series xField/yField if bullet doesn't have fields set\n    var xField = bulletTemplate.xField;\n    if (!$type.hasValue(xField)) {\n      xField = this.xField;\n    }\n    var yField = bulletTemplate.yField;\n    if (!$type.hasValue(yField)) {\n      yField = this.yField;\n    }\n    if (this.xAxis instanceof ValueAxis && !dataItem.hasValue([xField]) || this.yAxis instanceof ValueAxis && !dataItem.hasValue([yField])) {\n      return false;\n    }\n    if (bulletTemplate.disabled) {\n      var disabledField = bulletTemplate.propertyFields.disabled;\n      var dataContext = dataItem.dataContext;\n      if (dataContext && dataContext[disabledField] === false) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return true;\n  };\n  /**\r\n   * @ignore\r\n   */\n  XYSeries.prototype.updateTooltip = function () {\n    if (!this.hideTooltipWhileZooming && this.tooltip && !this.tooltip.isHidden && !this.isHiding && !this.isHidden && this.tooltipDataItem) {\n      this.showTooltipAtDataItem(this.tooltipDataItem);\n    }\n  };\n  /**\r\n   * @ignore\r\n   */\n  XYSeries.prototype.positionBullet = function (bullet) {\n    _super.prototype.positionBullet.call(this, bullet);\n    var dataItem = bullet.dataItem;\n    // use series xField/yField if bullet doesn't have fields set\n    var xField = bullet.xField;\n    if (!$type.hasValue(xField)) {\n      xField = this.xField;\n    }\n    var yField = bullet.yField;\n    if (!$type.hasValue(yField)) {\n      yField = this.yField;\n    }\n    var xAxis = this.xAxis;\n    var yAxis = this.yAxis;\n    if (xAxis instanceof ValueAxis && !dataItem.hasValue([xField]) || yAxis instanceof ValueAxis && !dataItem.hasValue([yField])) {\n      bullet.visible = false;\n    } else {\n      var bulletLocationX = this.getBulletLocationX(bullet, xField);\n      var bulletLocationY = this.getBulletLocationY(bullet, yField);\n      var point = this.getPoint(dataItem, xField, yField, bulletLocationX, bulletLocationY);\n      if (point) {\n        var xOpenField = this.xOpenField;\n        var yOpenField = this.yOpenField;\n        var positionX = void 0;\n        var positionY = void 0;\n        if (xAxis instanceof DateAxis) {\n          if (!$type.isNumber(bulletLocationX)) {\n            bulletLocationX = 0;\n          }\n          var openValue = void 0;\n          var closeValue = dataItem.getWorkingValue(xField);\n          if (!xOpenField) {\n            if (xAxis == this.baseAxis) {\n              openValue = xAxis.baseValue;\n            }\n          } else {\n            openValue = dataItem.getWorkingValue(xOpenField);\n          }\n          if (!$type.isNumber(openValue)) {\n            openValue = closeValue;\n          }\n          var stack = dataItem.getValue(\"valueX\", \"stack\");\n          openValue += stack;\n          closeValue += stack;\n          if (openValue == closeValue) {\n            var baseInterval = xAxis.baseInterval;\n            var dateFormatter = xAxis.dateFormatter;\n            openValue = $time.round(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.firstDayOfWeek, dateFormatter.utc, undefined, dateFormatter.timezoneMinutes, dateFormatter.timezone).getTime();\n            closeValue = $time.add(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.utc).getTime();\n          }\n          var middleValue = void 0;\n          if (xAxis == this.baseAxis) {\n            middleValue = openValue + (closeValue - openValue) * bulletLocationX;\n          } else {\n            middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationX);\n          }\n          positionX = xAxis.valueToPosition(middleValue);\n        } else if (xAxis instanceof ValueAxis) {\n          if (!$type.isNumber(bulletLocationX)) {\n            bulletLocationX = 0;\n          }\n          var openValue = void 0;\n          var closeValue = dataItem.getWorkingValue(xField);\n          if (!xOpenField) {\n            openValue = xAxis.baseValue;\n          } else {\n            openValue = dataItem.getWorkingValue(xOpenField);\n          }\n          var stack = dataItem.getValue(\"valueX\", \"stack\");\n          openValue += stack;\n          closeValue += stack;\n          var middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationX);\n          positionX = xAxis.valueToPosition(middleValue);\n        } else if (xAxis instanceof CategoryAxis) {\n          var rightLocation = this.getAdjustedXLocation(dataItem, xField, bullet.locationX);\n          var leftLocation = this.getAdjustedXLocation(dataItem, xOpenField, bullet.locationX);\n          positionX = xAxis.categoryToPosition(dataItem[xField], rightLocation);\n          var openPositionX = void 0;\n          if (xOpenField) {\n            openPositionX = xAxis.categoryToPosition(dataItem[xOpenField], leftLocation);\n          }\n          if (!$type.isNumber(openPositionX)) {\n            openPositionX = 1;\n          }\n          positionX = openPositionX + (positionX - openPositionX) * bulletLocationX;\n        }\n        if (yAxis instanceof DateAxis) {\n          if (!$type.isNumber(bulletLocationY)) {\n            bulletLocationY = 0;\n          }\n          var openValue = void 0;\n          var closeValue = dataItem.getWorkingValue(yField);\n          if (!yOpenField) {\n            if (yAxis == this.baseAxis) {\n              openValue = yAxis.baseValue;\n            }\n          } else {\n            openValue = dataItem.getWorkingValue(yOpenField);\n          }\n          if (!$type.isNumber(openValue)) {\n            openValue = closeValue;\n          }\n          var stack = dataItem.getValue(\"valueY\", \"stack\");\n          openValue += stack;\n          closeValue += stack;\n          if (openValue == closeValue) {\n            var baseInterval = yAxis.baseInterval;\n            var dateFormatter = yAxis.dateFormatter;\n            openValue = $time.round(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.firstDayOfWeek, dateFormatter.utc, undefined, dateFormatter.timezoneMinutes, dateFormatter.timezone).getTime();\n            closeValue = $time.add(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.utc).getTime();\n          }\n          var middleValue = void 0;\n          if (yAxis == this.baseAxis) {\n            middleValue = openValue + (closeValue - openValue) * bulletLocationY;\n          } else {\n            middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationY);\n          }\n          positionY = yAxis.valueToPosition(middleValue);\n        } else if (yAxis instanceof ValueAxis) {\n          if (!$type.isNumber(bulletLocationY)) {\n            bulletLocationY = 0;\n          }\n          var openValue = void 0;\n          var closeValue = dataItem.getWorkingValue(yField);\n          if (!yOpenField) {\n            openValue = yAxis.baseValue;\n          } else {\n            openValue = dataItem.getWorkingValue(yOpenField);\n          }\n          var stack = dataItem.getValue(\"valueY\", \"stack\");\n          openValue += stack;\n          closeValue += stack;\n          var middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationY);\n          positionY = yAxis.valueToPosition(middleValue);\n        } else if (yAxis instanceof CategoryAxis) {\n          positionY = yAxis.categoryToPosition(dataItem[yField], bulletLocationY);\n          var topLocation = this.getAdjustedYLocation(dataItem, yField, bullet.locationY);\n          var bottomLocation = this.getAdjustedYLocation(dataItem, yOpenField, bullet.locationY);\n          positionY = yAxis.categoryToPosition(dataItem[yField], topLocation);\n          var openPositionY = void 0;\n          if (yOpenField) {\n            openPositionY = yAxis.categoryToPosition(dataItem[yOpenField], bottomLocation);\n          }\n          if (!$type.isNumber(openPositionY)) {\n            openPositionY = 1;\n          }\n          positionY = openPositionY + (positionY - openPositionY) * bulletLocationY;\n        }\n        bullet.visible = true;\n        this.positionBulletReal(bullet, positionX, positionY);\n      } else {\n        bullet.visible = false;\n      }\n    }\n  };\n  XYSeries.prototype.positionBulletReal = function (bullet, positionX, positionY) {\n    bullet.x = this.xAxis.renderer.positionToPoint(positionX, positionY).x;\n    bullet.y = this.yAxis.renderer.positionToPoint(positionY, positionX).y;\n  };\n  /**\r\n   * returns bullet x location\r\n   * @ignore\r\n   */\n  XYSeries.prototype.getBulletLocationX = function (bullet, field) {\n    var bulletLocation = bullet.locationX;\n    var dataItem = bullet.dataItem;\n    if (!$type.isNumber(bulletLocation)) {\n      bulletLocation = dataItem.workingLocations[field];\n    }\n    return bulletLocation;\n  };\n  /**\r\n   * Returns bullet x location\r\n   * @ignore\r\n   */\n  XYSeries.prototype.getBulletLocationY = function (bullet, field) {\n    var bulletLocation = bullet.locationY;\n    var dataItem = bullet.dataItem;\n    if (!$type.isNumber(bulletLocation)) {\n      bulletLocation = dataItem.workingLocations[field];\n    }\n    return bulletLocation;\n  };\n  /**\r\n   * This method must be called if you update Series' data fields that might\r\n   * affect stacking of the series.\r\n   *\r\n   * Since individual `dataField` changes are not being monitored, you need\r\n   * todo it manually for changes to take affect.\r\n   *\r\n   * @since 4.7.21\r\n   */\n  XYSeries.prototype.updateStacking = function () {\n    var _this = this;\n    this.invalidateDataItems();\n    if (this.chart) {\n      this.chart.series.each(function (series) {\n        if (series.baseAxis == _this.baseAxis) {\n          series.stackedSeries = undefined;\n          series.invalidateDataItems();\n          series.invalidateProcessedData();\n        }\n      });\n    }\n  };\n  Object.defineProperty(XYSeries.prototype, \"stacked\", {\n    /**\r\n     * @return Can be stacked?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"stacked\");\n    },\n    /**\r\n     * Can items from this series be included into stacks?\r\n     *\r\n     * Note: proper stacking is only possible if series have the same number\r\n     * of data items. To ensure this, don't set data directly on series\r\n     * but do this on chart instead.\r\n     *\r\n     * @default false\r\n     * @param stacked  Can be stacked?\r\n     */\n    set: function (stacked) {\n      if (this.setPropertyValue(\"stacked\", stacked, true)) {\n        this.updateStacking();\n        var xAxis = this.xAxis;\n        var yAxis = this.yAxis;\n        if (!stacked) {\n          var field_1;\n          if (xAxis != this.baseAxis && xAxis instanceof ValueAxis) {\n            field_1 = this.xField;\n          }\n          if (yAxis != this.baseAxis && yAxis instanceof ValueAxis) {\n            field_1 = this.yField;\n          }\n          if (field_1) {\n            this.dataItems.each(function (dataItem) {\n              dataItem.setCalculatedValue(field_1, 0, \"stack\");\n              dataItem.setCalculatedValue(field_1, 0, \"stackTrue\");\n            });\n          }\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"snapTooltip\", {\n    /**\r\n     * @return Should snap?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"snapTooltip\");\n    },\n    /**\r\n     * Should the nearest tooltip be shown if no data item is found on the\r\n     * current cursor position? In order this to work, you should set snapTooltip = false on the series baseAxis.\r\n     *\r\n     * @default false\r\n     * @param value  Should snap?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"snapTooltip\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Shows hidden series.\r\n   *\r\n   * @param duration  Duration of reveal animation (ms)\r\n   * @return Animation\r\n   */\n  XYSeries.prototype.show = function (duration) {\n    var _this = this;\n    if (this.isHidden) {\n      if (this.appeared && this.xAxis instanceof DateAxis && this.xAxis.groupData) {\n        this._tmin.setKey(this.yAxis.uid, undefined);\n        this._tmax.setKey(this.yAxis.uid, undefined);\n      }\n      if (this.appeared && this.yAxis instanceof DateAxis && this.yAxis.groupData) {\n        this._tmin.setKey(this.xAxis.uid, undefined);\n        this._tmax.setKey(this.xAxis.uid, undefined);\n      }\n    }\n    var fields;\n    if (this.xAxis instanceof ValueAxis && this.xAxis != this.baseAxis) {\n      fields = this._xValueFields;\n    }\n    if (this.yAxis instanceof ValueAxis && this.yAxis != this.baseAxis) {\n      fields = this._yValueFields;\n    }\n    var startIndex = this.startIndex;\n    var endIndex = this.endIndex;\n    var delay = 0;\n    var interpolationDuration = this.defaultState.transitionDuration;\n    if ($type.isNumber(duration)) {\n      interpolationDuration = duration;\n    }\n    if (!options.animationsEnabled) {\n      interpolationDuration = 0;\n    }\n    var anim;\n    $iter.each($iter.indexed(this.dataItems.iterator()), function (a) {\n      var i = a[0];\n      var dataItem = a[1];\n      var realDuration = interpolationDuration;\n      if (i < _this.startIndex - 10 || i > _this.endIndex + 10) {\n        realDuration = 0;\n        delay = 0;\n      }\n      if (_this.sequencedInterpolation && realDuration > 0) {\n        delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\n      }\n      anim = dataItem.show(realDuration, delay, fields);\n    });\n    // other data sets\n    this.dataSets.each(function (key, dataSet) {\n      if (dataSet != _this.dataItems) {\n        dataSet.each(function (dataItem) {\n          dataItem.events.disable();\n          dataItem.show(0, 0, fields);\n          dataItem.events.enable();\n        });\n      }\n    });\n    if (this.mainDataSet != this.dataItems) {\n      this.mainDataSet.each(function (dataItem) {\n        dataItem.events.disable();\n        dataItem.show(0, 0, fields);\n        dataItem.events.enable();\n      });\n    }\n    var animation = _super.prototype.show.call(this, duration);\n    if (anim && !anim.isFinished()) {\n      animation = anim;\n    }\n    if (this.hidden) {\n      this.dispatchImmediately(\"selectionextremeschanged\");\n      this.hidden = false;\n    }\n    return animation;\n  };\n  /**\r\n   * Hides series.\r\n   *\r\n   * @param duration  Duration of hiding animation (ms)\r\n   * @return Animation\r\n   */\n  XYSeries.prototype.hide = function (duration) {\n    var _this = this;\n    var fields;\n    var value;\n    var xAxis = this.xAxis;\n    if (xAxis instanceof ValueAxis && xAxis != this.baseAxis) {\n      fields = this._xValueFields;\n      // animate to zero if 0 is within zoomMin/zoomMax\n      if (this.stacked || xAxis.minZoomed < xAxis.baseValue && xAxis.maxZoomed > xAxis.baseValue || this.stackedSeries) {\n        value = xAxis.baseValue;\n      } else {\n        value = xAxis.min;\n      }\n    }\n    var yAxis = this.yAxis;\n    if (yAxis instanceof ValueAxis && yAxis != this.baseAxis) {\n      fields = this._yValueFields;\n      // animate to zero if 0 is within zoomMin/zoomMax\n      if (this.stacked || yAxis.minZoomed < yAxis.baseValue && yAxis.maxZoomed > yAxis.baseValue || this.stackedSeries) {\n        value = yAxis.baseValue;\n      } else {\n        value = yAxis.min;\n      }\n    }\n    //if ($type.hasValue(fields)) {\n    var startIndex = this.startIndex;\n    var endIndex = this.endIndex;\n    var interpolationDuration = this.hiddenState.transitionDuration;\n    if ($type.isNumber(duration)) {\n      interpolationDuration = duration;\n    }\n    if (!options.animationsEnabled) {\n      interpolationDuration = 0;\n    }\n    var delay = 0;\n    var anim;\n    $iter.each($iter.indexed(this.dataItems.iterator()), function (a) {\n      var i = a[0];\n      var dataItem = a[1];\n      var realDuration = interpolationDuration;\n      if (i < _this.startIndex - 10 || i > _this.endIndex + 10) {\n        realDuration = 0;\n      }\n      if (realDuration == 0) {\n        dataItem.hide(0, 0, value, fields);\n      } else {\n        if (_this.sequencedInterpolation && realDuration > 0) {\n          delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\n        }\n        anim = dataItem.hide(realDuration, delay, value, fields);\n      }\n    });\n    // other data sets\n    this.dataSets.each(function (key, dataSet) {\n      if (dataSet != _this.dataItems) {\n        dataSet.each(function (dataItem) {\n          dataItem.events.disable();\n          dataItem.hide(0, 0, value, fields);\n          dataItem.events.enable();\n        });\n      }\n    });\n    if (this.mainDataSet != this.dataItems) {\n      this.mainDataSet.each(function (dataItem) {\n        dataItem.events.disable();\n        dataItem.hide(0, 0, value, fields);\n        dataItem.events.enable();\n      });\n    }\n    var animation = _super.prototype.hide.call(this, interpolationDuration);\n    if (animation && !animation.isFinished()) {\n      animation.delay(delay);\n    }\n    if (anim && !anim.isFinished()) {\n      animation = anim;\n    }\n    if (this.appeared) {\n      this.dispatch(\"selectionextremeschanged\");\n    }\n    // helps to avoid flicker. otherwise columns will show up at full size and only on next frame will animate from 0\n    this.validateDataElements();\n    //}\n    return animation;\n  };\n  /**\r\n   * [handleDataItemWorkingValueChange description]\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  XYSeries.prototype.handleDataItemWorkingValueChange = function (dataItem, name) {\n    _super.prototype.handleDataItemWorkingValueChange.call(this, dataItem, name);\n    // to calculate stack values\n    var axisSeries = this.baseAxis.series;\n    $iter.each(axisSeries.iterator(), function (series) {\n      if (series.stacked || series.stackedSeries) {\n        series.invalidateProcessedData();\n      }\n    });\n  };\n  /**\r\n   * [getStackValue description]\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description\r\n   * @param dataItem  Data item\r\n   */\n  XYSeries.prototype.getStackValue = function (dataItem, working) {\n    // todo: here wer stack x and y values only. question is - what should we do with other values, like openX, openY?\n    // if this series is not stacked or new stack begins, return.\n    var _this = this;\n    var xAxis = this.xAxis;\n    var yAxis = this.yAxis;\n    if (!this.stacked || !xAxis || !yAxis) {\n      return;\n    } else {\n      // it might seem that it's better to go through base axis series, but we do not maintain the same order as in chart.series there.\n      var chart = this.chart;\n      var index = chart.series.indexOf(this);\n      var field_2;\n      if (xAxis != this.baseAxis && xAxis instanceof ValueAxis) {\n        field_2 = this.xField;\n      }\n      if (yAxis != this.baseAxis && yAxis instanceof ValueAxis) {\n        field_2 = this.yField;\n      }\n      if (!field_2) {\n        return;\n      }\n      //this is good for removing series, otherwise stack values will remain the same and chart won't pay atention when adding/removing series\t\t\t\n      dataItem.setCalculatedValue(field_2, 0, \"stack\");\n      dataItem.setCalculatedValue(field_2, 0, \"stackTrue\");\n      $iter.eachContinue(chart.series.range(0, index).backwards().iterator(), function (prevSeries) {\n        // stacking is only possible if both axes are the same\n        if (prevSeries.xAxis == xAxis && prevSeries.yAxis == yAxis && prevSeries.className == _this.className) {\n          // saving value\n          prevSeries.stackedSeries = _this;\n          var prevDataItem = prevSeries.dataItems.getIndex(dataItem.index); // indexes should match\n          if (prevDataItem && prevDataItem.hasValue(_this._xValueFields) && prevDataItem.hasValue(_this._yValueFields)) {\n            var value = dataItem.getValue(field_2);\n            var prevValue = void 0;\n            var prevStack = prevDataItem.getValue(field_2, \"stackTrue\");\n            if (prevStack == null) {\n              prevStack = 0;\n            }\n            var prevRealValue = prevDataItem.getValue(field_2) + prevStack;\n            prevValue = prevDataItem.getWorkingValue(field_2) + prevDataItem.getValue(field_2, \"stack\");\n            if (_this.stackToNegative) {\n              if (value >= 0 && prevRealValue >= 0 || value < 0 && prevRealValue < 0) {\n                dataItem.setCalculatedValue(field_2, prevValue, \"stack\");\n                dataItem.setCalculatedValue(field_2, prevRealValue, \"stackTrue\");\n                return false;\n              } else if (!prevSeries.stacked) {\n                return false;\n              }\n            } else {\n              dataItem.setCalculatedValue(field_2, prevValue, \"stack\");\n              dataItem.setCalculatedValue(field_2, prevRealValue, \"stackTrue\");\n              return false;\n            }\n          } else if (!prevSeries.stacked) {\n            return false;\n          }\n        }\n        return true;\n      });\n    }\n  };\n  Object.defineProperty(XYSeries.prototype, \"stackToNegative\", {\n    /**\r\n     * @return Stack to base line\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"stackToNegative\");\n    },\n    /**\r\n     * This setting indicates how negative values are treated in stacked stacked\r\n     * series.\r\n     *\r\n     * If set to `true` (default), negative values will stack on the base line.\r\n     *\r\n     * If set to `false`, negative value will stack in relation to the previous\r\n     * value in the stack.\r\n     *\r\n     * @since 4.9.34\r\n     * @param  value  Stack to base line\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"stackToNegative\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"xField\", {\n    /**\r\n     * [xField description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @return [description]\r\n     */\n    get: function () {\n      return this._xField;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"yField\", {\n    /**\r\n     * [yField description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @return [description]\r\n     */\n    get: function () {\n      return this._yField;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"xOpenField\", {\n    /**\r\n     * [xOpenField description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @return [description]\r\n     */\n    get: function () {\n      return this._xOpenField;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"yOpenField\", {\n    /**\r\n     * [yOpenField description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @return [description]\r\n     */\n    get: function () {\n      return this._yOpenField;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"tooltipXField\", {\n    /**\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @return [description]\r\n     */\n    get: function () {\n      if (this._tooltipXField) {\n        return this._tooltipXField;\n      }\n      return this._xField;\n    },\n    /**\r\n     * [tooltipXField description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param value [description]\r\n     */\n    set: function (value) {\n      this._tooltipXField = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"tooltipYField\", {\n    /**\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @return [description]\r\n     */\n    get: function () {\n      if (this._tooltipYField) {\n        return this._tooltipYField;\n      }\n      return this._yField;\n    },\n    /**\r\n     * [tooltipYField description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param value [description]\r\n     */\n    set: function (value) {\n      this._tooltipYField = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Returns lowest value in the series for the specific axis.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param axis  Axis\r\n   * @return value\r\n   */\n  XYSeries.prototype.min = function (axis) {\n    return this._tmin.getKey(axis.uid);\n  };\n  /**\r\n   * Returns highest value in the series for the specific axis.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param axis  Axis\r\n   * @return value\r\n   */\n  XYSeries.prototype.max = function (axis) {\n    return this._tmax.getKey(axis.uid);\n  };\n  /**\r\n   * Returns lowest value in the series for the specific axis within current\r\n   * selection.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param axis  Axis\r\n   * @return value\r\n   */\n  XYSeries.prototype.selectionMin = function (axis) {\n    var value = this._smin.getKey(axis.uid);\n    // not good, because bad if there are no items with values in selection\n    //if (!$type.isNumber(value)) {\n    //value = this.min(axis);\n    //}\t\t\n    return value;\n  };\n  /**\r\n   * Returns highest value in the series for the specific axis within current\r\n   * selection.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param axis  Axis\r\n   * @return value\r\n   */\n  XYSeries.prototype.selectionMax = function (axis) {\n    var value = this._smax.getKey(axis.uid);\n    // not good, because bad if there are no items with values in selection\n    //if (!$type.isNumber(value)) {\n    //value = this.max(axis);\n    //}\n    return value;\n  };\n  /**\r\n   * Processes JSON-based config before it is applied to the object.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param config  Config\r\n   */\n  XYSeries.prototype.processConfig = function (config) {\n    if (config) {\n      // Set up base axes\n      if ($type.hasValue(config.baseAxis) && $type.isString(config.baseAxis)) {\n        if (this.map.hasKey(config.baseAxis)) {\n          config.baseAxis = this.map.getKey(config.baseAxis);\n        } else {\n          this.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.baseAxis + \"\\\" found for `baseAxis`.\");\n          delete config.baseAxis;\n        }\n      }\n      // Set up axes\n      if ($type.hasValue(config.xAxis) && $type.isString(config.xAxis)) {\n        if (this.map.hasKey(config.xAxis)) {\n          config.xAxis = this.map.getKey(config.xAxis);\n        } else {\n          this.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.xAxis + \"\\\" found for `xAxis`.\");\n          delete config.xAxis;\n        }\n      }\n      if ($type.hasValue(config.yAxis) && $type.isString(config.yAxis)) {\n        if (this.map.hasKey(config.yAxis)) {\n          config.yAxis = this.map.getKey(config.yAxis);\n        } else {\n          this.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.yAxis + \"\\\" found for `yAxis`.\");\n          delete config.yAxis;\n        }\n      }\n      // Set up axis ranges\n      if ($type.hasValue(config.axisRanges) && $type.isArray(config.axisRanges)) {\n        for (var i = 0, len = config.axisRanges.length; i < len; i++) {\n          var range = config.axisRanges[i];\n          if (!$type.hasValue(range.type)) {\n            range.type = \"AxisDataItem\";\n          }\n          if ($type.hasValue(range.axis) && $type.isString(range.axis) && this.map.hasKey(range.axis)) {\n            range.component = this.map.getKey(range.axis);\n          } else if ($type.hasValue(range.component) && $type.isString(range.component) && this.map.hasKey(range.component)) {\n            range.component = this.map.getKey(range.component);\n          }\n        }\n      }\n      // Parse date fields based on the series fields\n      if (!$type.hasValue(config.dataFields) || !$type.isObject(config.dataFields)) {\n        this.processingErrors.push(\"`dataFields` is not set for series [\" + (this.name || \"unnamed\") + \"]\");\n      }\n    }\n    _super.prototype.processConfig.call(this, config);\n  };\n  /**\r\n   * Returns an [[IPoint]] coordinates of the specific Serie's data point.\r\n   *\r\n   * @param    dataItem   Data item\r\n   * @param    xKey       Name of X data field\r\n   * @param    yKey       Name of Y data field\r\n   * @param    locationX  X location\r\n   * @param    locationY  Y location\r\n   * @param    stackKeyX  ?\r\n   * @param    stackKeyY  ?\r\n   * @returns             Coordinates\r\n   */\n  XYSeries.prototype.getPoint = function (dataItem, xKey, yKey, locationX, locationY, stackKeyX, stackKeyY) {\n    if (this.xAxis && this.yAxis) {\n      var x = this.xAxis.getX(dataItem, xKey, locationX);\n      var y = this.yAxis.getY(dataItem, yKey, locationY);\n      x = $math.fitToRange(x, -this._maxxX, this._maxxX); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\n      y = $math.fitToRange(y, -this._maxxY, this._maxxY); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\n      return {\n        x: x,\n        y: y\n      };\n    }\n  };\n  /**\r\n   * Updates item reader text based on the type and set up of axis.\r\n   */\n  XYSeries.prototype.updateItemReaderText = function () {\n    // We do not want to overwrite this if `itemReaderText` was changed by\n    // user code.\n    if (this._itemReaderTextChanged) {\n      return;\n    }\n    var text = \"\";\n    $object.each(this.dataFields, function (key, val) {\n      text += \"{\" + key + \"} \";\n    });\n    this.itemReaderText = text;\n    this._itemReaderTextChanged = false;\n  };\n  Object.defineProperty(XYSeries.prototype, \"cursorTooltipEnabled\", {\n    /**\r\n     * @return Display tooltip?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"cursorTooltipEnabled\");\n    },\n    /**\r\n     * Indicates if series should display a tooltip for chart's cursor.\r\n     *\r\n     * If set to `true` (default), the tooltips set for all series item's\r\n     * elements like columns and bullets will be automatically shown\r\n     * when [[XYCursor]] passes over category/date, even if its not hovered\r\n     * directly over the item.\r\n     *\r\n     * Set this to `false` to disable such behavior and display item-specific\r\n     * tooltips only when hovered directly over them\r\n     *\r\n     * @default true\r\n     * @param value Display tooltip?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"cursorTooltipEnabled\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"cursorHoverEnabled\", {\n    /**\r\n     * @return Hover enabled?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"cursorHoverEnabled\");\n    },\n    /**\r\n     * Indicates if series should apply hover state on bullets/columns/etc when\r\n     * cursor is over the data item.\r\n     *\r\n     * If set to `true` (default) and chart cursor is enabled on th chart,\r\n     * hovering over date/category will trigger hover states on related Series\r\n     * items like bullets and columns.\r\n     *\r\n     * @default true\r\n     * @since 4.2.2\r\n     * @param  value  Hover enabled?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"cursorHoverEnabled\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"excludeFromTotal\", {\n    /**\r\n     * @return Exclude from totals?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"excludeFromTotal\");\n    },\n    /**\r\n     * Indicates if series' values should be excluded when calculating totals.\r\n     *\r\n     * @default false\r\n     * @since 4.4.9\r\n     * @param  value  Exclude from totals?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"excludeFromTotal\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"hideTooltipWhileZooming\", {\n    /**\r\n     * @return Hide tooltip while zooming?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"hideTooltipWhileZooming\");\n    },\n    /**\r\n     * Indicates if series' tooltip should be hidden while series axis range is\r\n     * animating (zooming).\r\n     *\r\n     * @default true\r\n     * @since 4.7.16\r\n     * @param  value  Hide tooltip while zooming?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"hideTooltipWhileZooming\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"maskBullets\", {\n    /**\r\n     * @return Mask bullets?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"maskBullets\");\n    },\n    /**\r\n     * Indicates if series' bullets should be masked.\r\n     *\r\n     * @default true\r\n     * @since 4.7.17\r\n     * @param  value  Mask bullets?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"maskBullets\", value);\n      var chart = this.chart;\n      if (chart) {\n        if (value) {\n          this.bulletsContainer.parent = chart.bulletsContainer;\n        } else {\n          this.bulletsContainer.parent = chart.axisBulletsContainer;\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Copies all properties from another instance of [[Series]].\r\n   *\r\n   * @param source  Source series\r\n   */\n  XYSeries.prototype.copyFrom = function (source) {\n    this.groupFields = $utils.copyProperties(source.groupFields, {});\n    _super.prototype.copyFrom.call(this, source);\n  };\n  /**\r\n   * Destroys this object and all related data.\r\n   */\n  XYSeries.prototype.dispose = function () {\n    if (this.scrollbarSeries) {\n      this.scrollbarSeries.dispose();\n    }\n    _super.prototype.dispose.call(this);\n  };\n  return XYSeries;\n}(Series);\nexport { XYSeries };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"XYSeries\"] = XYSeries;\nregistry.registeredClasses[\"XYSeriesDataItem\"] = XYSeriesDataItem;","map":{"version":3,"names":["__extends","__values","Series","SeriesDataItem","Sprite","visualProperties","ValueAxis","Dictionary","MutableValueDisposer","XYChart","CategoryAxis","DateAxis","registry","$iter","$math","$utils","$type","$time","$array","$object","$path","options","XYSeriesDataItem","_super","_this","call","className","values","customValue","valueX","stack","valueY","openValueX","openValueY","dateX","dateY","openDateX","openDateY","setLocation","applyTheme","Object","defineProperty","prototype","get","value","set","setValue","enumerable","configurable","getDate","date","setDate","categories","categoryX","category","setCategory","categoryY","openCategoryX","openCategoryY","getMin","fields","working","stackValue","min","isNumber","each","field","getWorkingValue","getValue","getMax","max","XYSeries","groupFields","_xAxis","_yAxis","_xValueFields","_yValueFields","_baseInterval","dataGrouped","usesShowFields","_dataSetChanged","_maxxX","_maxxY","_propertiesChanged","outOfRange","isMeasured","cursorTooltipEnabled","cursorHoverEnabled","excludeFromTotal","mainContainer","mask","setElement","paper","add","stacked","snapTooltip","_showBullets","tooltip","pointerOrientation","properties","stackToNegative","hideTooltipWhileZooming","setPropertyValue","events","on","returnBulletDefaultState","undefined","_disposers","push","observe","inited","legendDataItem","childrenCreated","chart","legend","invalidateDataItems","invalidate","applyInternalDefaults","hasValue","readerTitle","language","translate","createDataItem","resetExtremes","_tmin","clear","_tmax","_smin","_smax","dataChangeUpdate","_currentDataSetId","xAxis","seriesDataChangeUpdate","yAxis","validateData","dataFields","valueYShow","openValueXShow","openValueYShow","defineFields","data","length","updateItemReaderText","_xField","_yField","Error","name","uid","isHidden","hide","processDataItem","dataItem","dataContext","processSeriesDataItem","setInitialWorkingValues","e","_chart","raiseCriticalError","updateDataItem","disposeData","dataItemsX","dataItemsByAxis","getKey","clearCatAxis","dataItemsY","axis","dataItems","seriesDataItems","xAxisFieldName","axisFieldName","xField","xOpenField","capitalize","yAxisFieldName","yField","yOpenField","_xOpenField","_yOpenField","baseAxis","addValueField","indexOf","setCategoryAxisField","setDateAxisField","afterDraw","createMask","path_1","getMaskPath","axisRanges","iterator","range","axisFill","fillPath","validate","path","rectToPath","x","y","width","axisLength","height","getAxisField","validateDataItems","plotContainer","maxWidth","maxHeight","updateAxisBySeries","postProcessSeriesDataItems","validateDataRange","dataRangeInvalid","invalid","pixelY","pixelX","minBulletDistance","endIndex","startIndex","updateTooltip","groupData","maskBullets","leftAxesContainer","layout","rightAxesContainer","bulletsContainer","renderer","gridContainer","topAxesContainer","bottomAxesContainer","xAxes","getIndex","setXAxis","oldAxis","removeKey","dispose","series","removeValue","registerSeries","setKey","invalidateData","yAxes","setYAxis","handleYAxisSet","_baseAxis","addData","rawDataItem","removeCount","skipRaw","scrollbarSeries","_parseDataFrom","setData","setDataSet","id","changed","_prevStartIndex","_prevEndIndex","_startIndex","_endIndex","appeared","processValues","getTime","dispatch","minX","Infinity","maxX","minY","maxY","workingStartIndex","workingEndIndex","i","getStackValue","stackX","stackY","processSeriesDataItems","xAxisId","yAxisId","dispatchImmediately","stackedSeries","isDisposed","start","end","mainDataSet","tmin","isShowing","tmax","hideTooltip","duration","_prevTooltipDataItem","showTooltipAtPosition","xPosition","yPosition","visible","isHiding","getSeriesDataItem","toAxisPosition","point","showTooltipAtDataItem","tooltipText","tooltipHTML","getAdjustedXLocation","bulletLocationX","locations","getAdjustedYLocation","bulletLocationY","e_1","_a","cursor","hideSeriesTooltipsOnSelection","selection","downPoint","updateLegendValue","tooltipDataItem","tooltipXField","tooltipYField","tooltipPoint","getPoint","pixelHeight","pixelWidth","tooltipX","tooltipY","type","target","_b","sprites","_c","next","done","sprite","parent","__disabled","disabled","interactions","isRealHover","isHover","e_1_1","error","return","showTooltip","spritePointToSvg","e_2","fireEvent","e_2_1","shouldCreateBullet","bulletTemplate","disabledField","propertyFields","positionBullet","bullet","getBulletLocationX","getBulletLocationY","positionX","positionY","openValue","closeValue","baseValue","baseInterval","dateFormatter","round","Date","timeUnit","count","firstDayOfWeek","utc","timezoneMinutes","timezone","middleValue","valueToPosition","rightLocation","locationX","leftLocation","categoryToPosition","openPositionX","topLocation","locationY","bottomLocation","openPositionY","positionBulletReal","positionToPoint","bulletLocation","workingLocations","updateStacking","invalidateProcessedData","getPropertyValue","field_1","setCalculatedValue","show","delay","interpolationDuration","defaultState","transitionDuration","animationsEnabled","anim","indexed","a","realDuration","sequencedInterpolation","sequencedInterpolationDelay","dataSets","key","dataSet","disable","enable","animation","isFinished","hidden","minZoomed","maxZoomed","hiddenState","validateDataElements","handleDataItemWorkingValueChange","axisSeries","index","field_2","eachContinue","backwards","prevSeries","prevDataItem","prevValue","prevStack","prevRealValue","_tooltipXField","_tooltipYField","selectionMin","selectionMax","processConfig","config","isString","map","hasKey","processingErrors","isArray","len","component","isObject","xKey","yKey","stackKeyX","stackKeyY","getX","getY","fitToRange","_itemReaderTextChanged","text","val","itemReaderText","axisBulletsContainer","copyFrom","source","copyProperties","registeredClasses"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/charts/series/XYSeries.js"],"sourcesContent":["/**\r\n * XY series module.\r\n */\r\nimport { __extends, __values } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Series, SeriesDataItem } from \"./Series\";\r\nimport { Sprite, visualProperties } from \"../../core/Sprite\";\r\nimport { ValueAxis } from \"../axes/ValueAxis\";\r\nimport { Dictionary } from \"../../core/utils/Dictionary\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { XYChart } from \"../types/XYChart\";\r\nimport { CategoryAxis } from \"../axes/CategoryAxis\";\r\nimport { DateAxis } from \"../axes/DateAxis\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $time from \"../../core/utils/Time\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport { options } from \"../../core/Options\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[XYSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar XYSeriesDataItem = /** @class */ (function (_super) {\r\n    __extends(XYSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function XYSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"XYSeriesDataItem\";\r\n        _this.values.customValue = {};\r\n        _this.values.valueX = { stack: 0 };\r\n        _this.values.valueY = { stack: 0 };\r\n        _this.values.openValueX = {};\r\n        _this.values.openValueY = {};\r\n        _this.values.dateX = {};\r\n        _this.values.dateY = {};\r\n        _this.values.openDateX = {};\r\n        _this.values.openDateY = {};\r\n        _this.setLocation(\"dateX\", 0.5, 0);\r\n        _this.setLocation(\"dateY\", 0.5, 0);\r\n        _this.setLocation(\"categoryX\", 0.5, 0);\r\n        _this.setLocation(\"categoryY\", 0.5, 0);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"valueX\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.valueX.value;\r\n        },\r\n        /**\r\n         * Item's numeric value on X value axis.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"valueX\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"customValue\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.customValue.value;\r\n        },\r\n        /**\r\n         * Item's custom numeric value.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"customValue\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"valueY\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.valueY.value;\r\n        },\r\n        /**\r\n         * Item's numeric value on Y value axis.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"valueY\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"dateX\", {\r\n        /**\r\n         * @return Date\r\n         */\r\n        get: function () {\r\n            return this.getDate(\"dateX\");\r\n        },\r\n        /**\r\n         * Item's date value on X date-based axis.\r\n         *\r\n         * @param date  Date\r\n         */\r\n        set: function (date) {\r\n            this.setDate(\"dateX\", date);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"dateY\", {\r\n        /**\r\n         * @return Date\r\n         */\r\n        get: function () {\r\n            return this.getDate(\"dateY\");\r\n        },\r\n        /**\r\n         * Item's date value on Y date-based axis.\r\n         *\r\n         * @param date  Date\r\n         */\r\n        set: function (date) {\r\n            this.setDate(\"dateY\", date);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"categoryX\", {\r\n        /**\r\n         * @return Category\r\n         */\r\n        get: function () {\r\n            return this.categories.categoryX;\r\n        },\r\n        /**\r\n         * Item's category on X category axis.\r\n         *\r\n         * @param category  Category\r\n         */\r\n        set: function (category) {\r\n            this.setCategory(\"categoryX\", category);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"categoryY\", {\r\n        /**\r\n         * @return Category\r\n         */\r\n        get: function () {\r\n            return this.categories.categoryY;\r\n        },\r\n        /**\r\n         * Item's category on Y category axis.\r\n         *\r\n         * @param category  Category\r\n         */\r\n        set: function (category) {\r\n            this.setCategory(\"categoryY\", category);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"openValueX\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.openValueX.value;\r\n        },\r\n        /**\r\n         * Item's open numeric value on X value axis.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"openValueX\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"openValueY\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.openValueY.value;\r\n        },\r\n        /**\r\n         * Item's open numeric value on Y value axis.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"openValueY\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"openDateX\", {\r\n        /**\r\n         * @return Date\r\n         */\r\n        get: function () {\r\n            return this.getDate(\"openDateX\");\r\n        },\r\n        /**\r\n         * Item's open date value on X date-based axis.\r\n         *\r\n         * @param date  Date\r\n         */\r\n        set: function (date) {\r\n            this.setDate(\"openDateX\", date);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"openDateY\", {\r\n        /**\r\n         * @return Date\r\n         */\r\n        get: function () {\r\n            return this.getDate(\"openDateY\");\r\n        },\r\n        /**\r\n         * Item's open date value on Y date-based axis.\r\n         *\r\n         * @param date  Date\r\n         */\r\n        set: function (date) {\r\n            this.setDate(\"openDateY\", date);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"openCategoryX\", {\r\n        /**\r\n         * @return Category\r\n         */\r\n        get: function () {\r\n            return this.categories.openCategoryX;\r\n        },\r\n        /**\r\n         * Item's open category on X category axis.\r\n         *\r\n         * @param category  Category\r\n         */\r\n        set: function (category) {\r\n            this.setCategory(\"openCategoryX\", category);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"openCategoryY\", {\r\n        /**\r\n         * @return Category\r\n         */\r\n        get: function () {\r\n            return this.categories.openCategoryY;\r\n        },\r\n        /**\r\n         * Item's open category on Y category axis.\r\n         *\r\n         * @param category  Category\r\n         */\r\n        set: function (category) {\r\n            this.setCategory(\"openCategoryY\", category);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Return smallest value out of all item's value fields.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param fields      Fields to check in\r\n     * @param working     Include working (temporary) values\r\n     * @param stackValue  If item is in a stack, the value item starts as\r\n     * @return Value\r\n     */\r\n    XYSeriesDataItem.prototype.getMin = function (fields, working, stackValue) {\r\n        var _this = this;\r\n        //if (this.visible) {  // dumped because of non smooth zooming\r\n        var min;\r\n        if (!$type.isNumber(stackValue)) {\r\n            stackValue = 0;\r\n        }\r\n        $array.each(fields, function (field) {\r\n            var value;\r\n            if (working) {\r\n                value = _this.getWorkingValue(field);\r\n            }\r\n            else {\r\n                value = _this.getValue(field);\r\n            }\r\n            value += stackValue;\r\n            if (value < min || !$type.isNumber(min)) {\r\n                min = value;\r\n            }\r\n        });\r\n        return min;\r\n        //}\r\n    };\r\n    /**\r\n     * Return biggest value out of all item's value fields.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param fields      Fields to check in\r\n     * @param working     Include working (temporary) values\r\n     * @param stackValue  If item is in a stack, the value item starts as\r\n     * @return Value\r\n     */\r\n    XYSeriesDataItem.prototype.getMax = function (fields, working, stackValue) {\r\n        var _this = this;\r\n        //if (this.visible) { // dumped because of non smooth zooming\r\n        var max;\r\n        if (!$type.isNumber(stackValue)) {\r\n            stackValue = 0;\r\n        }\r\n        $array.each(fields, function (field) {\r\n            var value;\r\n            if (working) {\r\n                value = _this.getWorkingValue(field);\r\n            }\r\n            else {\r\n                value = _this.getValue(field);\r\n            }\r\n            value += stackValue;\r\n            if (value > max || !$type.isNumber(max)) {\r\n                max = value;\r\n            }\r\n        });\r\n        return max;\r\n        //}\r\n    };\r\n    return XYSeriesDataItem;\r\n}(SeriesDataItem));\r\nexport { XYSeriesDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines Series for [[XYChart]].\r\n *\r\n * @see {@link IXYSeriesEvents} for a list of available Events\r\n * @see {@link IXYSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar XYSeries = /** @class */ (function (_super) {\r\n    __extends(XYSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function XYSeries() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Indicates which of the series' `dataFields` to calculate aggregate values\r\n         * for.\r\n         *\r\n         * Available data fields for all [[XYSeries]] are:\r\n         * `valueX`, `valueY`, `openValueX`, and `openValueY`.\r\n         *\r\n         * [[CandlestickSeries]] adds:\r\n         * `lowValueX`, `lowValueY`, `highValueX`, and `highValueY`.\r\n         *\r\n         * Available options:\r\n         * `\"open\"`, `\"close\"`, `\"low\"`, `\"high\"`, `\"average\"`, `\"sum\"`.\r\n         *\r\n         * Defaults are as follows:\r\n         * * `valueX`: `\"close\"`\r\n         * * `valueY`: `\"close\"`\r\n         * * `openValueX`: `\"open\"`\r\n         * * `openValueY`: `\"open\"`\r\n         * * `lowValueX`: `\"low\"`\r\n         * * `lowValueY`: `\"low\"`\r\n         * * `highValueX`: `\"high\"`\r\n         * * `highValueY`: `\"high\"`\r\n         *\r\n         * Is required only if data being plotted on a `DateAxis` and\r\n         * its `groupData` is set to `true`.\r\n         *\r\n         * ```TypeScript\r\n         * let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n         * dateAxis.groupData = true;\r\n         *\r\n         * let valueAxis = chart.xAxes.push(new am4charts.valueAxis());\r\n         *\r\n         * let series = chart.series.push(new am4charts.LineSeries());\r\n         * series.dataFields.dateX = \"date\";\r\n         * series.dataFields.valueY = \"value\";\r\n         * series.groupFields.valueY = \"average\";\r\n         * ```\r\n         * ```JavaScript\r\n         * var dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n         * dateAxis.groupData = true;\r\n         *\r\n         * var valueAxis = chart.xAxes.push(new am4charts.valueAxis());\r\n         *\r\n         * var series = chart.series.push(new am4charts.LineSeries());\r\n         * series.dataFields.dateX = \"date\";\r\n         * series.dataFields.valueY = \"value\";\r\n         * series.groupFields.valueY = \"average\";\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"xAxes\": [{\r\n         *     \"type\": \"DateAxis\",\r\n         *     \"groupData\": true\r\n         *   }],\r\n         *   \"yAxes\": [{\r\n         *     \"type\": \"ValueAxis\"\r\n         *   }],\r\n         *   \"series\": [{\r\n         *     \"type\": \"LineSeries\",\r\n         *     \"dataFields\": {\r\n         *       \"dateX\": \"date\",\r\n         *       \"valueY\": \"value\"\r\n         *     },\r\n         *     \"groupFields\": {\r\n         *       \"valueY\": \"average\"\r\n         *     }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * The above setup will ensure, that if there are many data items within\r\n         * selected range, they will be grouped into aggregated data points, using\r\n         * average value of all the values.\r\n         *\r\n         * For example if we have 2 years worth of daily data (~700 data items), when\r\n         * fully zoomed out, the chart would show ~100 data items instead: one for\r\n         * each week in those two years.\r\n         *\r\n         * Grouping will occur automatically, based on current selection range, and\r\n         * will change dynamically when user zooms in/out the chart.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/date-axis/#Dynamic_data_item_grouping} for more information about dynamic data item grouping.\r\n         * @since 4.7.0\r\n         */\r\n        _this.groupFields = {};\r\n        /**\r\n         * X axis the series is attached to.\r\n         */\r\n        _this._xAxis = new MutableValueDisposer();\r\n        /**\r\n         * Y axis the series is attached to.\r\n         */\r\n        _this._yAxis = new MutableValueDisposer();\r\n        /**\r\n         * [_xValueFields description]\r\n         *\r\n         * @todo Description\r\n         */\r\n        _this._xValueFields = [];\r\n        /**\r\n         * [_yValueFields description]\r\n         *\r\n         * @todo Description\r\n         */\r\n        _this._yValueFields = [];\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this._baseInterval = {};\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this.dataGrouped = false;\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this.usesShowFields = false;\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this._dataSetChanged = false;\r\n        _this._maxxX = 100000;\r\n        _this._maxxY = 100000;\r\n        _this._propertiesChanged = false;\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this.outOfRange = false;\r\n        _this.className = \"XYSeries\";\r\n        _this.isMeasured = false;\r\n        _this.groupFields.valueX = \"close\";\r\n        _this.groupFields.valueY = \"close\";\r\n        _this.groupFields.customValue = \"close\";\r\n        _this.groupFields.openValueX = \"open\";\r\n        _this.groupFields.openValueY = \"open\";\r\n        _this.cursorTooltipEnabled = true;\r\n        _this.cursorHoverEnabled = true;\r\n        _this.excludeFromTotal = false;\r\n        _this.mainContainer.mask = new Sprite();\r\n        _this.mainContainer.mask.setElement(_this.paper.add(\"path\"));\r\n        _this.stacked = false;\r\n        _this.snapTooltip = false;\r\n        _this._showBullets = false;\r\n        _this.tooltip.pointerOrientation = \"horizontal\";\r\n        _this.properties.stackToNegative = true;\r\n        _this.hideTooltipWhileZooming = true;\r\n        _this.setPropertyValue(\"maskBullets\", true);\r\n        _this.tooltip.events.on(\"hidden\", function () {\r\n            _this.returnBulletDefaultState();\r\n        }, undefined, false);\r\n        _this._disposers.push(_this._xAxis);\r\n        _this._disposers.push(_this._yAxis);\r\n        _this.observe(visualProperties, function () {\r\n            if (_this.inited) {\r\n                _this._propertiesChanged = true;\r\n                if (_this.legendDataItem) {\r\n                    _this.legendDataItem.childrenCreated = false;\r\n                }\r\n                if (_this.chart && _this.chart.legend) {\r\n                    _this.chart.legend.invalidateDataItems();\r\n                }\r\n                _this.invalidate();\r\n            }\r\n        }, undefined, false);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    XYSeries.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"X/Y Series\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    XYSeries.prototype.createDataItem = function () {\r\n        return new XYSeriesDataItem();\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYSeries.prototype.resetExtremes = function () {\r\n        this._tmin.clear();\r\n        this._tmax.clear();\r\n        this._smin.clear();\r\n        this._smax.clear();\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYSeries.prototype.dataChangeUpdate = function () {\r\n        this.dataGrouped = false;\r\n        this._baseInterval = {};\r\n        this._currentDataSetId = \"\";\r\n        this.resetExtremes();\r\n        if (this.xAxis) {\r\n            this.xAxis.seriesDataChangeUpdate(this);\r\n        }\r\n        if (this.yAxis) {\r\n            this.yAxis.seriesDataChangeUpdate(this);\r\n        }\r\n    };\r\n    /**\r\n     * (Re)validates the series' data.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYSeries.prototype.validateData = function () {\r\n        this._baseInterval = {};\r\n        var dataFields = this.dataFields;\r\n        if (dataFields.valueYShow || dataFields.openValueXShow || dataFields.openValueXShow || dataFields.openValueYShow) {\r\n            this.usesShowFields = true;\r\n        }\r\n        else {\r\n            this.usesShowFields = false;\r\n        }\r\n        this.defineFields();\r\n        if (this.data.length > 0) {\r\n            this.dataChangeUpdate();\r\n        }\r\n        _super.prototype.validateData.call(this);\r\n        this.updateItemReaderText();\r\n        if (this.chart) {\r\n            if (!$type.hasValue(this.dataFields[this._xField]) || !$type.hasValue(this.dataFields[this._yField])) {\r\n                throw Error(\"Data fields for series \\\"\" + (this.name ? this.name : this.uid) + \"\\\" are not properly defined.\");\r\n            }\r\n        }\r\n        // 4.7.21 solves 51540\r\n        if (this.inited && this.isHidden) {\r\n            this.hide(0);\r\n        }\r\n        this.dataGrouped = false;\r\n    };\r\n    /**\r\n     * Processes data item.\r\n     *\r\n     * @param dataItem     Data item\r\n     * @param dataContext  Raw data\r\n     * @param index        Index of the data item\r\n     */\r\n    XYSeries.prototype.processDataItem = function (dataItem, dataContext) {\r\n        try {\r\n            _super.prototype.processDataItem.call(this, dataItem, dataContext);\r\n            this.xAxis.processSeriesDataItem(dataItem, \"X\");\r\n            this.yAxis.processSeriesDataItem(dataItem, \"Y\");\r\n            this.setInitialWorkingValues(dataItem);\r\n        }\r\n        catch (e) {\r\n            if (this._chart) {\r\n                this._chart.raiseCriticalError(e);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * When validating raw data, instead of processing data item, we update it\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param item\r\n     */\r\n    XYSeries.prototype.updateDataItem = function (dataItem) {\r\n        _super.prototype.updateDataItem.call(this, dataItem);\r\n        //dataItem.events.disable();\r\n        this.xAxis.processSeriesDataItem(dataItem, \"X\");\r\n        this.yAxis.processSeriesDataItem(dataItem, \"Y\");\r\n        //dataItem.events.enable();\t\t\r\n    };\r\n    /**\r\n     * Inits data item's working values.\r\n     *\r\n     * @param dataItem  Data item\r\n     * @param index     Data item's index\r\n     */\r\n    XYSeries.prototype.setInitialWorkingValues = function (dataItem) {\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYSeries.prototype.disposeData = function () {\r\n        _super.prototype.disposeData.call(this);\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if (xAxis) {\r\n            var dataItemsX = this.dataItemsByAxis.getKey(xAxis.uid);\r\n            if (dataItemsX) {\r\n                dataItemsX.clear();\r\n            }\r\n            if (xAxis instanceof CategoryAxis) {\r\n                this.clearCatAxis(xAxis);\r\n            }\r\n        }\r\n        if (yAxis) {\r\n            var dataItemsY = this.dataItemsByAxis.getKey(yAxis.uid);\r\n            if (dataItemsY) {\r\n                dataItemsY.clear();\r\n            }\r\n            if (yAxis instanceof CategoryAxis) {\r\n                this.clearCatAxis(yAxis);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYSeries.prototype.clearCatAxis = function (axis) {\r\n        var uid = this.uid;\r\n        axis.dataItems.each(function (dataItem) {\r\n            if (dataItem.seriesDataItems[uid]) {\r\n                dataItem.seriesDataItems[uid] = [];\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Sets up which data fields to use for data access.\r\n     */\r\n    XYSeries.prototype.defineFields = function () {\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if (xAxis && yAxis) {\r\n            var xAxisFieldName = xAxis.axisFieldName;\r\n            var xField = (xAxisFieldName + \"X\");\r\n            var xOpenField = (\"open\" + $utils.capitalize(xAxisFieldName) + \"X\");\r\n            var yAxisFieldName = yAxis.axisFieldName;\r\n            var yField = (yAxisFieldName + \"Y\");\r\n            var yOpenField = (\"open\" + $utils.capitalize(yAxisFieldName) + \"Y\");\r\n            this._xField = xField;\r\n            this._yField = yField;\r\n            if (this.dataFields[xOpenField]) {\r\n                this._xOpenField = xOpenField;\r\n            }\r\n            if (this.dataFields[yOpenField]) {\r\n                this._yOpenField = yOpenField;\r\n            }\r\n            if (!this.dataFields[yOpenField] && this.baseAxis == yAxis) {\r\n                this._yOpenField = yField;\r\n            }\r\n            if (!this.dataFields[xOpenField] && this.baseAxis == xAxis) {\r\n                this._xOpenField = xField;\r\n            }\r\n            if (this.stacked && this.baseAxis == xAxis) {\r\n                this._xOpenField = xField;\r\n            }\r\n            if (this.stacked && this.baseAxis == yAxis) {\r\n                this._yOpenField = yField;\r\n            }\r\n            if ((xAxis instanceof CategoryAxis) && (yAxis instanceof CategoryAxis)) {\r\n                if (!this._yOpenField) {\r\n                    this._yOpenField = yField;\r\n                }\r\n            }\r\n            this._xValueFields = [];\r\n            this._yValueFields = [];\r\n            this.addValueField(xAxis, this._xValueFields, this._xField);\r\n            this.addValueField(xAxis, this._xValueFields, this._xOpenField);\r\n            this.addValueField(yAxis, this._yValueFields, this._yField);\r\n            this.addValueField(yAxis, this._yValueFields, this._yOpenField);\r\n        }\r\n    };\r\n    /**\r\n     * [axis description]\r\n     *\r\n     * @todo Description\r\n     * @param axis    Axis\r\n     * @param fields  Fields (?)\r\n     * @param field   Field\r\n     */\r\n    XYSeries.prototype.addValueField = function (axis, fields, field) {\r\n        if (axis instanceof ValueAxis) {\r\n            if ($type.hasValue(this.dataFields[field]) && fields.indexOf(field) == -1) {\r\n                fields.push(field);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets category field from the category axis.\r\n     *\r\n     * User might set field for category axis only, but not for series. In such\r\n     * case, we take field value from axis and set it for series.\r\n     *\r\n     * @param field  Field\r\n     * @param axis   Axis\r\n     */\r\n    XYSeries.prototype.setCategoryAxisField = function (field, axis) {\r\n        if (!$type.hasValue(this.dataFields[field])) {\r\n            this.dataFields[field] = axis.dataFields.category;\r\n        }\r\n    };\r\n    /**\r\n     * Sets date field from the date axis.\r\n     *\r\n     * User might set field for category axis only, but not for series. In such\r\n     * case, we take field value from axis and set it for series.\r\n     *\r\n     * @param field  Field\r\n     * @param axis   Axis\r\n     */\r\n    XYSeries.prototype.setDateAxisField = function (field, axis) {\r\n        if (!$type.hasValue(this.dataFields[field])) {\r\n            this.dataFields[field] = axis.dataFields.date;\r\n        }\r\n    };\r\n    /**\r\n     * Performs after-draw tasks, e.g. creates masks.\r\n     */\r\n    XYSeries.prototype.afterDraw = function () {\r\n        _super.prototype.afterDraw.call(this);\r\n        this.createMask();\r\n    };\r\n    /**\r\n     * Create a mask for the series.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYSeries.prototype.createMask = function () {\r\n        // this mask from which we cut out ranges. does not work well if ranges overlap.\r\n        if (this.mainContainer.mask) {\r\n            var path_1 = this.getMaskPath();\r\n            // @todo: this approach won't work well on circluar or other non x/y axes\r\n            $iter.each(this.axisRanges.iterator(), function (range) {\r\n                if (range.axisFill.fillPath) {\r\n                    range.axisFill.validate();\r\n                    path_1 += range.axisFill.fillPath;\r\n                }\r\n            });\r\n            this.mainContainer.mask.path = path_1;\r\n        }\r\n    };\r\n    /**\r\n     * Returns an SVG path to use as series mask.\r\n     *\r\n     * @return SVG path\r\n     */\r\n    XYSeries.prototype.getMaskPath = function () {\r\n        if (this.xAxis && this.yAxis) {\r\n            return $path.rectToPath({\r\n                x: 0,\r\n                y: 0,\r\n                width: this.xAxis.axisLength,\r\n                height: this.yAxis.axisLength\r\n            });\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Returns axis data field to use.\r\n     *\r\n     * @param axis  Axis\r\n     * @return Field name\r\n     */\r\n    XYSeries.prototype.getAxisField = function (axis) {\r\n        if (axis == this.xAxis) {\r\n            return this.xField;\r\n        }\r\n        if (axis == this.yAxis) {\r\n            return this.yField;\r\n        }\r\n    };\r\n    /**\r\n     * Validates data items.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYSeries.prototype.validateDataItems = function () {\r\n        var chart = this.chart;\r\n        if (chart) {\r\n            this._maxxX = $math.max(100000, chart.plotContainer.maxWidth * 2);\r\n            this._maxxY = $math.max(100000, chart.plotContainer.maxHeight * 2);\r\n        }\r\n        // this helps date axis to check which baseInterval we should use\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if (xAxis && yAxis) {\r\n            xAxis.updateAxisBySeries();\r\n            yAxis.updateAxisBySeries();\r\n        }\r\n        _super.prototype.validateDataItems.call(this);\r\n        if (xAxis && yAxis) {\r\n            xAxis.postProcessSeriesDataItems(this);\r\n            yAxis.postProcessSeriesDataItems(this);\r\n        }\r\n    };\r\n    /**\r\n     * Validates data range.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYSeries.prototype.validateDataRange = function () {\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if (xAxis && yAxis) {\r\n            if (xAxis.dataRangeInvalid) {\r\n                xAxis.validateDataRange();\r\n            }\r\n            if (yAxis.dataRangeInvalid) {\r\n                yAxis.validateDataRange();\r\n            }\r\n        }\r\n        _super.prototype.validateDataRange.call(this);\r\n    };\r\n    /**\r\n     * (Re)validates the whole series, effectively causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYSeries.prototype.validate = function () {\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if (xAxis && yAxis) {\r\n            if (xAxis.invalid) {\r\n                xAxis.validate();\r\n            }\r\n            if (yAxis.invalid) {\r\n                yAxis.validate();\r\n            }\r\n            this.y = yAxis.pixelY;\r\n            this.x = xAxis.pixelX;\r\n            this._showBullets = true;\r\n            var minBulletDistance = this.minBulletDistance;\r\n            if ($type.isNumber(minBulletDistance)) {\r\n                if (this.baseAxis.axisLength / (this.endIndex - this.startIndex) < minBulletDistance) {\r\n                    this._showBullets = false;\r\n                }\r\n            }\r\n        }\r\n        this.updateTooltip();\r\n        if ((xAxis instanceof DateAxis && xAxis.groupData && !this.dataGrouped) || (yAxis instanceof DateAxis && yAxis.groupData && !this.dataGrouped)) {\r\n            return;\r\n        }\r\n        _super.prototype.validate.call(this);\r\n        var chart = this.chart;\r\n        var maskBullets = this.maskBullets;\r\n        if (chart && maskBullets) {\r\n            if (chart.className == \"XYChart\") {\r\n                if (chart.leftAxesContainer.layout == \"vertical\" || chart.rightAxesContainer.layout == \"vertical\") {\r\n                    if (this.yAxis) {\r\n                        this.bulletsContainer.mask = this.yAxis.renderer.gridContainer;\r\n                    }\r\n                    else {\r\n                        this.bulletsContainer.mask = undefined;\r\n                    }\r\n                }\r\n                if (chart.topAxesContainer.layout == \"horizontal\" || chart.bottomAxesContainer.layout == \"horizontal\") {\r\n                    if (this.xAxis) {\r\n                        this.bulletsContainer.mask = this.xAxis.renderer.gridContainer;\r\n                    }\r\n                    else {\r\n                        this.bulletsContainer.mask = undefined;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(XYSeries.prototype, \"xAxis\", {\r\n        /**\r\n         * @return Axis\r\n         */\r\n        get: function () {\r\n            if (this.chart) {\r\n                if (!this._xAxis.get()) {\r\n                    var axis = this.chart.xAxes.getIndex(0);\r\n                    if (!axis) {\r\n                        throw Error(\"There are no X axes on chart.\");\r\n                    }\r\n                    this.xAxis = axis;\r\n                }\r\n                return this._xAxis.get();\r\n            }\r\n        },\r\n        /**\r\n         * X axis the series is attached to.\r\n         *\r\n         * @param axis  Axis\r\n         */\r\n        set: function (axis) {\r\n            this.setXAxis(axis);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    XYSeries.prototype.setXAxis = function (axis) {\r\n        var oldAxis = this._xAxis.get();\r\n        if (oldAxis != axis) {\r\n            if (oldAxis) {\r\n                this.dataItemsByAxis.removeKey(oldAxis.uid);\r\n                // TODO why is this here ?\r\n                this._xAxis.dispose();\r\n                // temp @todo: why it is not disposed?\r\n                oldAxis.series.removeValue(this);\r\n            }\r\n            this._xAxis.set(axis, axis.registerSeries(this));\r\n            this.dataItemsByAxis.setKey(axis.uid, new Dictionary());\r\n            this.invalidateData();\r\n        }\r\n    };\r\n    Object.defineProperty(XYSeries.prototype, \"yAxis\", {\r\n        /**\r\n         * @return Axis\r\n         */\r\n        get: function () {\r\n            if (this.chart) {\r\n                if (!this._yAxis.get()) {\r\n                    var axis = this.chart.yAxes.getIndex(0);\r\n                    if (!axis) {\r\n                        throw Error(\"There are no Y axes on chart.\");\r\n                    }\r\n                    this.yAxis = axis;\r\n                }\r\n                return this._yAxis.get();\r\n            }\r\n        },\r\n        /**\r\n         * Y axis the series is attached to.\r\n         *\r\n         * @param axis  Axis\r\n         */\r\n        set: function (axis) {\r\n            this.setYAxis(axis);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    XYSeries.prototype.setYAxis = function (axis) {\r\n        var oldAxis = this._yAxis.get();\r\n        if (oldAxis != axis) {\r\n            if (oldAxis) {\r\n                this.dataItemsByAxis.removeKey(oldAxis.uid);\r\n                // TODO why is this here ?\r\n                this._yAxis.dispose();\r\n                // temp @todo: why it is not disposed?\r\n                oldAxis.series.removeValue(this);\r\n            }\r\n            this._yAxis.set(axis, axis.registerSeries(this));\r\n            if (axis.chart instanceof XYChart) {\r\n                axis.chart.handleYAxisSet(this);\r\n            }\r\n            this.dataItemsByAxis.setKey(axis.uid, new Dictionary());\r\n            this.invalidateData();\r\n        }\r\n    };\r\n    Object.defineProperty(XYSeries.prototype, \"baseAxis\", {\r\n        /**\r\n         * @return Axis\r\n         */\r\n        get: function () {\r\n            var xAxis = this.xAxis;\r\n            var yAxis = this.yAxis;\r\n            if (!this._baseAxis && xAxis && yAxis) {\r\n                if (yAxis instanceof DateAxis) {\r\n                    this._baseAxis = yAxis;\r\n                }\r\n                if (xAxis instanceof DateAxis) {\r\n                    this._baseAxis = xAxis;\r\n                }\r\n                if (yAxis instanceof CategoryAxis) {\r\n                    this._baseAxis = yAxis;\r\n                }\r\n                if (xAxis instanceof CategoryAxis) {\r\n                    this._baseAxis = xAxis;\r\n                }\r\n                if (!this._baseAxis) {\r\n                    this._baseAxis = xAxis;\r\n                }\r\n            }\r\n            return this._baseAxis;\r\n        },\r\n        /**\r\n         * The main (base) axis.\r\n         *\r\n         * This is the axis that series fills will go to, or grow animations will\r\n         * happen from.\r\n         *\r\n         * @param value  Axis\r\n         */\r\n        set: function (value) {\r\n            if (this._baseAxis != value) {\r\n                this._baseAxis = value;\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds one or several (array) of data items to the existing data.\r\n     *\r\n     * @param rawDataItem One or many raw data item objects\r\n     */\r\n    XYSeries.prototype.addData = function (rawDataItem, removeCount, skipRaw) {\r\n        _super.prototype.addData.call(this, rawDataItem, removeCount, skipRaw);\r\n        var scrollbarSeries = this.scrollbarSeries;\r\n        if (scrollbarSeries) {\r\n            this.scrollbarSeries.addData(rawDataItem, removeCount, true);\r\n            this.scrollbarSeries._parseDataFrom = this._parseDataFrom;\r\n        }\r\n    };\r\n    XYSeries.prototype.setData = function (value) {\r\n        _super.prototype.setData.call(this, value);\r\n        if (this.scrollbarSeries) {\r\n            this.scrollbarSeries.setData(value);\r\n        }\r\n    };\r\n    /**\r\n     * Makes the chart use particular data set.\r\n     *\r\n     * If `id` is not provided or there is no such data set, main data will be\r\n     * used.\r\n     *\r\n     * @ignore\r\n     * @since 4.7.0\r\n     * @param  id  Data set id\r\n     */\r\n    XYSeries.prototype.setDataSet = function (id) {\r\n        var changed = _super.prototype.setDataSet.call(this, id);\r\n        if (changed) {\r\n            this._dataSetChanged = true;\r\n            var dataItems = this.dataItems;\r\n            this.resetExtremes();\r\n            if (dataItems && dataItems.length > 0) {\r\n                var xAxis = this.xAxis;\r\n                var yAxis = this.yAxis;\r\n                this._prevStartIndex = undefined;\r\n                this._prevEndIndex = undefined;\r\n                this._startIndex = undefined;\r\n                this._endIndex = undefined;\r\n                if (!this.appeared) {\r\n                    this.processValues(false); // this will slow down!\r\n                }\r\n                if (xAxis instanceof DateAxis && xAxis == this.baseAxis) {\r\n                    this._tmin.setKey(xAxis.uid, dataItems.getIndex(0).dateX.getTime());\r\n                    this._tmax.setKey(xAxis.uid, dataItems.getIndex(dataItems.length - 1).dateX.getTime());\r\n                    this.dispatch(\"extremeschanged\");\r\n                }\r\n                if (yAxis instanceof DateAxis && yAxis == this.baseAxis) {\r\n                    this._tmin.setKey(yAxis.uid, dataItems.getIndex(0).dateY.getTime());\r\n                    this._tmax.setKey(yAxis.uid, dataItems.getIndex(dataItems.length - 1).dateY.getTime());\r\n                    this.dispatch(\"extremeschanged\");\r\n                }\r\n            }\r\n        }\r\n        return changed;\r\n    };\r\n    /**\r\n     * Processes values after data items' were added.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItems  Data items\r\n     */\r\n    XYSeries.prototype.processValues = function (working) {\r\n        _super.prototype.processValues.call(this, working);\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if (!xAxis || !yAxis) {\r\n            return;\r\n        }\r\n        var dataItems = this.dataItems;\r\n        var minX = Infinity;\r\n        var maxX = -Infinity;\r\n        var minY = Infinity;\r\n        var maxY = -Infinity;\r\n        var startIndex = this.startIndex;\r\n        var endIndex = this.endIndex;\r\n        var workingStartIndex = startIndex;\r\n        var workingEndIndex = endIndex;\r\n        if (!working) {\r\n            startIndex = 0;\r\n            endIndex = this.dataItems.length;\r\n        }\r\n        for (var i = startIndex; i < endIndex; i++) {\r\n            var dataItem = dataItems.getIndex(i);\r\n            this.getStackValue(dataItem, working);\r\n            var stackX = dataItem.getValue(\"valueX\", \"stack\");\r\n            var stackY = dataItem.getValue(\"valueY\", \"stack\");\r\n            if (!working) {\r\n                stackX = dataItem.getValue(\"valueX\", \"stackTrue\");\r\n                stackY = dataItem.getValue(\"valueY\", \"stackTrue\");\r\n            }\r\n            minX = $math.min(dataItem.getMin(this._xValueFields, working, stackX), minX);\r\n            minY = $math.min(dataItem.getMin(this._yValueFields, working, stackY), minY);\r\n            maxX = $math.max(dataItem.getMax(this._xValueFields, working, stackX), maxX);\r\n            maxY = $math.max(dataItem.getMax(this._yValueFields, working, stackY), maxY);\r\n            // if it's stacked, pay attention to stack value\r\n            if (this.stacked) {\r\n                if (this.baseAxis == xAxis) {\r\n                    if (stackY < minY) {\r\n                        minY = stackY;\r\n                    }\r\n                    if (stackY > maxY) {\r\n                        maxY = stackY;\r\n                    }\r\n                }\r\n                if (this.baseAxis == yAxis) {\r\n                    if (stackX < minX) {\r\n                        minX = stackX;\r\n                    }\r\n                    if (stackX > maxX) {\r\n                        maxX = stackX;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // this is mainly for value axis to calculate total and perecent.total of each series category\r\n        xAxis.processSeriesDataItems();\r\n        yAxis.processSeriesDataItems();\r\n        var xAxisId = xAxis.uid;\r\n        var yAxisId = yAxis.uid;\r\n        if (this.xAxis instanceof ValueAxis && (minX == Infinity || maxX == -Infinity)) {\r\n            this._smin.setKey(xAxisId, undefined);\r\n            this._smax.setKey(xAxisId, undefined);\r\n            this.dispatchImmediately(\"selectionextremeschanged\");\r\n            return;\r\n        }\r\n        if (this.yAxis instanceof ValueAxis && (minY == Infinity || maxY == -Infinity)) {\r\n            this._smin.setKey(yAxisId, undefined);\r\n            this._smax.setKey(yAxisId, undefined);\r\n            this.dispatchImmediately(\"selectionextremeschanged\");\r\n            return;\r\n        }\r\n        if (!working) {\r\n            if (this._tmin.getKey(xAxisId) != minX || this._tmax.getKey(xAxisId) != maxX || this._tmin.getKey(yAxisId) != minY || this._tmax.getKey(yAxisId) != maxY) {\r\n                this._tmin.setKey(xAxisId, minX);\r\n                this._tmax.setKey(xAxisId, maxX);\r\n                this._tmin.setKey(yAxisId, minY);\r\n                this._tmax.setKey(yAxisId, maxY);\r\n                var stackedSeries = this.stackedSeries;\r\n                if (stackedSeries) {\r\n                    if (stackedSeries.isDisposed()) {\r\n                        this.stackedSeries = undefined;\r\n                    }\r\n                    else {\r\n                        stackedSeries.processValues(false);\r\n                    }\r\n                }\r\n                this.dispatchImmediately(\"extremeschanged\");\r\n            }\r\n        }\r\n        if (startIndex != workingStartIndex || endIndex != workingEndIndex) {\r\n            minX = Infinity;\r\n            maxX = -Infinity;\r\n            minY = Infinity;\r\n            maxY = -Infinity;\r\n            for (var i = workingStartIndex; i < workingEndIndex; i++) {\r\n                var dataItem = dataItems.getIndex(i);\r\n                this.getStackValue(dataItem, working);\r\n                var stackX = dataItem.getValue(\"valueX\", \"stack\");\r\n                var stackY = dataItem.getValue(\"valueY\", \"stack\");\r\n                if (!working) {\r\n                    stackX = dataItem.getValue(\"valueX\", \"stackTrue\");\r\n                    stackY = dataItem.getValue(\"valueY\", \"stackTrue\");\r\n                }\r\n                minX = $math.min(dataItem.getMin(this._xValueFields, working, stackX), minX);\r\n                minY = $math.min(dataItem.getMin(this._yValueFields, working, stackY), minY);\r\n                maxX = $math.max(dataItem.getMax(this._xValueFields, working, stackX), maxX);\r\n                maxY = $math.max(dataItem.getMax(this._yValueFields, working, stackY), maxY);\r\n                // if it's stacked, pay attention to stack value\r\n                if (this.stacked) {\r\n                    if (this.baseAxis == xAxis) {\r\n                        if (stackY < minY) {\r\n                            minY = stackY;\r\n                        }\r\n                        if (stackY > maxY) {\r\n                            maxY = stackY;\r\n                        }\r\n                    }\r\n                    if (this.baseAxis == yAxis) {\r\n                        if (stackX < minX) {\r\n                            minX = stackX;\r\n                        }\r\n                        if (stackX > maxX) {\r\n                            maxX = stackX;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.xAxis instanceof ValueAxis && (minX == Infinity || maxX == -Infinity)) {\r\n            this._smin.setKey(xAxisId, undefined);\r\n            this._smax.setKey(xAxisId, undefined);\r\n            this.dispatchImmediately(\"selectionextremeschanged\");\r\n            return;\r\n        }\r\n        if (this.yAxis instanceof ValueAxis && (minY == Infinity || maxY == -Infinity)) {\r\n            this._smin.setKey(yAxisId, undefined);\r\n            this._smax.setKey(yAxisId, undefined);\r\n            this.dispatchImmediately(\"selectionextremeschanged\");\r\n            return;\r\n        }\r\n        if (this._smin.getKey(xAxisId) != minX || this._smax.getKey(xAxisId) != maxX || this._smin.getKey(yAxisId) != minY || this._smax.getKey(yAxisId) != maxY) {\r\n            this._smin.setKey(xAxisId, minX);\r\n            this._smax.setKey(xAxisId, maxX);\r\n            this._smin.setKey(yAxisId, minY);\r\n            this._smax.setKey(yAxisId, maxY);\r\n            if (this.appeared || this.start != 0 || this.end != 1 || this.dataItems != this.mainDataSet) {\r\n                /// new, helps to handle issues with change percent\r\n                var changed = false;\r\n                if (yAxis instanceof ValueAxis && !(yAxis instanceof DateAxis)) {\r\n                    var tmin = this._tmin.getKey(yAxisId);\r\n                    if (!$type.isNumber(tmin) || ((this.usesShowFields || this._dataSetChanged || (xAxis instanceof DateAxis && xAxis.groupData && this.isShowing)) && minY < tmin) || (this.stackedSeries && !this.isHidden && !working)) {\r\n                        this._tmin.setKey(yAxisId, minY);\r\n                        changed = true;\r\n                    }\r\n                    var tmax = this._tmax.getKey(yAxisId);\r\n                    if (!$type.isNumber(tmax) || ((this.usesShowFields || this._dataSetChanged || (xAxis instanceof DateAxis && xAxis.groupData && this.isShowing)) && maxY > tmax) || (this.stackedSeries && !this.isHidden && !working)) {\r\n                        this._tmax.setKey(yAxisId, maxY);\r\n                        changed = true;\r\n                    }\r\n                }\r\n                if (xAxis instanceof ValueAxis && !(xAxis instanceof DateAxis)) {\r\n                    var tmin = this._tmin.getKey(xAxisId);\r\n                    if (!$type.isNumber(tmin) || ((this.usesShowFields || this._dataSetChanged || (yAxis instanceof DateAxis && yAxis.groupData && this.isShowing)) && minX < tmin) || (this.stackedSeries && !this.isHidden && !working)) {\r\n                        this._tmin.setKey(xAxisId, minX);\r\n                        changed = true;\r\n                    }\r\n                    var tmax = this._tmax.getKey(xAxisId);\r\n                    if (!$type.isNumber(tmax) || ((this.usesShowFields || this._dataSetChanged || (yAxis instanceof DateAxis && yAxis.groupData && this.isShowing)) && maxX > tmax) || (this.stackedSeries && !this.isHidden && !working)) {\r\n                        this._tmax.setKey(xAxisId, maxX);\r\n                        changed = true;\r\n                    }\r\n                }\r\n                if (changed) {\r\n                    this.dispatchImmediately(\"extremeschanged\");\r\n                }\r\n                if (this.start == 0 && this.end == 1) {\r\n                    // yes, its ok. otherwise min/max won't be updated when zooming out\r\n                    this._dataSetChanged = false;\r\n                }\r\n                this.dispatchImmediately(\"selectionextremeschanged\");\r\n            }\r\n        }\r\n        if (!working && this.stacked) {\r\n            this.processValues(true);\r\n        }\r\n    };\r\n    /**\r\n     * Hides element's [[Tooltip]].\r\n     *\r\n     * @see {@link Tooltip}\r\n     */\r\n    XYSeries.prototype.hideTooltip = function (duration) {\r\n        _super.prototype.hideTooltip.call(this, duration);\r\n        this.returnBulletDefaultState();\r\n        this._prevTooltipDataItem = undefined;\r\n    };\r\n    /**\r\n     * Shows series tooltip at specific position.\r\n     *\r\n     * @param xPosition  X\r\n     * @param yPosition  Y\r\n     */\r\n    XYSeries.prototype.showTooltipAtPosition = function (xPosition, yPosition) {\r\n        var dataItem;\r\n        if (this.visible && !this.isHiding && !this.isShowing) {\r\n            var xAxis = this._xAxis.get();\r\n            var yAxis = this._yAxis.get();\r\n            if (xAxis == this.baseAxis) {\r\n                dataItem = xAxis.getSeriesDataItem(this, xAxis.toAxisPosition(xPosition), this.snapTooltip);\r\n            }\r\n            if (yAxis == this.baseAxis) {\r\n                dataItem = yAxis.getSeriesDataItem(this, yAxis.toAxisPosition(yPosition), this.snapTooltip);\r\n            }\r\n            var point = this.showTooltipAtDataItem(dataItem);\r\n            if (point) {\r\n                return point;\r\n            }\r\n            // so that if tooltip is shown on columns or bullets for it not to be hidden\r\n            if (!this.tooltipText && !this.tooltipHTML) {\r\n                return;\r\n            }\r\n        }\r\n        this.hideTooltip();\r\n    };\r\n    XYSeries.prototype.getAdjustedXLocation = function (dataItem, field, bulletLocationX) {\r\n        return dataItem.locations[field];\r\n    };\r\n    XYSeries.prototype.getAdjustedYLocation = function (dataItem, field, bulletLocationY) {\r\n        return dataItem.locations[field];\r\n    };\r\n    /**\r\n     * Shows series tooltip at specific dataItem.\r\n     *\r\n     * @param dataItem\r\n     */\r\n    XYSeries.prototype.showTooltipAtDataItem = function (dataItem) {\r\n        var e_1, _a;\r\n        var cursor = this.chart.cursor;\r\n        if (cursor && cursor.hideSeriesTooltipsOnSelection && cursor.selection.visible && cursor.downPoint) {\r\n            this.hideTooltip();\r\n            return;\r\n        }\r\n        this.returnBulletDefaultState(dataItem);\r\n        if (dataItem && dataItem.visible) {\r\n            this.updateLegendValue(dataItem);\r\n            if (this.cursorTooltipEnabled) {\r\n                this.tooltipDataItem = dataItem;\r\n                // todo: add tooltipXField and tooltipYField.\r\n                var tooltipXField = this.tooltipXField;\r\n                var tooltipYField = this.tooltipYField;\r\n                if ($type.hasValue(dataItem[tooltipXField]) && $type.hasValue(dataItem[tooltipYField])) {\r\n                    var tooltipPoint = this.getPoint(dataItem, tooltipXField, tooltipYField, this.getAdjustedXLocation(dataItem, tooltipXField), this.getAdjustedYLocation(dataItem, tooltipYField));\r\n                    if (tooltipPoint) {\r\n                        if (this.chart.className == \"XYChart\" && (tooltipPoint.y < -1 || tooltipPoint.y > this.yAxis.pixelHeight + 1 || tooltipPoint.x < -1 || tooltipPoint.x > this.xAxis.pixelWidth + 1)) {\r\n                            // void\r\n                        }\r\n                        else {\r\n                            this.tooltipX = tooltipPoint.x;\r\n                            this.tooltipY = tooltipPoint.y;\r\n                            if (this._prevTooltipDataItem != dataItem) {\r\n                                this.dispatchImmediately(\"tooltipshownat\", {\r\n                                    type: \"tooltipshownat\",\r\n                                    target: this,\r\n                                    dataItem: dataItem\r\n                                });\r\n                                this._prevTooltipDataItem = dataItem;\r\n                            }\r\n                            if (this.cursorHoverEnabled) {\r\n                                try {\r\n                                    for (var _b = __values(dataItem.sprites), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                                        var sprite = _c.value;\r\n                                        if (!sprite.parent.visible || sprite.isHidden || sprite.__disabled || sprite.disabled || sprite.isHiding) {\r\n                                        }\r\n                                        else {\r\n                                            if (!sprite.interactions.isRealHover) {\r\n                                                sprite.dispatchImmediately(\"over\");\r\n                                                sprite.interactions.isRealHover = true;\r\n                                            }\r\n                                            sprite.isHover = true;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n                                finally {\r\n                                    try {\r\n                                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                                    }\r\n                                    finally { if (e_1) throw e_1.error; }\r\n                                }\r\n                            }\r\n                            if (this.showTooltip()) {\r\n                                return $utils.spritePointToSvg({ x: tooltipPoint.x, y: tooltipPoint.y }, this);\r\n                            }\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.updateLegendValue(dataItem, true);\r\n        }\r\n    };\r\n    /**\r\n     * Returns default state to bullets when tooltip is shown at some other data\r\n     * item or hidden\r\n     */\r\n    XYSeries.prototype.returnBulletDefaultState = function (dataItem) {\r\n        var e_2, _a;\r\n        if (this._prevTooltipDataItem && this._prevTooltipDataItem != dataItem) {\r\n            try {\r\n                for (var _b = __values(this._prevTooltipDataItem.sprites), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var sprite = _c.value;\r\n                    if (!sprite.isDisposed()) {\r\n                        var fireEvent = sprite.interactions.isRealHover;\r\n                        sprite.isHover = false;\r\n                        if (fireEvent) {\r\n                            sprite.dispatchImmediately(\"out\");\r\n                        }\r\n                    }\r\n                    else {\r\n                        this._prevTooltipDataItem = undefined;\r\n                    }\r\n                }\r\n            }\r\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_2) throw e_2.error; }\r\n            }\r\n        }\r\n    };\r\n    XYSeries.prototype.shouldCreateBullet = function (dataItem, bulletTemplate) {\r\n        // use series xField/yField if bullet doesn't have fields set\r\n        var xField = bulletTemplate.xField;\r\n        if (!$type.hasValue(xField)) {\r\n            xField = this.xField;\r\n        }\r\n        var yField = bulletTemplate.yField;\r\n        if (!$type.hasValue(yField)) {\r\n            yField = this.yField;\r\n        }\r\n        if ((this.xAxis instanceof ValueAxis && !dataItem.hasValue([xField])) || (this.yAxis instanceof ValueAxis && !dataItem.hasValue([yField]))) {\r\n            return false;\r\n        }\r\n        if (bulletTemplate.disabled) {\r\n            var disabledField = bulletTemplate.propertyFields.disabled;\r\n            var dataContext = dataItem.dataContext;\r\n            if (dataContext && dataContext[disabledField] === false) {\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYSeries.prototype.updateTooltip = function () {\r\n        if (!this.hideTooltipWhileZooming && this.tooltip && !this.tooltip.isHidden && !this.isHiding && !this.isHidden && this.tooltipDataItem) {\r\n            this.showTooltipAtDataItem(this.tooltipDataItem);\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYSeries.prototype.positionBullet = function (bullet) {\r\n        _super.prototype.positionBullet.call(this, bullet);\r\n        var dataItem = bullet.dataItem;\r\n        // use series xField/yField if bullet doesn't have fields set\r\n        var xField = bullet.xField;\r\n        if (!$type.hasValue(xField)) {\r\n            xField = this.xField;\r\n        }\r\n        var yField = bullet.yField;\r\n        if (!$type.hasValue(yField)) {\r\n            yField = this.yField;\r\n        }\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if ((xAxis instanceof ValueAxis && !dataItem.hasValue([xField])) || (yAxis instanceof ValueAxis && !dataItem.hasValue([yField]))) {\r\n            bullet.visible = false;\r\n        }\r\n        else {\r\n            var bulletLocationX = this.getBulletLocationX(bullet, xField);\r\n            var bulletLocationY = this.getBulletLocationY(bullet, yField);\r\n            var point = this.getPoint(dataItem, xField, yField, bulletLocationX, bulletLocationY);\r\n            if (point) {\r\n                var xOpenField = this.xOpenField;\r\n                var yOpenField = this.yOpenField;\r\n                var positionX = void 0;\r\n                var positionY = void 0;\r\n                if (xAxis instanceof DateAxis) {\r\n                    if (!$type.isNumber(bulletLocationX)) {\r\n                        bulletLocationX = 0;\r\n                    }\r\n                    var openValue = void 0;\r\n                    var closeValue = dataItem.getWorkingValue(xField);\r\n                    if (!xOpenField) {\r\n                        if (xAxis == this.baseAxis) {\r\n                            openValue = xAxis.baseValue;\r\n                        }\r\n                    }\r\n                    else {\r\n                        openValue = dataItem.getWorkingValue(xOpenField);\r\n                    }\r\n                    if (!$type.isNumber(openValue)) {\r\n                        openValue = closeValue;\r\n                    }\r\n                    var stack = dataItem.getValue(\"valueX\", \"stack\");\r\n                    openValue += stack;\r\n                    closeValue += stack;\r\n                    if (openValue == closeValue) {\r\n                        var baseInterval = xAxis.baseInterval;\r\n                        var dateFormatter = xAxis.dateFormatter;\r\n                        openValue = $time.round(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.firstDayOfWeek, dateFormatter.utc, undefined, dateFormatter.timezoneMinutes, dateFormatter.timezone).getTime();\r\n                        closeValue = $time.add(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.utc).getTime();\r\n                    }\r\n                    var middleValue = void 0;\r\n                    if (xAxis == this.baseAxis) {\r\n                        middleValue = openValue + (closeValue - openValue) * bulletLocationX;\r\n                    }\r\n                    else {\r\n                        middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationX);\r\n                    }\r\n                    positionX = xAxis.valueToPosition(middleValue);\r\n                }\r\n                else if (xAxis instanceof ValueAxis) {\r\n                    if (!$type.isNumber(bulletLocationX)) {\r\n                        bulletLocationX = 0;\r\n                    }\r\n                    var openValue = void 0;\r\n                    var closeValue = dataItem.getWorkingValue(xField);\r\n                    if (!xOpenField) {\r\n                        openValue = xAxis.baseValue;\r\n                    }\r\n                    else {\r\n                        openValue = dataItem.getWorkingValue(xOpenField);\r\n                    }\r\n                    var stack = dataItem.getValue(\"valueX\", \"stack\");\r\n                    openValue += stack;\r\n                    closeValue += stack;\r\n                    var middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationX);\r\n                    positionX = xAxis.valueToPosition(middleValue);\r\n                }\r\n                else if (xAxis instanceof CategoryAxis) {\r\n                    var rightLocation = this.getAdjustedXLocation(dataItem, xField, bullet.locationX);\r\n                    var leftLocation = this.getAdjustedXLocation(dataItem, xOpenField, bullet.locationX);\r\n                    positionX = xAxis.categoryToPosition(dataItem[xField], rightLocation);\r\n                    var openPositionX = void 0;\r\n                    if (xOpenField) {\r\n                        openPositionX = xAxis.categoryToPosition(dataItem[xOpenField], leftLocation);\r\n                    }\r\n                    if (!$type.isNumber(openPositionX)) {\r\n                        openPositionX = 1;\r\n                    }\r\n                    positionX = openPositionX + (positionX - openPositionX) * bulletLocationX;\r\n                }\r\n                if (yAxis instanceof DateAxis) {\r\n                    if (!$type.isNumber(bulletLocationY)) {\r\n                        bulletLocationY = 0;\r\n                    }\r\n                    var openValue = void 0;\r\n                    var closeValue = dataItem.getWorkingValue(yField);\r\n                    if (!yOpenField) {\r\n                        if (yAxis == this.baseAxis) {\r\n                            openValue = yAxis.baseValue;\r\n                        }\r\n                    }\r\n                    else {\r\n                        openValue = dataItem.getWorkingValue(yOpenField);\r\n                    }\r\n                    if (!$type.isNumber(openValue)) {\r\n                        openValue = closeValue;\r\n                    }\r\n                    var stack = dataItem.getValue(\"valueY\", \"stack\");\r\n                    openValue += stack;\r\n                    closeValue += stack;\r\n                    if (openValue == closeValue) {\r\n                        var baseInterval = yAxis.baseInterval;\r\n                        var dateFormatter = yAxis.dateFormatter;\r\n                        openValue = $time.round(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.firstDayOfWeek, dateFormatter.utc, undefined, dateFormatter.timezoneMinutes, dateFormatter.timezone).getTime();\r\n                        closeValue = $time.add(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.utc).getTime();\r\n                    }\r\n                    var middleValue = void 0;\r\n                    if (yAxis == this.baseAxis) {\r\n                        middleValue = openValue + (closeValue - openValue) * bulletLocationY;\r\n                    }\r\n                    else {\r\n                        middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationY);\r\n                    }\r\n                    positionY = yAxis.valueToPosition(middleValue);\r\n                }\r\n                else if (yAxis instanceof ValueAxis) {\r\n                    if (!$type.isNumber(bulletLocationY)) {\r\n                        bulletLocationY = 0;\r\n                    }\r\n                    var openValue = void 0;\r\n                    var closeValue = dataItem.getWorkingValue(yField);\r\n                    if (!yOpenField) {\r\n                        openValue = yAxis.baseValue;\r\n                    }\r\n                    else {\r\n                        openValue = dataItem.getWorkingValue(yOpenField);\r\n                    }\r\n                    var stack = dataItem.getValue(\"valueY\", \"stack\");\r\n                    openValue += stack;\r\n                    closeValue += stack;\r\n                    var middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationY);\r\n                    positionY = yAxis.valueToPosition(middleValue);\r\n                }\r\n                else if (yAxis instanceof CategoryAxis) {\r\n                    positionY = yAxis.categoryToPosition(dataItem[yField], bulletLocationY);\r\n                    var topLocation = this.getAdjustedYLocation(dataItem, yField, bullet.locationY);\r\n                    var bottomLocation = this.getAdjustedYLocation(dataItem, yOpenField, bullet.locationY);\r\n                    positionY = yAxis.categoryToPosition(dataItem[yField], topLocation);\r\n                    var openPositionY = void 0;\r\n                    if (yOpenField) {\r\n                        openPositionY = yAxis.categoryToPosition(dataItem[yOpenField], bottomLocation);\r\n                    }\r\n                    if (!$type.isNumber(openPositionY)) {\r\n                        openPositionY = 1;\r\n                    }\r\n                    positionY = openPositionY + (positionY - openPositionY) * bulletLocationY;\r\n                }\r\n                bullet.visible = true;\r\n                this.positionBulletReal(bullet, positionX, positionY);\r\n            }\r\n            else {\r\n                bullet.visible = false;\r\n            }\r\n        }\r\n    };\r\n    XYSeries.prototype.positionBulletReal = function (bullet, positionX, positionY) {\r\n        bullet.x = this.xAxis.renderer.positionToPoint(positionX, positionY).x;\r\n        bullet.y = this.yAxis.renderer.positionToPoint(positionY, positionX).y;\r\n    };\r\n    /**\r\n     * returns bullet x location\r\n     * @ignore\r\n     */\r\n    XYSeries.prototype.getBulletLocationX = function (bullet, field) {\r\n        var bulletLocation = bullet.locationX;\r\n        var dataItem = bullet.dataItem;\r\n        if (!$type.isNumber(bulletLocation)) {\r\n            bulletLocation = dataItem.workingLocations[field];\r\n        }\r\n        return bulletLocation;\r\n    };\r\n    /**\r\n     * Returns bullet x location\r\n     * @ignore\r\n     */\r\n    XYSeries.prototype.getBulletLocationY = function (bullet, field) {\r\n        var bulletLocation = bullet.locationY;\r\n        var dataItem = bullet.dataItem;\r\n        if (!$type.isNumber(bulletLocation)) {\r\n            bulletLocation = dataItem.workingLocations[field];\r\n        }\r\n        return bulletLocation;\r\n    };\r\n    /**\r\n     * This method must be called if you update Series' data fields that might\r\n     * affect stacking of the series.\r\n     *\r\n     * Since individual `dataField` changes are not being monitored, you need\r\n     * todo it manually for changes to take affect.\r\n     *\r\n     * @since 4.7.21\r\n     */\r\n    XYSeries.prototype.updateStacking = function () {\r\n        var _this = this;\r\n        this.invalidateDataItems();\r\n        if (this.chart) {\r\n            this.chart.series.each(function (series) {\r\n                if (series.baseAxis == _this.baseAxis) {\r\n                    series.stackedSeries = undefined;\r\n                    series.invalidateDataItems();\r\n                    series.invalidateProcessedData();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(XYSeries.prototype, \"stacked\", {\r\n        /**\r\n         * @return Can be stacked?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"stacked\");\r\n        },\r\n        /**\r\n         * Can items from this series be included into stacks?\r\n         *\r\n         * Note: proper stacking is only possible if series have the same number\r\n         * of data items. To ensure this, don't set data directly on series\r\n         * but do this on chart instead.\r\n         *\r\n         * @default false\r\n         * @param stacked  Can be stacked?\r\n         */\r\n        set: function (stacked) {\r\n            if (this.setPropertyValue(\"stacked\", stacked, true)) {\r\n                this.updateStacking();\r\n                var xAxis = this.xAxis;\r\n                var yAxis = this.yAxis;\r\n                if (!stacked) {\r\n                    var field_1;\r\n                    if (xAxis != this.baseAxis && xAxis instanceof ValueAxis) {\r\n                        field_1 = this.xField;\r\n                    }\r\n                    if (yAxis != this.baseAxis && yAxis instanceof ValueAxis) {\r\n                        field_1 = this.yField;\r\n                    }\r\n                    if (field_1) {\r\n                        this.dataItems.each(function (dataItem) {\r\n                            dataItem.setCalculatedValue(field_1, 0, \"stack\");\r\n                            dataItem.setCalculatedValue(field_1, 0, \"stackTrue\");\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"snapTooltip\", {\r\n        /**\r\n         * @return Should snap?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"snapTooltip\");\r\n        },\r\n        /**\r\n         * Should the nearest tooltip be shown if no data item is found on the\r\n         * current cursor position? In order this to work, you should set snapTooltip = false on the series baseAxis.\r\n         *\r\n         * @default false\r\n         * @param value  Should snap?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"snapTooltip\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Shows hidden series.\r\n     *\r\n     * @param duration  Duration of reveal animation (ms)\r\n     * @return Animation\r\n     */\r\n    XYSeries.prototype.show = function (duration) {\r\n        var _this = this;\r\n        if (this.isHidden) {\r\n            if (this.appeared && this.xAxis instanceof DateAxis && this.xAxis.groupData) {\r\n                this._tmin.setKey(this.yAxis.uid, undefined);\r\n                this._tmax.setKey(this.yAxis.uid, undefined);\r\n            }\r\n            if (this.appeared && this.yAxis instanceof DateAxis && this.yAxis.groupData) {\r\n                this._tmin.setKey(this.xAxis.uid, undefined);\r\n                this._tmax.setKey(this.xAxis.uid, undefined);\r\n            }\r\n        }\r\n        var fields;\r\n        if (this.xAxis instanceof ValueAxis && this.xAxis != this.baseAxis) {\r\n            fields = this._xValueFields;\r\n        }\r\n        if (this.yAxis instanceof ValueAxis && this.yAxis != this.baseAxis) {\r\n            fields = this._yValueFields;\r\n        }\r\n        var startIndex = this.startIndex;\r\n        var endIndex = this.endIndex;\r\n        var delay = 0;\r\n        var interpolationDuration = this.defaultState.transitionDuration;\r\n        if ($type.isNumber(duration)) {\r\n            interpolationDuration = duration;\r\n        }\r\n        if (!options.animationsEnabled) {\r\n            interpolationDuration = 0;\r\n        }\r\n        var anim;\r\n        $iter.each($iter.indexed(this.dataItems.iterator()), function (a) {\r\n            var i = a[0];\r\n            var dataItem = a[1];\r\n            var realDuration = interpolationDuration;\r\n            if (i < _this.startIndex - 10 || i > _this.endIndex + 10) {\r\n                realDuration = 0;\r\n                delay = 0;\r\n            }\r\n            if (_this.sequencedInterpolation && realDuration > 0) {\r\n                delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\r\n            }\r\n            anim = dataItem.show(realDuration, delay, fields);\r\n        });\r\n        // other data sets\r\n        this.dataSets.each(function (key, dataSet) {\r\n            if (dataSet != _this.dataItems) {\r\n                dataSet.each(function (dataItem) {\r\n                    dataItem.events.disable();\r\n                    dataItem.show(0, 0, fields);\r\n                    dataItem.events.enable();\r\n                });\r\n            }\r\n        });\r\n        if (this.mainDataSet != this.dataItems) {\r\n            this.mainDataSet.each(function (dataItem) {\r\n                dataItem.events.disable();\r\n                dataItem.show(0, 0, fields);\r\n                dataItem.events.enable();\r\n            });\r\n        }\r\n        var animation = _super.prototype.show.call(this, duration);\r\n        if (anim && !anim.isFinished()) {\r\n            animation = anim;\r\n        }\r\n        if (this.hidden) {\r\n            this.dispatchImmediately(\"selectionextremeschanged\");\r\n            this.hidden = false;\r\n        }\r\n        return animation;\r\n    };\r\n    /**\r\n     * Hides series.\r\n     *\r\n     * @param duration  Duration of hiding animation (ms)\r\n     * @return Animation\r\n     */\r\n    XYSeries.prototype.hide = function (duration) {\r\n        var _this = this;\r\n        var fields;\r\n        var value;\r\n        var xAxis = this.xAxis;\r\n        if (xAxis instanceof ValueAxis && xAxis != this.baseAxis) {\r\n            fields = this._xValueFields;\r\n            // animate to zero if 0 is within zoomMin/zoomMax\r\n            if (this.stacked || (xAxis.minZoomed < xAxis.baseValue && xAxis.maxZoomed > xAxis.baseValue) || this.stackedSeries) {\r\n                value = xAxis.baseValue;\r\n            }\r\n            else {\r\n                value = xAxis.min;\r\n            }\r\n        }\r\n        var yAxis = this.yAxis;\r\n        if (yAxis instanceof ValueAxis && yAxis != this.baseAxis) {\r\n            fields = this._yValueFields;\r\n            // animate to zero if 0 is within zoomMin/zoomMax\r\n            if (this.stacked || (yAxis.minZoomed < yAxis.baseValue && yAxis.maxZoomed > yAxis.baseValue) || this.stackedSeries) {\r\n                value = yAxis.baseValue;\r\n            }\r\n            else {\r\n                value = yAxis.min;\r\n            }\r\n        }\r\n        //if ($type.hasValue(fields)) {\r\n        var startIndex = this.startIndex;\r\n        var endIndex = this.endIndex;\r\n        var interpolationDuration = this.hiddenState.transitionDuration;\r\n        if ($type.isNumber(duration)) {\r\n            interpolationDuration = duration;\r\n        }\r\n        if (!options.animationsEnabled) {\r\n            interpolationDuration = 0;\r\n        }\r\n        var delay = 0;\r\n        var anim;\r\n        $iter.each($iter.indexed(this.dataItems.iterator()), function (a) {\r\n            var i = a[0];\r\n            var dataItem = a[1];\r\n            var realDuration = interpolationDuration;\r\n            if (i < _this.startIndex - 10 || i > _this.endIndex + 10) {\r\n                realDuration = 0;\r\n            }\r\n            if (realDuration == 0) {\r\n                dataItem.hide(0, 0, value, fields);\r\n            }\r\n            else {\r\n                if (_this.sequencedInterpolation && realDuration > 0) {\r\n                    delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\r\n                }\r\n                anim = dataItem.hide(realDuration, delay, value, fields);\r\n            }\r\n        });\r\n        // other data sets\r\n        this.dataSets.each(function (key, dataSet) {\r\n            if (dataSet != _this.dataItems) {\r\n                dataSet.each(function (dataItem) {\r\n                    dataItem.events.disable();\r\n                    dataItem.hide(0, 0, value, fields);\r\n                    dataItem.events.enable();\r\n                });\r\n            }\r\n        });\r\n        if (this.mainDataSet != this.dataItems) {\r\n            this.mainDataSet.each(function (dataItem) {\r\n                dataItem.events.disable();\r\n                dataItem.hide(0, 0, value, fields);\r\n                dataItem.events.enable();\r\n            });\r\n        }\r\n        var animation = _super.prototype.hide.call(this, interpolationDuration);\r\n        if (animation && !animation.isFinished()) {\r\n            animation.delay(delay);\r\n        }\r\n        if (anim && !anim.isFinished()) {\r\n            animation = anim;\r\n        }\r\n        if (this.appeared) {\r\n            this.dispatch(\"selectionextremeschanged\");\r\n        }\r\n        // helps to avoid flicker. otherwise columns will show up at full size and only on next frame will animate from 0\r\n        this.validateDataElements();\r\n        //}\r\n        return animation;\r\n    };\r\n    /**\r\n     * [handleDataItemWorkingValueChange description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYSeries.prototype.handleDataItemWorkingValueChange = function (dataItem, name) {\r\n        _super.prototype.handleDataItemWorkingValueChange.call(this, dataItem, name);\r\n        // to calculate stack values\r\n        var axisSeries = this.baseAxis.series;\r\n        $iter.each(axisSeries.iterator(), function (series) {\r\n            if (series.stacked || series.stackedSeries) {\r\n                series.invalidateProcessedData();\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * [getStackValue description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param dataItem  Data item\r\n     */\r\n    XYSeries.prototype.getStackValue = function (dataItem, working) {\r\n        // todo: here wer stack x and y values only. question is - what should we do with other values, like openX, openY?\r\n        // if this series is not stacked or new stack begins, return.\r\n        var _this = this;\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if (!this.stacked || !xAxis || !yAxis) {\r\n            return;\r\n        }\r\n        else {\r\n            // it might seem that it's better to go through base axis series, but we do not maintain the same order as in chart.series there.\r\n            var chart = this.chart;\r\n            var index = chart.series.indexOf(this);\r\n            var field_2;\r\n            if (xAxis != this.baseAxis && xAxis instanceof ValueAxis) {\r\n                field_2 = this.xField;\r\n            }\r\n            if (yAxis != this.baseAxis && yAxis instanceof ValueAxis) {\r\n                field_2 = this.yField;\r\n            }\r\n            if (!field_2) {\r\n                return;\r\n            }\r\n            //this is good for removing series, otherwise stack values will remain the same and chart won't pay atention when adding/removing series\t\t\t\r\n            dataItem.setCalculatedValue(field_2, 0, \"stack\");\r\n            dataItem.setCalculatedValue(field_2, 0, \"stackTrue\");\r\n            $iter.eachContinue(chart.series.range(0, index).backwards().iterator(), function (prevSeries) {\r\n                // stacking is only possible if both axes are the same\r\n                if (prevSeries.xAxis == xAxis && prevSeries.yAxis == yAxis && prevSeries.className == _this.className) {\r\n                    // saving value\r\n                    prevSeries.stackedSeries = _this;\r\n                    var prevDataItem = prevSeries.dataItems.getIndex(dataItem.index); // indexes should match\r\n                    if (prevDataItem && prevDataItem.hasValue(_this._xValueFields) && prevDataItem.hasValue(_this._yValueFields)) {\r\n                        var value = dataItem.getValue(field_2);\r\n                        var prevValue = void 0;\r\n                        var prevStack = prevDataItem.getValue(field_2, \"stackTrue\");\r\n                        if (prevStack == null) {\r\n                            prevStack = 0;\r\n                        }\r\n                        var prevRealValue = prevDataItem.getValue(field_2) + prevStack;\r\n                        prevValue = prevDataItem.getWorkingValue(field_2) + prevDataItem.getValue(field_2, \"stack\");\r\n                        if (_this.stackToNegative) {\r\n                            if ((value >= 0 && prevRealValue >= 0) || (value < 0 && prevRealValue < 0)) {\r\n                                dataItem.setCalculatedValue(field_2, prevValue, \"stack\");\r\n                                dataItem.setCalculatedValue(field_2, prevRealValue, \"stackTrue\");\r\n                                return false;\r\n                            }\r\n                            else if (!prevSeries.stacked) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                        else {\r\n                            dataItem.setCalculatedValue(field_2, prevValue, \"stack\");\r\n                            dataItem.setCalculatedValue(field_2, prevRealValue, \"stackTrue\");\r\n                            return false;\r\n                        }\r\n                    }\r\n                    else if (!prevSeries.stacked) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(XYSeries.prototype, \"stackToNegative\", {\r\n        /**\r\n         * @return Stack to base line\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"stackToNegative\");\r\n        },\r\n        /**\r\n         * This setting indicates how negative values are treated in stacked stacked\r\n         * series.\r\n         *\r\n         * If set to `true` (default), negative values will stack on the base line.\r\n         *\r\n         * If set to `false`, negative value will stack in relation to the previous\r\n         * value in the stack.\r\n         *\r\n         * @since 4.9.34\r\n         * @param  value  Stack to base line\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"stackToNegative\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"xField\", {\r\n        /**\r\n         * [xField description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this._xField;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"yField\", {\r\n        /**\r\n         * [yField description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this._yField;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"xOpenField\", {\r\n        /**\r\n         * [xOpenField description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this._xOpenField;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"yOpenField\", {\r\n        /**\r\n         * [yOpenField description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this._yOpenField;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"tooltipXField\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            if (this._tooltipXField) {\r\n                return this._tooltipXField;\r\n            }\r\n            return this._xField;\r\n        },\r\n        /**\r\n         * [tooltipXField description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @param value [description]\r\n         */\r\n        set: function (value) {\r\n            this._tooltipXField = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"tooltipYField\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            if (this._tooltipYField) {\r\n                return this._tooltipYField;\r\n            }\r\n            return this._yField;\r\n        },\r\n        /**\r\n         * [tooltipYField description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @param value [description]\r\n         */\r\n        set: function (value) {\r\n            this._tooltipYField = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns lowest value in the series for the specific axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axis  Axis\r\n     * @return value\r\n     */\r\n    XYSeries.prototype.min = function (axis) {\r\n        return this._tmin.getKey(axis.uid);\r\n    };\r\n    /**\r\n     * Returns highest value in the series for the specific axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axis  Axis\r\n     * @return value\r\n     */\r\n    XYSeries.prototype.max = function (axis) {\r\n        return this._tmax.getKey(axis.uid);\r\n    };\r\n    /**\r\n     * Returns lowest value in the series for the specific axis within current\r\n     * selection.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axis  Axis\r\n     * @return value\r\n     */\r\n    XYSeries.prototype.selectionMin = function (axis) {\r\n        var value = this._smin.getKey(axis.uid);\r\n        // not good, because bad if there are no items with values in selection\r\n        //if (!$type.isNumber(value)) {\r\n        //value = this.min(axis);\r\n        //}\t\t\r\n        return value;\r\n    };\r\n    /**\r\n     * Returns highest value in the series for the specific axis within current\r\n     * selection.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axis  Axis\r\n     * @return value\r\n     */\r\n    XYSeries.prototype.selectionMax = function (axis) {\r\n        var value = this._smax.getKey(axis.uid);\r\n        // not good, because bad if there are no items with values in selection\r\n        //if (!$type.isNumber(value)) {\r\n        //value = this.max(axis);\r\n        //}\r\n        return value;\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    XYSeries.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            // Set up base axes\r\n            if ($type.hasValue(config.baseAxis) && $type.isString(config.baseAxis)) {\r\n                if (this.map.hasKey(config.baseAxis)) {\r\n                    config.baseAxis = this.map.getKey(config.baseAxis);\r\n                }\r\n                else {\r\n                    this.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.baseAxis + \"\\\" found for `baseAxis`.\");\r\n                    delete config.baseAxis;\r\n                }\r\n            }\r\n            // Set up axes\r\n            if ($type.hasValue(config.xAxis) && $type.isString(config.xAxis)) {\r\n                if (this.map.hasKey(config.xAxis)) {\r\n                    config.xAxis = this.map.getKey(config.xAxis);\r\n                }\r\n                else {\r\n                    this.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.xAxis + \"\\\" found for `xAxis`.\");\r\n                    delete config.xAxis;\r\n                }\r\n            }\r\n            if ($type.hasValue(config.yAxis) && $type.isString(config.yAxis)) {\r\n                if (this.map.hasKey(config.yAxis)) {\r\n                    config.yAxis = this.map.getKey(config.yAxis);\r\n                }\r\n                else {\r\n                    this.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.yAxis + \"\\\" found for `yAxis`.\");\r\n                    delete config.yAxis;\r\n                }\r\n            }\r\n            // Set up axis ranges\r\n            if ($type.hasValue(config.axisRanges) && $type.isArray(config.axisRanges)) {\r\n                for (var i = 0, len = config.axisRanges.length; i < len; i++) {\r\n                    var range = config.axisRanges[i];\r\n                    if (!$type.hasValue(range.type)) {\r\n                        range.type = \"AxisDataItem\";\r\n                    }\r\n                    if ($type.hasValue(range.axis) && $type.isString(range.axis) && this.map.hasKey(range.axis)) {\r\n                        range.component = this.map.getKey(range.axis);\r\n                    }\r\n                    else if ($type.hasValue(range.component) && $type.isString(range.component) && this.map.hasKey(range.component)) {\r\n                        range.component = this.map.getKey(range.component);\r\n                    }\r\n                }\r\n            }\r\n            // Parse date fields based on the series fields\r\n            if (!$type.hasValue(config.dataFields) || !$type.isObject(config.dataFields)) {\r\n                this.processingErrors.push(\"`dataFields` is not set for series [\" + (this.name || \"unnamed\") + \"]\");\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    /**\r\n     * Returns an [[IPoint]] coordinates of the specific Serie's data point.\r\n     *\r\n     * @param    dataItem   Data item\r\n     * @param    xKey       Name of X data field\r\n     * @param    yKey       Name of Y data field\r\n     * @param    locationX  X location\r\n     * @param    locationY  Y location\r\n     * @param    stackKeyX  ?\r\n     * @param    stackKeyY  ?\r\n     * @returns             Coordinates\r\n     */\r\n    XYSeries.prototype.getPoint = function (dataItem, xKey, yKey, locationX, locationY, stackKeyX, stackKeyY) {\r\n        if (this.xAxis && this.yAxis) {\r\n            var x = this.xAxis.getX(dataItem, xKey, locationX);\r\n            var y = this.yAxis.getY(dataItem, yKey, locationY);\r\n            x = $math.fitToRange(x, -this._maxxX, this._maxxX); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\r\n            y = $math.fitToRange(y, -this._maxxY, this._maxxY); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\r\n            return { x: x, y: y };\r\n        }\r\n    };\r\n    /**\r\n     * Updates item reader text based on the type and set up of axis.\r\n     */\r\n    XYSeries.prototype.updateItemReaderText = function () {\r\n        // We do not want to overwrite this if `itemReaderText` was changed by\r\n        // user code.\r\n        if (this._itemReaderTextChanged) {\r\n            return;\r\n        }\r\n        var text = \"\";\r\n        $object.each(this.dataFields, function (key, val) {\r\n            text += \"{\" + key + \"} \";\r\n        });\r\n        this.itemReaderText = text;\r\n        this._itemReaderTextChanged = false;\r\n    };\r\n    Object.defineProperty(XYSeries.prototype, \"cursorTooltipEnabled\", {\r\n        /**\r\n         * @return Display tooltip?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"cursorTooltipEnabled\");\r\n        },\r\n        /**\r\n         * Indicates if series should display a tooltip for chart's cursor.\r\n         *\r\n         * If set to `true` (default), the tooltips set for all series item's\r\n         * elements like columns and bullets will be automatically shown\r\n         * when [[XYCursor]] passes over category/date, even if its not hovered\r\n         * directly over the item.\r\n         *\r\n         * Set this to `false` to disable such behavior and display item-specific\r\n         * tooltips only when hovered directly over them\r\n         *\r\n         * @default true\r\n         * @param value Display tooltip?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"cursorTooltipEnabled\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"cursorHoverEnabled\", {\r\n        /**\r\n         * @return Hover enabled?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"cursorHoverEnabled\");\r\n        },\r\n        /**\r\n         * Indicates if series should apply hover state on bullets/columns/etc when\r\n         * cursor is over the data item.\r\n         *\r\n         * If set to `true` (default) and chart cursor is enabled on th chart,\r\n         * hovering over date/category will trigger hover states on related Series\r\n         * items like bullets and columns.\r\n         *\r\n         * @default true\r\n         * @since 4.2.2\r\n         * @param  value  Hover enabled?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"cursorHoverEnabled\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"excludeFromTotal\", {\r\n        /**\r\n         * @return Exclude from totals?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"excludeFromTotal\");\r\n        },\r\n        /**\r\n         * Indicates if series' values should be excluded when calculating totals.\r\n         *\r\n         * @default false\r\n         * @since 4.4.9\r\n         * @param  value  Exclude from totals?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"excludeFromTotal\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"hideTooltipWhileZooming\", {\r\n        /**\r\n         * @return Hide tooltip while zooming?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"hideTooltipWhileZooming\");\r\n        },\r\n        /**\r\n         * Indicates if series' tooltip should be hidden while series axis range is\r\n         * animating (zooming).\r\n         *\r\n         * @default true\r\n         * @since 4.7.16\r\n         * @param  value  Hide tooltip while zooming?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"hideTooltipWhileZooming\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"maskBullets\", {\r\n        /**\r\n         * @return Mask bullets?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"maskBullets\");\r\n        },\r\n        /**\r\n         * Indicates if series' bullets should be masked.\r\n         *\r\n         * @default true\r\n         * @since 4.7.17\r\n         * @param  value  Mask bullets?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"maskBullets\", value);\r\n            var chart = this.chart;\r\n            if (chart) {\r\n                if (value) {\r\n                    this.bulletsContainer.parent = chart.bulletsContainer;\r\n                }\r\n                else {\r\n                    this.bulletsContainer.parent = chart.axisBulletsContainer;\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Copies all properties from another instance of [[Series]].\r\n     *\r\n     * @param source  Source series\r\n     */\r\n    XYSeries.prototype.copyFrom = function (source) {\r\n        this.groupFields = $utils.copyProperties(source.groupFields, {});\r\n        _super.prototype.copyFrom.call(this, source);\r\n    };\r\n    /**\r\n     * Destroys this object and all related data.\r\n     */\r\n    XYSeries.prototype.dispose = function () {\r\n        if (this.scrollbarSeries) {\r\n            this.scrollbarSeries.dispose();\r\n        }\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    return XYSeries;\r\n}(Series));\r\nexport { XYSeries };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"XYSeries\"] = XYSeries;\r\nregistry.registeredClasses[\"XYSeriesDataItem\"] = XYSeriesDataItem;\r\n"],"mappings":"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Ae,CAACD,KAAK,CAAC;MACxC,CAAC,MACI;QACDtB,KAAK,GAAGpB,KAAK,CAAC4C,QAAQ,CAACF,KAAK,CAAC;MACjC;MACAtB,KAAK,IAAIkB,UAAU;MACnB,IAAIlB,KAAK,GAAG0B,GAAG,IAAI,CAACtD,KAAK,CAACgD,QAAQ,CAACM,GAAG,CAAC,EAAE;QACrCA,GAAG,GAAG1B,KAAK;MACf;IACJ,CAAC,CAAC;IACF,OAAO0B,GAAG;IACV;EACJ,CAAC;;EACD,OAAOhD,gBAAgB;AAC3B,CAAC,CAACnB,cAAc,CAAE;AAClB,SAASmB,gBAAgB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIiD,QAAQ,GAAG,aAAe,UAAUhD,MAAM,EAAE;EAC5CvB,SAAS,CAACuE,QAAQ,EAAEhD,MAAM,CAAC;EAC3B;AACJ;AACA;EACI,SAASgD,QAAQA,CAAA,EAAG;IAChB,IAAI/C,KAAK,GAAGD,MAAM,CAACE,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI;IACrC;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQD,KAAK,CAACgD,WAAW,GAAG,CAAC,CAAC;IACtB;AACR;AACA;IACQhD,KAAK,CAACiD,MAAM,GAAG,IAAIjE,oBAAoB,CAAC,CAAC;IACzC;AACR;AACA;IACQgB,KAAK,CAACkD,MAAM,GAAG,IAAIlE,oBAAoB,CAAC,C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"},"metadata":{},"sourceType":"module","externalDependencies":[]}