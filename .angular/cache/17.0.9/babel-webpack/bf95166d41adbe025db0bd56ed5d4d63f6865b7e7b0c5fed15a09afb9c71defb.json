{"ast":null,"code":"/**\r\n * Pointed shape module.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Sprite } from \"../Sprite\";\nimport * as $type from \"../utils/Type\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Draws a shape with a pointer.\r\n *\r\n * @see {@link IPointedShapeEvents} for a list of available events\r\n * @see {@link IPointedShapeAdapters} for a list of available Adapters\r\n */\nvar PointedShape = /** @class */function (_super) {\n  __extends(PointedShape, _super);\n  /**\r\n   * Constructor\r\n   */\n  function PointedShape() {\n    var _this = _super.call(this) || this;\n    _this.className = \"PointedShape\";\n    _this.pointerBaseWidth = 15;\n    _this.pointerLength = 10;\n    _this.pointerY = 0;\n    _this.pointerX = 0;\n    _this.applyTheme();\n    return _this;\n  }\n  /**\r\n   * Draws the element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  PointedShape.prototype.draw = function () {\n    _super.prototype.draw.call(this);\n    if (!$type.isNumber(this.pointerX)) {\n      this.pointerX = this.pixelWidth / 2;\n    }\n    if (!$type.isNumber(this.pointerY)) {\n      this.pointerY = this.pixelHeight + 10;\n    }\n  };\n  Object.defineProperty(PointedShape.prototype, \"pointerBaseWidth\", {\n    /**\r\n     * @return Width (px)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"pointerBaseWidth\");\n    },\n    /**\r\n     * A width of the pinter's (stem's) thick end (base) in pixels.\r\n     *\r\n     * @default 15\r\n     * @param value  Width (px)\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"pointerBaseWidth\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PointedShape.prototype, \"pointerLength\", {\n    /**\r\n     * @return Length (px)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"pointerLength\");\n    },\n    /**\r\n     * A length of the pinter (stem) in pixels.\r\n     *\r\n     * @default 10\r\n     * @param value  Length (px)\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"pointerLength\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PointedShape.prototype, \"pointerX\", {\n    /**\r\n     * @return X\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"pointerX\");\n    },\n    /**\r\n     * X coordinate the shape is pointing to.\r\n     *\r\n     * @param value  X\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"pointerX\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PointedShape.prototype, \"pointerY\", {\n    /**\r\n     * @return Y\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"pointerY\");\n    },\n    /**\r\n     * Y coordinate the shape is pointing to.\r\n     *\r\n     * @param value  Y\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"pointerY\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PointedShape;\n}(Sprite);\nexport { PointedShape };","map":{"version":3,"names":["__extends","Sprite","$type","PointedShape","_super","_this","call","className","pointerBaseWidth","pointerLength","pointerY","pointerX","applyTheme","prototype","draw","isNumber","pixelWidth","pixelHeight","Object","defineProperty","get","getPropertyValue","set","value","setPropertyValue","enumerable","configurable"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/core/elements/PointedShape.js"],"sourcesContent":["/**\r\n * Pointed shape module.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../Sprite\";\r\nimport * as $type from \"../utils/Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Draws a shape with a pointer.\r\n *\r\n * @see {@link IPointedShapeEvents} for a list of available events\r\n * @see {@link IPointedShapeAdapters} for a list of available Adapters\r\n */\r\nvar PointedShape = /** @class */ (function (_super) {\r\n    __extends(PointedShape, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PointedShape() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PointedShape\";\r\n        _this.pointerBaseWidth = 15;\r\n        _this.pointerLength = 10;\r\n        _this.pointerY = 0;\r\n        _this.pointerX = 0;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    PointedShape.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        if (!$type.isNumber(this.pointerX)) {\r\n            this.pointerX = this.pixelWidth / 2;\r\n        }\r\n        if (!$type.isNumber(this.pointerY)) {\r\n            this.pointerY = this.pixelHeight + 10;\r\n        }\r\n    };\r\n    Object.defineProperty(PointedShape.prototype, \"pointerBaseWidth\", {\r\n        /**\r\n         * @return Width (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"pointerBaseWidth\");\r\n        },\r\n        /**\r\n         * A width of the pinter's (stem's) thick end (base) in pixels.\r\n         *\r\n         * @default 15\r\n         * @param value  Width (px)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"pointerBaseWidth\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PointedShape.prototype, \"pointerLength\", {\r\n        /**\r\n         * @return Length (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"pointerLength\");\r\n        },\r\n        /**\r\n         * A length of the pinter (stem) in pixels.\r\n         *\r\n         * @default 10\r\n         * @param value  Length (px)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"pointerLength\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PointedShape.prototype, \"pointerX\", {\r\n        /**\r\n         * @return X\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"pointerX\");\r\n        },\r\n        /**\r\n         * X coordinate the shape is pointing to.\r\n         *\r\n         * @param value  X\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"pointerX\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PointedShape.prototype, \"pointerY\", {\r\n        /**\r\n         * @return Y\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"pointerY\");\r\n        },\r\n        /**\r\n         * Y coordinate the shape is pointing to.\r\n         *\r\n         * @param value  Y\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"pointerY\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PointedShape;\r\n}(Sprite));\r\nexport { PointedShape };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}