{"ast":null,"code":"/**\r\n * Defines Funnel Chart Series.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { PercentSeries, PercentSeriesDataItem } from \"./PercentSeries\";\nimport { FunnelSlice } from \"../elements/FunnelSlice\";\nimport { FunnelTick } from \"../elements/FunnelTick\";\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\nimport { registry } from \"../../core/Registry\";\nimport * as $math from \"../../core/utils/Math\";\nimport * as $iter from \"../../core/utils/Iterator\";\nimport * as $type from \"../../core/utils/Type\";\nimport * as $array from \"../../core/utils/Array\";\nimport { percent } from \"../../core/utils/Percent\";\nimport { Disposer } from \"../../core/utils/Disposer\";\nimport { options } from \"../../core/Options\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n//@todo: sequenced?\n/**\r\n * Defines a [[DataItem]] for [[FunnelSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\nvar FunnelSeriesDataItem = /** @class */function (_super) {\n  __extends(FunnelSeriesDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n  function FunnelSeriesDataItem() {\n    var _this = _super.call(this) || this;\n    _this.className = \"FunnelSeriesDataItem\";\n    // this helps to invalidate series when value is 0 an it is hidden (no other events are triggered then)\n    _this.events.on(\"visibilitychanged\", function () {\n      if (_this.component) {\n        _this.component.invalidateDataItems();\n      }\n    }, _this, false);\n    _this.applyTheme();\n    return _this;\n  }\n  Object.defineProperty(FunnelSeriesDataItem.prototype, \"sliceLink\", {\n    /**\r\n     * A [[FunnelSlice]] element, related to this data item ([[FunnelSlice]]).\r\n     *\r\n     * @readonly\r\n     * @return Slice element\r\n     */\n    get: function () {\n      var _this = this;\n      if (!this._sliceLink) {\n        var sliceLink_1 = this.component.sliceLinks.create();\n        this._sliceLink = sliceLink_1;\n        this._disposers.push(sliceLink_1);\n        sliceLink_1.parent = this.component.slicesContainer;\n        this._disposers.push(new Disposer(function () {\n          if (_this.component) {\n            _this.component.sliceLinks.removeValue(sliceLink_1);\n          }\n        }));\n        this.addSprite(sliceLink_1);\n        sliceLink_1.visible = this.visible;\n      }\n      return this._sliceLink;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return FunnelSeriesDataItem;\n}(PercentSeriesDataItem);\nexport { FunnelSeriesDataItem };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Defines [[Series]] for a FunnelSlice series on a [[SlicedChart]].\r\n *\r\n * @see {@link IFunnelSeriesEvents} for a list of available Events\r\n * @see {@link IFunnelSeriesAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation\r\n * @important\r\n */\nvar FunnelSeries = /** @class */function (_super) {\n  __extends(FunnelSeries, _super);\n  /**\r\n   * Constructor\r\n   */\n  function FunnelSeries() {\n    var _this = _super.call(this) || this;\n    _this._nextY = 0;\n    _this.className = \"FunnelSeries\";\n    _this.orientation = \"vertical\";\n    _this.width = percent(100);\n    _this.height = percent(100);\n    _this.slicesContainer.width = percent(100);\n    _this.slicesContainer.height = percent(100);\n    _this._disposers.push(_this.slicesContainer.events.on(\"maxsizechanged\", _this.invalidateDataItems, _this, false));\n    _this.labelsOpposite = true;\n    _this.labelsContainer.layout = \"absolute\";\n    _this.bottomRatio = 0;\n    _this.applyTheme();\n    return _this;\n  }\n  /**\r\n   * Creates a [[FunnelSlice]] element.\r\n   *\r\n   * @return Slice\r\n   */\n  FunnelSeries.prototype.createSlice = function () {\n    return new FunnelSlice();\n  };\n  /**\r\n   * Creates a [[FunnelTick]] element.\r\n   *\r\n   * @return Tick\r\n   */\n  FunnelSeries.prototype.createTick = function () {\n    return new FunnelTick();\n  };\n  /**\r\n   * Sets defaults that instantiate some objects that rely on parent, so they\r\n   * cannot be set in constructor.\r\n   */\n  FunnelSeries.prototype.applyInternalDefaults = function () {\n    _super.prototype.applyInternalDefaults.call(this);\n    if (!$type.hasValue(this.readerTitle)) {\n      this.readerTitle = this.language.translate(\"Funnel Series\");\n    }\n  };\n  /**\r\n   * Returns a new/empty DataItem of the type appropriate for this object.\r\n   *\r\n   * @see {@link DataItem}\r\n   * @return Data Item\r\n   */\n  FunnelSeries.prototype.createDataItem = function () {\n    return new FunnelSeriesDataItem();\n  };\n  /**\r\n   * Inits FunnelSlice.\r\n   *\r\n   * @param slice to init\r\n   */\n  FunnelSeries.prototype.initSlice = function (slice) {\n    slice.isMeasured = false;\n    slice.defaultState.properties.scale = 1;\n    slice.observe(\"scale\", this.handleSliceScale, this);\n    slice.observe([\"dx\", \"dy\", \"x\", \"y\"], this.handleSliceMove, this);\n    slice.tooltipText = \"{category}: {value.percent.formatNumber('#.#p')} ({value.value})\";\n    var hoverState = slice.states.create(\"hover\");\n    hoverState.properties.expandDistance = 0.2;\n  };\n  /**\r\n   * [initLabel description]\r\n   *\r\n   * @todo Description\r\n   * @param label [description]\r\n   */\n  FunnelSeries.prototype.initLabel = function (label) {\n    _super.prototype.initLabel.call(this, label);\n    label.verticalCenter = \"middle\";\n    label.horizontalCenter = \"middle\";\n    label.isMeasured = true;\n    label.padding(5, 5, 5, 5);\n  };\n  /**\r\n   * (Re)validates the whole series, effectively causing it to redraw.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  FunnelSeries.prototype.validate = function () {\n    _super.prototype.validate.call(this);\n    this._nextY = 0;\n  };\n  /**\r\n   * [validateDataElements description]\r\n   *\r\n   * @todo Description\r\n   * @ignore Exclude from docs\r\n   */\n  FunnelSeries.prototype.validateDataElements = function () {\n    var _this = this;\n    var slicesContainer = this.slicesContainer;\n    var labelsContainer = this.labelsContainer;\n    var labelTemplate = this.labels.template;\n    if (this.alignLabels) {\n      labelTemplate.interactionsEnabled = true;\n      slicesContainer.isMeasured = true;\n      labelsContainer.isMeasured = true;\n    } else {\n      labelTemplate.interactionsEnabled = false;\n      slicesContainer.isMeasured = false;\n      labelsContainer.isMeasured = false;\n    }\n    var total = 0;\n    var count = 0;\n    this.dataItems.each(function (dItem) {\n      if ($type.hasValue(dItem.value)) {\n        count++;\n        if (dItem.value > 0) {\n          total += Math.abs(dItem.getWorkingValue(\"value\") / dItem.value);\n        } else {\n          if (_this.ignoreZeroValues) {\n            count--;\n          } else {\n            if (!dItem.visible || dItem.__disabled || dItem.isHiding) {\n              count--;\n            } else {\n              total += 1;\n            }\n          }\n        }\n      }\n    });\n    this._total = 1 / count * total;\n    this._count = count;\n    _super.prototype.validateDataElements.call(this);\n    this.arrangeLabels();\n  };\n  /**\r\n   * [getNextValue description]\r\n   *\r\n   * @todo Description\r\n   * @param dataItem  [description]\r\n   * @return [description]\r\n   */\n  FunnelSeries.prototype.getNextValue = function (dataItem) {\n    var index = dataItem.index;\n    var nextValue = dataItem.getWorkingValue(\"value\");\n    if (index < this.dataItems.length - 1) {\n      var nextItem = this.dataItems.getIndex(index + 1);\n      nextValue = nextItem.getWorkingValue(\"value\");\n      if (!nextItem.visible || nextItem.isHiding || nextItem.__disabled || nextItem.value == 0 && this.ignoreZeroValues) {\n        return this.getNextValue(nextItem);\n      }\n    }\n    return nextValue;\n  };\n  /**\r\n   * [formDataElement description]\r\n   *\r\n   * @todo Description\r\n   */\n  FunnelSeries.prototype.formDataElement = function () {};\n  /**\r\n   * Validates data item's element, effectively redrawing it.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItem  Data item\r\n   */\n  FunnelSeries.prototype.validateDataElement = function (dataItem) {\n    var _this = this;\n    //if ($type.hasValue(dataItem.value)) {\n    // FunnelSlice\n    var slice = dataItem.slice;\n    slice.orientation = this.orientation;\n    var sliceLink = dataItem.sliceLink;\n    sliceLink.orientation = this.orientation;\n    var tick = dataItem.tick;\n    var label = dataItem.label;\n    tick.slice = slice;\n    tick.label = label;\n    if ($type.hasValue(dataItem.value)) {\n      this.decorateSlice(dataItem);\n      $array.each(dataItem.sprites, function (sprite) {\n        if (dataItem.value == 0 && _this.ignoreZeroValues) {\n          sprite.__disabled = true;\n        } else {\n          sprite.__disabled = false;\n        }\n      });\n    } else {\n      $array.each(dataItem.sprites, function (sprite) {\n        sprite.__disabled = true;\n      });\n    }\n    if (dataItem.index == this.dataItems.length - 1) {\n      sliceLink.disabled = true;\n    }\n    // do this at the end, otherwise bullets won't be positioned properly\n    _super.prototype.validateDataElement.call(this, dataItem);\n    sliceLink.fill = slice.fill;\n    //}\n  };\n  /**\r\n   * [decorateSlice description]\r\n   *\r\n   * @todo Description\r\n   * @param dataItem [description]\r\n   */\n  FunnelSeries.prototype.decorateSlice = function (dataItem) {\n    var slice = dataItem.slice;\n    var sliceLink = dataItem.sliceLink;\n    var label = dataItem.label;\n    var tick = dataItem.tick;\n    var maxWidth = this.slicesContainer.innerWidth;\n    var maxHeight = this.slicesContainer.innerHeight;\n    var nextValue = this.getNextValue(dataItem);\n    var workingValue = Math.abs(dataItem.getWorkingValue(\"value\"));\n    var bottomRatio = this.bottomRatio;\n    var d = 1;\n    if (dataItem.value != 0) {\n      d = workingValue / Math.abs(dataItem.value);\n    } else {\n      if (dataItem.__disabled || dataItem.isHiding || !dataItem.visible) {\n        d = 0.000001;\n      }\n    }\n    if (this.ignoreZeroValues && dataItem.value == 0) {\n      dataItem.__disabled = true;\n      return;\n    } else {\n      dataItem.__disabled = false;\n    }\n    if (this._nextY == Infinity) {\n      this._nextY = 0;\n    }\n    if (this.orientation == \"vertical\") {\n      var linkHeight = sliceLink.pixelHeight * d;\n      maxHeight = maxHeight + linkHeight; // to avoid one link gap in the bottom\n      slice.topWidth = workingValue / this.dataItem.values.value.high * maxWidth;\n      slice.bottomWidth = (workingValue - (workingValue - nextValue) * bottomRatio) / this.dataItem.values.value.high * maxWidth;\n      sliceLink.topWidth = slice.bottomWidth;\n      sliceLink.bottomWidth = (workingValue - (workingValue - nextValue)) / this.dataItem.values.value.high * maxWidth;\n      slice.y = this._nextY;\n      slice.height = Math.min(100000, $math.max(0, maxHeight / this._count * d / this._total - linkHeight));\n      slice.x = maxWidth / 2;\n      if (!this.alignLabels) {\n        label.x = slice.x;\n      } else {\n        label.x = undefined;\n      }\n      label.y = slice.pixelY + slice.pixelHeight * tick.locationY;\n      this._nextY += slice.pixelHeight + linkHeight;\n      sliceLink.y = this._nextY - linkHeight;\n      sliceLink.x = slice.x;\n    } else {\n      var linkWidth = sliceLink.pixelWidth * d;\n      maxWidth = maxWidth + linkWidth; // to avoid one link gap in the bottom\n      slice.topWidth = workingValue / this.dataItem.values.value.high * maxHeight;\n      slice.bottomWidth = (workingValue - (workingValue - nextValue) * bottomRatio) / this.dataItem.values.value.high * maxHeight;\n      sliceLink.topWidth = slice.bottomWidth;\n      sliceLink.bottomWidth = (workingValue - (workingValue - nextValue)) / this.dataItem.values.value.high * maxHeight;\n      slice.x = this._nextY;\n      slice.width = Math.min(100000, maxWidth / this._count * d * 1 / this._total - linkWidth);\n      slice.y = maxHeight / 2;\n      if (!this.alignLabels) {\n        label.y = slice.y;\n      } else {\n        label.y = this.labelsContainer.measuredHeight;\n      }\n      label.x = slice.pixelX + slice.pixelWidth * tick.locationX;\n      this._nextY += slice.pixelWidth + linkWidth;\n      sliceLink.x = this._nextY - linkWidth;\n      sliceLink.y = slice.y;\n    }\n  };\n  FunnelSeries.prototype.getLastLabel = function (index) {\n    if (index > 0) {\n      var lastLabel = this.labels.getIndex(index);\n      if (lastLabel.__disabled || !lastLabel.visible) {\n        return this.getLastLabel(index - 1);\n      } else {\n        return lastLabel;\n      }\n    }\n  };\n  /**\r\n   * [arrangeLabels description]\r\n   *\r\n   * @todo Description\r\n   */\n  FunnelSeries.prototype.arrangeLabels = function () {\n    if (this.alignLabels) {\n      var count = this.labels.length;\n      if (count > 1) {\n        var lastLabel = this.getLastLabel(count - 1);\n        if (lastLabel) {\n          var lastY = lastLabel.pixelY;\n          var lastX = lastLabel.pixelX;\n          if (count > 1) {\n            for (var i = count - 2; i >= 0; i--) {\n              var label = this.labels.getIndex(i);\n              if (label.visible && !label.__disabled) {\n                if (label.invalid) {\n                  label.validate();\n                }\n                if (this.orientation == \"vertical\") {\n                  if (label.pixelY + label.measuredHeight > lastY) {\n                    label.y = Math.min(1000000, lastY - label.measuredHeight);\n                  }\n                }\n                // horizontal\n                else {\n                  if (label.pixelX + label.measuredWidth > lastX) {\n                    label.x = Math.min(1000000, lastX - label.measuredWidth);\n                  }\n                }\n                lastY = label.pixelY;\n                lastX = label.pixelX;\n              }\n            }\n            lastY = 0;\n            lastX = 0;\n            for (var i = 0; i < count; i++) {\n              var label = this.labels.getIndex(i);\n              if (label.visible && !label.__disabled) {\n                if (label.invalid) {\n                  label.validate();\n                }\n                if (this.orientation == \"vertical\") {\n                  if (label.pixelY < lastY) {\n                    label.y = Math.min(1000000, lastY);\n                  }\n                }\n                // horizontal\n                else {\n                  if (label.pixelX < lastX) {\n                    label.x = Math.min(1000000, lastX);\n                  }\n                }\n                lastY += label.measuredHeight;\n                lastX += label.measuredWidth;\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n  /**\r\n   * Positions series bullet.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param bullet  Bullet\r\n   */\n  FunnelSeries.prototype.positionBullet = function (bullet) {\n    _super.prototype.positionBullet.call(this, bullet);\n    var dataItem = bullet.dataItem;\n    var slice = dataItem.slice;\n    var locationX = bullet.locationX;\n    if (!$type.isNumber(locationX)) {\n      locationX = 0.5;\n    }\n    var locationY = bullet.locationY;\n    if (!$type.isNumber(locationY)) {\n      locationY = 1;\n    }\n    bullet.x = slice.pixelX + slice.measuredWidth * locationX;\n    bullet.y = slice.pixelY + slice.measuredHeight * locationY;\n  };\n  Object.defineProperty(FunnelSeries.prototype, \"orientation\", {\n    /**\r\n     * @return Orientation\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"orientation\");\n    },\n    /**\r\n     * Orientation of the funnel slices: \"horizontal\" or \"vertical\" (default).\r\n     *\r\n     * @default \"vertical\"\r\n     * @param value Orientation\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"orientation\", value)) {\n        this.labelsOpposite = this.labelsOpposite;\n        this.invalidate();\n        if (value == \"vertical\") {\n          this.ticks.template.locationX = 1;\n          this.ticks.template.locationY = 0.5;\n          this.labels.template.rotation = 0;\n          this.layout = \"horizontal\";\n        } else {\n          this.ticks.template.locationX = 0.5;\n          this.ticks.template.locationY = 1;\n          this.labels.template.rotation = -90;\n          this.layout = \"vertical\";\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FunnelSeries.prototype, \"bottomRatio\", {\n    /**\r\n     * @return {number}\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"bottomRatio\");\n    },\n    /**\r\n     * Indicates how slice's bottom will change in relation to slices top AND\r\n     * next slices top.\r\n     *\r\n     * Basically it's a relative value (0-1) that indicates bottom width\r\n     * position between current slice's top width and the top withd of the next\r\n     * one.\r\n     *\r\n     * The scale goes from 0 (closer to current slice width) to 1 (closer to next\r\n     * slice with).\r\n     *\r\n     * `0` (default) will mean that bottom will be the same as top, resulting in\r\n     * a prefectly square slice.\r\n     *\r\n     * From the data-viz standpoint `0` is a correct setting, since area of the\r\n     * slices will depict their value correctly.\r\n     *\r\n     * `1` will mean that slice will become trapezoid with its bottom matching\r\n     * width of the next slice.\r\n     *\r\n     * `0.5` will make bottom width be in the middle of width of current slice\r\n     * and the next slice.\r\n     *\r\n     * @default 0\r\n     * @param {number}\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"bottomRatio\", value)) {\n        this.invalidate();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FunnelSeries.prototype, \"sliceLinks\", {\n    /**\r\n     * A list of elements linking each actual slice.\r\n     *\r\n     * Please note that links are [[FunnelSlice]] objects, just like real links,\r\n     * so they have all the same configuration options.\r\n     *\r\n     * You can use `template` of this link, to specify how links will look.\r\n     *\r\n     * ```TypeScript\r\n     * series.sliceLinks.template.fillOpacity = 0.5;\r\n     * ```\r\n     * ```JavaScript\r\n     * series.sliceLinks.template.fillOpacity = 0.5;\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"series\": [{\r\n     *     \"type\": \"FunnelSeries\",\r\n     *      // ...\r\n     *      \"sliceLinks\": {\r\n     *        \"fillOpacity\": 0.5\r\n     *      }\r\n     *   }]\r\n     * }\r\n     * ```\r\n     *\r\n     * @return Funnel links\r\n     */\n    get: function () {\n      if (!this._sliceLinks) {\n        var sliceLink = new FunnelSlice();\n        sliceLink.applyOnClones = true;\n        sliceLink.fillOpacity = 0.5;\n        sliceLink.expandDistance = -0.3;\n        sliceLink.hiddenState.properties.opacity = 0;\n        this._disposers.push(sliceLink);\n        this._sliceLinks = new ListTemplate(sliceLink);\n        this._disposers.push(new ListDisposer(this._sliceLinks));\n      }\n      return this._sliceLinks;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Shows hidden series.\r\n   *\r\n   * @param duration  Duration of reveal animation (ms)\r\n   * @return Animation\r\n   */\n  FunnelSeries.prototype.show = function (duration) {\n    var _this = this;\n    var startIndex = this.startIndex;\n    var endIndex = this.endIndex;\n    var interpolationDuration = this.defaultState.transitionDuration;\n    if ($type.isNumber(duration)) {\n      interpolationDuration = duration;\n    }\n    if (!options.animationsEnabled) {\n      interpolationDuration = 0;\n    }\n    var delay = 0;\n    $iter.each($iter.indexed(this.dataItems.iterator()), function (a) {\n      var i = a[0];\n      var dataItem = a[1];\n      if (_this.sequencedInterpolation) {\n        delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\n      }\n      dataItem.show(interpolationDuration, delay, [\"value\"]);\n    });\n    var animation = _super.prototype.show.call(this, duration);\n    return animation;\n  };\n  /**\r\n   * Hides series.\r\n   *\r\n   * @param duration  Duration of hiding animation (ms)\r\n   * @return Animation\r\n   */\n  FunnelSeries.prototype.hide = function (duration) {\n    var _this = this;\n    var fields = [\"value\"];\n    var value = 0;\n    var startIndex = this.startIndex;\n    var endIndex = this.endIndex;\n    var delay = 0;\n    var interpolationDuration = this.hiddenState.transitionDuration;\n    if ($type.isNumber(duration)) {\n      interpolationDuration = duration;\n    }\n    if (!options.animationsEnabled) {\n      interpolationDuration = 0;\n    }\n    $iter.each($iter.indexed(this.dataItems.iterator()), function (a) {\n      var i = a[0];\n      var dataItem = a[1];\n      if (_this.sequencedInterpolation) {\n        delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\n      }\n      dataItem.hide(interpolationDuration, delay, value, fields);\n    });\n    var animation = _super.prototype.hide.call(this, duration);\n    if (animation && !animation.isFinished()) {\n      animation.delay(delay);\n    }\n    return animation;\n  };\n  /**\r\n   * @ignore\r\n   */\n  FunnelSeries.prototype.setAlignLabels = function (value) {\n    _super.prototype.setAlignLabels.call(this, value);\n    this.ticks.template.disabled = !value;\n    var labelsContainer = this.labelsContainer;\n    if (labelsContainer) {\n      // do not align\n      if (!value) {\n        labelsContainer.width = percent(100);\n        labelsContainer.height = percent(100);\n      }\n      //align\n      else {\n        labelsContainer.height = undefined;\n        labelsContainer.width = undefined;\n        labelsContainer.margin(10, 10, 10, 10);\n      }\n    }\n    this.labelsOpposite = this.labelsOpposite;\n  };\n  Object.defineProperty(FunnelSeries.prototype, \"labelsOpposite\", {\n    /**\r\n     * @return Labels on opposite side?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"labelsOpposite\");\n    },\n    /**\r\n     * Put labels on the oppsite side of the series?\r\n     *\r\n     * This setting is only used if `alignLabels = true`.\r\n     *\r\n     * If set to `true` (default) labels will be drawn to the right (on vertical\r\n     * series), or to the bottom (on horizontal series).\r\n     *\r\n     * If set to `false`, labels will be positioned to the left or top\r\n     * respectively.\r\n     *\r\n     * @default true\r\n     * @since 4.1.13\r\n     * @param  value  Labels on opposite side?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"labelsOpposite\", value);\n      var labelTemplate = this.labels.template;\n      var labelAlign = \"none\";\n      var labelValign = \"none\";\n      if (!this.alignLabels) {\n        if (this.orientation == \"vertical\") {\n          labelAlign = \"center\";\n        } else {\n          labelValign = \"middle\";\n        }\n      } else {\n        // opposite (left/bottom)\n        if (value) {\n          this.labelsContainer.toFront();\n          // left\n          if (this.orientation == \"vertical\") {\n            this.ticks.template.locationX = 1;\n            labelTemplate.horizontalCenter = \"left\";\n            labelAlign = \"right\";\n          }\n          // bottom\n          else {\n            this.ticks.template.locationY = 1;\n            labelTemplate.horizontalCenter = \"right\";\n            labelValign = \"bottom\";\n          }\n        }\n        // non oposite (right/top)\n        else {\n          this.labelsContainer.toBack();\n          // right\n          if (this.orientation == \"vertical\") {\n            this.ticks.template.locationX = 0;\n            labelAlign = \"left\";\n          }\n          // top\n          else {\n            labelValign = \"top\";\n            this.ticks.template.locationY = 0;\n          }\n        }\n      }\n      labelTemplate.align = labelAlign;\n      labelTemplate.valign = labelValign;\n      this.validateLayout();\n      this.ticks.each(function (tick) {\n        tick.invalidate();\n      });\n      this.invalidateDataItems();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return FunnelSeries;\n}(PercentSeries);\nexport { FunnelSeries };\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"FunnelSeries\"] = FunnelSeries;\nregistry.registeredClasses[\"FunnelSeriesDataItem\"] = FunnelSeriesDataItem;","map":{"version":3,"names":["__extends","PercentSeries","PercentSeriesDataItem","FunnelSlice","FunnelTick","ListTemplate","ListDisposer","registry","$math","$iter","$type","$array","percent","Disposer","options","FunnelSeriesDataItem","_super","_this","call","className","events","on","component","invalidateDataItems","applyTheme","Object","defineProperty","prototype","get","_sliceLink","sliceLink_1","sliceLinks","create","_disposers","push","parent","slicesContainer","removeValue","addSprite","visible","enumerable","configurable","FunnelSeries","_nextY","orientation","width","height","labelsOpposite","labelsContainer","layout","bottomRatio","createSlice","createTick","applyInternalDefaults","hasValue","readerTitle","language","translate","createDataItem","initSlice","slice","isMeasured","defaultState","properties","scale","observe","handleSliceScale","handleSliceMove","tooltipText","hoverState","states","expandDistance","initLabel","label","verticalCenter","horizontalCenter","padding","validate","validateDataElements","labelTemplate","labels","template","alignLabels","interactionsEnabled","total","count","dataItems","each","dItem","value","Math","abs","getWorkingValue","ignoreZeroValues","__disabled","isHiding","_total","_count","arrangeLabels","getNextValue","dataItem","index","nextValue","length","nextItem","getIndex","formDataElement","validateDataElement","sliceLink","tick","decorateSlice","sprites","sprite","disabled","fill","maxWidth","innerWidth","maxHeight","innerHeight","workingValue","d","Infinity","linkHeight","pixelHeight","topWidth","values","high","bottomWidth","y","min","max","x","undefined","pixelY","locationY","linkWidth","pixelWidth","measuredHeight","pixelX","locationX","getLastLabel","lastLabel","lastY","lastX","i","invalid","measuredWidth","positionBullet","bullet","isNumber","getPropertyValue","set","setPropertyValue","invalidate","ticks","rotation","_sliceLinks","applyOnClones","fillOpacity","hiddenState","opacity","show","duration","startIndex","endIndex","interpolationDuration","transitionDuration","animationsEnabled","delay","indexed","iterator","a","sequencedInterpolation","sequencedInterpolationDelay","animation","hide","fields","isFinished","setAlignLabels","margin","labelAlign","labelValign","toFront","toBack","align","valign","validateLayout","registeredClasses"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/charts/series/FunnelSeries.js"],"sourcesContent":["/**\r\n * Defines Funnel Chart Series.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { PercentSeries, PercentSeriesDataItem } from \"./PercentSeries\";\r\nimport { FunnelSlice } from \"../elements/FunnelSlice\";\r\nimport { FunnelTick } from \"../elements/FunnelTick\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\nimport { options } from \"../../core/Options\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n//@todo: sequenced?\r\n/**\r\n * Defines a [[DataItem]] for [[FunnelSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar FunnelSeriesDataItem = /** @class */ (function (_super) {\r\n    __extends(FunnelSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function FunnelSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"FunnelSeriesDataItem\";\r\n        // this helps to invalidate series when value is 0 an it is hidden (no other events are triggered then)\r\n        _this.events.on(\"visibilitychanged\", function () {\r\n            if (_this.component) {\r\n                _this.component.invalidateDataItems();\r\n            }\r\n        }, _this, false);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(FunnelSeriesDataItem.prototype, \"sliceLink\", {\r\n        /**\r\n         * A [[FunnelSlice]] element, related to this data item ([[FunnelSlice]]).\r\n         *\r\n         * @readonly\r\n         * @return Slice element\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._sliceLink) {\r\n                var sliceLink_1 = this.component.sliceLinks.create();\r\n                this._sliceLink = sliceLink_1;\r\n                this._disposers.push(sliceLink_1);\r\n                sliceLink_1.parent = this.component.slicesContainer;\r\n                this._disposers.push(new Disposer(function () {\r\n                    if (_this.component) {\r\n                        _this.component.sliceLinks.removeValue(sliceLink_1);\r\n                    }\r\n                }));\r\n                this.addSprite(sliceLink_1);\r\n                sliceLink_1.visible = this.visible;\r\n            }\r\n            return this._sliceLink;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FunnelSeriesDataItem;\r\n}(PercentSeriesDataItem));\r\nexport { FunnelSeriesDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a FunnelSlice series on a [[SlicedChart]].\r\n *\r\n * @see {@link IFunnelSeriesEvents} for a list of available Events\r\n * @see {@link IFunnelSeriesAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation\r\n * @important\r\n */\r\nvar FunnelSeries = /** @class */ (function (_super) {\r\n    __extends(FunnelSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function FunnelSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this._nextY = 0;\r\n        _this.className = \"FunnelSeries\";\r\n        _this.orientation = \"vertical\";\r\n        _this.width = percent(100);\r\n        _this.height = percent(100);\r\n        _this.slicesContainer.width = percent(100);\r\n        _this.slicesContainer.height = percent(100);\r\n        _this._disposers.push(_this.slicesContainer.events.on(\"maxsizechanged\", _this.invalidateDataItems, _this, false));\r\n        _this.labelsOpposite = true;\r\n        _this.labelsContainer.layout = \"absolute\";\r\n        _this.bottomRatio = 0;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a [[FunnelSlice]] element.\r\n     *\r\n     * @return Slice\r\n     */\r\n    FunnelSeries.prototype.createSlice = function () {\r\n        return new FunnelSlice();\r\n    };\r\n    /**\r\n     * Creates a [[FunnelTick]] element.\r\n     *\r\n     * @return Tick\r\n     */\r\n    FunnelSeries.prototype.createTick = function () {\r\n        return new FunnelTick();\r\n    };\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    FunnelSeries.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Funnel Series\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    FunnelSeries.prototype.createDataItem = function () {\r\n        return new FunnelSeriesDataItem();\r\n    };\r\n    /**\r\n     * Inits FunnelSlice.\r\n     *\r\n     * @param slice to init\r\n     */\r\n    FunnelSeries.prototype.initSlice = function (slice) {\r\n        slice.isMeasured = false;\r\n        slice.defaultState.properties.scale = 1;\r\n        slice.observe(\"scale\", this.handleSliceScale, this);\r\n        slice.observe([\"dx\", \"dy\", \"x\", \"y\"], this.handleSliceMove, this);\r\n        slice.tooltipText = \"{category}: {value.percent.formatNumber('#.#p')} ({value.value})\";\r\n        var hoverState = slice.states.create(\"hover\");\r\n        hoverState.properties.expandDistance = 0.2;\r\n    };\r\n    /**\r\n     * [initLabel description]\r\n     *\r\n     * @todo Description\r\n     * @param label [description]\r\n     */\r\n    FunnelSeries.prototype.initLabel = function (label) {\r\n        _super.prototype.initLabel.call(this, label);\r\n        label.verticalCenter = \"middle\";\r\n        label.horizontalCenter = \"middle\";\r\n        label.isMeasured = true;\r\n        label.padding(5, 5, 5, 5);\r\n    };\r\n    /**\r\n     * (Re)validates the whole series, effectively causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    FunnelSeries.prototype.validate = function () {\r\n        _super.prototype.validate.call(this);\r\n        this._nextY = 0;\r\n    };\r\n    /**\r\n     * [validateDataElements description]\r\n     *\r\n     * @todo Description\r\n     * @ignore Exclude from docs\r\n     */\r\n    FunnelSeries.prototype.validateDataElements = function () {\r\n        var _this = this;\r\n        var slicesContainer = this.slicesContainer;\r\n        var labelsContainer = this.labelsContainer;\r\n        var labelTemplate = this.labels.template;\r\n        if (this.alignLabels) {\r\n            labelTemplate.interactionsEnabled = true;\r\n            slicesContainer.isMeasured = true;\r\n            labelsContainer.isMeasured = true;\r\n        }\r\n        else {\r\n            labelTemplate.interactionsEnabled = false;\r\n            slicesContainer.isMeasured = false;\r\n            labelsContainer.isMeasured = false;\r\n        }\r\n        var total = 0;\r\n        var count = 0;\r\n        this.dataItems.each(function (dItem) {\r\n            if ($type.hasValue(dItem.value)) {\r\n                count++;\r\n                if (dItem.value > 0) {\r\n                    total += Math.abs(dItem.getWorkingValue(\"value\") / dItem.value);\r\n                }\r\n                else {\r\n                    if (_this.ignoreZeroValues) {\r\n                        count--;\r\n                    }\r\n                    else {\r\n                        if (!dItem.visible || dItem.__disabled || dItem.isHiding) {\r\n                            count--;\r\n                        }\r\n                        else {\r\n                            total += 1;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this._total = 1 / count * total;\r\n        this._count = count;\r\n        _super.prototype.validateDataElements.call(this);\r\n        this.arrangeLabels();\r\n    };\r\n    /**\r\n     * [getNextValue description]\r\n     *\r\n     * @todo Description\r\n     * @param dataItem  [description]\r\n     * @return [description]\r\n     */\r\n    FunnelSeries.prototype.getNextValue = function (dataItem) {\r\n        var index = dataItem.index;\r\n        var nextValue = dataItem.getWorkingValue(\"value\");\r\n        if (index < this.dataItems.length - 1) {\r\n            var nextItem = this.dataItems.getIndex(index + 1);\r\n            nextValue = nextItem.getWorkingValue(\"value\");\r\n            if (!nextItem.visible || nextItem.isHiding || nextItem.__disabled || (nextItem.value == 0 && this.ignoreZeroValues)) {\r\n                return this.getNextValue(nextItem);\r\n            }\r\n        }\r\n        return nextValue;\r\n    };\r\n    /**\r\n     * [formDataElement description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    FunnelSeries.prototype.formDataElement = function () {\r\n    };\r\n    /**\r\n     * Validates data item's element, effectively redrawing it.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    FunnelSeries.prototype.validateDataElement = function (dataItem) {\r\n        var _this = this;\r\n        //if ($type.hasValue(dataItem.value)) {\r\n        // FunnelSlice\r\n        var slice = dataItem.slice;\r\n        slice.orientation = this.orientation;\r\n        var sliceLink = dataItem.sliceLink;\r\n        sliceLink.orientation = this.orientation;\r\n        var tick = dataItem.tick;\r\n        var label = dataItem.label;\r\n        tick.slice = slice;\r\n        tick.label = label;\r\n        if ($type.hasValue(dataItem.value)) {\r\n            this.decorateSlice(dataItem);\r\n            $array.each(dataItem.sprites, function (sprite) {\r\n                if (dataItem.value == 0 && _this.ignoreZeroValues) {\r\n                    sprite.__disabled = true;\r\n                }\r\n                else {\r\n                    sprite.__disabled = false;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            $array.each(dataItem.sprites, function (sprite) {\r\n                sprite.__disabled = true;\r\n            });\r\n        }\r\n        if (dataItem.index == this.dataItems.length - 1) {\r\n            sliceLink.disabled = true;\r\n        }\r\n        // do this at the end, otherwise bullets won't be positioned properly\r\n        _super.prototype.validateDataElement.call(this, dataItem);\r\n        sliceLink.fill = slice.fill;\r\n        //}\r\n    };\r\n    /**\r\n     * [decorateSlice description]\r\n     *\r\n     * @todo Description\r\n     * @param dataItem [description]\r\n     */\r\n    FunnelSeries.prototype.decorateSlice = function (dataItem) {\r\n        var slice = dataItem.slice;\r\n        var sliceLink = dataItem.sliceLink;\r\n        var label = dataItem.label;\r\n        var tick = dataItem.tick;\r\n        var maxWidth = this.slicesContainer.innerWidth;\r\n        var maxHeight = this.slicesContainer.innerHeight;\r\n        var nextValue = this.getNextValue(dataItem);\r\n        var workingValue = Math.abs(dataItem.getWorkingValue(\"value\"));\r\n        var bottomRatio = this.bottomRatio;\r\n        var d = 1;\r\n        if (dataItem.value != 0) {\r\n            d = workingValue / Math.abs(dataItem.value);\r\n        }\r\n        else {\r\n            if (dataItem.__disabled || dataItem.isHiding || !dataItem.visible) {\r\n                d = 0.000001;\r\n            }\r\n        }\r\n        if (this.ignoreZeroValues && dataItem.value == 0) {\r\n            dataItem.__disabled = true;\r\n            return;\r\n        }\r\n        else {\r\n            dataItem.__disabled = false;\r\n        }\r\n        if (this._nextY == Infinity) {\r\n            this._nextY = 0;\r\n        }\r\n        if (this.orientation == \"vertical\") {\r\n            var linkHeight = sliceLink.pixelHeight * d;\r\n            maxHeight = maxHeight + linkHeight; // to avoid one link gap in the bottom\r\n            slice.topWidth = workingValue / this.dataItem.values.value.high * maxWidth;\r\n            slice.bottomWidth = (workingValue - (workingValue - nextValue) * bottomRatio) / this.dataItem.values.value.high * maxWidth;\r\n            sliceLink.topWidth = slice.bottomWidth;\r\n            sliceLink.bottomWidth = (workingValue - (workingValue - nextValue)) / this.dataItem.values.value.high * maxWidth;\r\n            slice.y = this._nextY;\r\n            slice.height = Math.min(100000, $math.max(0, maxHeight / this._count * d / this._total - linkHeight));\r\n            slice.x = maxWidth / 2;\r\n            if (!this.alignLabels) {\r\n                label.x = slice.x;\r\n            }\r\n            else {\r\n                label.x = undefined;\r\n            }\r\n            label.y = slice.pixelY + slice.pixelHeight * tick.locationY;\r\n            this._nextY += slice.pixelHeight + linkHeight;\r\n            sliceLink.y = this._nextY - linkHeight;\r\n            sliceLink.x = slice.x;\r\n        }\r\n        else {\r\n            var linkWidth = sliceLink.pixelWidth * d;\r\n            maxWidth = maxWidth + linkWidth; // to avoid one link gap in the bottom\r\n            slice.topWidth = workingValue / this.dataItem.values.value.high * maxHeight;\r\n            slice.bottomWidth = (workingValue - (workingValue - nextValue) * bottomRatio) / this.dataItem.values.value.high * maxHeight;\r\n            sliceLink.topWidth = slice.bottomWidth;\r\n            sliceLink.bottomWidth = (workingValue - (workingValue - nextValue)) / this.dataItem.values.value.high * maxHeight;\r\n            slice.x = this._nextY;\r\n            slice.width = Math.min(100000, maxWidth / this._count * d * 1 / this._total - linkWidth);\r\n            slice.y = maxHeight / 2;\r\n            if (!this.alignLabels) {\r\n                label.y = slice.y;\r\n            }\r\n            else {\r\n                label.y = this.labelsContainer.measuredHeight;\r\n            }\r\n            label.x = slice.pixelX + slice.pixelWidth * tick.locationX;\r\n            this._nextY += slice.pixelWidth + linkWidth;\r\n            sliceLink.x = this._nextY - linkWidth;\r\n            sliceLink.y = slice.y;\r\n        }\r\n    };\r\n    FunnelSeries.prototype.getLastLabel = function (index) {\r\n        if (index > 0) {\r\n            var lastLabel = this.labels.getIndex(index);\r\n            if (lastLabel.__disabled || !lastLabel.visible) {\r\n                return this.getLastLabel(index - 1);\r\n            }\r\n            else {\r\n                return lastLabel;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * [arrangeLabels description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    FunnelSeries.prototype.arrangeLabels = function () {\r\n        if (this.alignLabels) {\r\n            var count = this.labels.length;\r\n            if (count > 1) {\r\n                var lastLabel = this.getLastLabel(count - 1);\r\n                if (lastLabel) {\r\n                    var lastY = lastLabel.pixelY;\r\n                    var lastX = lastLabel.pixelX;\r\n                    if (count > 1) {\r\n                        for (var i = count - 2; i >= 0; i--) {\r\n                            var label = this.labels.getIndex(i);\r\n                            if (label.visible && !label.__disabled) {\r\n                                if (label.invalid) {\r\n                                    label.validate();\r\n                                }\r\n                                if (this.orientation == \"vertical\") {\r\n                                    if (label.pixelY + label.measuredHeight > lastY) {\r\n                                        label.y = Math.min(1000000, lastY - label.measuredHeight);\r\n                                    }\r\n                                }\r\n                                // horizontal\r\n                                else {\r\n                                    if (label.pixelX + label.measuredWidth > lastX) {\r\n                                        label.x = Math.min(1000000, lastX - label.measuredWidth);\r\n                                    }\r\n                                }\r\n                                lastY = label.pixelY;\r\n                                lastX = label.pixelX;\r\n                            }\r\n                        }\r\n                        lastY = 0;\r\n                        lastX = 0;\r\n                        for (var i = 0; i < count; i++) {\r\n                            var label = this.labels.getIndex(i);\r\n                            if (label.visible && !label.__disabled) {\r\n                                if (label.invalid) {\r\n                                    label.validate();\r\n                                }\r\n                                if (this.orientation == \"vertical\") {\r\n                                    if (label.pixelY < lastY) {\r\n                                        label.y = Math.min(1000000, lastY);\r\n                                    }\r\n                                }\r\n                                // horizontal\r\n                                else {\r\n                                    if (label.pixelX < lastX) {\r\n                                        label.x = Math.min(1000000, lastX);\r\n                                    }\r\n                                }\r\n                                lastY += label.measuredHeight;\r\n                                lastX += label.measuredWidth;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Positions series bullet.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param bullet  Bullet\r\n     */\r\n    FunnelSeries.prototype.positionBullet = function (bullet) {\r\n        _super.prototype.positionBullet.call(this, bullet);\r\n        var dataItem = bullet.dataItem;\r\n        var slice = dataItem.slice;\r\n        var locationX = bullet.locationX;\r\n        if (!$type.isNumber(locationX)) {\r\n            locationX = 0.5;\r\n        }\r\n        var locationY = bullet.locationY;\r\n        if (!$type.isNumber(locationY)) {\r\n            locationY = 1;\r\n        }\r\n        bullet.x = slice.pixelX + slice.measuredWidth * locationX;\r\n        bullet.y = slice.pixelY + slice.measuredHeight * locationY;\r\n    };\r\n    Object.defineProperty(FunnelSeries.prototype, \"orientation\", {\r\n        /**\r\n         * @return Orientation\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"orientation\");\r\n        },\r\n        /**\r\n         * Orientation of the funnel slices: \"horizontal\" or \"vertical\" (default).\r\n         *\r\n         * @default \"vertical\"\r\n         * @param value Orientation\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"orientation\", value)) {\r\n                this.labelsOpposite = this.labelsOpposite;\r\n                this.invalidate();\r\n                if (value == \"vertical\") {\r\n                    this.ticks.template.locationX = 1;\r\n                    this.ticks.template.locationY = 0.5;\r\n                    this.labels.template.rotation = 0;\r\n                    this.layout = \"horizontal\";\r\n                }\r\n                else {\r\n                    this.ticks.template.locationX = 0.5;\r\n                    this.ticks.template.locationY = 1;\r\n                    this.labels.template.rotation = -90;\r\n                    this.layout = \"vertical\";\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FunnelSeries.prototype, \"bottomRatio\", {\r\n        /**\r\n         * @return {number}\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"bottomRatio\");\r\n        },\r\n        /**\r\n         * Indicates how slice's bottom will change in relation to slices top AND\r\n         * next slices top.\r\n         *\r\n         * Basically it's a relative value (0-1) that indicates bottom width\r\n         * position between current slice's top width and the top withd of the next\r\n         * one.\r\n         *\r\n         * The scale goes from 0 (closer to current slice width) to 1 (closer to next\r\n         * slice with).\r\n         *\r\n         * `0` (default) will mean that bottom will be the same as top, resulting in\r\n         * a prefectly square slice.\r\n         *\r\n         * From the data-viz standpoint `0` is a correct setting, since area of the\r\n         * slices will depict their value correctly.\r\n         *\r\n         * `1` will mean that slice will become trapezoid with its bottom matching\r\n         * width of the next slice.\r\n         *\r\n         * `0.5` will make bottom width be in the middle of width of current slice\r\n         * and the next slice.\r\n         *\r\n         * @default 0\r\n         * @param {number}\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"bottomRatio\", value)) {\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FunnelSeries.prototype, \"sliceLinks\", {\r\n        /**\r\n         * A list of elements linking each actual slice.\r\n         *\r\n         * Please note that links are [[FunnelSlice]] objects, just like real links,\r\n         * so they have all the same configuration options.\r\n         *\r\n         * You can use `template` of this link, to specify how links will look.\r\n         *\r\n         * ```TypeScript\r\n         * series.sliceLinks.template.fillOpacity = 0.5;\r\n         * ```\r\n         * ```JavaScript\r\n         * series.sliceLinks.template.fillOpacity = 0.5;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"series\": [{\r\n         *     \"type\": \"FunnelSeries\",\r\n         *      // ...\r\n         *      \"sliceLinks\": {\r\n         *        \"fillOpacity\": 0.5\r\n         *      }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @return Funnel links\r\n         */\r\n        get: function () {\r\n            if (!this._sliceLinks) {\r\n                var sliceLink = new FunnelSlice();\r\n                sliceLink.applyOnClones = true;\r\n                sliceLink.fillOpacity = 0.5;\r\n                sliceLink.expandDistance = -0.3;\r\n                sliceLink.hiddenState.properties.opacity = 0;\r\n                this._disposers.push(sliceLink);\r\n                this._sliceLinks = new ListTemplate(sliceLink);\r\n                this._disposers.push(new ListDisposer(this._sliceLinks));\r\n            }\r\n            return this._sliceLinks;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Shows hidden series.\r\n     *\r\n     * @param duration  Duration of reveal animation (ms)\r\n     * @return Animation\r\n     */\r\n    FunnelSeries.prototype.show = function (duration) {\r\n        var _this = this;\r\n        var startIndex = this.startIndex;\r\n        var endIndex = this.endIndex;\r\n        var interpolationDuration = this.defaultState.transitionDuration;\r\n        if ($type.isNumber(duration)) {\r\n            interpolationDuration = duration;\r\n        }\r\n        if (!options.animationsEnabled) {\r\n            interpolationDuration = 0;\r\n        }\r\n        var delay = 0;\r\n        $iter.each($iter.indexed(this.dataItems.iterator()), function (a) {\r\n            var i = a[0];\r\n            var dataItem = a[1];\r\n            if (_this.sequencedInterpolation) {\r\n                delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\r\n            }\r\n            dataItem.show(interpolationDuration, delay, [\"value\"]);\r\n        });\r\n        var animation = _super.prototype.show.call(this, duration);\r\n        return animation;\r\n    };\r\n    /**\r\n     * Hides series.\r\n     *\r\n     * @param duration  Duration of hiding animation (ms)\r\n     * @return Animation\r\n     */\r\n    FunnelSeries.prototype.hide = function (duration) {\r\n        var _this = this;\r\n        var fields = [\"value\"];\r\n        var value = 0;\r\n        var startIndex = this.startIndex;\r\n        var endIndex = this.endIndex;\r\n        var delay = 0;\r\n        var interpolationDuration = this.hiddenState.transitionDuration;\r\n        if ($type.isNumber(duration)) {\r\n            interpolationDuration = duration;\r\n        }\r\n        if (!options.animationsEnabled) {\r\n            interpolationDuration = 0;\r\n        }\r\n        $iter.each($iter.indexed(this.dataItems.iterator()), function (a) {\r\n            var i = a[0];\r\n            var dataItem = a[1];\r\n            if (_this.sequencedInterpolation) {\r\n                delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\r\n            }\r\n            dataItem.hide(interpolationDuration, delay, value, fields);\r\n        });\r\n        var animation = _super.prototype.hide.call(this, duration);\r\n        if (animation && !animation.isFinished()) {\r\n            animation.delay(delay);\r\n        }\r\n        return animation;\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    FunnelSeries.prototype.setAlignLabels = function (value) {\r\n        _super.prototype.setAlignLabels.call(this, value);\r\n        this.ticks.template.disabled = !value;\r\n        var labelsContainer = this.labelsContainer;\r\n        if (labelsContainer) {\r\n            // do not align\r\n            if (!value) {\r\n                labelsContainer.width = percent(100);\r\n                labelsContainer.height = percent(100);\r\n            }\r\n            //align\r\n            else {\r\n                labelsContainer.height = undefined;\r\n                labelsContainer.width = undefined;\r\n                labelsContainer.margin(10, 10, 10, 10);\r\n            }\r\n        }\r\n        this.labelsOpposite = this.labelsOpposite;\r\n    };\r\n    Object.defineProperty(FunnelSeries.prototype, \"labelsOpposite\", {\r\n        /**\r\n         * @return Labels on opposite side?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"labelsOpposite\");\r\n        },\r\n        /**\r\n         * Put labels on the oppsite side of the series?\r\n         *\r\n         * This setting is only used if `alignLabels = true`.\r\n         *\r\n         * If set to `true` (default) labels will be drawn to the right (on vertical\r\n         * series), or to the bottom (on horizontal series).\r\n         *\r\n         * If set to `false`, labels will be positioned to the left or top\r\n         * respectively.\r\n         *\r\n         * @default true\r\n         * @since 4.1.13\r\n         * @param  value  Labels on opposite side?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"labelsOpposite\", value);\r\n            var labelTemplate = this.labels.template;\r\n            var labelAlign = \"none\";\r\n            var labelValign = \"none\";\r\n            if (!this.alignLabels) {\r\n                if (this.orientation == \"vertical\") {\r\n                    labelAlign = \"center\";\r\n                }\r\n                else {\r\n                    labelValign = \"middle\";\r\n                }\r\n            }\r\n            else {\r\n                // opposite (left/bottom)\r\n                if (value) {\r\n                    this.labelsContainer.toFront();\r\n                    // left\r\n                    if (this.orientation == \"vertical\") {\r\n                        this.ticks.template.locationX = 1;\r\n                        labelTemplate.horizontalCenter = \"left\";\r\n                        labelAlign = \"right\";\r\n                    }\r\n                    // bottom\r\n                    else {\r\n                        this.ticks.template.locationY = 1;\r\n                        labelTemplate.horizontalCenter = \"right\";\r\n                        labelValign = \"bottom\";\r\n                    }\r\n                }\r\n                // non oposite (right/top)\r\n                else {\r\n                    this.labelsContainer.toBack();\r\n                    // right\r\n                    if (this.orientation == \"vertical\") {\r\n                        this.ticks.template.locationX = 0;\r\n                        labelAlign = \"left\";\r\n                    }\r\n                    // top\r\n                    else {\r\n                        labelValign = \"top\";\r\n                        this.ticks.template.locationY = 0;\r\n                    }\r\n                }\r\n            }\r\n            labelTemplate.align = labelAlign;\r\n            labelTemplate.valign = labelValign;\r\n            this.validateLayout();\r\n            this.ticks.each(function (tick) {\r\n                tick.invalidate();\r\n            });\r\n            this.invalidateDataItems();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FunnelSeries;\r\n}(PercentSeries));\r\nexport { FunnelSeries };\r\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"FunnelSeries\"] = FunnelSeries;\r\nregistry.registeredClasses[\"FunnelSeriesDataItem\"] = FunnelSeriesDataItem;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}