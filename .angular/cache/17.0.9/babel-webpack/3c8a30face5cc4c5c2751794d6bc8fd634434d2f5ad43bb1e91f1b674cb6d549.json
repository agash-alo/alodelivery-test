{"ast":null,"code":"/**\r\n * Defines Percent Chart Series.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Series, SeriesDataItem } from \"./Series\";\nimport { Sprite } from \"../../core/Sprite\";\nimport { Label } from \"../../core/elements/Label\";\nimport { Color } from \"../../core/utils/Color\";\nimport { Tick } from \"../elements/Tick\";\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\nimport { Container } from \"../../core/Container\";\nimport { ColorSet } from \"../../core/utils/ColorSet\";\nimport { registry } from \"../../core/Registry\";\nimport * as $iter from \"../../core/utils/Iterator\";\nimport * as $ease from \"../../core/utils/Ease\";\nimport * as $type from \"../../core/utils/Type\";\nimport { Disposer } from \"../../core/utils/Disposer\";\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n//@todo: sequenced?\n/**\r\n * Defines a [[DataItem]] for [[PercentSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\nvar PercentSeriesDataItem = /** @class */function (_super) {\n  __extends(PercentSeriesDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n  function PercentSeriesDataItem() {\n    var _this = _super.call(this) || this;\n    _this.className = \"PercentSeriesDataItem\";\n    _this.applyTheme();\n    return _this;\n  }\n  /**\r\n   * Adds an `id` attribute the the slice element and returns its id.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  PercentSeriesDataItem.prototype.uidAttr = function () {\n    return this.slice.uidAttr();\n  };\n  /**\r\n   * Hide the data item (and corresponding visual elements).\r\n   *\r\n   * @param duration  Duration (ms)\r\n   * @param delay     Delay hiding (ms)\r\n   * @param toValue   Target value for animation\r\n   * @param fields    Fields to animate while hiding\r\n   */\n  PercentSeriesDataItem.prototype.hide = function (duration, delay, toValue, fields) {\n    if (!fields) {\n      fields = [\"value\"];\n    }\n    return _super.prototype.hide.call(this, duration, delay, 0, fields);\n  };\n  /**\r\n   * Sets visibility of the Data Item.\r\n   *\r\n   * @param value Data Item\r\n   */\n  PercentSeriesDataItem.prototype.setVisibility = function (value, noChangeValues) {\n    if (!noChangeValues) {\n      if (value) {\n        this.setWorkingValue(\"value\", this.values[\"value\"].value, 0, 0);\n      } else {\n        this.setWorkingValue(\"value\", 0, 0, 0);\n      }\n    }\n    _super.prototype.setVisibility.call(this, value, noChangeValues);\n  };\n  /**\r\n   * Show hidden data item (and corresponding visual elements).\r\n   *\r\n   * @param duration  Duration (ms)\r\n   * @param delay     Delay hiding (ms)\r\n   * @param fields    Fields to animate while hiding\r\n   */\n  PercentSeriesDataItem.prototype.show = function (duration, delay, fields) {\n    if (!fields) {\n      fields = [\"value\"];\n    }\n    return _super.prototype.show.call(this, duration, delay, fields);\n  };\n  Object.defineProperty(PercentSeriesDataItem.prototype, \"category\", {\n    /**\r\n     * @return Category\r\n     */\n    get: function () {\n      return this.properties.category;\n    },\n    /**\r\n     * Category.\r\n     *\r\n     * @param value  Category\r\n     */\n    set: function (value) {\n      this.setProperty(\"category\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Creates a marker used in the legend for this slice.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param marker  Marker container\r\n   */\n  PercentSeriesDataItem.prototype.createLegendMarker = function (marker) {\n    this.component.createLegendMarker(marker, this);\n  };\n  Object.defineProperty(PercentSeriesDataItem.prototype, \"legendDataItem\", {\n    /**\r\n     * @return Legend data item\r\n     */\n    get: function () {\n      return this._legendDataItem;\n    },\n    /**\r\n     * A legend's data item, that corresponds to this data item.\r\n     *\r\n     * @param value  Legend data item\r\n     */\n    set: function (value) {\n      this._legendDataItem = value;\n      if (value.label) {\n        value.label.dataItem = this;\n      }\n      if (value.valueLabel) {\n        value.valueLabel.dataItem = this;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PercentSeriesDataItem.prototype, \"tick\", {\n    /**\r\n     * A Tick element, related to this data item. (slice)\r\n     *\r\n     * @readonly\r\n     * @return Tick element\r\n     */\n    get: function () {\n      var _this = this;\n      if (!this._tick) {\n        var tick_1 = this.component.ticks.create();\n        this._tick = tick_1;\n        this.addSprite(tick_1);\n        this._disposers.push(tick_1);\n        tick_1.parent = this.component.ticksContainer;\n        this._disposers.push(new Disposer(function () {\n          if (_this.component) {\n            _this.component.ticks.removeValue(tick_1);\n          }\n        }));\n        tick_1.visible = this.visible;\n      }\n      return this._tick;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PercentSeriesDataItem.prototype, \"label\", {\n    /**\r\n     * A Label element, related to this data item. (slice)\r\n     *\r\n     * @readonly\r\n     * @return Label element\r\n     */\n    get: function () {\n      var _this = this;\n      if (!this._label) {\n        var label_1 = this.component.labels.create();\n        this.addSprite(label_1);\n        this._label = label_1;\n        this._disposers.push(label_1);\n        label_1.parent = this.component.labelsContainer;\n        this._disposers.push(new Disposer(function () {\n          if (_this.component) {\n            _this.component.labels.removeValue(label_1);\n          }\n        }));\n        label_1.visible = this.visible;\n      }\n      return this._label;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PercentSeriesDataItem.prototype, \"slice\", {\n    /**\r\n     * An element, related to this data item. (slice)\r\n     *\r\n     * @readonly\r\n     * @return Slice element\r\n     */\n    get: function () {\n      var _this = this;\n      if (!this._slice) {\n        var component_1 = this.component;\n        var slice_1 = component_1.slices.create();\n        this.addSprite(slice_1);\n        this._slice = slice_1;\n        this._disposers.push(slice_1);\n        slice_1.parent = component_1.slicesContainer;\n        this._disposers.push(new Disposer(function () {\n          component_1.slices.removeValue(slice_1);\n        }));\n        slice_1.visible = this.visible;\n        // Apply accessibility\n        if (component_1.itemsFocusable()) {\n          if (!$type.hasValue(this.component.role)) {\n            this.component.role = \"menu\";\n          }\n          if (!$type.hasValue(slice_1.role)) {\n            slice_1.role = \"menuitem\";\n          }\n          slice_1.focusable = true;\n        } else {\n          if (!$type.hasValue(this.component.role)) {\n            this.component.role = \"list\";\n          }\n          if (!$type.hasValue(slice_1.role)) {\n            slice_1.role = \"listitem\";\n          }\n          slice_1.focusable = false;\n        }\n        // Apply screen reader label\n        if (slice_1.focusable) {\n          slice_1.events.on(\"focus\", function (ev) {\n            slice_1.readerTitle = component_1.populateString(component_1.itemReaderText, _this);\n          }, undefined, false);\n          slice_1.events.on(\"blur\", function (ev) {\n            slice_1.readerTitle = \"\";\n          }, undefined, false);\n        }\n        if (slice_1.hoverable) {\n          slice_1.events.on(\"over\", function (ev) {\n            slice_1.readerTitle = component_1.populateString(component_1.itemReaderText, _this);\n          }, undefined, false);\n          slice_1.events.on(\"out\", function (ev) {\n            slice_1.readerTitle = \"\";\n          }, undefined, false);\n        }\n      }\n      return this._slice;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PercentSeriesDataItem.prototype, \"hiddenInLegend\", {\n    /**\r\n     * @return Disabled in legend?\r\n     */\n    get: function () {\n      return this.properties.hiddenInLegend;\n    },\n    /**\r\n     * Should dataItem (slice) be hidden in legend?\r\n     *\r\n     * @param value Visible in legend?\r\n     */\n    set: function (value) {\n      this.setProperty(\"hiddenInLegend\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PercentSeriesDataItem;\n}(SeriesDataItem);\nexport { PercentSeriesDataItem };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Defines [[PercentSeries]] which is a base class for [[PieSeries]],\r\n * [[FunnelSeries]], and [[PyramidSeries]].\r\n *\r\n * @see {@link IPercentSeriesEvents} for a list of available Events\r\n * @see {@link IPercentSeriesAdapters} for a list of available Adapters\r\n */\nvar PercentSeries = /** @class */function (_super) {\n  __extends(PercentSeries, _super);\n  /**\r\n   * Constructor\r\n   */\n  function PercentSeries() {\n    var _this = _super.call(this) || this;\n    _this.className = \"PercentSeries\";\n    _this._addAllDataItems = false;\n    _this.colors = new ColorSet();\n    _this.colors.step = 1;\n    _this.isMeasured = true;\n    _this.calculatePercent = true;\n    var slicesContainer = _this.createChild(Container);\n    slicesContainer.shouldClone = false;\n    slicesContainer.isMeasured = false;\n    _this.slicesContainer = slicesContainer;\n    var ticksContainer = _this.createChild(Container);\n    ticksContainer.shouldClone = false;\n    ticksContainer.isMeasured = false;\n    ticksContainer.layout = \"none\";\n    _this.ticksContainer = ticksContainer;\n    var labelsContainer = _this.createChild(Container);\n    labelsContainer.shouldClone = false;\n    labelsContainer.isMeasured = false;\n    labelsContainer.layout = \"none\";\n    _this.labelsContainer = labelsContainer;\n    _this.alignLabels = false;\n    _this.bulletsContainer.toFront();\n    // Make all slices focusable\n    _this.skipFocusThreshold = 50;\n    var defaultState = _this.defaultState;\n    defaultState.transitionEasing = $ease.sinOut;\n    // Accessibility\n    _this.itemReaderText = \"{category}: {value.percent.formatNumber('#.#p')}\";\n    _this.applyTheme();\n    return _this;\n  }\n  /**\r\n   * Creates a slice element.\r\n   *\r\n   * @return Slice\r\n   */\n  PercentSeries.prototype.createSlice = function () {\n    return new Sprite();\n  };\n  /**\r\n   * Creates a tick element.\r\n   *\r\n   * @return Tick\r\n   */\n  PercentSeries.prototype.createTick = function () {\n    return new Tick();\n  };\n  /**\r\n   * Sreates label element.\r\n   *\r\n   * @return label\r\n   */\n  PercentSeries.prototype.createLabel = function () {\n    return new Label();\n  };\n  Object.defineProperty(PercentSeries.prototype, \"slices\", {\n    /**\r\n     * A list of slice elements for the series.\r\n     *\r\n     * Use its `template` to configure look and behavior of the slices. E.g.:\r\n     *\r\n     * ```TypeScript\r\n     * series.slices.template.stroke = am4core.color(\"#fff\");\r\n     * series.slices.template.strokeWidth = 2;\r\n     * ```\r\n     * ```JavaScript\r\n     * series.slices.template.stroke = am4core.color(\"#fff\");\r\n     * series.slices.template.strokeWidth = 2;\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"series\": [{\r\n     *     // ...\r\n     *     \"slices\": {\r\n     *       \"stroke\": \"#fff\",\r\n     *       \"strokeWidth\": 2\r\n     *     }\r\n     *   }]\r\n     * }\r\n     * ```\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/list-templates/} for more information about list templates\r\n     * @return Slices\r\n     */\n    get: function () {\n      if (!this._slices) {\n        var slice = this.createSlice();\n        slice.applyOnClones = true;\n        this._disposers.push(slice);\n        this.initSlice(slice);\n        this._slices = new ListTemplate(slice);\n        this._disposers.push(new ListDisposer(this._slices));\n      }\n      return this._slices;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PercentSeries.prototype, \"ticks\", {\n    /**\r\n     * A list of tick elements for the series. Ticks connect slice to its label.\r\n     *\r\n     * Use its `template` to configure look and behavior of the ticks. E.g.:\r\n     *\r\n     * ```TypeScript\r\n     * series.ticks.template.strokeWidth = 2;\r\n     * ```\r\n     * ```JavaScript\r\n     * series.ticks.template.strokeWidth = 2;\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"series\": [{\r\n     *     // ...\r\n     *     \"ticks\": {\r\n     *       \"strokeWidth\": 2\r\n     *     }\r\n     *   }]\r\n     * }\r\n     * ```\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/list-templates/} for more information about list templates\r\n     * @return Ticks\r\n     */\n    get: function () {\n      if (!this._ticks) {\n        var tick = this.createTick();\n        tick.applyOnClones = true;\n        this._disposers.push(tick);\n        this.initTick(tick);\n        this._ticks = new ListTemplate(tick);\n        this._disposers.push(new ListDisposer(this._ticks));\n      }\n      return this._ticks;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PercentSeries.prototype, \"labels\", {\n    /**\r\n     * A list of slice label elements for the series.\r\n     *\r\n     * Use its `template` to configure look and behavior of the labels. E.g.:\r\n     *\r\n     * ```TypeScript\r\n     * series.labels.template.fill = am4core.color(\"#c00\");\r\n     * series.labels.template.fontSize = 20;\r\n     * ```\r\n     * ```JavaScript\r\n     * series.labels.template.fill = am4core.color(\"#c00\");\r\n     * series.labels.template.fontSize = 20;\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"series\": [{\r\n     *     // ...\r\n     *     \"labels\": {\r\n     *       \"stroke\": \"#c00\",\r\n     *       \"fontSize\": 20\r\n     *     }\r\n     *   }]\r\n     * }\r\n     * ```\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/list-templates/} for more information about list templates\r\n     * @return Labels\r\n     */\n    get: function () {\n      if (!this._labels) {\n        var label = this.createLabel();\n        label.applyOnClones = true;\n        this._disposers.push(label);\n        this.initLabel(label);\n        this._labels = new ListTemplate(label);\n        this._disposers.push(new ListDisposer(this._labels));\n      }\n      return this._labels;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Returns a new/empty DataItem of the type appropriate for this object.\r\n   *\r\n   * @see {@link DataItem}\r\n   * @return Data Item\r\n   */\n  PercentSeries.prototype.createDataItem = function () {\n    return new PercentSeriesDataItem();\n  };\n  /**\r\n   * Creates and returns a new slice element.\r\n   *\r\n   * @param sliceType  Type of the slice element\r\n   * @return Slice\r\n   */\n  PercentSeries.prototype.initSlice = function (slice) {};\n  PercentSeries.prototype.initLabel = function (label) {\n    label.text = \"{category}: {value.percent.formatNumber('#.0p')}\";\n    label.isMeasured = false;\n    label.padding(5, 5, 5, 5);\n  };\n  PercentSeries.prototype.initTick = function (label) {};\n  /**\r\n   * Validates (processes) data items.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  PercentSeries.prototype.validateDataItems = function () {\n    this.colors.reset();\n    if (this.patterns) {\n      this.patterns.reset();\n    }\n    _super.prototype.validateDataItems.call(this);\n  };\n  /**\r\n   * Validates data item's element, effectively redrawing it.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItem  Data item\r\n   */\n  PercentSeries.prototype.validateDataElement = function (dataItem) {\n    var slice = dataItem.slice;\n    if (slice) {\n      if (slice.fill == undefined) {\n        if (this.patterns) {\n          if (!$type.hasValue(slice.stroke)) {\n            slice.stroke = this.colors.next();\n          }\n          slice.fill = this.patterns.next();\n          if ($type.hasValue(slice.fillOpacity)) {\n            slice.fill.backgroundOpacity = slice.fillOpacity;\n          }\n          if (slice.stroke instanceof Color) {\n            slice.fill.stroke = slice.stroke;\n            slice.fill.fill = slice.stroke;\n          }\n        } else {\n          slice.fill = this.colors.next();\n        }\n      } else {\n        this.colors.currentStep += this.colors.step;\n      }\n      if (slice.stroke == undefined) {\n        slice.stroke = slice.fill;\n      }\n    }\n    // do this at the end, otherwise bullets won't be positioned properly\n    _super.prototype.validateDataElement.call(this, dataItem);\n    if (slice) {\n      dataItem.bullets.each(function (key, bullet) {\n        if (bullet.fill == undefined) {\n          bullet.fill = slice.fill;\n        }\n        if (bullet.stroke == undefined) {\n          bullet.stroke = slice.stroke;\n        }\n      });\n    }\n    this.updateLegendValue(dataItem);\n  };\n  /**\r\n   * Validates (processes) data.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  PercentSeries.prototype.validateData = function () {\n    _super.prototype.validateData.call(this);\n    if (this.chart) {\n      this.chart.feedLegend();\n    }\n  };\n  /**\r\n   * Arranges slice labels according to position settings.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItems  Data items\r\n   */\n  PercentSeries.prototype.arrangeLabels = function (dataItems) {\n    for (var i = 0, len = dataItems.length; i < len; i++) {\n      var dataItem = dataItems[i];\n      var label = dataItem.label;\n      if (label) {\n        if (label.invalid) {\n          label.validate();\n        }\n        var lh = label.measuredHeight;\n        if (!label.visible) {\n          lh = 0;\n        }\n        if (label.pixelY - lh / 2 < -this.maxHeight / 2) {\n          label.y = -this.maxHeight / 2 + lh / 2;\n        }\n        var nextLabel = this.getNextLabel(i + 1, dataItems);\n        var bottom = label.pixelY + lh / 2;\n        if (nextLabel) {\n          if (nextLabel.invalid) {\n            nextLabel.validate();\n          }\n          var nextLabelHeight = nextLabel.measuredHeight;\n          if (!nextLabel.visible) {\n            nextLabelHeight = 0;\n          }\n          var nextLabelY = nextLabel.pixelY;\n          if (nextLabelY == null) {\n            nextLabelY = 0;\n          }\n          if (nextLabelY - nextLabelHeight / 2 < bottom) {\n            nextLabel.y = bottom + nextLabelHeight / 2;\n          }\n        }\n      }\n    }\n  };\n  PercentSeries.prototype.arrangeLabels2 = function (dataItems) {\n    var previousTop = this.maxHeight / 2;\n    for (var i = dataItems.length - 1; i >= 0; i--) {\n      var dataItem = dataItems[i];\n      var label = dataItem.label;\n      if (label) {\n        if (label.invalid) {\n          label.validate();\n        }\n        var lh = label.measuredHeight;\n        if (!label.visible) {\n          lh = 0;\n        }\n        //if (i == dataItems.length - 1) {\n        //previousTop += lh / 2;\n        //}\n        if (label.pixelY + lh / 2 > previousTop) {\n          label.y = previousTop - lh / 2;\n          previousTop = label.y - lh / 2;\n        }\n      }\n    }\n  };\n  /**\r\n   * Returns the next label according to `index`.\r\n   *\r\n   * @param index      Current index\r\n   * @param dataItems  Data items\r\n   * @return Label element\r\n   */\n  PercentSeries.prototype.getNextLabel = function (index, dataItems) {\n    if (dataItems.length >= index) {\n      var nextDataItem = dataItems[index];\n      if (nextDataItem) {\n        if (nextDataItem.label) {\n          if (nextDataItem.visible) {\n            return nextDataItem.label;\n          } else {\n            return this.getNextLabel(index + 1, dataItems);\n          }\n        } else {\n          return this.getNextLabel(index + 1, dataItems);\n        }\n      }\n    }\n  };\n  Object.defineProperty(PercentSeries.prototype, \"colors\", {\n    /**\r\n     * @return Color set\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"colors\");\n    },\n    /**\r\n     * A color set to be used for slices.\r\n     *\r\n     * For each new subsequent slice, the chart will assign the next color in\r\n     * this set.\r\n     *\r\n     * @param value  Color set\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"colors\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PercentSeries.prototype, \"patterns\", {\n    /**\r\n     * @return Pattern set\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"patterns\");\n    },\n    /**\r\n     * A [[PatternSet]] to use when creating patterned fills for slices.\r\n     *\r\n     * @since 4.7.5\r\n     * @param value  Pattern set\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"patterns\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Binds related legend data item's visual settings to this series' visual\r\n   * settings.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param marker    Container\r\n   * @param dataItem  Data item\r\n   */\n  PercentSeries.prototype.createLegendMarker = function (marker, dataItem) {\n    $iter.each(marker.children.iterator(), function (child) {\n      var slice = dataItem.slice;\n      child.defaultState.properties.fill = slice.fill;\n      child.defaultState.properties.stroke = slice.stroke;\n      child.defaultState.properties.fillOpacity = slice.fillOpacity;\n      child.defaultState.properties.strokeOpacity = slice.strokeOpacity;\n      child.fill = slice.fill;\n      child.stroke = slice.stroke;\n      child.fillOpacity = slice.fillOpacity;\n      child.strokeOpacity = slice.strokeOpacity;\n      if (child.fill == undefined) {\n        child.__disabled = true;\n      }\n      var legendDataItem = marker.dataItem;\n      legendDataItem.color = slice.fill;\n      legendDataItem.colorOrig = slice.fill;\n      child.addDisposer(slice.events.on(\"propertychanged\", function (ev) {\n        if (ev.property == \"fill\") {\n          child.__disabled = false;\n          if (!child.isActive) {\n            child.fill = slice.fill;\n          }\n          child.defaultState.properties.fill = slice.fill;\n          legendDataItem.color = slice.fill;\n          legendDataItem.colorOrig = slice.fill;\n        }\n        if (ev.property == \"stroke\") {\n          if (!child.isActive) {\n            child.stroke = slice.stroke;\n          }\n          child.defaultState.properties.stroke = slice.stroke;\n        }\n        if (ev.property == \"strokeOpacity\") {\n          if (!child.isActive) {\n            child.strokeOpacity = slice.strokeOpacity;\n          }\n          child.defaultState.properties.strokeOpacity = slice.strokeOpacity;\n        }\n      }, undefined, false));\n    });\n  };\n  /**\r\n   * Repositions bullets when slice's size changes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param event  Event\r\n   */\n  PercentSeries.prototype.handleSliceScale = function (event) {\n    var _this = this;\n    var slice = event.target;\n    var dataItem = slice.dataItem;\n    if (dataItem && dataItem.bullets) {\n      $iter.each(dataItem.bullets.iterator(), function (a) {\n        var value = a[1];\n        _this.positionBullet(value);\n      });\n    }\n  };\n  /**\r\n   * Repositions bullet and labels when slice moves.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param event  Event\r\n   */\n  PercentSeries.prototype.handleSliceMove = function (event) {};\n  /**\r\n   * Copies all properties from another instance of [[PercentSeries]].\r\n   *\r\n   * @param source  Source series\r\n   */\n  PercentSeries.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n    this.slices.template.copyFrom(source.slices.template);\n    this.labels.template.copyFrom(source.labels.template);\n    this.ticks.template.copyFrom(source.ticks.template);\n    this.colors = source.colors.clone();\n  };\n  Object.defineProperty(PercentSeries.prototype, \"alignLabels\", {\n    /**\r\n     * @return Align labels?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"alignLabels\");\n    },\n    /**\r\n     * Align labels into nice vertical columns?\r\n     *\r\n     * This will ensure that labels never overlap with each other.\r\n     *\r\n     * Arranging labels into columns makes them more readble, and better user\r\n     * experience.\r\n     *\r\n     * If set to `false` labels will be positioned at `label.radius` distance,\r\n     * and may, in some cases, overlap.\r\n     *\r\n     * @default true\r\n     * @param value  Align labels?\r\n     */\n    set: function (value) {\n      this.setAlignLabels(value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * @ignore\r\n   */\n  PercentSeries.prototype.setAlignLabels = function (value) {\n    this.setPropertyValue(\"alignLabels\", value, true);\n  };\n  Object.defineProperty(PercentSeries.prototype, \"ignoreZeroValues\", {\n    /**\r\n     * @return Ignore zero values\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"ignoreZeroValues\");\n    },\n    /**\r\n     * If set to `true` the chart will not show slices with zero values.\r\n     *\r\n     * @default false\r\n     * @since 4.7.9\r\n     * @param  value  Ignore zero values\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"ignoreZeroValues\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Updates corresponding legend data item with current values.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItem  Data item\r\n   */\n  PercentSeries.prototype.updateLegendValue = function (dataItem) {\n    if (dataItem) {\n      var legendDataItem = dataItem.legendDataItem;\n      var legendSettings = dataItem.legendSettings;\n      if (legendDataItem && legendSettings) {\n        if (legendSettings) {\n          if (legendSettings.labelText) {\n            legendDataItem.label.text = legendSettings.labelText;\n          }\n          if (legendSettings.itemLabelText) {\n            legendDataItem.label.text = legendSettings.itemLabelText;\n          }\n          if (legendSettings.valueText) {\n            legendDataItem.valueLabel.text = legendSettings.valueText;\n          }\n          if (legendSettings.itemValueText) {\n            legendDataItem.valueLabel.text = legendSettings.itemValueText;\n          }\n        }\n      }\n    }\n  };\n  return PercentSeries;\n}(Series);\nexport { PercentSeries };\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"PercentSeries\"] = PercentSeries;\nregistry.registeredClasses[\"PercentSeriesDataItem\"] = PercentSeriesDataItem;\n/**\r\n * Add default responsive rules\r\n */\n/**\r\n * Disable labels and ticks.\r\n */\ndefaultRules.push({\n  relevant: ResponsiveBreakpoints.maybeXS,\n  state: function (target, stateId) {\n    if (target instanceof PercentSeries) {\n      var state = target.states.create(stateId);\n      var labelState = target.labels.template.states.create(stateId);\n      labelState.properties.disabled = true;\n      var tickState = target.ticks.template.states.create(stateId);\n      tickState.properties.disabled = true;\n      return state;\n    }\n    return null;\n  }\n});","map":{"version":3,"names":["__extends","Series","SeriesDataItem","Sprite","Label","Color","Tick","ListTemplate","ListDisposer","Container","ColorSet","registry","$iter","$ease","$type","Disposer","defaultRules","ResponsiveBreakpoints","PercentSeriesDataItem","_super","_this","call","className","applyTheme","prototype","uidAttr","slice","hide","duration","delay","toValue","fields","setVisibility","value","noChangeValues","setWorkingValue","values","show","Object","defineProperty","get","properties","category","set","setProperty","enumerable","configurable","createLegendMarker","marker","component","_legendDataItem","label","dataItem","valueLabel","_tick","tick_1","ticks","create","addSprite","_disposers","push","parent","ticksContainer","removeValue","visible","_label","label_1","labels","labelsContainer","_slice","component_1","slice_1","slices","slicesContainer","itemsFocusable","hasValue","role","focusable","events","on","ev","readerTitle","populateString","itemReaderText","undefined","hoverable","hiddenInLegend","PercentSeries","_addAllDataItems","colors","step","isMeasured","calculatePercent","createChild","shouldClone","layout","alignLabels","bulletsContainer","toFront","skipFocusThreshold","defaultState","transitionEasing","sinOut","createSlice","createTick","createLabel","_slices","applyOnClones","initSlice","_ticks","tick","initTick","_labels","initLabel","createDataItem","text","padding","validateDataItems","reset","patterns","validateDataElement","fill","stroke","next","fillOpacity","backgroundOpacity","currentStep","bullets","each","key","bullet","updateLegendValue","validateData","chart","feedLegend","arrangeLabels","dataItems","i","len","length","invalid","validate","lh","measuredHeight","pixelY","maxHeight","y","nextLabel","getNextLabel","bottom","nextLabelHeight","nextLabelY","arrangeLabels2","previousTop","index","nextDataItem","getPropertyValue","setPropertyValue","children","iterator","child","strokeOpacity","__disabled","legendDataItem","color","colorOrig","addDisposer","property","isActive","handleSliceScale","event","target","a","positionBullet","handleSliceMove","copyFrom","source","template","clone","setAlignLabels","legendSettings","labelText","itemLabelText","valueText","itemValueText","registeredClasses","relevant","maybeXS","state","stateId","states","labelState","disabled","tickState"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/charts/series/PercentSeries.js"],"sourcesContent":["/**\r\n * Defines Percent Chart Series.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Series, SeriesDataItem } from \"./Series\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport { Tick } from \"../elements/Tick\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { ColorSet } from \"../../core/utils/ColorSet\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $ease from \"../../core/utils/Ease\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n//@todo: sequenced?\r\n/**\r\n * Defines a [[DataItem]] for [[PercentSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar PercentSeriesDataItem = /** @class */ (function (_super) {\r\n    __extends(PercentSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PercentSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PercentSeriesDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Adds an `id` attribute the the slice element and returns its id.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    PercentSeriesDataItem.prototype.uidAttr = function () {\r\n        return this.slice.uidAttr();\r\n    };\r\n    /**\r\n     * Hide the data item (and corresponding visual elements).\r\n     *\r\n     * @param duration  Duration (ms)\r\n     * @param delay     Delay hiding (ms)\r\n     * @param toValue   Target value for animation\r\n     * @param fields    Fields to animate while hiding\r\n     */\r\n    PercentSeriesDataItem.prototype.hide = function (duration, delay, toValue, fields) {\r\n        if (!fields) {\r\n            fields = [\"value\"];\r\n        }\r\n        return _super.prototype.hide.call(this, duration, delay, 0, fields);\r\n    };\r\n    /**\r\n     * Sets visibility of the Data Item.\r\n     *\r\n     * @param value Data Item\r\n     */\r\n    PercentSeriesDataItem.prototype.setVisibility = function (value, noChangeValues) {\r\n        if (!noChangeValues) {\r\n            if (value) {\r\n                this.setWorkingValue(\"value\", this.values[\"value\"].value, 0, 0);\r\n            }\r\n            else {\r\n                this.setWorkingValue(\"value\", 0, 0, 0);\r\n            }\r\n        }\r\n        _super.prototype.setVisibility.call(this, value, noChangeValues);\r\n    };\r\n    /**\r\n     * Show hidden data item (and corresponding visual elements).\r\n     *\r\n     * @param duration  Duration (ms)\r\n     * @param delay     Delay hiding (ms)\r\n     * @param fields    Fields to animate while hiding\r\n     */\r\n    PercentSeriesDataItem.prototype.show = function (duration, delay, fields) {\r\n        if (!fields) {\r\n            fields = [\"value\"];\r\n        }\r\n        return _super.prototype.show.call(this, duration, delay, fields);\r\n    };\r\n    Object.defineProperty(PercentSeriesDataItem.prototype, \"category\", {\r\n        /**\r\n         * @return Category\r\n         */\r\n        get: function () {\r\n            return this.properties.category;\r\n        },\r\n        /**\r\n         * Category.\r\n         *\r\n         * @param value  Category\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"category\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a marker used in the legend for this slice.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param marker  Marker container\r\n     */\r\n    PercentSeriesDataItem.prototype.createLegendMarker = function (marker) {\r\n        this.component.createLegendMarker(marker, this);\r\n    };\r\n    Object.defineProperty(PercentSeriesDataItem.prototype, \"legendDataItem\", {\r\n        /**\r\n         * @return Legend data item\r\n         */\r\n        get: function () {\r\n            return this._legendDataItem;\r\n        },\r\n        /**\r\n         * A legend's data item, that corresponds to this data item.\r\n         *\r\n         * @param value  Legend data item\r\n         */\r\n        set: function (value) {\r\n            this._legendDataItem = value;\r\n            if (value.label) {\r\n                value.label.dataItem = this;\r\n            }\r\n            if (value.valueLabel) {\r\n                value.valueLabel.dataItem = this;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PercentSeriesDataItem.prototype, \"tick\", {\r\n        /**\r\n         * A Tick element, related to this data item. (slice)\r\n         *\r\n         * @readonly\r\n         * @return Tick element\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._tick) {\r\n                var tick_1 = this.component.ticks.create();\r\n                this._tick = tick_1;\r\n                this.addSprite(tick_1);\r\n                this._disposers.push(tick_1);\r\n                tick_1.parent = this.component.ticksContainer;\r\n                this._disposers.push(new Disposer(function () {\r\n                    if (_this.component) {\r\n                        _this.component.ticks.removeValue(tick_1);\r\n                    }\r\n                }));\r\n                tick_1.visible = this.visible;\r\n            }\r\n            return this._tick;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PercentSeriesDataItem.prototype, \"label\", {\r\n        /**\r\n         * A Label element, related to this data item. (slice)\r\n         *\r\n         * @readonly\r\n         * @return Label element\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._label) {\r\n                var label_1 = this.component.labels.create();\r\n                this.addSprite(label_1);\r\n                this._label = label_1;\r\n                this._disposers.push(label_1);\r\n                label_1.parent = this.component.labelsContainer;\r\n                this._disposers.push(new Disposer(function () {\r\n                    if (_this.component) {\r\n                        _this.component.labels.removeValue(label_1);\r\n                    }\r\n                }));\r\n                label_1.visible = this.visible;\r\n            }\r\n            return this._label;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PercentSeriesDataItem.prototype, \"slice\", {\r\n        /**\r\n         * An element, related to this data item. (slice)\r\n         *\r\n         * @readonly\r\n         * @return Slice element\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._slice) {\r\n                var component_1 = this.component;\r\n                var slice_1 = component_1.slices.create();\r\n                this.addSprite(slice_1);\r\n                this._slice = slice_1;\r\n                this._disposers.push(slice_1);\r\n                slice_1.parent = component_1.slicesContainer;\r\n                this._disposers.push(new Disposer(function () {\r\n                    component_1.slices.removeValue(slice_1);\r\n                }));\r\n                slice_1.visible = this.visible;\r\n                // Apply accessibility\r\n                if (component_1.itemsFocusable()) {\r\n                    if (!$type.hasValue(this.component.role)) {\r\n                        this.component.role = \"menu\";\r\n                    }\r\n                    if (!$type.hasValue(slice_1.role)) {\r\n                        slice_1.role = \"menuitem\";\r\n                    }\r\n                    slice_1.focusable = true;\r\n                }\r\n                else {\r\n                    if (!$type.hasValue(this.component.role)) {\r\n                        this.component.role = \"list\";\r\n                    }\r\n                    if (!$type.hasValue(slice_1.role)) {\r\n                        slice_1.role = \"listitem\";\r\n                    }\r\n                    slice_1.focusable = false;\r\n                }\r\n                // Apply screen reader label\r\n                if (slice_1.focusable) {\r\n                    slice_1.events.on(\"focus\", function (ev) {\r\n                        slice_1.readerTitle = component_1.populateString(component_1.itemReaderText, _this);\r\n                    }, undefined, false);\r\n                    slice_1.events.on(\"blur\", function (ev) {\r\n                        slice_1.readerTitle = \"\";\r\n                    }, undefined, false);\r\n                }\r\n                if (slice_1.hoverable) {\r\n                    slice_1.events.on(\"over\", function (ev) {\r\n                        slice_1.readerTitle = component_1.populateString(component_1.itemReaderText, _this);\r\n                    }, undefined, false);\r\n                    slice_1.events.on(\"out\", function (ev) {\r\n                        slice_1.readerTitle = \"\";\r\n                    }, undefined, false);\r\n                }\r\n            }\r\n            return this._slice;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PercentSeriesDataItem.prototype, \"hiddenInLegend\", {\r\n        /**\r\n         * @return Disabled in legend?\r\n         */\r\n        get: function () {\r\n            return this.properties.hiddenInLegend;\r\n        },\r\n        /**\r\n         * Should dataItem (slice) be hidden in legend?\r\n         *\r\n         * @param value Visible in legend?\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"hiddenInLegend\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PercentSeriesDataItem;\r\n}(SeriesDataItem));\r\nexport { PercentSeriesDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[PercentSeries]] which is a base class for [[PieSeries]],\r\n * [[FunnelSeries]], and [[PyramidSeries]].\r\n *\r\n * @see {@link IPercentSeriesEvents} for a list of available Events\r\n * @see {@link IPercentSeriesAdapters} for a list of available Adapters\r\n */\r\nvar PercentSeries = /** @class */ (function (_super) {\r\n    __extends(PercentSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PercentSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PercentSeries\";\r\n        _this._addAllDataItems = false;\r\n        _this.colors = new ColorSet();\r\n        _this.colors.step = 1;\r\n        _this.isMeasured = true;\r\n        _this.calculatePercent = true;\r\n        var slicesContainer = _this.createChild(Container);\r\n        slicesContainer.shouldClone = false;\r\n        slicesContainer.isMeasured = false;\r\n        _this.slicesContainer = slicesContainer;\r\n        var ticksContainer = _this.createChild(Container);\r\n        ticksContainer.shouldClone = false;\r\n        ticksContainer.isMeasured = false;\r\n        ticksContainer.layout = \"none\";\r\n        _this.ticksContainer = ticksContainer;\r\n        var labelsContainer = _this.createChild(Container);\r\n        labelsContainer.shouldClone = false;\r\n        labelsContainer.isMeasured = false;\r\n        labelsContainer.layout = \"none\";\r\n        _this.labelsContainer = labelsContainer;\r\n        _this.alignLabels = false;\r\n        _this.bulletsContainer.toFront();\r\n        // Make all slices focusable\r\n        _this.skipFocusThreshold = 50;\r\n        var defaultState = _this.defaultState;\r\n        defaultState.transitionEasing = $ease.sinOut;\r\n        // Accessibility\r\n        _this.itemReaderText = \"{category}: {value.percent.formatNumber('#.#p')}\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a slice element.\r\n     *\r\n     * @return Slice\r\n     */\r\n    PercentSeries.prototype.createSlice = function () {\r\n        return new Sprite();\r\n    };\r\n    /**\r\n     * Creates a tick element.\r\n     *\r\n     * @return Tick\r\n     */\r\n    PercentSeries.prototype.createTick = function () {\r\n        return new Tick();\r\n    };\r\n    /**\r\n     * Sreates label element.\r\n     *\r\n     * @return label\r\n     */\r\n    PercentSeries.prototype.createLabel = function () {\r\n        return new Label();\r\n    };\r\n    Object.defineProperty(PercentSeries.prototype, \"slices\", {\r\n        /**\r\n         * A list of slice elements for the series.\r\n         *\r\n         * Use its `template` to configure look and behavior of the slices. E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * series.slices.template.stroke = am4core.color(\"#fff\");\r\n         * series.slices.template.strokeWidth = 2;\r\n         * ```\r\n         * ```JavaScript\r\n         * series.slices.template.stroke = am4core.color(\"#fff\");\r\n         * series.slices.template.strokeWidth = 2;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"series\": [{\r\n         *     // ...\r\n         *     \"slices\": {\r\n         *       \"stroke\": \"#fff\",\r\n         *       \"strokeWidth\": 2\r\n         *     }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/list-templates/} for more information about list templates\r\n         * @return Slices\r\n         */\r\n        get: function () {\r\n            if (!this._slices) {\r\n                var slice = this.createSlice();\r\n                slice.applyOnClones = true;\r\n                this._disposers.push(slice);\r\n                this.initSlice(slice);\r\n                this._slices = new ListTemplate(slice);\r\n                this._disposers.push(new ListDisposer(this._slices));\r\n            }\r\n            return this._slices;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PercentSeries.prototype, \"ticks\", {\r\n        /**\r\n         * A list of tick elements for the series. Ticks connect slice to its label.\r\n         *\r\n         * Use its `template` to configure look and behavior of the ticks. E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * series.ticks.template.strokeWidth = 2;\r\n         * ```\r\n         * ```JavaScript\r\n         * series.ticks.template.strokeWidth = 2;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"series\": [{\r\n         *     // ...\r\n         *     \"ticks\": {\r\n         *       \"strokeWidth\": 2\r\n         *     }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/list-templates/} for more information about list templates\r\n         * @return Ticks\r\n         */\r\n        get: function () {\r\n            if (!this._ticks) {\r\n                var tick = this.createTick();\r\n                tick.applyOnClones = true;\r\n                this._disposers.push(tick);\r\n                this.initTick(tick);\r\n                this._ticks = new ListTemplate(tick);\r\n                this._disposers.push(new ListDisposer(this._ticks));\r\n            }\r\n            return this._ticks;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PercentSeries.prototype, \"labels\", {\r\n        /**\r\n         * A list of slice label elements for the series.\r\n         *\r\n         * Use its `template` to configure look and behavior of the labels. E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * series.labels.template.fill = am4core.color(\"#c00\");\r\n         * series.labels.template.fontSize = 20;\r\n         * ```\r\n         * ```JavaScript\r\n         * series.labels.template.fill = am4core.color(\"#c00\");\r\n         * series.labels.template.fontSize = 20;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"series\": [{\r\n         *     // ...\r\n         *     \"labels\": {\r\n         *       \"stroke\": \"#c00\",\r\n         *       \"fontSize\": 20\r\n         *     }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/list-templates/} for more information about list templates\r\n         * @return Labels\r\n         */\r\n        get: function () {\r\n            if (!this._labels) {\r\n                var label = this.createLabel();\r\n                label.applyOnClones = true;\r\n                this._disposers.push(label);\r\n                this.initLabel(label);\r\n                this._labels = new ListTemplate(label);\r\n                this._disposers.push(new ListDisposer(this._labels));\r\n            }\r\n            return this._labels;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    PercentSeries.prototype.createDataItem = function () {\r\n        return new PercentSeriesDataItem();\r\n    };\r\n    /**\r\n     * Creates and returns a new slice element.\r\n     *\r\n     * @param sliceType  Type of the slice element\r\n     * @return Slice\r\n     */\r\n    PercentSeries.prototype.initSlice = function (slice) {\r\n    };\r\n    PercentSeries.prototype.initLabel = function (label) {\r\n        label.text = \"{category}: {value.percent.formatNumber('#.0p')}\";\r\n        label.isMeasured = false;\r\n        label.padding(5, 5, 5, 5);\r\n    };\r\n    PercentSeries.prototype.initTick = function (label) {\r\n    };\r\n    /**\r\n     * Validates (processes) data items.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    PercentSeries.prototype.validateDataItems = function () {\r\n        this.colors.reset();\r\n        if (this.patterns) {\r\n            this.patterns.reset();\r\n        }\r\n        _super.prototype.validateDataItems.call(this);\r\n    };\r\n    /**\r\n     * Validates data item's element, effectively redrawing it.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    PercentSeries.prototype.validateDataElement = function (dataItem) {\r\n        var slice = dataItem.slice;\r\n        if (slice) {\r\n            if (slice.fill == undefined) {\r\n                if (this.patterns) {\r\n                    if (!$type.hasValue(slice.stroke)) {\r\n                        slice.stroke = this.colors.next();\r\n                    }\r\n                    slice.fill = this.patterns.next();\r\n                    if ($type.hasValue(slice.fillOpacity)) {\r\n                        slice.fill.backgroundOpacity = slice.fillOpacity;\r\n                    }\r\n                    if (slice.stroke instanceof Color) {\r\n                        slice.fill.stroke = slice.stroke;\r\n                        slice.fill.fill = slice.stroke;\r\n                    }\r\n                }\r\n                else {\r\n                    slice.fill = this.colors.next();\r\n                }\r\n            }\r\n            else {\r\n                this.colors.currentStep += this.colors.step;\r\n            }\r\n            if (slice.stroke == undefined) {\r\n                slice.stroke = slice.fill;\r\n            }\r\n        }\r\n        // do this at the end, otherwise bullets won't be positioned properly\r\n        _super.prototype.validateDataElement.call(this, dataItem);\r\n        if (slice) {\r\n            dataItem.bullets.each(function (key, bullet) {\r\n                if (bullet.fill == undefined) {\r\n                    bullet.fill = slice.fill;\r\n                }\r\n                if (bullet.stroke == undefined) {\r\n                    bullet.stroke = slice.stroke;\r\n                }\r\n            });\r\n        }\r\n        this.updateLegendValue(dataItem);\r\n    };\r\n    /**\r\n     * Validates (processes) data.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    PercentSeries.prototype.validateData = function () {\r\n        _super.prototype.validateData.call(this);\r\n        if (this.chart) {\r\n            this.chart.feedLegend();\r\n        }\r\n    };\r\n    /**\r\n     * Arranges slice labels according to position settings.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItems  Data items\r\n     */\r\n    PercentSeries.prototype.arrangeLabels = function (dataItems) {\r\n        for (var i = 0, len = dataItems.length; i < len; i++) {\r\n            var dataItem = dataItems[i];\r\n            var label = dataItem.label;\r\n            if (label) {\r\n                if (label.invalid) {\r\n                    label.validate();\r\n                }\r\n                var lh = label.measuredHeight;\r\n                if (!label.visible) {\r\n                    lh = 0;\r\n                }\r\n                if (label.pixelY - lh / 2 < -this.maxHeight / 2) {\r\n                    label.y = -this.maxHeight / 2 + lh / 2;\r\n                }\r\n                var nextLabel = this.getNextLabel(i + 1, dataItems);\r\n                var bottom = label.pixelY + lh / 2;\r\n                if (nextLabel) {\r\n                    if (nextLabel.invalid) {\r\n                        nextLabel.validate();\r\n                    }\r\n                    var nextLabelHeight = nextLabel.measuredHeight;\r\n                    if (!nextLabel.visible) {\r\n                        nextLabelHeight = 0;\r\n                    }\r\n                    var nextLabelY = nextLabel.pixelY;\r\n                    if (nextLabelY == null) {\r\n                        nextLabelY = 0;\r\n                    }\r\n                    if (nextLabelY - nextLabelHeight / 2 < bottom) {\r\n                        nextLabel.y = bottom + nextLabelHeight / 2;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    PercentSeries.prototype.arrangeLabels2 = function (dataItems) {\r\n        var previousTop = this.maxHeight / 2;\r\n        for (var i = dataItems.length - 1; i >= 0; i--) {\r\n            var dataItem = dataItems[i];\r\n            var label = dataItem.label;\r\n            if (label) {\r\n                if (label.invalid) {\r\n                    label.validate();\r\n                }\r\n                var lh = label.measuredHeight;\r\n                if (!label.visible) {\r\n                    lh = 0;\r\n                }\r\n                //if (i == dataItems.length - 1) {\r\n                //previousTop += lh / 2;\r\n                //}\r\n                if (label.pixelY + lh / 2 > previousTop) {\r\n                    label.y = previousTop - lh / 2;\r\n                    previousTop = label.y - lh / 2;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the next label according to `index`.\r\n     *\r\n     * @param index      Current index\r\n     * @param dataItems  Data items\r\n     * @return Label element\r\n     */\r\n    PercentSeries.prototype.getNextLabel = function (index, dataItems) {\r\n        if (dataItems.length >= index) {\r\n            var nextDataItem = dataItems[index];\r\n            if (nextDataItem) {\r\n                if (nextDataItem.label) {\r\n                    if (nextDataItem.visible) {\r\n                        return nextDataItem.label;\r\n                    }\r\n                    else {\r\n                        return this.getNextLabel(index + 1, dataItems);\r\n                    }\r\n                }\r\n                else {\r\n                    return this.getNextLabel(index + 1, dataItems);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(PercentSeries.prototype, \"colors\", {\r\n        /**\r\n         * @return Color set\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"colors\");\r\n        },\r\n        /**\r\n         * A color set to be used for slices.\r\n         *\r\n         * For each new subsequent slice, the chart will assign the next color in\r\n         * this set.\r\n         *\r\n         * @param value  Color set\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"colors\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PercentSeries.prototype, \"patterns\", {\r\n        /**\r\n         * @return Pattern set\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"patterns\");\r\n        },\r\n        /**\r\n         * A [[PatternSet]] to use when creating patterned fills for slices.\r\n         *\r\n         * @since 4.7.5\r\n         * @param value  Pattern set\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"patterns\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Binds related legend data item's visual settings to this series' visual\r\n     * settings.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param marker    Container\r\n     * @param dataItem  Data item\r\n     */\r\n    PercentSeries.prototype.createLegendMarker = function (marker, dataItem) {\r\n        $iter.each(marker.children.iterator(), function (child) {\r\n            var slice = dataItem.slice;\r\n            child.defaultState.properties.fill = slice.fill;\r\n            child.defaultState.properties.stroke = slice.stroke;\r\n            child.defaultState.properties.fillOpacity = slice.fillOpacity;\r\n            child.defaultState.properties.strokeOpacity = slice.strokeOpacity;\r\n            child.fill = slice.fill;\r\n            child.stroke = slice.stroke;\r\n            child.fillOpacity = slice.fillOpacity;\r\n            child.strokeOpacity = slice.strokeOpacity;\r\n            if (child.fill == undefined) {\r\n                child.__disabled = true;\r\n            }\r\n            var legendDataItem = marker.dataItem;\r\n            legendDataItem.color = slice.fill;\r\n            legendDataItem.colorOrig = slice.fill;\r\n            child.addDisposer(slice.events.on(\"propertychanged\", function (ev) {\r\n                if (ev.property == \"fill\") {\r\n                    child.__disabled = false;\r\n                    if (!child.isActive) {\r\n                        child.fill = slice.fill;\r\n                    }\r\n                    child.defaultState.properties.fill = slice.fill;\r\n                    legendDataItem.color = slice.fill;\r\n                    legendDataItem.colorOrig = slice.fill;\r\n                }\r\n                if (ev.property == \"stroke\") {\r\n                    if (!child.isActive) {\r\n                        child.stroke = slice.stroke;\r\n                    }\r\n                    child.defaultState.properties.stroke = slice.stroke;\r\n                }\r\n                if (ev.property == \"strokeOpacity\") {\r\n                    if (!child.isActive) {\r\n                        child.strokeOpacity = slice.strokeOpacity;\r\n                    }\r\n                    child.defaultState.properties.strokeOpacity = slice.strokeOpacity;\r\n                }\r\n            }, undefined, false));\r\n        });\r\n    };\r\n    /**\r\n     * Repositions bullets when slice's size changes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event  Event\r\n     */\r\n    PercentSeries.prototype.handleSliceScale = function (event) {\r\n        var _this = this;\r\n        var slice = event.target;\r\n        var dataItem = slice.dataItem;\r\n        if (dataItem && dataItem.bullets) {\r\n            $iter.each(dataItem.bullets.iterator(), function (a) {\r\n                var value = a[1];\r\n                _this.positionBullet(value);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Repositions bullet and labels when slice moves.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event  Event\r\n     */\r\n    PercentSeries.prototype.handleSliceMove = function (event) {\r\n    };\r\n    /**\r\n     * Copies all properties from another instance of [[PercentSeries]].\r\n     *\r\n     * @param source  Source series\r\n     */\r\n    PercentSeries.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.slices.template.copyFrom(source.slices.template);\r\n        this.labels.template.copyFrom(source.labels.template);\r\n        this.ticks.template.copyFrom(source.ticks.template);\r\n        this.colors = source.colors.clone();\r\n    };\r\n    Object.defineProperty(PercentSeries.prototype, \"alignLabels\", {\r\n        /**\r\n         * @return Align labels?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"alignLabels\");\r\n        },\r\n        /**\r\n         * Align labels into nice vertical columns?\r\n         *\r\n         * This will ensure that labels never overlap with each other.\r\n         *\r\n         * Arranging labels into columns makes them more readble, and better user\r\n         * experience.\r\n         *\r\n         * If set to `false` labels will be positioned at `label.radius` distance,\r\n         * and may, in some cases, overlap.\r\n         *\r\n         * @default true\r\n         * @param value  Align labels?\r\n         */\r\n        set: function (value) {\r\n            this.setAlignLabels(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    PercentSeries.prototype.setAlignLabels = function (value) {\r\n        this.setPropertyValue(\"alignLabels\", value, true);\r\n    };\r\n    Object.defineProperty(PercentSeries.prototype, \"ignoreZeroValues\", {\r\n        /**\r\n         * @return Ignore zero values\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"ignoreZeroValues\");\r\n        },\r\n        /**\r\n         * If set to `true` the chart will not show slices with zero values.\r\n         *\r\n         * @default false\r\n         * @since 4.7.9\r\n         * @param  value  Ignore zero values\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"ignoreZeroValues\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates corresponding legend data item with current values.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    PercentSeries.prototype.updateLegendValue = function (dataItem) {\r\n        if (dataItem) {\r\n            var legendDataItem = dataItem.legendDataItem;\r\n            var legendSettings = dataItem.legendSettings;\r\n            if (legendDataItem && legendSettings) {\r\n                if (legendSettings) {\r\n                    if (legendSettings.labelText) {\r\n                        legendDataItem.label.text = legendSettings.labelText;\r\n                    }\r\n                    if (legendSettings.itemLabelText) {\r\n                        legendDataItem.label.text = legendSettings.itemLabelText;\r\n                    }\r\n                    if (legendSettings.valueText) {\r\n                        legendDataItem.valueLabel.text = legendSettings.valueText;\r\n                    }\r\n                    if (legendSettings.itemValueText) {\r\n                        legendDataItem.valueLabel.text = legendSettings.itemValueText;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return PercentSeries;\r\n}(Series));\r\nexport { PercentSeries };\r\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PercentSeries\"] = PercentSeries;\r\nregistry.registeredClasses[\"PercentSeriesDataItem\"] = PercentSeriesDataItem;\r\n/**\r\n * Add default responsive rules\r\n */\r\n/**\r\n * Disable labels and ticks.\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.maybeXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof PercentSeries) {\r\n            var state = target.states.create(stateId);\r\n            var labelState = target.labels.template.states.create(stateId);\r\n            labelState.properties.disabled = true;\r\n            var tickState = target.ticks.template.states.create(stateId);\r\n            tickState.properties.disabled = true;\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}