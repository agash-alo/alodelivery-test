{"ast":null,"code":"/**\r\n * Axis Label module\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Label } from \"../../core/elements/Label\";\nimport { registry } from \"../../core/Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Use to create labels on Axis.\r\n *\r\n * @see {@link IAxisLabelEvents} for a list of available events\r\n * @see {@link IAxisLabelAdapters} for a list of available Adapters\r\n * @important\r\n */\nvar AxisLabel = /** @class */function (_super) {\n  __extends(AxisLabel, _super);\n  /**\r\n   * Constructor\r\n   */\n  function AxisLabel() {\n    var _this = _super.call(this) || this;\n    _this.className = \"AxisLabel\";\n    _this.isMeasured = false;\n    _this.padding(10, 10, 10, 10);\n    _this.location = 0.5;\n    //this.nonScaling = true; // not good for perf\n    _this.applyTheme();\n    return _this;\n  }\n  Object.defineProperty(AxisLabel.prototype, \"location\", {\n    /**\r\n     * @return Location (0-1)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"location\");\n    },\n    /**\r\n     * Relative location of the label. (0-1)\r\n     *\r\n     * @param value  Location (0-1)\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"location\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisLabel.prototype, \"inside\", {\n    /**\r\n     * Returns if label is set to be drawn inside axis.\r\n     *\r\n     * @return Inside?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"inside\");\n    },\n    /**\r\n     * Sets if label should be drawn inside axis.\r\n     *\r\n     * @param value  Inside?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"inside\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * @ignore\r\n   */\n  AxisLabel.prototype.setDisabled = function (value) {\n    var changed = _super.prototype.setDisabled.call(this, value);\n    if (this.axis) {\n      this.axis.invalidateDataItems();\n    }\n    return changed;\n  };\n  return AxisLabel;\n}(Label);\nexport { AxisLabel };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"AxisLabel\"] = AxisLabel;","map":{"version":3,"names":["__extends","Label","registry","AxisLabel","_super","_this","call","className","isMeasured","padding","location","applyTheme","Object","defineProperty","prototype","get","getPropertyValue","set","value","setPropertyValue","enumerable","configurable","setDisabled","changed","axis","invalidateDataItems","registeredClasses"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLabel.js"],"sourcesContent":["/**\r\n * Axis Label module\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { registry } from \"../../core/Registry\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Use to create labels on Axis.\r\n *\r\n * @see {@link IAxisLabelEvents} for a list of available events\r\n * @see {@link IAxisLabelAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar AxisLabel = /** @class */ (function (_super) {\r\n    __extends(AxisLabel, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function AxisLabel() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"AxisLabel\";\r\n        _this.isMeasured = false;\r\n        _this.padding(10, 10, 10, 10);\r\n        _this.location = 0.5;\r\n        //this.nonScaling = true; // not good for perf\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(AxisLabel.prototype, \"location\", {\r\n        /**\r\n         * @return Location (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"location\");\r\n        },\r\n        /**\r\n         * Relative location of the label. (0-1)\r\n         *\r\n         * @param value  Location (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"location\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisLabel.prototype, \"inside\", {\r\n        /**\r\n         * Returns if label is set to be drawn inside axis.\r\n         *\r\n         * @return Inside?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"inside\");\r\n        },\r\n        /**\r\n         * Sets if label should be drawn inside axis.\r\n         *\r\n         * @param value  Inside?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"inside\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    AxisLabel.prototype.setDisabled = function (value) {\r\n        var changed = _super.prototype.setDisabled.call(this, value);\r\n        if (this.axis) {\r\n            this.axis.invalidateDataItems();\r\n        }\r\n        return changed;\r\n    };\r\n    return AxisLabel;\r\n}(Label));\r\nexport { AxisLabel };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisLabel\"] = AxisLabel;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,KAAK,QAAQ,2BAA2B;AACjD,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,SAAS,GAAG,aAAe,UAAUC,MAAM,EAAE;EAC7CJ,SAAS,CAACG,SAAS,EAAEC,MAAM,CAAC;EAC5B;AACJ;AACA;EACI,SAASD,SAASA,CAAA,EAAG;IACjB,IAAIE,KAAK,GAAGD,MAAM,CAACE,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI;IACrCD,KAAK,CAACE,SAAS,GAAG,WAAW;IAC7BF,KAAK,CAACG,UAAU,GAAG,KAAK;IACxBH,KAAK,CAACI,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAC7BJ,KAAK,CAACK,QAAQ,GAAG,GAAG;IACpB;IACAL,KAAK,CAACM,UAAU,CAAC,CAAC;IAClB,OAAON,KAAK;EAChB;EACAO,MAAM,CAACC,cAAc,CAACV,SAAS,CAACW,SAAS,EAAE,UAAU,EAAE;IACnD;AACR;AACA;IACQC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACC,gBAAgB,CAAC,UAAU,CAAC;IAC5C,CAAC;IACD;AACR;AACA;AACA;AACA;IACQC,GAAG,EAAE,SAAAA,CAAUC,KAAK,EAAE;MAClB,IAAI,CAACC,gBAAgB,CAAC,UAAU,EAAED,KAAK,EAAE,IAAI,CAAC;IAClD,CAAC;IACDE,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFT,MAAM,CAACC,cAAc,CAACV,SAAS,CAACW,SAAS,EAAE,QAAQ,EAAE;IACjD;AACR;AACA;AACA;AACA;IACQC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACC,gBAAgB,CAAC,QAAQ,CAAC;IAC1C,CAAC;IACD;AACR;AACA;AACA;AACA;IACQC,GAAG,EAAE,SAAAA,CAAUC,KAAK,EAAE;MAClB,IAAI,CAACC,gBAAgB,CAAC,QAAQ,EAAED,KAAK,EAAE,IAAI,CAAC;IAChD,CAAC;IACDE,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF;AACJ;AACA;EACIlB,SAAS,CAACW,SAAS,CAACQ,WAAW,GAAG,UAAUJ,KAAK,EAAE;IAC/C,IAAIK,OAAO,GAAGnB,MAAM,CAACU,SAAS,CAACQ,WAAW,CAAChB,IAAI,CAAC,IAAI,EAAEY,KAAK,CAAC;IAC5D,IAAI,IAAI,CAACM,IAAI,EAAE;MACX,IAAI,CAACA,IAAI,CAACC,mBAAmB,CAAC,CAAC;IACnC;IACA,OAAOF,OAAO;EAClB,CAAC;EACD,OAAOpB,SAAS;AACpB,CAAC,CAACF,KAAK,CAAE;AACT,SAASE,SAAS;AAClB;AACA;AACA;AACA;AACA;AACA;AACAD,QAAQ,CAACwB,iBAAiB,CAAC,WAAW,CAAC,GAAGvB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}