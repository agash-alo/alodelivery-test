{"ast":null,"code":"import { Router } from '@angular/router';\nimport 'rxjs/add/operator/filter';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AccordionDirective {\n  closeOtherLinks(selectedLink) {\n    this.navlinks.forEach(link => {\n      if (link !== selectedLink) {\n        link.selected = false;\n      }\n    });\n  }\n  addLink(link) {\n    this.navlinks.push(link);\n  }\n  removeGroup(link) {\n    const index = this.navlinks.indexOf(link);\n    if (index !== -1) {\n      this.navlinks.splice(index, 1);\n    }\n  }\n  checkOpenLinks() {\n    this.navlinks.forEach(link => {\n      if (link.group) {\n        const routeUrl = this.router.url;\n        const currentUrl = routeUrl.split('/');\n        if (currentUrl.indexOf(link.group) > 0) {\n          link.selected = true;\n          this.closeOtherLinks(link);\n        }\n      }\n    });\n  }\n  ngAfterContentChecked() {}\n  constructor(router) {\n    this.router = router;\n    this.navlinks = [];\n    setTimeout(() => this.checkOpenLinks());\n  }\n  static #_ = this.ɵfac = function AccordionDirective_Factory(t) {\n    return new (t || AccordionDirective)(i0.ɵɵdirectiveInject(i1.Router));\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: AccordionDirective,\n    selectors: [[\"\", \"appAccordion\", \"\"]]\n  });\n}","map":{"version":3,"names":["Router","AccordionDirective","closeOtherLinks","selectedLink","navlinks","forEach","link","selected","addLink","push","removeGroup","index","indexOf","splice","checkOpenLinks","group","routeUrl","router","url","currentUrl","split","ngAfterContentChecked","constructor","setTimeout","_","i0","ɵɵdirectiveInject","i1","_2","selectors"],"sources":["D:\\alodelivery test\\src\\app\\shared\\accordion\\accordion.directive.ts"],"sourcesContent":["import {\r\n  Directive,\r\n  AfterContentChecked\r\n} from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport 'rxjs/add/operator/filter';\r\n\r\nimport { AccordionLinkDirective } from './accordionlink.directive';\r\n\r\n@Directive({\r\n  selector: '[appAccordion]'\r\n})\r\nexport class AccordionDirective implements AfterContentChecked {\r\n  protected navlinks: Array<AccordionLinkDirective> = [];\r\n\r\n  closeOtherLinks(selectedLink: AccordionLinkDirective): void {\r\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\r\n      if (link !== selectedLink) {\r\n        link.selected = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  addLink(link: AccordionLinkDirective): void {\r\n    this.navlinks.push(link);\r\n  }\r\n\r\n  removeGroup(link: AccordionLinkDirective): void {\r\n    const index = this.navlinks.indexOf(link);\r\n    if (index !== -1) {\r\n      this.navlinks.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  checkOpenLinks() {\r\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\r\n      if (link.group) {\r\n        const routeUrl = this.router.url;\r\n        const currentUrl = routeUrl.split('/');\r\n        if (currentUrl.indexOf(link.group) > 0) {\r\n          link.selected = true;\r\n          this.closeOtherLinks(link);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    \r\n  }\r\n\r\n  constructor(private router: Router) {\r\n    setTimeout(() => this.checkOpenLinks());\r\n  }\r\n}\r\n"],"mappings":"AAIA,SAASA,MAAM,QAAuB,iBAAiB;AACvD,OAAO,0BAA0B;;;AAOjC,OAAM,MAAOC,kBAAkB;EAG7BC,eAAeA,CAACC,YAAoC;IAClD,IAAI,CAACC,QAAQ,CAACC,OAAO,CAAEC,IAA4B,IAAI;MACrD,IAAIA,IAAI,KAAKH,YAAY,EAAE;QACzBG,IAAI,CAACC,QAAQ,GAAG,KAAK;;IAEzB,CAAC,CAAC;EACJ;EAEAC,OAAOA,CAACF,IAA4B;IAClC,IAAI,CAACF,QAAQ,CAACK,IAAI,CAACH,IAAI,CAAC;EAC1B;EAEAI,WAAWA,CAACJ,IAA4B;IACtC,MAAMK,KAAK,GAAG,IAAI,CAACP,QAAQ,CAACQ,OAAO,CAACN,IAAI,CAAC;IACzC,IAAIK,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAACP,QAAQ,CAACS,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;;EAElC;EAEAG,cAAcA,CAAA;IACZ,IAAI,CAACV,QAAQ,CAACC,OAAO,CAAEC,IAA4B,IAAI;MACrD,IAAIA,IAAI,CAACS,KAAK,EAAE;QACd,MAAMC,QAAQ,GAAG,IAAI,CAACC,MAAM,CAACC,GAAG;QAChC,MAAMC,UAAU,GAAGH,QAAQ,CAACI,KAAK,CAAC,GAAG,CAAC;QACtC,IAAID,UAAU,CAACP,OAAO,CAACN,IAAI,CAACS,KAAK,CAAC,GAAG,CAAC,EAAE;UACtCT,IAAI,CAACC,QAAQ,GAAG,IAAI;UACpB,IAAI,CAACL,eAAe,CAACI,IAAI,CAAC;;;IAGhC,CAAC,CAAC;EACJ;EAEAe,qBAAqBA,CAAA,GAErB;EAEAC,YAAoBL,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IAtChB,KAAAb,QAAQ,GAAkC,EAAE;IAuCpDmB,UAAU,CAAC,MAAM,IAAI,CAACT,cAAc,EAAE,CAAC;EACzC;EAAC,QAAAU,CAAA,G;qBAzCUvB,kBAAkB,EAAAwB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAA3B,MAAA;EAAA;EAAA,QAAA4B,EAAA,G;UAAlB3B,kBAAkB;IAAA4B,SAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}