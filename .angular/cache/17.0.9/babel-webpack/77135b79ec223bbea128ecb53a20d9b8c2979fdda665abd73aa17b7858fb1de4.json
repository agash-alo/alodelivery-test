{"ast":null,"code":"/**\r\n * Cursor for XY chart\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Cursor } from \"./Cursor\";\nimport { Sprite } from \"../../core/Sprite\";\nimport { MutableValueDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\nimport { ValueAxis } from \"../axes/ValueAxis\";\nimport { DateAxis } from \"../axes/DateAxis\";\nimport { XYSeries } from \"../series/XYSeries\";\nimport { registry } from \"../../core/Registry\";\nimport { color } from \"../../core/utils/Color\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\nimport { getInteraction } from \"../../core/interaction/Interaction\";\nimport { MouseCursorStyle } from \"../../core/interaction/Mouse\";\nimport * as $math from \"../../core/utils/Math\";\nimport * as $utils from \"../../core/utils/Utils\";\nimport * as $type from \"../../core/utils/Type\";\nimport * as $array from \"../../core/utils/Array\";\nimport * as $path from \"../../core/rendering/Path\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * A cursor used on [[XYChart]].\r\n *\r\n * @see {@link IXYCursorEvents} for a list of available events\r\n * @see {@link IXYCursorAdapters} for a list of available Adapters\r\n * @todo Add description, examples\r\n */\nvar XYCursor = /** @class */function (_super) {\n  __extends(XYCursor, _super);\n  /**\r\n   * Constructor\r\n   */\n  function XYCursor() {\n    var _this =\n    // Init\n    _super.call(this) || this;\n    /**\r\n     * Vertical cursor line element.\r\n     */\n    _this._lineX = new MutableValueDisposer();\n    /**\r\n     * Horizontal cursor line element.\r\n     */\n    _this._lineY = new MutableValueDisposer();\n    /**\r\n     * Horizontal [[Axis]].\r\n     */\n    _this._xAxis = new MutableValueDisposer();\n    /**\r\n     * Vertical [[Axis]].\r\n     */\n    _this._yAxis = new MutableValueDisposer();\n    _this._snapToDisposers = [];\n    _this.className = \"XYCursor\";\n    // Defaults\n    _this.behavior = \"zoomX\";\n    _this.maxPanOut = 0.1;\n    var interfaceColors = new InterfaceColorSet();\n    _this.snapOnPan = true;\n    // Create selection element\n    var selection = _this.createChild(Sprite);\n    selection.shouldClone = false;\n    selection.fillOpacity = 0.2;\n    selection.fill = interfaceColors.getFor(\"alternativeBackground\");\n    selection.isMeasured = false;\n    selection.visible = false;\n    selection.interactionsEnabled = false;\n    _this.selection = selection;\n    _this._disposers.push(_this.selection);\n    // Create cursor's vertical line\n    var lineX = _this.createChild(Sprite);\n    lineX.shouldClone = false;\n    lineX.stroke = interfaceColors.getFor(\"grid\");\n    lineX.fill = color();\n    lineX.strokeDasharray = \"3,3\";\n    lineX.isMeasured = false;\n    lineX.strokeOpacity = 0.4;\n    lineX.interactionsEnabled = false;\n    lineX.y = 0; // important\n    _this.lineX = lineX;\n    _this._disposers.push(_this.lineX);\n    // Create cursor's horizontal line\n    var lineY = _this.createChild(Sprite);\n    lineY.shouldClone = false;\n    lineY.stroke = interfaceColors.getFor(\"grid\");\n    lineY.fill = color();\n    lineY.strokeDasharray = \"3,3\";\n    lineY.isMeasured = false;\n    lineY.strokeOpacity = 0.4;\n    lineY.interactionsEnabled = false;\n    lineY.x = 0; // important\n    _this.lineY = lineY;\n    _this._disposers.push(_this.lineY);\n    // Add handler for size changes\n    _this.events.on(\"sizechanged\", _this.updateSize, _this, false);\n    _this._disposers.push(_this._lineX);\n    _this._disposers.push(_this._lineY);\n    _this._disposers.push(_this._xAxis);\n    _this._disposers.push(_this._yAxis);\n    _this.mask = _this;\n    _this.hideSeriesTooltipsOnSelection = true;\n    // Apply theme\n    _this.applyTheme();\n    return _this;\n  }\n  /**\r\n   * Updates cursor element dimensions on size change.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  XYCursor.prototype.updateSize = function () {\n    if (this.lineX) {\n      this.lineX.path = $path.moveTo({\n        x: 0,\n        y: 0\n      }) + $path.lineTo({\n        x: 0,\n        y: this.innerHeight\n      });\n    }\n    if (this.lineY) {\n      this.lineY.path = $path.moveTo({\n        x: 0,\n        y: 0\n      }) + $path.lineTo({\n        x: this.innerWidth,\n        y: 0\n      });\n    }\n  };\n  /**\r\n   * Updates selection dimensions on size change.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  XYCursor.prototype.updateSelection = function () {\n    if (this._usesSelection) {\n      var downPoint = this.downPoint;\n      var behavior = this.behavior;\n      if (downPoint) {\n        var point = this.point;\n        if (this.lineX) {\n          point.x = this.lineX.pixelX;\n        }\n        if (this.lineY) {\n          point.y = this.lineY.pixelY;\n        }\n        var selection = this.selection;\n        var x = Math.min(point.x, downPoint.x);\n        var y = Math.min(point.y, downPoint.y);\n        var w = $math.round(Math.abs(downPoint.x - point.x), this._positionPrecision);\n        var h = $math.round(Math.abs(downPoint.y - point.y), this._positionPrecision);\n        switch (behavior) {\n          case \"zoomX\":\n            y = 0;\n            h = this.pixelHeight;\n            break;\n          case \"zoomY\":\n            x = 0;\n            w = this.pixelWidth;\n            break;\n          case \"selectX\":\n            y = 0;\n            h = this.pixelHeight;\n            break;\n          case \"selectY\":\n            x = 0;\n            w = this.pixelWidth;\n            break;\n        }\n        selection.x = x;\n        selection.y = y;\n        selection.path = $path.rectangle(w, h);\n        selection.validatePosition(); // otherwise Edge shoes some incorrect size rectangle\n      } else {\n        if (this._generalBehavior != \"select\") {\n          this.selection.hide();\n        }\n      }\n    }\n  };\n  /**\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  XYCursor.prototype.fixPoint = function (point) {\n    point.x = Math.max(0, point.x);\n    point.y = Math.max(0, point.y);\n    point.x = Math.min(this.pixelWidth, point.x);\n    point.y = Math.min(this.pixelHeight, point.y);\n    return point;\n  };\n  /**\r\n   * Places the cursor at specific point.\r\n   *\r\n   * @param point Point to place cursor at\r\n   */\n  XYCursor.prototype.triggerMoveReal = function (point, force) {\n    _super.prototype.triggerMoveReal.call(this, point, force);\n    var snapToSeries = this.snapToSeries;\n    if (snapToSeries && !this.downPoint) {\n      if (snapToSeries instanceof XYSeries) {\n        if (snapToSeries.isHidden) {\n          this.updateLinePositions(point);\n        }\n      } else {\n        var allHidden_1 = true;\n        $array.each(snapToSeries, function (s) {\n          if (!s.isHidden) {\n            allHidden_1 = false;\n          }\n        });\n        if (allHidden_1) {\n          this.updateLinePositions(point);\n        }\n      }\n    } else {\n      this.updateLinePositions(point);\n    }\n    if (this.downPoint && $math.getDistance(this.downPoint, point) > 3) {\n      if (this._generalBehavior == \"pan\") {\n        this.getPanningRanges();\n        this.dispatch(\"panning\");\n      }\n    }\n  };\n  /**\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  XYCursor.prototype.updateLinePositions = function (point) {\n    point = this.fixPoint(this.point);\n    if (this.lineX && this.lineX.visible && !this.xAxis) {\n      this.lineX.x = point.x;\n    }\n    if (this.lineY && this.lineY.visible && !this.yAxis) {\n      this.lineY.y = point.y;\n    }\n    this.updateSelection();\n  };\n  XYCursor.prototype.triggerDownReal = function (point) {\n    if (this.visible && !this.isHiding) {\n      if (this._generalBehavior == \"select\") {\n        this.selection.parent = this.parent;\n      }\n      if (this.fitsToBounds(point)) {\n        this.downPoint = {\n          x: point.x,\n          y: point.y\n        };\n        this.updatePoint(point);\n        //this.updateLinePositions(point); // otherwise lines won't be in correct position and touch won't work fine\n        this.point.x = this.downPoint.x;\n        this.point.y = this.downPoint.y;\n        var selection = this.selection;\n        var selectionX = this.downPoint.x;\n        var selectionY = this.downPoint.y;\n        if (this._usesSelection) {\n          selection.x = selectionX;\n          selection.y = selectionY;\n          selection.path = \"\";\n          selection.show();\n        }\n        _super.prototype.triggerDownReal.call(this, point);\n      } else {\n        this.downPoint = undefined;\n      }\n    } else {\n      this.downPoint = undefined;\n    }\n  };\n  /**\r\n   * Updates the coordinates of where pointer down event occurred\r\n   * (was pressed).\r\n   */\n  XYCursor.prototype.updatePoint = function (point) {\n    if (this.lineX) {\n      point.x = this.lineX.pixelX;\n    }\n    if (this.lineY) {\n      point.y = this.lineY.pixelY;\n    }\n  };\n  /**\r\n   * Handle action when cursor is released, which should perform an operation\r\n   * based on its `behavior`, like zoom.\r\n   *\r\n   * @param  point  Release point\r\n   */\n  XYCursor.prototype.triggerUpReal = function (point) {\n    if (this.hasMoved()) {\n      if (this.downPoint) {\n        this.upPoint = point;\n        this.updatePoint(this.upPoint);\n        if (this._generalBehavior != \"pan\") {\n          this.getRanges();\n        }\n        if (this._generalBehavior != \"select\") {\n          this.selection.hide();\n        }\n        _super.prototype.triggerUpReal.call(this, point);\n      }\n    } else {\n      if (this._generalBehavior != \"select\") {\n        this.selection.hide(0);\n      } else {\n        this.xRange = undefined;\n        this.yRange = undefined;\n        this.dispatchImmediately(\"selectended\");\n      }\n      // reset cursor style, just in case\n      if (this._generalBehavior == \"pan\") {\n        var interaction = getInteraction();\n        interaction.setGlobalStyle(MouseCursorStyle.default);\n      }\n      this.dispatchImmediately(\"behaviorcanceled\");\n    }\n    this.downPoint = undefined;\n    this.dispatch(\"cursorpositionchanged\");\n  };\n  /**\r\n   * Calculates if the cursor has moved enough based on its `behavior`.\r\n   *\r\n   * @return Moved?\r\n   */\n  XYCursor.prototype.hasMoved = function () {\n    var distance;\n    if (this.behavior == \"zoomX\" || this.behavior == \"panX\") {\n      distance = $math.getHorizontalDistance(this._upPointOrig, this._downPointOrig);\n    } else if (this.behavior == \"zoomY\" || this.behavior == \"panY\") {\n      distance = $math.getVerticalDistance(this._upPointOrig, this._downPointOrig);\n    } else {\n      distance = $math.getDistance(this._upPointOrig, this._downPointOrig);\n    }\n    return distance > getInteraction().getHitOption(this.interactions, \"hitTolerance\");\n  };\n  /**\r\n   * [getRanges description]\r\n   *\r\n   * @todo Description\r\n   */\n  XYCursor.prototype.getPanningRanges = function () {\n    var startX = $math.round(this.downPoint.x / this.innerWidth, 5);\n    var startY = 1 - $math.round(this.downPoint.y / this.innerHeight, 5);\n    var currentX = $math.round(this.point.x / this.innerWidth, 5);\n    var currentY = 1 - $math.round(this.point.y / this.innerHeight, 5);\n    var deltaX = startX - currentX;\n    var deltaY = startY - currentY;\n    this.xRange = {\n      start: deltaX,\n      end: 1 + deltaX\n    };\n    this.yRange = {\n      start: deltaY,\n      end: 1 + deltaY\n    };\n    if (this.behavior == \"panX\") {\n      this.yRange.start = 0;\n      this.yRange.end = 1;\n    }\n    if (this.behavior == \"panY\") {\n      this.xRange.start = 0;\n      this.xRange.end = 1;\n    }\n  };\n  /**\r\n   * [getRanges description]\r\n   *\r\n   * @todo Description\r\n   */\n  XYCursor.prototype.getRanges = function () {\n    if (this.lineX) {\n      this.upPoint.x = this.lineX.pixelX;\n    }\n    if (this.lineY) {\n      this.upPoint.y = this.lineY.pixelY;\n    }\n    // @todo Is this needed?\n    $utils.used(this.selection);\n    var startX = $math.round(this.downPoint.x / this.innerWidth, 5);\n    var endX = $math.round(this.upPoint.x / this.innerWidth, 5);\n    var startY = 1 - $math.round(this.downPoint.y / this.innerHeight, 5);\n    var endY = 1 - $math.round(this.upPoint.y / this.innerHeight, 5);\n    this.xRange = {\n      start: $math.min(startX, endX),\n      end: $math.max(startX, endX)\n    };\n    this.yRange = {\n      start: $math.min(startY, endY),\n      end: $math.max(startY, endY)\n    };\n  };\n  Object.defineProperty(XYCursor.prototype, \"behavior\", {\n    /**\r\n     * Behavior\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"behavior\");\n    },\n    /**\r\n     * Cursor's behavior when it's moved with pointer down:\r\n     *\r\n     * * `\"zoomX\"` - zooms horizontally.\r\n     * * `\"zoomY\"` - zooms vertically.\r\n     * * `\"zoomXY\"` - zooms both horizontally and vertically.\r\n     * * `\"selectX\"` - selects a range horizontally.\r\n     * * `\"selectY\"` - selects a range vertically.\r\n     * * `\"selectXY\"` - selects a range both horizontally and vertically.\r\n     * * `\"panX\"` - moves (pans) current selection horizontally.\r\n     * * `\"panY\"` - moves (pans) current selection vertically.\r\n     * * `\"panXY\"` - moves (pans) current selection both horizontally and vertically.\r\n     * * `\"none\"` - does nothing with pointer down.\r\n     *\r\n     * E.g. \"zoomXY\" will mean that pressing a mouse (or touching) over plot area\r\n     * and dragging it will start zooming the chart.\r\n     *\r\n     * NOTE: `\"zoomXY\"` acts differently when used on a `DateAxis`.\r\n     * See [this note](https://www.amcharts.com/docs/v4/concepts/chart-cursor/#zoomXY_behavior_and_DateAxis).\r\n     *\r\n     * @param value Bheavior\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"behavior\", value, true);\n      this._usesSelection = false;\n      if (value.indexOf(\"zoom\") != -1) {\n        this._generalBehavior = \"zoom\";\n        this._usesSelection = true;\n      }\n      if (value.indexOf(\"select\") != -1) {\n        this._generalBehavior = \"select\";\n        this._usesSelection = true;\n      }\n      if (value.indexOf(\"pan\") != -1) {\n        this._generalBehavior = \"pan\";\n        this._usesSelection = false;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Determines whether Cursor should prevent default action on move.\r\n   *\r\n   * If cursor's behavior is \"none\", it should not obstruct the page scrolling.\r\n   *\r\n   * @return Prevent default?\r\n   */\n  XYCursor.prototype.shouldPreventGestures = function (touch) {\n    return (!this.interactions.isTouchProtected || !touch) && this.behavior != \"none\";\n  };\n  Object.defineProperty(XYCursor.prototype, \"fullWidthLineX\", {\n    /**\r\n     * @return Full width?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"fullWidthLineX\");\n    },\n    /**\r\n     * Cursor's horizontal line is expanded to take full width of the related\r\n     * Axis' cell/category.\r\n     *\r\n     * NOTE: this setting will work properly if `xAxis` is set and only in case\r\n     * `xAxis` is [[CategoryAxis]] or [[DateAxis]].\r\n     *\r\n     * @param value Full width?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"fullWidthLineX\", value);\n      if (!value) {\n        this.updateSize();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYCursor.prototype, \"fullWidthLineY\", {\n    /**\r\n     * @return Full width?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"fullWidthLineY\");\n    },\n    /**\r\n     * Cursor's vertical line is expanded to take full width of the related\r\n     * Axis' cell/category.\r\n     *\r\n     * NOTE: this setting will work properly if `yAxis` is set and only in case\r\n     * `yAxis` is [[CategoryAxis]] or [[DateAxis]].\r\n     *\r\n     * @param value Full width?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"fullWidthLineY\", value);\n      if (!value) {\n        this.updateSize();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYCursor.prototype, \"hideSeriesTooltipsOnSelection\", {\n    /**\r\n     * @return hide tooltip?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"hideSeriesTooltipsOnSelection\");\n    },\n    /**\r\n     * If set to `true` this will hide series tooltips when selecting with cursor.\r\n     *\r\n     * @since 4.5.15\r\n     * @param  value  hide tooltips?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"hideSeriesTooltipsOnSelection\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYCursor.prototype, \"maxTooltipDistance\", {\n    /**\r\n     * @return Distance\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"maxTooltipDistance\");\n    },\n    /**\r\n     * If set to a numeric value, cursor will display closest series' tooltips\r\n     * plus tooltips from series that are closer to than `maxTooltipDistance` to\r\n     * it.\r\n     *\r\n     * Set it to `-1` to always force one tooltip, even if there are multiple\r\n     * data items in exactly same place.\r\n     *\r\n     * @since 4.7.18\r\n     * @param  value  Distance\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"maxTooltipDistance\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYCursor.prototype, \"maxPanOut\", {\n    /**\r\n     * @return Full width?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"maxPanOut\");\n    },\n    /**\r\n     * If cursor behavior is panX or panY, we allow to pan plot out of it's max bounds for a better user experience.\r\n     * This setting specifies relative value by how much we can pan out the plot\r\n     *\r\n     * @param value\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"maxPanOut\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYCursor.prototype, \"xAxis\", {\n    /**\r\n     * @return X axis\r\n     */\n    get: function () {\n      return this._xAxis.get();\n    },\n    /**\r\n     * A reference to X [[Axis]].\r\n     *\r\n     * An XY cursor can live without `xAxis` set. You set xAxis for cursor when\r\n     * you have axis tooltip enabled and you want cursor line to be at the same\r\n     * position as tooltip.\r\n     *\r\n     * This works with [[CategoryAxis]] and [[DateAxis]] but not with\r\n     * [[ValueAxis]].\r\n     *\r\n     * @todo Description (review)\r\n     * @param axis X axis\r\n     */\n    set: function (axis) {\n      var _this = this;\n      if (this._xAxis.get() != axis) {\n        this._xAxis.set(axis, new MultiDisposer([axis.tooltip.events.on(\"positionchanged\", this.handleXTooltipPosition, this, false), axis.events.on(\"rangechangestarted\", function (event) {\n          _this.hide(0);\n          _this.preventShow = true;\n        }, undefined, false), axis.events.on(\"rangechangeended\", function (event) {\n          _this.preventShow = false;\n          _this.hide(0);\n          _this.dispatch(\"cursorpositionchanged\");\n        }, undefined, false)]));\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYCursor.prototype, \"yAxis\", {\n    /**\r\n     * @return Y Axis\r\n     */\n    get: function () {\n      return this._yAxis.get();\n    },\n    /**\r\n     * A reference to Y [[Axis]].\r\n     *\r\n     * An XY cursor can live without `yAxis` set. You set xAxis for cursor when\r\n     * you have axis tooltip enabled and you want cursor line to be at the same\r\n     * position as tooltip.\r\n     *\r\n     * This works with [[CategoryAxis]] and [[DateAxis]] but not with\r\n     * [[ValueAxis]].\r\n     *\r\n     * @todo Description (review)\r\n     * @param axis Y axis\r\n     */\n    set: function (axis) {\n      var _this = this;\n      if (this._yAxis.get() != axis) {\n        this._yAxis.set(axis, new MultiDisposer([axis.tooltip.events.on(\"positionchanged\", this.handleYTooltipPosition, this, false), axis.events.on(\"rangechangestarted\", function (event) {\n          _this.hide(0);\n          _this.__disabled = true;\n        }, undefined, false), axis.events.on(\"rangechangeended\", function (event) {\n          _this.__disabled = false;\n          _this.hide(0);\n          _this.dispatch(\"cursorpositionchanged\");\n        }, undefined, false)]));\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Updates Cursor's position when axis tooltip changes position.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param event Original Axis event\r\n   */\n  XYCursor.prototype.handleXTooltipPosition = function (event) {\n    var tooltip = this.xAxis.tooltip;\n    var point = $utils.svgPointToSprite({\n      x: tooltip.pixelX,\n      y: tooltip.pixelY\n    }, this);\n    var x = point.x;\n    point.y = 1;\n    if (this.lineX) {\n      this.lineX.x = x;\n      if (!this.fitsToBounds(point)) {\n        this.hide();\n      }\n    }\n    if (this.xAxis && this.fullWidthLineX) {\n      var startPoint = this.xAxis.currentItemStartPoint;\n      var endPoint = this.xAxis.currentItemEndPoint;\n      if (startPoint && endPoint) {\n        this.lineX.x = x;\n        var width = endPoint.x - startPoint.x;\n        this.lineX.path = $path.rectangle(width, this.innerHeight, -width / 2);\n      }\n    }\n  };\n  /**\r\n   * Updates Cursor's position when Y axis changes position or scale.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param event Original Axis event\r\n   */\n  XYCursor.prototype.handleYTooltipPosition = function (event) {\n    var tooltip = this.yAxis.tooltip;\n    var point = $utils.svgPointToSprite({\n      x: tooltip.pixelX,\n      y: tooltip.pixelY\n    }, this);\n    var y = point.y;\n    point.x = 1;\n    if (this.lineY) {\n      this.lineY.y = y;\n      if (!this.fitsToBounds(point)) {\n        this.hide();\n      }\n    }\n    if (this.yAxis && this.fullWidthLineY) {\n      var startPoint = this.yAxis.currentItemStartPoint;\n      var endPoint = this.yAxis.currentItemEndPoint;\n      if (startPoint && endPoint) {\n        this.lineY.y = y;\n        var height = endPoint.y - startPoint.y;\n        this.lineY.path = $path.rectangle(this.innerWidth, height, 0, -height / 2);\n      }\n    }\n  };\n  Object.defineProperty(XYCursor.prototype, \"lineX\", {\n    /**\r\n     * @return Line element\r\n     */\n    get: function () {\n      return this._lineX.get();\n    },\n    /**\r\n     * A Line element to use for X axis.\r\n     *\r\n     * @param lineX Line\r\n     */\n    set: function (lineX) {\n      if (lineX) {\n        lineX.setElement(this.paper.add(\"path\"));\n        this._lineX.set(lineX, lineX.events.on(\"positionchanged\", this.updateSelection, this, false));\n        lineX.interactionsEnabled = false;\n        lineX.parent = this;\n      } else {\n        this._lineX.reset();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYCursor.prototype, \"lineY\", {\n    /**\r\n     * @return Line element\r\n     */\n    get: function () {\n      return this._lineY.get();\n    },\n    /**\r\n     * A Line element to use Y axis.\r\n     *\r\n     * @param lineY Line\r\n     */\n    set: function (lineY) {\n      if (lineY) {\n        lineY.setElement(this.paper.add(\"path\"));\n        this._lineY.set(lineY, lineY.events.on(\"positionchanged\", this.updateSelection, this, false));\n        lineY.parent = this;\n        lineY.interactionsEnabled = false;\n      } else {\n        this._lineY.reset();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYCursor.prototype, \"selection\", {\n    /**\r\n     * @return Selection rectangle\r\n     */\n    get: function () {\n      return this._selection;\n    },\n    /**\r\n     * A selection element ([[Sprite]]).\r\n     *\r\n     * @param selection Selection rectangle\r\n     */\n    set: function (selection) {\n      this._selection = selection;\n      if (selection) {\n        selection.element = this.paper.add(\"path\");\n        selection.parent = this;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Processes JSON-based config before it is applied to the object.\r\n   *\r\n   * Looks if `xAxis` and `yAxis` is set via ID in JSON config, and replaces\r\n   * with real references.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param config  Config\r\n   */\n  XYCursor.prototype.processConfig = function (config) {\n    var _this = this;\n    if (config) {\n      // Set up axes\n      if ($type.hasValue(config.xAxis) && $type.isString(config.xAxis)) {\n        if (this.map.hasKey(config.xAxis)) {\n          config.xAxis = this.map.getKey(config.xAxis);\n        } else {\n          this.processingErrors.push(\"[XYCursor] No axis with id \\\"\" + config.xAxis + \"\\\" found for `xAxis`\");\n          delete config.xAxis;\n        }\n      }\n      if ($type.hasValue(config.yAxis) && $type.isString(config.yAxis)) {\n        if (this.map.hasKey(config.yAxis)) {\n          config.yAxis = this.map.getKey(config.yAxis);\n        } else {\n          this.processingErrors.push(\"[XYCursor] No axis with id \\\"\" + config.yAxis + \"\\\" found for `yAxis`\");\n          delete config.yAxis;\n        }\n      }\n      if ($type.hasValue(config.snapToSeries)) {\n        var snapTo_1 = $type.isArray(config.snapToSeries) ? config.snapToSeries : [config.snapToSeries];\n        var snapError_1 = false;\n        $array.each(snapTo_1, function (snap, index) {\n          if ($type.isString(snap)) {\n            if (_this.map.hasKey(snap)) {\n              snapTo_1[index] = _this.map.getKey(snap);\n            } else {\n              _this.processingErrors.push(\"[XYCursor] No series with id \\\"\" + snap + \"\\\" found for `series`\");\n              snapError_1 = true;\n            }\n          }\n        });\n        if (snapError_1) {\n          delete config.snapToSeries;\n        } else {\n          config.snapToSeries = snapTo_1;\n        }\n      }\n    }\n    _super.prototype.processConfig.call(this, config);\n  };\n  Object.defineProperty(XYCursor.prototype, \"snapToSeries\", {\n    /**\r\n     * @return {XYSeries | XYSeries[]}\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"snapToSeries\");\n    },\n    /**\r\n     * Specifies to which series cursor lines should be snapped.\r\n     *\r\n     * Can be a single series instance or an array of series.\r\n     *\r\n     * @param {XYSeries | XYSeries[]}\r\n     */\n    set: function (series) {\n      var _this = this;\n      if (this.setPropertyValue(\"snapToSeries\", series)) {\n        if (series instanceof XYSeries) {\n          series = [series];\n        }\n        if (this._snapToDisposers) {\n          $array.each(this._snapToDisposers, function (disposer) {\n            disposer.dispose();\n          });\n        }\n        this._snapToDisposers = [];\n        if (series) {\n          $array.each(series, function (s) {\n            _this._snapToDisposers.push(s.events.on(\"tooltipshownat\", function () {\n              _this.handleSnap(s);\n            }, undefined, false));\n          });\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYCursor.prototype, \"snapOnPan\", {\n    /**\r\n     * Should zoom selection \"snap\" into equal categories/intervals after panning\r\n     * the chart? (when `behavior == \"panX\"`)\r\n     *\r\n     * @default true\r\n     * @since 4.10.17\r\n     * @return Snap on pan?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"snapOnPan\");\n    },\n    /**\r\n     * @param value Snap on pan?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"snapOnPan\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Snaps the zoom selection after chart is panned.\r\n   *\r\n   * @ignore\r\n   */\n  XYCursor.prototype.handleSnap = function (series) {\n    if (!this.downPoint) {\n      var x = series.getTooltipX() + series.xAxis.pixelX;\n      var y = series.getTooltipY() + series.yAxis.pixelY;\n      var xAxis = series.xAxis;\n      var yAxis = series.yAxis;\n      if (xAxis) {\n        if (xAxis.renderer.opposite) {\n          y -= this.pixelHeight;\n        }\n      }\n      this.point = {\n        x: x,\n        y: y\n      };\n      this.getPositions();\n      var xx = x;\n      var yy = y;\n      x -= this.pixelWidth;\n      if (yAxis) {\n        if (yAxis.renderer.opposite) {\n          x += this.pixelWidth;\n        }\n      }\n      var tooltip = series.tooltip;\n      var duration = tooltip.animationDuration;\n      var easing = tooltip.animationEasing;\n      if (xAxis instanceof ValueAxis && !(xAxis instanceof DateAxis) && yAxis instanceof ValueAxis && !(yAxis instanceof DateAxis)) {\n        series.yAxis.showTooltipAtPosition(this.yPosition);\n        series.xAxis.showTooltipAtPosition(this.xPosition);\n      } else {\n        if (series.baseAxis == series.xAxis) {\n          series.yAxis.showTooltipAtPosition(this.yPosition);\n        }\n        if (series.baseAxis == series.yAxis) {\n          series.xAxis.showTooltipAtPosition(this.xPosition);\n        }\n      }\n      //\tthis.lineX.animate([{ property: \"y\", to: y }], duration, easing);\n      //\tthis.lineY.animate([{ property: \"x\", to: x }], duration, easing);\n      this.lineY.x = x;\n      this.lineX.y = y;\n      if (!this.xAxis) {\n        this.lineX.animate([{\n          property: \"x\",\n          to: xx\n        }], duration, easing);\n      }\n      if (!this.yAxis) {\n        this.lineY.animate([{\n          property: \"y\",\n          to: yy\n        }], duration, easing);\n      }\n    }\n  };\n  /**\r\n   * Destroys this object and all related data.\r\n   */\n  XYCursor.prototype.dispose = function () {\n    this.hide(0);\n    _super.prototype.dispose.call(this);\n  };\n  return XYCursor;\n}(Cursor);\nexport { XYCursor };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"XYCursor\"] = XYCursor;","map":{"version":3,"names":["__extends","Cursor","Sprite","MutableValueDisposer","MultiDisposer","ValueAxis","DateAxis","XYSeries","registry","color","InterfaceColorSet","getInteraction","MouseCursorStyle","$math","$utils","$type","$array","$path","XYCursor","_super","_this","call","_lineX","_lineY","_xAxis","_yAxis","_snapToDisposers","className","behavior","maxPanOut","interfaceColors","snapOnPan","selection","createChild","shouldClone","fillOpacity","fill","getFor","isMeasured","visible","interactionsEnabled","_disposers","push","lineX","stroke","strokeDasharray","strokeOpacity","y","lineY","x","events","on","updateSize","mask","hideSeriesTooltipsOnSelection","applyTheme","prototype","path","moveTo","lineTo","innerHeight","innerWidth","updateSelection","_usesSelection","downPoint","point","pixelX","pixelY","Math","min","w","round","abs","_positionPrecision","h","pixelHeight","pixelWidth","rectangle","validatePosition","_generalBehavior","hide","fixPoint","max","triggerMoveReal","force","snapToSeries","isHidden","updateLinePositions","allHidden_1","each","s","getDistance","getPanningRanges","dispatch","xAxis","yAxis","triggerDownReal","isHiding","parent","fitsToBounds","updatePoint","selectionX","selectionY","show","undefined","triggerUpReal","hasMoved","upPoint","getRanges","xRange","yRange","dispatchImmediately","interaction","setGlobalStyle","default","distance","getHorizontalDistance","_upPointOrig","_downPointOrig","getVerticalDistance","getHitOption","interactions","startX","startY","currentX","currentY","deltaX","deltaY","start","end","used","endX","endY","Object","defineProperty","get","getPropertyValue","set","value","setPropertyValue","indexOf","enumerable","configurable","shouldPreventGestures","touch","isTouchProtected","axis","tooltip","handleXTooltipPosition","event","preventShow","handleYTooltipPosition","__disabled","svgPointToSprite","fullWidthLineX","startPoint","currentItemStartPoint","endPoint","currentItemEndPoint","width","fullWidthLineY","height","setElement","paper","add","reset","_selection","element","processConfig","config","hasValue","isString","map","hasKey","getKey","processingErrors","snapTo_1","isArray","snapError_1","snap","index","series","disposer","dispose","handleSnap","getTooltipX","getTooltipY","renderer","opposite","getPositions","xx","yy","duration","animationDuration","easing","animationEasing","showTooltipAtPosition","yPosition","xPosition","baseAxis","animate","property","to","registeredClasses"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/charts/cursors/XYCursor.js"],"sourcesContent":["/**\r\n * Cursor for XY chart\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Cursor } from \"./Cursor\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { MutableValueDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { ValueAxis } from \"../axes/ValueAxis\";\r\nimport { DateAxis } from \"../axes/DateAxis\";\r\nimport { XYSeries } from \"../series/XYSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { getInteraction } from \"../../core/interaction/Interaction\";\r\nimport { MouseCursorStyle } from \"../../core/interaction/Mouse\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A cursor used on [[XYChart]].\r\n *\r\n * @see {@link IXYCursorEvents} for a list of available events\r\n * @see {@link IXYCursorAdapters} for a list of available Adapters\r\n * @todo Add description, examples\r\n */\r\nvar XYCursor = /** @class */ (function (_super) {\r\n    __extends(XYCursor, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function XYCursor() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * Vertical cursor line element.\r\n         */\r\n        _this._lineX = new MutableValueDisposer();\r\n        /**\r\n         * Horizontal cursor line element.\r\n         */\r\n        _this._lineY = new MutableValueDisposer();\r\n        /**\r\n         * Horizontal [[Axis]].\r\n         */\r\n        _this._xAxis = new MutableValueDisposer();\r\n        /**\r\n         * Vertical [[Axis]].\r\n         */\r\n        _this._yAxis = new MutableValueDisposer();\r\n        _this._snapToDisposers = [];\r\n        _this.className = \"XYCursor\";\r\n        // Defaults\r\n        _this.behavior = \"zoomX\";\r\n        _this.maxPanOut = 0.1;\r\n        var interfaceColors = new InterfaceColorSet();\r\n        _this.snapOnPan = true;\r\n        // Create selection element\r\n        var selection = _this.createChild(Sprite);\r\n        selection.shouldClone = false;\r\n        selection.fillOpacity = 0.2;\r\n        selection.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n        selection.isMeasured = false;\r\n        selection.visible = false;\r\n        selection.interactionsEnabled = false;\r\n        _this.selection = selection;\r\n        _this._disposers.push(_this.selection);\r\n        // Create cursor's vertical line\r\n        var lineX = _this.createChild(Sprite);\r\n        lineX.shouldClone = false;\r\n        lineX.stroke = interfaceColors.getFor(\"grid\");\r\n        lineX.fill = color();\r\n        lineX.strokeDasharray = \"3,3\";\r\n        lineX.isMeasured = false;\r\n        lineX.strokeOpacity = 0.4;\r\n        lineX.interactionsEnabled = false;\r\n        lineX.y = 0; // important\r\n        _this.lineX = lineX;\r\n        _this._disposers.push(_this.lineX);\r\n        // Create cursor's horizontal line\r\n        var lineY = _this.createChild(Sprite);\r\n        lineY.shouldClone = false;\r\n        lineY.stroke = interfaceColors.getFor(\"grid\");\r\n        lineY.fill = color();\r\n        lineY.strokeDasharray = \"3,3\";\r\n        lineY.isMeasured = false;\r\n        lineY.strokeOpacity = 0.4;\r\n        lineY.interactionsEnabled = false;\r\n        lineY.x = 0; // important\r\n        _this.lineY = lineY;\r\n        _this._disposers.push(_this.lineY);\r\n        // Add handler for size changes\r\n        _this.events.on(\"sizechanged\", _this.updateSize, _this, false);\r\n        _this._disposers.push(_this._lineX);\r\n        _this._disposers.push(_this._lineY);\r\n        _this._disposers.push(_this._xAxis);\r\n        _this._disposers.push(_this._yAxis);\r\n        _this.mask = _this;\r\n        _this.hideSeriesTooltipsOnSelection = true;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Updates cursor element dimensions on size change.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYCursor.prototype.updateSize = function () {\r\n        if (this.lineX) {\r\n            this.lineX.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: 0, y: this.innerHeight });\r\n        }\r\n        if (this.lineY) {\r\n            this.lineY.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: this.innerWidth, y: 0 });\r\n        }\r\n    };\r\n    /**\r\n     * Updates selection dimensions on size change.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYCursor.prototype.updateSelection = function () {\r\n        if (this._usesSelection) {\r\n            var downPoint = this.downPoint;\r\n            var behavior = this.behavior;\r\n            if (downPoint) {\r\n                var point = this.point;\r\n                if (this.lineX) {\r\n                    point.x = this.lineX.pixelX;\r\n                }\r\n                if (this.lineY) {\r\n                    point.y = this.lineY.pixelY;\r\n                }\r\n                var selection = this.selection;\r\n                var x = Math.min(point.x, downPoint.x);\r\n                var y = Math.min(point.y, downPoint.y);\r\n                var w = $math.round(Math.abs(downPoint.x - point.x), this._positionPrecision);\r\n                var h = $math.round(Math.abs(downPoint.y - point.y), this._positionPrecision);\r\n                switch (behavior) {\r\n                    case \"zoomX\":\r\n                        y = 0;\r\n                        h = this.pixelHeight;\r\n                        break;\r\n                    case \"zoomY\":\r\n                        x = 0;\r\n                        w = this.pixelWidth;\r\n                        break;\r\n                    case \"selectX\":\r\n                        y = 0;\r\n                        h = this.pixelHeight;\r\n                        break;\r\n                    case \"selectY\":\r\n                        x = 0;\r\n                        w = this.pixelWidth;\r\n                        break;\r\n                }\r\n                selection.x = x;\r\n                selection.y = y;\r\n                selection.path = $path.rectangle(w, h);\r\n                selection.validatePosition(); // otherwise Edge shoes some incorrect size rectangle\r\n            }\r\n            else {\r\n                if (this._generalBehavior != \"select\") {\r\n                    this.selection.hide();\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYCursor.prototype.fixPoint = function (point) {\r\n        point.x = Math.max(0, point.x);\r\n        point.y = Math.max(0, point.y);\r\n        point.x = Math.min(this.pixelWidth, point.x);\r\n        point.y = Math.min(this.pixelHeight, point.y);\r\n        return point;\r\n    };\r\n    /**\r\n     * Places the cursor at specific point.\r\n     *\r\n     * @param point Point to place cursor at\r\n     */\r\n    XYCursor.prototype.triggerMoveReal = function (point, force) {\r\n        _super.prototype.triggerMoveReal.call(this, point, force);\r\n        var snapToSeries = this.snapToSeries;\r\n        if ((snapToSeries && !this.downPoint)) {\r\n            if (snapToSeries instanceof XYSeries) {\r\n                if (snapToSeries.isHidden) {\r\n                    this.updateLinePositions(point);\r\n                }\r\n            }\r\n            else {\r\n                var allHidden_1 = true;\r\n                $array.each(snapToSeries, function (s) {\r\n                    if (!s.isHidden) {\r\n                        allHidden_1 = false;\r\n                    }\r\n                });\r\n                if (allHidden_1) {\r\n                    this.updateLinePositions(point);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.updateLinePositions(point);\r\n        }\r\n        if (this.downPoint && $math.getDistance(this.downPoint, point) > 3) {\r\n            if (this._generalBehavior == \"pan\") {\r\n                this.getPanningRanges();\r\n                this.dispatch(\"panning\");\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYCursor.prototype.updateLinePositions = function (point) {\r\n        point = this.fixPoint(this.point);\r\n        if (this.lineX && this.lineX.visible && !this.xAxis) {\r\n            this.lineX.x = point.x;\r\n        }\r\n        if (this.lineY && this.lineY.visible && !this.yAxis) {\r\n            this.lineY.y = point.y;\r\n        }\r\n        this.updateSelection();\r\n    };\r\n    XYCursor.prototype.triggerDownReal = function (point) {\r\n        if (this.visible && !this.isHiding) {\r\n            if (this._generalBehavior == \"select\") {\r\n                this.selection.parent = this.parent;\r\n            }\r\n            if (this.fitsToBounds(point)) {\r\n                this.downPoint = { x: point.x, y: point.y };\r\n                this.updatePoint(point);\r\n                //this.updateLinePositions(point); // otherwise lines won't be in correct position and touch won't work fine\r\n                this.point.x = this.downPoint.x;\r\n                this.point.y = this.downPoint.y;\r\n                var selection = this.selection;\r\n                var selectionX = this.downPoint.x;\r\n                var selectionY = this.downPoint.y;\r\n                if (this._usesSelection) {\r\n                    selection.x = selectionX;\r\n                    selection.y = selectionY;\r\n                    selection.path = \"\";\r\n                    selection.show();\r\n                }\r\n                _super.prototype.triggerDownReal.call(this, point);\r\n            }\r\n            else {\r\n                this.downPoint = undefined;\r\n            }\r\n        }\r\n        else {\r\n            this.downPoint = undefined;\r\n        }\r\n    };\r\n    /**\r\n     * Updates the coordinates of where pointer down event occurred\r\n     * (was pressed).\r\n     */\r\n    XYCursor.prototype.updatePoint = function (point) {\r\n        if (this.lineX) {\r\n            point.x = this.lineX.pixelX;\r\n        }\r\n        if (this.lineY) {\r\n            point.y = this.lineY.pixelY;\r\n        }\r\n    };\r\n    /**\r\n     * Handle action when cursor is released, which should perform an operation\r\n     * based on its `behavior`, like zoom.\r\n     *\r\n     * @param  point  Release point\r\n     */\r\n    XYCursor.prototype.triggerUpReal = function (point) {\r\n        if (this.hasMoved()) {\r\n            if (this.downPoint) {\r\n                this.upPoint = point;\r\n                this.updatePoint(this.upPoint);\r\n                if (this._generalBehavior != \"pan\") {\r\n                    this.getRanges();\r\n                }\r\n                if (this._generalBehavior != \"select\") {\r\n                    this.selection.hide();\r\n                }\r\n                _super.prototype.triggerUpReal.call(this, point);\r\n            }\r\n        }\r\n        else {\r\n            if (this._generalBehavior != \"select\") {\r\n                this.selection.hide(0);\r\n            }\r\n            else {\r\n                this.xRange = undefined;\r\n                this.yRange = undefined;\r\n                this.dispatchImmediately(\"selectended\");\r\n            }\r\n            // reset cursor style, just in case\r\n            if (this._generalBehavior == \"pan\") {\r\n                var interaction = getInteraction();\r\n                interaction.setGlobalStyle(MouseCursorStyle.default);\r\n            }\r\n            this.dispatchImmediately(\"behaviorcanceled\");\r\n        }\r\n        this.downPoint = undefined;\r\n        this.dispatch(\"cursorpositionchanged\");\r\n    };\r\n    /**\r\n     * Calculates if the cursor has moved enough based on its `behavior`.\r\n     *\r\n     * @return Moved?\r\n     */\r\n    XYCursor.prototype.hasMoved = function () {\r\n        var distance;\r\n        if (this.behavior == \"zoomX\" || this.behavior == \"panX\") {\r\n            distance = $math.getHorizontalDistance(this._upPointOrig, this._downPointOrig);\r\n        }\r\n        else if (this.behavior == \"zoomY\" || this.behavior == \"panY\") {\r\n            distance = $math.getVerticalDistance(this._upPointOrig, this._downPointOrig);\r\n        }\r\n        else {\r\n            distance = $math.getDistance(this._upPointOrig, this._downPointOrig);\r\n        }\r\n        return distance > getInteraction().getHitOption(this.interactions, \"hitTolerance\");\r\n    };\r\n    /**\r\n     * [getRanges description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    XYCursor.prototype.getPanningRanges = function () {\r\n        var startX = $math.round(this.downPoint.x / this.innerWidth, 5);\r\n        var startY = 1 - $math.round(this.downPoint.y / this.innerHeight, 5);\r\n        var currentX = $math.round(this.point.x / this.innerWidth, 5);\r\n        var currentY = 1 - $math.round(this.point.y / this.innerHeight, 5);\r\n        var deltaX = startX - currentX;\r\n        var deltaY = startY - currentY;\r\n        this.xRange = { start: deltaX, end: 1 + deltaX };\r\n        this.yRange = { start: deltaY, end: 1 + deltaY };\r\n        if (this.behavior == \"panX\") {\r\n            this.yRange.start = 0;\r\n            this.yRange.end = 1;\r\n        }\r\n        if (this.behavior == \"panY\") {\r\n            this.xRange.start = 0;\r\n            this.xRange.end = 1;\r\n        }\r\n    };\r\n    /**\r\n     * [getRanges description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    XYCursor.prototype.getRanges = function () {\r\n        if (this.lineX) {\r\n            this.upPoint.x = this.lineX.pixelX;\r\n        }\r\n        if (this.lineY) {\r\n            this.upPoint.y = this.lineY.pixelY;\r\n        }\r\n        // @todo Is this needed?\r\n        $utils.used(this.selection);\r\n        var startX = $math.round(this.downPoint.x / this.innerWidth, 5);\r\n        var endX = $math.round((this.upPoint.x) / this.innerWidth, 5);\r\n        var startY = 1 - $math.round(this.downPoint.y / this.innerHeight, 5);\r\n        var endY = 1 - $math.round((this.upPoint.y) / this.innerHeight, 5);\r\n        this.xRange = { start: $math.min(startX, endX), end: $math.max(startX, endX) };\r\n        this.yRange = { start: $math.min(startY, endY), end: $math.max(startY, endY) };\r\n    };\r\n    Object.defineProperty(XYCursor.prototype, \"behavior\", {\r\n        /**\r\n         * Behavior\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"behavior\");\r\n        },\r\n        /**\r\n         * Cursor's behavior when it's moved with pointer down:\r\n         *\r\n         * * `\"zoomX\"` - zooms horizontally.\r\n         * * `\"zoomY\"` - zooms vertically.\r\n         * * `\"zoomXY\"` - zooms both horizontally and vertically.\r\n         * * `\"selectX\"` - selects a range horizontally.\r\n         * * `\"selectY\"` - selects a range vertically.\r\n         * * `\"selectXY\"` - selects a range both horizontally and vertically.\r\n         * * `\"panX\"` - moves (pans) current selection horizontally.\r\n         * * `\"panY\"` - moves (pans) current selection vertically.\r\n         * * `\"panXY\"` - moves (pans) current selection both horizontally and vertically.\r\n         * * `\"none\"` - does nothing with pointer down.\r\n         *\r\n         * E.g. \"zoomXY\" will mean that pressing a mouse (or touching) over plot area\r\n         * and dragging it will start zooming the chart.\r\n         *\r\n         * NOTE: `\"zoomXY\"` acts differently when used on a `DateAxis`.\r\n         * See [this note](https://www.amcharts.com/docs/v4/concepts/chart-cursor/#zoomXY_behavior_and_DateAxis).\r\n         *\r\n         * @param value Bheavior\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"behavior\", value, true);\r\n            this._usesSelection = false;\r\n            if (value.indexOf(\"zoom\") != -1) {\r\n                this._generalBehavior = \"zoom\";\r\n                this._usesSelection = true;\r\n            }\r\n            if (value.indexOf(\"select\") != -1) {\r\n                this._generalBehavior = \"select\";\r\n                this._usesSelection = true;\r\n            }\r\n            if (value.indexOf(\"pan\") != -1) {\r\n                this._generalBehavior = \"pan\";\r\n                this._usesSelection = false;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Determines whether Cursor should prevent default action on move.\r\n     *\r\n     * If cursor's behavior is \"none\", it should not obstruct the page scrolling.\r\n     *\r\n     * @return Prevent default?\r\n     */\r\n    XYCursor.prototype.shouldPreventGestures = function (touch) {\r\n        return (!this.interactions.isTouchProtected || !touch) && this.behavior != \"none\";\r\n    };\r\n    Object.defineProperty(XYCursor.prototype, \"fullWidthLineX\", {\r\n        /**\r\n         * @return Full width?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"fullWidthLineX\");\r\n        },\r\n        /**\r\n         * Cursor's horizontal line is expanded to take full width of the related\r\n         * Axis' cell/category.\r\n         *\r\n         * NOTE: this setting will work properly if `xAxis` is set and only in case\r\n         * `xAxis` is [[CategoryAxis]] or [[DateAxis]].\r\n         *\r\n         * @param value Full width?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"fullWidthLineX\", value);\r\n            if (!value) {\r\n                this.updateSize();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"fullWidthLineY\", {\r\n        /**\r\n         * @return Full width?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"fullWidthLineY\");\r\n        },\r\n        /**\r\n         * Cursor's vertical line is expanded to take full width of the related\r\n         * Axis' cell/category.\r\n         *\r\n         * NOTE: this setting will work properly if `yAxis` is set and only in case\r\n         * `yAxis` is [[CategoryAxis]] or [[DateAxis]].\r\n         *\r\n         * @param value Full width?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"fullWidthLineY\", value);\r\n            if (!value) {\r\n                this.updateSize();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"hideSeriesTooltipsOnSelection\", {\r\n        /**\r\n         * @return hide tooltip?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"hideSeriesTooltipsOnSelection\");\r\n        },\r\n        /**\r\n         * If set to `true` this will hide series tooltips when selecting with cursor.\r\n         *\r\n         * @since 4.5.15\r\n         * @param  value  hide tooltips?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"hideSeriesTooltipsOnSelection\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"maxTooltipDistance\", {\r\n        /**\r\n         * @return Distance\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"maxTooltipDistance\");\r\n        },\r\n        /**\r\n         * If set to a numeric value, cursor will display closest series' tooltips\r\n         * plus tooltips from series that are closer to than `maxTooltipDistance` to\r\n         * it.\r\n         *\r\n         * Set it to `-1` to always force one tooltip, even if there are multiple\r\n         * data items in exactly same place.\r\n         *\r\n         * @since 4.7.18\r\n         * @param  value  Distance\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"maxTooltipDistance\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"maxPanOut\", {\r\n        /**\r\n         * @return Full width?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"maxPanOut\");\r\n        },\r\n        /**\r\n         * If cursor behavior is panX or panY, we allow to pan plot out of it's max bounds for a better user experience.\r\n         * This setting specifies relative value by how much we can pan out the plot\r\n         *\r\n         * @param value\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"maxPanOut\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"xAxis\", {\r\n        /**\r\n         * @return X axis\r\n         */\r\n        get: function () {\r\n            return this._xAxis.get();\r\n        },\r\n        /**\r\n         * A reference to X [[Axis]].\r\n         *\r\n         * An XY cursor can live without `xAxis` set. You set xAxis for cursor when\r\n         * you have axis tooltip enabled and you want cursor line to be at the same\r\n         * position as tooltip.\r\n         *\r\n         * This works with [[CategoryAxis]] and [[DateAxis]] but not with\r\n         * [[ValueAxis]].\r\n         *\r\n         * @todo Description (review)\r\n         * @param axis X axis\r\n         */\r\n        set: function (axis) {\r\n            var _this = this;\r\n            if (this._xAxis.get() != axis) {\r\n                this._xAxis.set(axis, new MultiDisposer([\r\n                    axis.tooltip.events.on(\"positionchanged\", this.handleXTooltipPosition, this, false),\r\n                    axis.events.on(\"rangechangestarted\", function (event) {\r\n                        _this.hide(0);\r\n                        _this.preventShow = true;\r\n                    }, undefined, false),\r\n                    axis.events.on(\"rangechangeended\", function (event) {\r\n                        _this.preventShow = false;\r\n                        _this.hide(0);\r\n                        _this.dispatch(\"cursorpositionchanged\");\r\n                    }, undefined, false)\r\n                ]));\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"yAxis\", {\r\n        /**\r\n         * @return Y Axis\r\n         */\r\n        get: function () {\r\n            return this._yAxis.get();\r\n        },\r\n        /**\r\n         * A reference to Y [[Axis]].\r\n         *\r\n         * An XY cursor can live without `yAxis` set. You set xAxis for cursor when\r\n         * you have axis tooltip enabled and you want cursor line to be at the same\r\n         * position as tooltip.\r\n         *\r\n         * This works with [[CategoryAxis]] and [[DateAxis]] but not with\r\n         * [[ValueAxis]].\r\n         *\r\n         * @todo Description (review)\r\n         * @param axis Y axis\r\n         */\r\n        set: function (axis) {\r\n            var _this = this;\r\n            if (this._yAxis.get() != axis) {\r\n                this._yAxis.set(axis, new MultiDisposer([\r\n                    axis.tooltip.events.on(\"positionchanged\", this.handleYTooltipPosition, this, false),\r\n                    axis.events.on(\"rangechangestarted\", function (event) {\r\n                        _this.hide(0);\r\n                        _this.__disabled = true;\r\n                    }, undefined, false),\r\n                    axis.events.on(\"rangechangeended\", function (event) {\r\n                        _this.__disabled = false;\r\n                        _this.hide(0);\r\n                        _this.dispatch(\"cursorpositionchanged\");\r\n                    }, undefined, false)\r\n                ]));\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates Cursor's position when axis tooltip changes position.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event Original Axis event\r\n     */\r\n    XYCursor.prototype.handleXTooltipPosition = function (event) {\r\n        var tooltip = this.xAxis.tooltip;\r\n        var point = $utils.svgPointToSprite({ x: tooltip.pixelX, y: tooltip.pixelY }, this);\r\n        var x = point.x;\r\n        point.y = 1;\r\n        if (this.lineX) {\r\n            this.lineX.x = x;\r\n            if (!this.fitsToBounds(point)) {\r\n                this.hide();\r\n            }\r\n        }\r\n        if (this.xAxis && this.fullWidthLineX) {\r\n            var startPoint = this.xAxis.currentItemStartPoint;\r\n            var endPoint = this.xAxis.currentItemEndPoint;\r\n            if (startPoint && endPoint) {\r\n                this.lineX.x = x;\r\n                var width = endPoint.x - startPoint.x;\r\n                this.lineX.path = $path.rectangle(width, this.innerHeight, -width / 2);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Updates Cursor's position when Y axis changes position or scale.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event Original Axis event\r\n     */\r\n    XYCursor.prototype.handleYTooltipPosition = function (event) {\r\n        var tooltip = this.yAxis.tooltip;\r\n        var point = $utils.svgPointToSprite({ x: tooltip.pixelX, y: tooltip.pixelY }, this);\r\n        var y = point.y;\r\n        point.x = 1;\r\n        if (this.lineY) {\r\n            this.lineY.y = y;\r\n            if (!this.fitsToBounds(point)) {\r\n                this.hide();\r\n            }\r\n        }\r\n        if (this.yAxis && this.fullWidthLineY) {\r\n            var startPoint = this.yAxis.currentItemStartPoint;\r\n            var endPoint = this.yAxis.currentItemEndPoint;\r\n            if (startPoint && endPoint) {\r\n                this.lineY.y = y;\r\n                var height = endPoint.y - startPoint.y;\r\n                this.lineY.path = $path.rectangle(this.innerWidth, height, 0, -height / 2);\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(XYCursor.prototype, \"lineX\", {\r\n        /**\r\n         * @return Line element\r\n         */\r\n        get: function () {\r\n            return this._lineX.get();\r\n        },\r\n        /**\r\n         * A Line element to use for X axis.\r\n         *\r\n         * @param lineX Line\r\n         */\r\n        set: function (lineX) {\r\n            if (lineX) {\r\n                lineX.setElement(this.paper.add(\"path\"));\r\n                this._lineX.set(lineX, lineX.events.on(\"positionchanged\", this.updateSelection, this, false));\r\n                lineX.interactionsEnabled = false;\r\n                lineX.parent = this;\r\n            }\r\n            else {\r\n                this._lineX.reset();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"lineY\", {\r\n        /**\r\n         * @return Line element\r\n         */\r\n        get: function () {\r\n            return this._lineY.get();\r\n        },\r\n        /**\r\n         * A Line element to use Y axis.\r\n         *\r\n         * @param lineY Line\r\n         */\r\n        set: function (lineY) {\r\n            if (lineY) {\r\n                lineY.setElement(this.paper.add(\"path\"));\r\n                this._lineY.set(lineY, lineY.events.on(\"positionchanged\", this.updateSelection, this, false));\r\n                lineY.parent = this;\r\n                lineY.interactionsEnabled = false;\r\n            }\r\n            else {\r\n                this._lineY.reset();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"selection\", {\r\n        /**\r\n         * @return Selection rectangle\r\n         */\r\n        get: function () {\r\n            return this._selection;\r\n        },\r\n        /**\r\n         * A selection element ([[Sprite]]).\r\n         *\r\n         * @param selection Selection rectangle\r\n         */\r\n        set: function (selection) {\r\n            this._selection = selection;\r\n            if (selection) {\r\n                selection.element = this.paper.add(\"path\");\r\n                selection.parent = this;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * Looks if `xAxis` and `yAxis` is set via ID in JSON config, and replaces\r\n     * with real references.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    XYCursor.prototype.processConfig = function (config) {\r\n        var _this = this;\r\n        if (config) {\r\n            // Set up axes\r\n            if ($type.hasValue(config.xAxis) && $type.isString(config.xAxis)) {\r\n                if (this.map.hasKey(config.xAxis)) {\r\n                    config.xAxis = this.map.getKey(config.xAxis);\r\n                }\r\n                else {\r\n                    this.processingErrors.push(\"[XYCursor] No axis with id \\\"\" + config.xAxis + \"\\\" found for `xAxis`\");\r\n                    delete config.xAxis;\r\n                }\r\n            }\r\n            if ($type.hasValue(config.yAxis) && $type.isString(config.yAxis)) {\r\n                if (this.map.hasKey(config.yAxis)) {\r\n                    config.yAxis = this.map.getKey(config.yAxis);\r\n                }\r\n                else {\r\n                    this.processingErrors.push(\"[XYCursor] No axis with id \\\"\" + config.yAxis + \"\\\" found for `yAxis`\");\r\n                    delete config.yAxis;\r\n                }\r\n            }\r\n            if ($type.hasValue(config.snapToSeries)) {\r\n                var snapTo_1 = $type.isArray(config.snapToSeries) ? config.snapToSeries : [config.snapToSeries];\r\n                var snapError_1 = false;\r\n                $array.each(snapTo_1, function (snap, index) {\r\n                    if ($type.isString(snap)) {\r\n                        if (_this.map.hasKey(snap)) {\r\n                            snapTo_1[index] = _this.map.getKey(snap);\r\n                        }\r\n                        else {\r\n                            _this.processingErrors.push(\"[XYCursor] No series with id \\\"\" + snap + \"\\\" found for `series`\");\r\n                            snapError_1 = true;\r\n                        }\r\n                    }\r\n                });\r\n                if (snapError_1) {\r\n                    delete config.snapToSeries;\r\n                }\r\n                else {\r\n                    config.snapToSeries = snapTo_1;\r\n                }\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    Object.defineProperty(XYCursor.prototype, \"snapToSeries\", {\r\n        /**\r\n         * @return {XYSeries | XYSeries[]}\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"snapToSeries\");\r\n        },\r\n        /**\r\n         * Specifies to which series cursor lines should be snapped.\r\n         *\r\n         * Can be a single series instance or an array of series.\r\n         *\r\n         * @param {XYSeries | XYSeries[]}\r\n         */\r\n        set: function (series) {\r\n            var _this = this;\r\n            if (this.setPropertyValue(\"snapToSeries\", series)) {\r\n                if (series instanceof XYSeries) {\r\n                    series = [series];\r\n                }\r\n                if (this._snapToDisposers) {\r\n                    $array.each(this._snapToDisposers, function (disposer) {\r\n                        disposer.dispose();\r\n                    });\r\n                }\r\n                this._snapToDisposers = [];\r\n                if (series) {\r\n                    $array.each(series, function (s) {\r\n                        _this._snapToDisposers.push(s.events.on(\"tooltipshownat\", function () { _this.handleSnap(s); }, undefined, false));\r\n                    });\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"snapOnPan\", {\r\n        /**\r\n         * Should zoom selection \"snap\" into equal categories/intervals after panning\r\n         * the chart? (when `behavior == \"panX\"`)\r\n         *\r\n         * @default true\r\n         * @since 4.10.17\r\n         * @return Snap on pan?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"snapOnPan\");\r\n        },\r\n        /**\r\n         * @param value Snap on pan?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"snapOnPan\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Snaps the zoom selection after chart is panned.\r\n     *\r\n     * @ignore\r\n     */\r\n    XYCursor.prototype.handleSnap = function (series) {\r\n        if (!this.downPoint) {\r\n            var x = series.getTooltipX() + series.xAxis.pixelX;\r\n            var y = series.getTooltipY() + series.yAxis.pixelY;\r\n            var xAxis = series.xAxis;\r\n            var yAxis = series.yAxis;\r\n            if (xAxis) {\r\n                if (xAxis.renderer.opposite) {\r\n                    y -= this.pixelHeight;\r\n                }\r\n            }\r\n            this.point = { x: x, y: y };\r\n            this.getPositions();\r\n            var xx = x;\r\n            var yy = y;\r\n            x -= this.pixelWidth;\r\n            if (yAxis) {\r\n                if (yAxis.renderer.opposite) {\r\n                    x += this.pixelWidth;\r\n                }\r\n            }\r\n            var tooltip = series.tooltip;\r\n            var duration = tooltip.animationDuration;\r\n            var easing = tooltip.animationEasing;\r\n            if (xAxis instanceof ValueAxis && !(xAxis instanceof DateAxis) && yAxis instanceof ValueAxis && !(yAxis instanceof DateAxis)) {\r\n                series.yAxis.showTooltipAtPosition(this.yPosition);\r\n                series.xAxis.showTooltipAtPosition(this.xPosition);\r\n            }\r\n            else {\r\n                if (series.baseAxis == series.xAxis) {\r\n                    series.yAxis.showTooltipAtPosition(this.yPosition);\r\n                }\r\n                if (series.baseAxis == series.yAxis) {\r\n                    series.xAxis.showTooltipAtPosition(this.xPosition);\r\n                }\r\n            }\r\n            //\tthis.lineX.animate([{ property: \"y\", to: y }], duration, easing);\r\n            //\tthis.lineY.animate([{ property: \"x\", to: x }], duration, easing);\r\n            this.lineY.x = x;\r\n            this.lineX.y = y;\r\n            if (!this.xAxis) {\r\n                this.lineX.animate([{ property: \"x\", to: xx }], duration, easing);\r\n            }\r\n            if (!this.yAxis) {\r\n                this.lineY.animate([{ property: \"y\", to: yy }], duration, easing);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Destroys this object and all related data.\r\n     */\r\n    XYCursor.prototype.dispose = function () {\r\n        this.hide(0);\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    return XYCursor;\r\n}(Cursor));\r\nexport { XYCursor };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"XYCursor\"] = XYCursor;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}