{"ast":null,"code":"/**\r\n * Module, defining base Axis Renderer.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Container } from \"../../core/Container\";\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\nimport { AxisDataItem } from \"./Axis\";\nimport { AxisLine } from \"./AxisLine\";\nimport { AxisFill } from \"./AxisFill\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\nimport { AxisTick } from \"./AxisTick\";\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\nimport { registry } from \"../../core/Registry\";\nimport { percent } from \"../../core/utils/Percent\";\nimport * as $math from \"../../core/utils/Math\";\nimport * as $type from \"../../core/utils/Type\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * A base class for all axis renderers.\r\n *\r\n * @see {@link IAxisRendererEvents} for a list of available events\r\n * @see {@link IAxisRendererAdapters} for a list of available Adapters\r\n */\nvar AxisRenderer = /** @class */function (_super) {\n  __extends(AxisRenderer, _super);\n  /**\r\n   * Constructor.\r\n   *\r\n   * @param axis Related axis\r\n   */\n  function AxisRenderer() {\n    var _this =\n    // Init\n    _super.call(this) || this;\n    /**\r\n     * A related chart.\r\n     */\n    _this._chart = new MutableValueDisposer();\n    _this.className = \"AxisRenderer\";\n    // Set defaults\n    _this.minGridDistance = 50;\n    _this.inside = false;\n    _this.inversed = false;\n    _this.tooltipLocation = 0.5;\n    _this.fullWidthTooltip = false;\n    _this.cellStartLocation = 0;\n    _this.cellEndLocation = 1;\n    _this.minLabelPosition = 0;\n    _this.maxLabelPosition = 1;\n    _this.shouldClone = false;\n    var gridContainer = _this.createChild(Container);\n    gridContainer.shouldClone = false;\n    gridContainer.layout = \"none\";\n    //\tgridContainer.isMeasured = false;\n    gridContainer.virtualParent = _this;\n    gridContainer.width = percent(100);\n    gridContainer.height = percent(100);\n    _this.gridContainer = gridContainer;\n    // not good without this\n    gridContainer.events.on(\"maxsizechanged\", function () {\n      if (_this.inited) {\n        _this.invalidateAxisItems();\n      }\n    }, _this, false);\n    var breakContainer = _this.createChild(Container);\n    breakContainer.shouldClone = false;\n    breakContainer.isMeasured = false;\n    breakContainer.layout = \"none\";\n    breakContainer.width = percent(100);\n    breakContainer.height = percent(100);\n    _this.breakContainer = breakContainer;\n    var bulletsContainer = _this.createChild(Container);\n    bulletsContainer.shouldClone = false;\n    bulletsContainer.isMeasured = false;\n    bulletsContainer.layout = \"none\";\n    bulletsContainer.width = percent(100);\n    bulletsContainer.height = percent(100);\n    _this.bulletsContainer = bulletsContainer;\n    _this.line = _this.createChild(AxisLine);\n    _this.line.shouldClone = false;\n    _this.line.strokeOpacity = 0;\n    var baseGrid = _this.createChild(Grid);\n    baseGrid.shouldClone = false;\n    _this.baseGrid = baseGrid;\n    // Make elements disposable\n    var disposers = _this._disposers;\n    disposers.push(baseGrid);\n    disposers.push(_this.line);\n    disposers.push(gridContainer);\n    disposers.push(breakContainer);\n    disposers.push(bulletsContainer);\n    disposers.push(_this._chart);\n    _this.ticks.template.disabled = true;\n    _this.axisFills.template.disabled = true;\n    _this.axisFills.template.interactionsEnabled = false;\n    // Apply theme\n    _this.applyTheme();\n    return _this;\n  }\n  Object.defineProperty(AxisRenderer.prototype, \"axis\", {\n    /**\r\n     * Axis of a renderer\r\n     * @return axis Axis\r\n     */\n    get: function () {\n      return this._axis;\n    },\n    /**\r\n     * Axis of a renderer\r\n     * @param axis Axis\r\n     */\n    set: function (axis) {\n      this.setAxis(axis);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n  * @ignore\r\n  */\n  AxisRenderer.prototype.setAxis = function (axis) {\n    this._axis = axis;\n    this.baseGrid.parent = axis;\n    this.line.parent = axis;\n    this.gridContainer.bind(\"opacity\", axis);\n  };\n  /**\r\n   * Called when rendered is attached to an Axis, as well as a property of\r\n   * Axis that might affect the appearance is updated.\r\n   *\r\n   * E.g. `axis.opposite`, `axis.inside`, etc.\r\n   *\r\n   * This method is called **before** draw, so that any related setting\r\n   * changed in this method can be changed.\r\n   *\r\n   * @todo Description (review)\r\n   * @ignore Exclude from docs\r\n   */\n  AxisRenderer.prototype.processRenderer = function () {\n    this.events.on(\"sizechanged\", this.updateTooltip, this, false);\n    this.events.on(\"positionchanged\", this.updateTooltip, this, false);\n    this.labels.template.inside = this.inside;\n    this.ticks.template.inside = this.inside;\n  };\n  /**\r\n   * Updates Axis' tooltip.\r\n   *\r\n   * @todo Description (review)\r\n   * @ignore Exclude from docs\r\n   */\n  AxisRenderer.prototype.updateTooltip = function () {\n    // This is a placeholder method for extending classes to override.\n  };\n  Object.defineProperty(AxisRenderer.prototype, \"axisLength\", {\n    /**\r\n     * Returns actual length of the Axis, in pixels.\r\n     *\r\n     * @return Length (px)\r\n     */\n    get: function () {\n      // This is a placeholder method for extending classes to override.\n      return 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Re-positions an element to new coordinates.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param item   A target element\r\n   * @param point  New coordinates\r\n   */\n  AxisRenderer.prototype.positionItem = function (item, point) {\n    if (item) {\n      item.moveTo(point);\n    }\n  };\n  /**\r\n   * Converts relative position on axis to point coordinates.\r\n   *\r\n   * @param position  Position (0-1)\r\n   * @return Point\r\n   */\n  AxisRenderer.prototype.positionToPoint = function (position, position2) {\n    // This is a placeholder method for extending classes to override.\n    return {\n      x: 0,\n      y: 0\n    };\n  };\n  /**\r\n   * Converts relative position on axis to angle.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description (review / units)\r\n   * @param position  Position (0-1)\r\n   * @return Angle\r\n   */\n  AxisRenderer.prototype.positionToAngle = function (position) {\n    // This is a placeholder method for extending classes to override.\n    return 0;\n  };\n  /**\r\n   * Converts relative position (0-1) on axis to a pixel coordinate.\r\n   *\r\n   * @param position  Position (0-1)\r\n   * @return Coordinate (px)\r\n   */\n  AxisRenderer.prototype.positionToCoordinate = function (position) {\n    var coordinate;\n    var axis = this.axis;\n    var axisFullLength = axis.axisFullLength;\n    if (axis.renderer.inversed) {\n      coordinate = (axis.end - position) * axisFullLength;\n    } else {\n      coordinate = (position - axis.start) * axisFullLength;\n    }\n    return coordinate;\n  };\n  AxisRenderer.prototype.updateGridContainer = function () {};\n  AxisRenderer.prototype.getHeight = function () {\n    var gridContainer = this.gridContainer;\n    if (gridContainer.parent) {\n      return gridContainer.parent.pixelHeight;\n    }\n    return this.gridContainer.pixelHeight || 0;\n  };\n  AxisRenderer.prototype.getWidth = function () {\n    var gridContainer = this.gridContainer;\n    if (gridContainer.parent) {\n      return gridContainer.parent.pixelWidth;\n    }\n    return this.gridContainer.pixelWidth || 0;\n  };\n  /**\r\n   * Converts a coordinate in pixels to a relative position. (0-1)\r\n   *\r\n   * @param coordinate  Coordinate (px)\r\n   * @param coordinate2  Coordinate of a second axis, only needed for complex axes systems, like timeline (px)\r\n   * @return Position (0-1)\r\n   */\n  AxisRenderer.prototype.coordinateToPosition = function (coordinate, coordinate2) {\n    var position;\n    var axis = this.axis;\n    var axisFullLength = axis.axisFullLength;\n    if (axis.renderer.inversed) {\n      position = axis.end - coordinate / axisFullLength;\n    } else {\n      position = coordinate / axisFullLength + axis.start;\n    }\n    return $math.round(position, 5);\n  };\n  /**\r\n   * Converts a point at specific coordinates to a relative position (0-1)\r\n   * on the axis.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param point  Point\r\n   * @return Position (0-1)\r\n   */\n  AxisRenderer.prototype.pointToPosition = function (point) {\n    // This is a placeholder method for extending classes to override.\n    return 0;\n  };\n  /**\r\n   * [getPositionRangePath description]\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description\r\n   * @param startPosition  Starting position\r\n   * @param endPosition    End position\r\n   * @return SVG path\r\n   */\n  AxisRenderer.prototype.getPositionRangePath = function (startPosition, endPosition) {\n    return \"\";\n  };\n  /**\r\n   * Invalidates all axis data items, effectively causing them re-evaluated.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description (review)\r\n   */\n  AxisRenderer.prototype.invalidateAxisItems = function () {\n    var axis = this.axis;\n    if (axis) {\n      axis.invalidateDataItems();\n    }\n  };\n  /**\r\n   * Updates and positions a grid element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param grid         Grid element\r\n   * @param position     Starting position\r\n   * @param endPosition  End position\r\n   */\n  AxisRenderer.prototype.updateGridElement = function (grid, position, endPosition) {\n    // This is a placeholder method for extending classes to override.\n  };\n  /**\r\n   * Updates and positions a tick element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param tick         Tick element\r\n   * @param position     Starting position\r\n   * @param endPosition  End position\r\n   */\n  AxisRenderer.prototype.updateTickElement = function (tick, position, endPosition) {\n    // This is a placeholder method for extending classes to override.\n  };\n  /**\r\n   * Updates and positions axis bullet.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param bullet       AxisBullet element\r\n   * @param position     Starting position\r\n   * @param endPosition  End position\r\n   */\n  AxisRenderer.prototype.updateBullet = function (bullet, position, endPosition) {\n    // This is a placeholder method for extending classes to override.\n  };\n  /**\r\n   * Updates and positions a label element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param label        Label element\r\n   * @param position     Starting position\r\n   * @param endPosition  Ending position\r\n   */\n  AxisRenderer.prototype.updateLabelElement = function (label, position, endPosition, location) {\n    // This is a placeholder method for extending classes to override.\n  };\n  /**\r\n   * Updates and positions the axis fill element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param fill         Fill element\r\n   * @param position     Starting position\r\n   * @param endPosition  Ending position\r\n   */\n  AxisRenderer.prototype.updateFillElement = function (fill, position, endPosition) {\n    fill.startPosition = position;\n    fill.endPosition = endPosition;\n  };\n  /**\r\n   * Updates and positions the axis line element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  AxisRenderer.prototype.updateAxisLine = function () {\n    // This is a placeholder method for extending classes to override.\n  };\n  /**\r\n   * Updates and positions the base grid element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  AxisRenderer.prototype.updateBaseGridElement = function () {\n    // This is a placeholder method for extending classes to override.\n  };\n  /**\r\n   * Updates and positions an axis break element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param axisBreak Break element\r\n   */\n  AxisRenderer.prototype.updateBreakElement = function (axisBreak) {\n    this.positionItem(axisBreak.startLine, axisBreak.startPoint);\n    this.toggleVisibility(axisBreak.startLine, axisBreak.startPosition, 0, 1);\n    this.positionItem(axisBreak.endLine, axisBreak.endPoint);\n    this.toggleVisibility(axisBreak.endLine, axisBreak.endPosition, 0, 1);\n  };\n  Object.defineProperty(AxisRenderer.prototype, \"minGridDistance\", {\n    /**\r\n     * @return Min distance (px)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"minGridDistance\");\n    },\n    /**\r\n     * Minimum distance in pixels between grid elements.\r\n     *\r\n     * Use it to control density of the grid/labels on the axis.element.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/#Setting_the_density_of_the_the_grid_labels} for more info\r\n     * @param value  Min distance (px)\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"minGridDistance\", value)) {\n        if (this.axis) {\n          this.axis.invalidateDataItems();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"chart\", {\n    /**\r\n     * @ignore Exclude from docs\r\n     * @return Chart\r\n     */\n    get: function () {\n      return this._chart.get();\n    },\n    /**\r\n     * A chart, associated with the Axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param value  Chart\r\n     */\n    set: function (value) {\n      this._chart.set(value, null);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Toggles visibility of an element, based on its current position and\r\n   * min/max position settings.\r\n   *\r\n   * E.g. labels based on `minLabelPosition` and `maxLabelPosition`.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param sprite       An element to toggle\r\n   * @param position     Elements current position\r\n   * @param minPosition  Min position setting\r\n   * @param maxPosition  Max position setting\r\n   */\n  AxisRenderer.prototype.toggleVisibility = function (sprite, position, minPosition, maxPosition) {\n    var axis = this.axis;\n    var dataItem = sprite.dataItem;\n    if (dataItem && dataItem instanceof AxisDataItem) {\n      if ($type.isNumber(dataItem.minPosition)) {\n        minPosition = dataItem.minPosition;\n      }\n      if ($type.isNumber(dataItem.maxPosition)) {\n        maxPosition = dataItem.maxPosition;\n      }\n    }\n    var updatedStart = axis.start + (axis.end - axis.start) * (minPosition - 0.0001);\n    var updatedEnd = axis.start + (axis.end - axis.start) * (maxPosition + 0.0001);\n    if (!sprite.disabled) {\n      if (position < updatedStart || position > updatedEnd) {\n        sprite.__disabled = true;\n      } else {\n        sprite.__disabled = false;\n      }\n    }\n  };\n  /**\r\n   * Creates visual elements for and axis break.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param axisBreak Axis break\r\n   */\n  AxisRenderer.prototype.createBreakSprites = function (axisBreak) {\n    // This is a placeholder method for extending classes to override.\n  };\n  Object.defineProperty(AxisRenderer.prototype, \"axisFills\", {\n    /**\r\n     * A list of Axis' Fill elements.\r\n     *\r\n     * Those are fill elements that cover the space between every second set\r\n     * of grid lines, and can be configured to create striped charts.\r\n     *\r\n     * Please note that these are disabled by default. To enable them, set\r\n     * template to true.\r\n     *\r\n     * ```TypeScript\r\n     * categoryAxis.renderer.axisFills.template.disabled = false;\r\n     * ```\r\n     * ```JavaScript\r\n     * categoryAxis.renderer.axisFills.template.disabled = false;\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"xAxes\": [{\r\n     *     // ...\r\n     *     \"renderer\": {\r\n     *       \"axisFills\": {\r\n     *         \"disabled\": false\r\n     *       }\r\n     *     }\r\n     *   }]\r\n     * }\r\n     * ```\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/tutorials/alternated-axis-fills/} this tutorial for more info.\r\n     * @return Fill elements\r\n     */\n    get: function () {\n      if (!this._axisFills) {\n        var fill = this.createFill(this.axis);\n        this._axisFills = new ListTemplate(fill);\n        fill.applyOnClones = true;\n        fill.events.on(\"enabled\", this.invalidateAxisItems, this, false);\n        this._disposers.push(new ListDisposer(this._axisFills));\n        this._disposers.push(this._axisFills.template);\n      }\n      return this._axisFills;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Returns a new fill element, suitable for this Axis Renderer type.\r\n   *\r\n   * @return Fill element\r\n   */\n  AxisRenderer.prototype.createFill = function (axis) {\n    return new AxisFill(axis);\n  };\n  Object.defineProperty(AxisRenderer.prototype, \"grid\", {\n    /**\r\n     * A list of Axis' Grid elements.\r\n     *\r\n     * @return Grid elements\r\n     */\n    get: function () {\n      if (!this._grid) {\n        var grid = this.createGrid();\n        this._grid = new ListTemplate(grid);\n        grid.applyOnClones = true;\n        grid.events.on(\"enabled\", this.invalidateAxisItems, this, false);\n        this._disposers.push(new ListDisposer(this._grid));\n        this._disposers.push(this._grid.template);\n      }\n      return this._grid;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Returns a new grid element, suitable for this Axis Renderer type.\r\n   *\r\n   * @return Grid element\r\n   */\n  AxisRenderer.prototype.createGrid = function () {\n    return new Grid();\n  };\n  Object.defineProperty(AxisRenderer.prototype, \"ticks\", {\n    /**\r\n     * A list of Axis' Tick elements.\r\n     *\r\n     * Please note that these are disabled by default. To enable ticks, you'll\r\n     * need to set `disabled` and `strokeOpacity` properties of the tick template.\r\n     *\r\n     * ```TypeScript\r\n     * categoryAxis.renderer.ticks.template.disabled = false;\r\n     * categoryAxis.renderer.ticks.template.strokeOpacity = 0.5;\r\n     * ```\r\n     * ```JavaScript\r\n     * categoryAxis.renderer.ticks.template.disabled = false;\r\n     * categoryAxis.renderer.ticks.template.strokeOpacity = 0.5;\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"xAxes\": [{\r\n     *     // ...\r\n     *     \"renderer\": {\r\n     *       \"ticks\": {\r\n     *         \"disabled\": false,\r\n     *         \"strokeOpacity\": 0.5\r\n     *       }\r\n     *     }\r\n     *   }]\r\n     * }\r\n     * ```\r\n     *\r\n     * @return Tick elements\r\n     */\n    get: function () {\n      if (!this._ticks) {\n        var tick = this.createTick();\n        tick.applyOnClones = true;\n        tick.isMeasured = false;\n        tick.events.on(\"enabled\", this.invalidateAxisItems, this, false);\n        this._ticks = new ListTemplate(tick);\n        this._disposers.push(new ListDisposer(this._ticks));\n        this._disposers.push(this._ticks.template);\n      }\n      return this._ticks;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Returns a new tick element, suitable for this Axis Renderer type.\r\n   *\r\n   * @return Tick element\r\n   */\n  AxisRenderer.prototype.createTick = function () {\n    return new AxisTick();\n  };\n  Object.defineProperty(AxisRenderer.prototype, \"labels\", {\n    /**\r\n     * A list of Axis' Label elements.\r\n     *\r\n     * @return Label elements\r\n     */\n    get: function () {\n      if (!this._labels) {\n        var label = this.createLabel();\n        this._labels = new ListTemplate(label);\n        label.applyOnClones = true;\n        label.events.on(\"enabled\", this.invalidateAxisItems, this, false);\n        this._disposers.push(new ListDisposer(this._labels));\n        this._disposers.push(this._labels.template);\n      }\n      return this._labels;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Returns a new label element, suitable for this Axis Renderer type.\r\n   *\r\n   * @return Label element\r\n   */\n  AxisRenderer.prototype.createLabel = function () {\n    return new AxisLabel();\n  };\n  Object.defineProperty(AxisRenderer.prototype, \"inside\", {\n    /**\r\n     * @return Labels inside?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"inside\");\n    },\n    /**\r\n     * Indicates whether Axis' labels and ticks should be drawn inside Plot area.\r\n     *\r\n     * Does not work with all renderers, like AxisRendererRadial.\r\n     *\r\n     * @param value  Labels inside?\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"inside\", value)) {\n        if (this.axis) {\n          this.axis.invalidate();\n        }\n      }\n      if (value) {\n        this.width = 0;\n        this.height = 0;\n      } else {\n        this.width = undefined;\n        this.height = undefined;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"opposite\", {\n    /**\r\n     * @return Draw axis on opposite side?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"opposite\");\n    },\n    /**\r\n     * Indicates whether Axis should be drawn on the opposite side of the plot\r\n     * area than it would normally be drawn based on chart's settings.\r\n     *\r\n     * Does not work with all renderers, like [[AxisRendererRadial]] and\r\n     * [[AxisRenderer Circular].\r\n     *\r\n     * @param value  Draw axis on opposite side?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"opposite\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"fullWidthTooltip\", {\n    /**\r\n     * @return Full width tooltip?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"fullWidthTooltip\");\n    },\n    /**\r\n     * Indicates if Axis tooltip should take the whole width of the axis cell.\r\n     * (between two grid lines)\r\n     *\r\n     * NOTE: this setting is ignored on circular axis types.\r\n     *\r\n     * @param value Full width tooltip?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"fullWidthTooltip\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"tooltipLocation\", {\n    /**\r\n     * @return Tooltip location\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"tooltipLocation\");\n    },\n    /**\r\n     * Location within axis cell to show tooltip on. (0-1)\r\n     *\r\n     * 0 - show at the start\r\n     * 0.5 - show right in the middle\r\n     * 1 - show at the end\r\n     *\r\n     * @param value Tooltip location\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"tooltipLocation\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"tooltipLocation2\", {\n    /**\r\n     * @return Tooltip location\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"tooltipLocation2\");\n    },\n    /**\r\n     * Location within secondary axis cell to show tooltip on. (0-1)\r\n     *\r\n     * 0 - show at the start\r\n     * 0.5 - show right in the middle\r\n     * 1 - show at the end\r\n     *\r\n     * @param value Tooltip location\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"tooltipLocation2\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"cellStartLocation\", {\n    /**\r\n     * @return Cell start (0-1)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"cellStartLocation\");\n    },\n    /**\r\n     * Location for the cell start.\r\n     *\r\n     * Normally a \"cell\" is the whole available width in a category.\r\n     *\r\n     * If there are several clustered column-like series available, the whole\r\n     * space is divided between each clustered column, or column stacks.\r\n     *\r\n     * `cellStartLocation` identifies where, within available space, the actual\r\n     * cell starts.\r\n     *\r\n     * This, together with column series' `width` will affect actual width of\r\n     * columns, and thus gaps between them.\r\n     *\r\n     * This will affect category-like axes only, like [[DateAxis]], or\r\n     * [[CategoryAxis]].\r\n     *\r\n     * This is used to limit a space occupied by series like column.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n     * @param value Cell start (0-1)\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"cellStartLocation\", value)) {\n        if (this.axis) {\n          this.axis.invalidateSeries();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"cellEndLocation\", {\n    /**\r\n     * @return Cell end (0-1)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"cellEndLocation\");\n    },\n    /**\r\n     * Location for the cell end.\r\n     *\r\n     * Normally a \"cell\" is the whole available width in a category.\r\n     *\r\n     * If there are several clustered column-like series available, the whole\r\n     * space is divided between each clustered column, or column stacks.\r\n     *\r\n     * `cellEndLocation` identifies where, within available space, the actual\r\n     * cell ends.\r\n     *\r\n     * This, together with column series' `width` will affect actual width of\r\n     * columns, and thus gaps between them.\r\n     *\r\n     * This will affect category-like axes only, like [[DateAxis]], or\r\n     * [[CategoryAxis]].\r\n     *\r\n     * This is used to limit a space occupied by series like column.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n     * @param value Cell end (0-1)\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"cellEndLocation\", value)) {\n        if (this.axis) {\n          this.axis.invalidateSeries();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"inversed\", {\n    /**\r\n     * @return Flip axis?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"inversed\");\n    },\n    /**\r\n     * Indicates if the scale of the axis should be flipped.\r\n     *\r\n     * @param value Flip axis?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"inversed\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"minLabelPosition\", {\n    /**\r\n     * @return Min label position (0-1)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"minLabelPosition\");\n    },\n    /**\r\n     * Minimum position along the Axis, for labels.\r\n     *\r\n     * Labels, which have their position closer to the start of the Axis, will be\r\n     * automatically hidden.\r\n     *\r\n     * E.g., setting this to 0.05 (5% of total axis length) would hide labels,\r\n     * that would otherwise be drawn very near start of the Axis.\r\n     *\r\n     * This is especially usefull with `inside = true`, or if the chart hasn't\r\n     * got any extra margins.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n     * @param value  Min label position (0-1)\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"minLabelPosition\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"maxLabelPosition\", {\n    /**\r\n     * @return Max label position (0-1)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"maxLabelPosition\");\n    },\n    /**\r\n     * Maximum position along the Axis, for labels.\r\n     *\r\n     * Labels, which have their position closer to the and of the Axis, will be\r\n     * automatically hidden.\r\n     *\r\n     * E.g., setting this to 0.95 (95% of total axis length) would hide labels,\r\n     * that would otherwise be drawn very near end of the Axis.\r\n     *\r\n     * This is especially usefull with `inside = true`, or if the chart hasn't\r\n     * got any extra margins.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n     * @param value  Max label position (0-1)\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"maxLabelPosition\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Copies all settings and related items from another object of the same\r\n   * type.\r\n   *\r\n   * @param source  Source object\r\n   */\n  AxisRenderer.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n    this.grid.template.copyFrom(source.grid.template);\n    this.ticks.template.copyFrom(source.ticks.template);\n    this.labels.template.copyFrom(source.labels.template);\n    this.axisFills.template.copyFrom(source.axisFills.template);\n    this.line.copyFrom(source.line);\n    this.baseGrid.copyFrom(source.baseGrid);\n  };\n  /**\r\n   * @ignore\r\n   */\n  AxisRenderer.prototype.toAxisPosition = function (value) {\n    return value;\n  };\n  /**\r\n   * Sets `visibility` property:\r\n   *\r\n   * * `true` - visible\r\n   * * `false` - hidden\r\n   *\r\n   * @param value  true - visible, false - hidden\r\n   * @return Current visibility\r\n   */\n  AxisRenderer.prototype.setVisibility = function (value) {\n    _super.prototype.setVisibility.call(this, value);\n    this.bulletsContainer.visible = value;\n  };\n  return AxisRenderer;\n}(Container);\nexport { AxisRenderer };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"AxisRenderer\"] = AxisRenderer;","map":{"version":3,"names":["__extends","Container","MutableValueDisposer","AxisDataItem","AxisLine","AxisFill","Grid","AxisLabel","AxisTick","ListTemplate","ListDisposer","registry","percent","$math","$type","AxisRenderer","_super","_this","call","_chart","className","minGridDistance","inside","inversed","tooltipLocation","fullWidthTooltip","cellStartLocation","cellEndLocation","minLabelPosition","maxLabelPosition","shouldClone","gridContainer","createChild","layout","virtualParent","width","height","events","on","inited","invalidateAxisItems","breakContainer","isMeasured","bulletsContainer","line","strokeOpacity","baseGrid","disposers","_disposers","push","ticks","template","disabled","axisFills","interactionsEnabled","applyTheme","Object","defineProperty","prototype","get","_axis","set","axis","setAxis","enumerable","configurable","parent","bind","processRenderer","updateTooltip","labels","positionItem","item","point","moveTo","positionToPoint","position","position2","x","y","positionToAngle","positionToCoordinate","coordinate","axisFullLength","renderer","end","start","updateGridContainer","getHeight","pixelHeight","getWidth","pixelWidth","coordinateToPosition","coordinate2","round","pointToPosition","getPositionRangePath","startPosition","endPosition","invalidateDataItems","updateGridElement","grid","updateTickElement","tick","updateBullet","bullet","updateLabelElement","label","location","updateFillElement","fill","updateAxisLine","updateBaseGridElement","updateBreakElement","axisBreak","startLine","startPoint","toggleVisibility","endLine","endPoint","getPropertyValue","value","setPropertyValue","sprite","minPosition","maxPosition","dataItem","isNumber","updatedStart","updatedEnd","__disabled","createBreakSprites","_axisFills","createFill","applyOnClones","_grid","createGrid","_ticks","createTick","_labels","createLabel","invalidate","undefined","invalidateSeries","copyFrom","source","toAxisPosition","setVisibility","visible","registeredClasses"],"sources":["D:/alodelivery test/node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRenderer.js"],"sourcesContent":["/**\r\n * Module, defining base Axis Renderer.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../../core/Container\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { AxisDataItem } from \"./Axis\";\r\nimport { AxisLine } from \"./AxisLine\";\r\nimport { AxisFill } from \"./AxisFill\";\r\nimport { Grid } from \"./Grid\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A base class for all axis renderers.\r\n *\r\n * @see {@link IAxisRendererEvents} for a list of available events\r\n * @see {@link IAxisRendererAdapters} for a list of available Adapters\r\n */\r\nvar AxisRenderer = /** @class */ (function (_super) {\r\n    __extends(AxisRenderer, _super);\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param axis Related axis\r\n     */\r\n    function AxisRenderer() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * A related chart.\r\n         */\r\n        _this._chart = new MutableValueDisposer();\r\n        _this.className = \"AxisRenderer\";\r\n        // Set defaults\r\n        _this.minGridDistance = 50;\r\n        _this.inside = false;\r\n        _this.inversed = false;\r\n        _this.tooltipLocation = 0.5;\r\n        _this.fullWidthTooltip = false;\r\n        _this.cellStartLocation = 0;\r\n        _this.cellEndLocation = 1;\r\n        _this.minLabelPosition = 0;\r\n        _this.maxLabelPosition = 1;\r\n        _this.shouldClone = false;\r\n        var gridContainer = _this.createChild(Container);\r\n        gridContainer.shouldClone = false;\r\n        gridContainer.layout = \"none\";\r\n        //\tgridContainer.isMeasured = false;\r\n        gridContainer.virtualParent = _this;\r\n        gridContainer.width = percent(100);\r\n        gridContainer.height = percent(100);\r\n        _this.gridContainer = gridContainer;\r\n        // not good without this\r\n        gridContainer.events.on(\"maxsizechanged\", function () {\r\n            if (_this.inited) {\r\n                _this.invalidateAxisItems();\r\n            }\r\n        }, _this, false);\r\n        var breakContainer = _this.createChild(Container);\r\n        breakContainer.shouldClone = false;\r\n        breakContainer.isMeasured = false;\r\n        breakContainer.layout = \"none\";\r\n        breakContainer.width = percent(100);\r\n        breakContainer.height = percent(100);\r\n        _this.breakContainer = breakContainer;\r\n        var bulletsContainer = _this.createChild(Container);\r\n        bulletsContainer.shouldClone = false;\r\n        bulletsContainer.isMeasured = false;\r\n        bulletsContainer.layout = \"none\";\r\n        bulletsContainer.width = percent(100);\r\n        bulletsContainer.height = percent(100);\r\n        _this.bulletsContainer = bulletsContainer;\r\n        _this.line = _this.createChild(AxisLine);\r\n        _this.line.shouldClone = false;\r\n        _this.line.strokeOpacity = 0;\r\n        var baseGrid = _this.createChild(Grid);\r\n        baseGrid.shouldClone = false;\r\n        _this.baseGrid = baseGrid;\r\n        // Make elements disposable\r\n        var disposers = _this._disposers;\r\n        disposers.push(baseGrid);\r\n        disposers.push(_this.line);\r\n        disposers.push(gridContainer);\r\n        disposers.push(breakContainer);\r\n        disposers.push(bulletsContainer);\r\n        disposers.push(_this._chart);\r\n        _this.ticks.template.disabled = true;\r\n        _this.axisFills.template.disabled = true;\r\n        _this.axisFills.template.interactionsEnabled = false;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(AxisRenderer.prototype, \"axis\", {\r\n        /**\r\n         * Axis of a renderer\r\n         * @return axis Axis\r\n         */\r\n        get: function () {\r\n            return this._axis;\r\n        },\r\n        /**\r\n         * Axis of a renderer\r\n         * @param axis Axis\r\n         */\r\n        set: function (axis) {\r\n            this.setAxis(axis);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * @ignore\r\n    */\r\n    AxisRenderer.prototype.setAxis = function (axis) {\r\n        this._axis = axis;\r\n        this.baseGrid.parent = axis;\r\n        this.line.parent = axis;\r\n        this.gridContainer.bind(\"opacity\", axis);\r\n    };\r\n    /**\r\n     * Called when rendered is attached to an Axis, as well as a property of\r\n     * Axis that might affect the appearance is updated.\r\n     *\r\n     * E.g. `axis.opposite`, `axis.inside`, etc.\r\n     *\r\n     * This method is called **before** draw, so that any related setting\r\n     * changed in this method can be changed.\r\n     *\r\n     * @todo Description (review)\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRenderer.prototype.processRenderer = function () {\r\n        this.events.on(\"sizechanged\", this.updateTooltip, this, false);\r\n        this.events.on(\"positionchanged\", this.updateTooltip, this, false);\r\n        this.labels.template.inside = this.inside;\r\n        this.ticks.template.inside = this.inside;\r\n    };\r\n    /**\r\n     * Updates Axis' tooltip.\r\n     *\r\n     * @todo Description (review)\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRenderer.prototype.updateTooltip = function () {\r\n        // This is a placeholder method for extending classes to override.\r\n    };\r\n    Object.defineProperty(AxisRenderer.prototype, \"axisLength\", {\r\n        /**\r\n         * Returns actual length of the Axis, in pixels.\r\n         *\r\n         * @return Length (px)\r\n         */\r\n        get: function () {\r\n            // This is a placeholder method for extending classes to override.\r\n            return 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Re-positions an element to new coordinates.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param item   A target element\r\n     * @param point  New coordinates\r\n     */\r\n    AxisRenderer.prototype.positionItem = function (item, point) {\r\n        if (item) {\r\n            item.moveTo(point);\r\n        }\r\n    };\r\n    /**\r\n     * Converts relative position on axis to point coordinates.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @return Point\r\n     */\r\n    AxisRenderer.prototype.positionToPoint = function (position, position2) {\r\n        // This is a placeholder method for extending classes to override.\r\n        return { x: 0, y: 0 };\r\n    };\r\n    /**\r\n     * Converts relative position on axis to angle.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review / units)\r\n     * @param position  Position (0-1)\r\n     * @return Angle\r\n     */\r\n    AxisRenderer.prototype.positionToAngle = function (position) {\r\n        // This is a placeholder method for extending classes to override.\r\n        return 0;\r\n    };\r\n    /**\r\n     * Converts relative position (0-1) on axis to a pixel coordinate.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @return Coordinate (px)\r\n     */\r\n    AxisRenderer.prototype.positionToCoordinate = function (position) {\r\n        var coordinate;\r\n        var axis = this.axis;\r\n        var axisFullLength = axis.axisFullLength;\r\n        if (axis.renderer.inversed) {\r\n            coordinate = (axis.end - position) * axisFullLength;\r\n        }\r\n        else {\r\n            coordinate = (position - axis.start) * axisFullLength;\r\n        }\r\n        return coordinate;\r\n    };\r\n    AxisRenderer.prototype.updateGridContainer = function () {\r\n    };\r\n    AxisRenderer.prototype.getHeight = function () {\r\n        var gridContainer = this.gridContainer;\r\n        if (gridContainer.parent) {\r\n            return gridContainer.parent.pixelHeight;\r\n        }\r\n        return this.gridContainer.pixelHeight || 0;\r\n    };\r\n    AxisRenderer.prototype.getWidth = function () {\r\n        var gridContainer = this.gridContainer;\r\n        if (gridContainer.parent) {\r\n            return gridContainer.parent.pixelWidth;\r\n        }\r\n        return this.gridContainer.pixelWidth || 0;\r\n    };\r\n    /**\r\n     * Converts a coordinate in pixels to a relative position. (0-1)\r\n     *\r\n     * @param coordinate  Coordinate (px)\r\n     * @param coordinate2  Coordinate of a second axis, only needed for complex axes systems, like timeline (px)\r\n     * @return Position (0-1)\r\n     */\r\n    AxisRenderer.prototype.coordinateToPosition = function (coordinate, coordinate2) {\r\n        var position;\r\n        var axis = this.axis;\r\n        var axisFullLength = axis.axisFullLength;\r\n        if (axis.renderer.inversed) {\r\n            position = axis.end - coordinate / axisFullLength;\r\n        }\r\n        else {\r\n            position = coordinate / axisFullLength + axis.start;\r\n        }\r\n        return $math.round(position, 5);\r\n    };\r\n    /**\r\n     * Converts a point at specific coordinates to a relative position (0-1)\r\n     * on the axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param point  Point\r\n     * @return Position (0-1)\r\n     */\r\n    AxisRenderer.prototype.pointToPosition = function (point) {\r\n        // This is a placeholder method for extending classes to override.\r\n        return 0;\r\n    };\r\n    /**\r\n     * [getPositionRangePath description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param startPosition  Starting position\r\n     * @param endPosition    End position\r\n     * @return SVG path\r\n     */\r\n    AxisRenderer.prototype.getPositionRangePath = function (startPosition, endPosition) {\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Invalidates all axis data items, effectively causing them re-evaluated.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     */\r\n    AxisRenderer.prototype.invalidateAxisItems = function () {\r\n        var axis = this.axis;\r\n        if (axis) {\r\n            axis.invalidateDataItems();\r\n        }\r\n    };\r\n    /**\r\n     * Updates and positions a grid element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param grid         Grid element\r\n     * @param position     Starting position\r\n     * @param endPosition  End position\r\n     */\r\n    AxisRenderer.prototype.updateGridElement = function (grid, position, endPosition) {\r\n        // This is a placeholder method for extending classes to override.\r\n    };\r\n    /**\r\n     * Updates and positions a tick element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param tick         Tick element\r\n     * @param position     Starting position\r\n     * @param endPosition  End position\r\n     */\r\n    AxisRenderer.prototype.updateTickElement = function (tick, position, endPosition) {\r\n        // This is a placeholder method for extending classes to override.\r\n    };\r\n    /**\r\n     * Updates and positions axis bullet.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param bullet       AxisBullet element\r\n     * @param position     Starting position\r\n     * @param endPosition  End position\r\n     */\r\n    AxisRenderer.prototype.updateBullet = function (bullet, position, endPosition) {\r\n        // This is a placeholder method for extending classes to override.\r\n    };\r\n    /**\r\n     * Updates and positions a label element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param label        Label element\r\n     * @param position     Starting position\r\n     * @param endPosition  Ending position\r\n     */\r\n    AxisRenderer.prototype.updateLabelElement = function (label, position, endPosition, location) {\r\n        // This is a placeholder method for extending classes to override.\r\n    };\r\n    /**\r\n     * Updates and positions the axis fill element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param fill         Fill element\r\n     * @param position     Starting position\r\n     * @param endPosition  Ending position\r\n     */\r\n    AxisRenderer.prototype.updateFillElement = function (fill, position, endPosition) {\r\n        fill.startPosition = position;\r\n        fill.endPosition = endPosition;\r\n    };\r\n    /**\r\n     * Updates and positions the axis line element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRenderer.prototype.updateAxisLine = function () {\r\n        // This is a placeholder method for extending classes to override.\r\n    };\r\n    /**\r\n     * Updates and positions the base grid element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRenderer.prototype.updateBaseGridElement = function () {\r\n        // This is a placeholder method for extending classes to override.\r\n    };\r\n    /**\r\n     * Updates and positions an axis break element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axisBreak Break element\r\n     */\r\n    AxisRenderer.prototype.updateBreakElement = function (axisBreak) {\r\n        this.positionItem(axisBreak.startLine, axisBreak.startPoint);\r\n        this.toggleVisibility(axisBreak.startLine, axisBreak.startPosition, 0, 1);\r\n        this.positionItem(axisBreak.endLine, axisBreak.endPoint);\r\n        this.toggleVisibility(axisBreak.endLine, axisBreak.endPosition, 0, 1);\r\n    };\r\n    Object.defineProperty(AxisRenderer.prototype, \"minGridDistance\", {\r\n        /**\r\n         * @return Min distance (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"minGridDistance\");\r\n        },\r\n        /**\r\n         * Minimum distance in pixels between grid elements.\r\n         *\r\n         * Use it to control density of the grid/labels on the axis.element.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/#Setting_the_density_of_the_the_grid_labels} for more info\r\n         * @param value  Min distance (px)\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"minGridDistance\", value)) {\r\n                if (this.axis) {\r\n                    this.axis.invalidateDataItems();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"chart\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Chart\r\n         */\r\n        get: function () {\r\n            return this._chart.get();\r\n        },\r\n        /**\r\n         * A chart, associated with the Axis.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value  Chart\r\n         */\r\n        set: function (value) {\r\n            this._chart.set(value, null);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Toggles visibility of an element, based on its current position and\r\n     * min/max position settings.\r\n     *\r\n     * E.g. labels based on `minLabelPosition` and `maxLabelPosition`.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param sprite       An element to toggle\r\n     * @param position     Elements current position\r\n     * @param minPosition  Min position setting\r\n     * @param maxPosition  Max position setting\r\n     */\r\n    AxisRenderer.prototype.toggleVisibility = function (sprite, position, minPosition, maxPosition) {\r\n        var axis = this.axis;\r\n        var dataItem = sprite.dataItem;\r\n        if (dataItem && dataItem instanceof AxisDataItem) {\r\n            if ($type.isNumber(dataItem.minPosition)) {\r\n                minPosition = dataItem.minPosition;\r\n            }\r\n            if ($type.isNumber(dataItem.maxPosition)) {\r\n                maxPosition = dataItem.maxPosition;\r\n            }\r\n        }\r\n        var updatedStart = axis.start + (axis.end - axis.start) * (minPosition - 0.0001);\r\n        var updatedEnd = axis.start + (axis.end - axis.start) * (maxPosition + 0.0001);\r\n        if (!sprite.disabled) {\r\n            if (position < updatedStart || position > updatedEnd) {\r\n                sprite.__disabled = true;\r\n            }\r\n            else {\r\n                sprite.__disabled = false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Creates visual elements for and axis break.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axisBreak Axis break\r\n     */\r\n    AxisRenderer.prototype.createBreakSprites = function (axisBreak) {\r\n        // This is a placeholder method for extending classes to override.\r\n    };\r\n    Object.defineProperty(AxisRenderer.prototype, \"axisFills\", {\r\n        /**\r\n         * A list of Axis' Fill elements.\r\n         *\r\n         * Those are fill elements that cover the space between every second set\r\n         * of grid lines, and can be configured to create striped charts.\r\n         *\r\n         * Please note that these are disabled by default. To enable them, set\r\n         * template to true.\r\n         *\r\n         * ```TypeScript\r\n         * categoryAxis.renderer.axisFills.template.disabled = false;\r\n         * ```\r\n         * ```JavaScript\r\n         * categoryAxis.renderer.axisFills.template.disabled = false;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"xAxes\": [{\r\n         *     // ...\r\n         *     \"renderer\": {\r\n         *       \"axisFills\": {\r\n         *         \"disabled\": false\r\n         *       }\r\n         *     }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/tutorials/alternated-axis-fills/} this tutorial for more info.\r\n         * @return Fill elements\r\n         */\r\n        get: function () {\r\n            if (!this._axisFills) {\r\n                var fill = this.createFill(this.axis);\r\n                this._axisFills = new ListTemplate(fill);\r\n                fill.applyOnClones = true;\r\n                fill.events.on(\"enabled\", this.invalidateAxisItems, this, false);\r\n                this._disposers.push(new ListDisposer(this._axisFills));\r\n                this._disposers.push(this._axisFills.template);\r\n            }\r\n            return this._axisFills;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a new fill element, suitable for this Axis Renderer type.\r\n     *\r\n     * @return Fill element\r\n     */\r\n    AxisRenderer.prototype.createFill = function (axis) {\r\n        return new AxisFill(axis);\r\n    };\r\n    Object.defineProperty(AxisRenderer.prototype, \"grid\", {\r\n        /**\r\n         * A list of Axis' Grid elements.\r\n         *\r\n         * @return Grid elements\r\n         */\r\n        get: function () {\r\n            if (!this._grid) {\r\n                var grid = this.createGrid();\r\n                this._grid = new ListTemplate(grid);\r\n                grid.applyOnClones = true;\r\n                grid.events.on(\"enabled\", this.invalidateAxisItems, this, false);\r\n                this._disposers.push(new ListDisposer(this._grid));\r\n                this._disposers.push(this._grid.template);\r\n            }\r\n            return this._grid;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a new grid element, suitable for this Axis Renderer type.\r\n     *\r\n     * @return Grid element\r\n     */\r\n    AxisRenderer.prototype.createGrid = function () {\r\n        return new Grid();\r\n    };\r\n    Object.defineProperty(AxisRenderer.prototype, \"ticks\", {\r\n        /**\r\n         * A list of Axis' Tick elements.\r\n         *\r\n         * Please note that these are disabled by default. To enable ticks, you'll\r\n         * need to set `disabled` and `strokeOpacity` properties of the tick template.\r\n         *\r\n         * ```TypeScript\r\n         * categoryAxis.renderer.ticks.template.disabled = false;\r\n         * categoryAxis.renderer.ticks.template.strokeOpacity = 0.5;\r\n         * ```\r\n         * ```JavaScript\r\n         * categoryAxis.renderer.ticks.template.disabled = false;\r\n         * categoryAxis.renderer.ticks.template.strokeOpacity = 0.5;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"xAxes\": [{\r\n         *     // ...\r\n         *     \"renderer\": {\r\n         *       \"ticks\": {\r\n         *         \"disabled\": false,\r\n         *         \"strokeOpacity\": 0.5\r\n         *       }\r\n         *     }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @return Tick elements\r\n         */\r\n        get: function () {\r\n            if (!this._ticks) {\r\n                var tick = this.createTick();\r\n                tick.applyOnClones = true;\r\n                tick.isMeasured = false;\r\n                tick.events.on(\"enabled\", this.invalidateAxisItems, this, false);\r\n                this._ticks = new ListTemplate(tick);\r\n                this._disposers.push(new ListDisposer(this._ticks));\r\n                this._disposers.push(this._ticks.template);\r\n            }\r\n            return this._ticks;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a new tick element, suitable for this Axis Renderer type.\r\n     *\r\n     * @return Tick element\r\n     */\r\n    AxisRenderer.prototype.createTick = function () {\r\n        return new AxisTick();\r\n    };\r\n    Object.defineProperty(AxisRenderer.prototype, \"labels\", {\r\n        /**\r\n         * A list of Axis' Label elements.\r\n         *\r\n         * @return Label elements\r\n         */\r\n        get: function () {\r\n            if (!this._labels) {\r\n                var label = this.createLabel();\r\n                this._labels = new ListTemplate(label);\r\n                label.applyOnClones = true;\r\n                label.events.on(\"enabled\", this.invalidateAxisItems, this, false);\r\n                this._disposers.push(new ListDisposer(this._labels));\r\n                this._disposers.push(this._labels.template);\r\n            }\r\n            return this._labels;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a new label element, suitable for this Axis Renderer type.\r\n     *\r\n     * @return Label element\r\n     */\r\n    AxisRenderer.prototype.createLabel = function () {\r\n        return new AxisLabel();\r\n    };\r\n    Object.defineProperty(AxisRenderer.prototype, \"inside\", {\r\n        /**\r\n         * @return Labels inside?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"inside\");\r\n        },\r\n        /**\r\n         * Indicates whether Axis' labels and ticks should be drawn inside Plot area.\r\n         *\r\n         * Does not work with all renderers, like AxisRendererRadial.\r\n         *\r\n         * @param value  Labels inside?\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"inside\", value)) {\r\n                if (this.axis) {\r\n                    this.axis.invalidate();\r\n                }\r\n            }\r\n            if (value) {\r\n                this.width = 0;\r\n                this.height = 0;\r\n            }\r\n            else {\r\n                this.width = undefined;\r\n                this.height = undefined;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"opposite\", {\r\n        /**\r\n         * @return Draw axis on opposite side?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"opposite\");\r\n        },\r\n        /**\r\n         * Indicates whether Axis should be drawn on the opposite side of the plot\r\n         * area than it would normally be drawn based on chart's settings.\r\n         *\r\n         * Does not work with all renderers, like [[AxisRendererRadial]] and\r\n         * [[AxisRenderer Circular].\r\n         *\r\n         * @param value  Draw axis on opposite side?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"opposite\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"fullWidthTooltip\", {\r\n        /**\r\n         * @return Full width tooltip?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"fullWidthTooltip\");\r\n        },\r\n        /**\r\n         * Indicates if Axis tooltip should take the whole width of the axis cell.\r\n         * (between two grid lines)\r\n         *\r\n         * NOTE: this setting is ignored on circular axis types.\r\n         *\r\n         * @param value Full width tooltip?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"fullWidthTooltip\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"tooltipLocation\", {\r\n        /**\r\n         * @return Tooltip location\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"tooltipLocation\");\r\n        },\r\n        /**\r\n         * Location within axis cell to show tooltip on. (0-1)\r\n         *\r\n         * 0 - show at the start\r\n         * 0.5 - show right in the middle\r\n         * 1 - show at the end\r\n         *\r\n         * @param value Tooltip location\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"tooltipLocation\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"tooltipLocation2\", {\r\n        /**\r\n         * @return Tooltip location\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"tooltipLocation2\");\r\n        },\r\n        /**\r\n         * Location within secondary axis cell to show tooltip on. (0-1)\r\n         *\r\n         * 0 - show at the start\r\n         * 0.5 - show right in the middle\r\n         * 1 - show at the end\r\n         *\r\n         * @param value Tooltip location\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"tooltipLocation2\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"cellStartLocation\", {\r\n        /**\r\n         * @return Cell start (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"cellStartLocation\");\r\n        },\r\n        /**\r\n         * Location for the cell start.\r\n         *\r\n         * Normally a \"cell\" is the whole available width in a category.\r\n         *\r\n         * If there are several clustered column-like series available, the whole\r\n         * space is divided between each clustered column, or column stacks.\r\n         *\r\n         * `cellStartLocation` identifies where, within available space, the actual\r\n         * cell starts.\r\n         *\r\n         * This, together with column series' `width` will affect actual width of\r\n         * columns, and thus gaps between them.\r\n         *\r\n         * This will affect category-like axes only, like [[DateAxis]], or\r\n         * [[CategoryAxis]].\r\n         *\r\n         * This is used to limit a space occupied by series like column.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n         * @param value Cell start (0-1)\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"cellStartLocation\", value)) {\r\n                if (this.axis) {\r\n                    this.axis.invalidateSeries();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"cellEndLocation\", {\r\n        /**\r\n         * @return Cell end (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"cellEndLocation\");\r\n        },\r\n        /**\r\n         * Location for the cell end.\r\n         *\r\n         * Normally a \"cell\" is the whole available width in a category.\r\n         *\r\n         * If there are several clustered column-like series available, the whole\r\n         * space is divided between each clustered column, or column stacks.\r\n         *\r\n         * `cellEndLocation` identifies where, within available space, the actual\r\n         * cell ends.\r\n         *\r\n         * This, together with column series' `width` will affect actual width of\r\n         * columns, and thus gaps between them.\r\n         *\r\n         * This will affect category-like axes only, like [[DateAxis]], or\r\n         * [[CategoryAxis]].\r\n         *\r\n         * This is used to limit a space occupied by series like column.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n         * @param value Cell end (0-1)\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"cellEndLocation\", value)) {\r\n                if (this.axis) {\r\n                    this.axis.invalidateSeries();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"inversed\", {\r\n        /**\r\n         * @return Flip axis?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"inversed\");\r\n        },\r\n        /**\r\n         * Indicates if the scale of the axis should be flipped.\r\n         *\r\n         * @param value Flip axis?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"inversed\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"minLabelPosition\", {\r\n        /**\r\n         * @return Min label position (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"minLabelPosition\");\r\n        },\r\n        /**\r\n         * Minimum position along the Axis, for labels.\r\n         *\r\n         * Labels, which have their position closer to the start of the Axis, will be\r\n         * automatically hidden.\r\n         *\r\n         * E.g., setting this to 0.05 (5% of total axis length) would hide labels,\r\n         * that would otherwise be drawn very near start of the Axis.\r\n         *\r\n         * This is especially usefull with `inside = true`, or if the chart hasn't\r\n         * got any extra margins.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n         * @param value  Min label position (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"minLabelPosition\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"maxLabelPosition\", {\r\n        /**\r\n         * @return Max label position (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"maxLabelPosition\");\r\n        },\r\n        /**\r\n         * Maximum position along the Axis, for labels.\r\n         *\r\n         * Labels, which have their position closer to the and of the Axis, will be\r\n         * automatically hidden.\r\n         *\r\n         * E.g., setting this to 0.95 (95% of total axis length) would hide labels,\r\n         * that would otherwise be drawn very near end of the Axis.\r\n         *\r\n         * This is especially usefull with `inside = true`, or if the chart hasn't\r\n         * got any extra margins.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n         * @param value  Max label position (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"maxLabelPosition\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Copies all settings and related items from another object of the same\r\n     * type.\r\n     *\r\n     * @param source  Source object\r\n     */\r\n    AxisRenderer.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.grid.template.copyFrom(source.grid.template);\r\n        this.ticks.template.copyFrom(source.ticks.template);\r\n        this.labels.template.copyFrom(source.labels.template);\r\n        this.axisFills.template.copyFrom(source.axisFills.template);\r\n        this.line.copyFrom(source.line);\r\n        this.baseGrid.copyFrom(source.baseGrid);\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    AxisRenderer.prototype.toAxisPosition = function (value) {\r\n        return value;\r\n    };\r\n    /**\r\n     * Sets `visibility` property:\r\n     *\r\n     * * `true` - visible\r\n     * * `false` - hidden\r\n     *\r\n     * @param value  true - visible, false - hidden\r\n     * @return Current visibility\r\n     */\r\n    AxisRenderer.prototype.setVisibility = function (value) {\r\n        _super.prototype.setVisibility.call(this, value);\r\n        this.bulletsContainer.visible = value;\r\n    };\r\n    return AxisRenderer;\r\n}(Container));\r\nexport { AxisRenderer };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisRenderer\"] = AxisRenderer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}