{"ast":null,"code":"import * as i1 from '@angular/cdk/overlay';\nimport { OverlayModule, OverlayConfig, Overlay } from '@angular/cdk/overlay';\nimport { BasePortalOutlet, CdkPortalOutlet, PortalModule, TemplatePortal, ComponentPortal } from '@angular/cdk/portal';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, ChangeDetectorRef, Optional, Inject, ViewChild, NgModule, TemplateRef, Injector, Injectable, SkipSelf } from '@angular/core';\nimport { AnimationDurations, AnimationCurves, MatCommonModule } from '@angular/material/core';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { DOCUMENT } from '@angular/common';\nimport { FocusTrapFactory } from '@angular/cdk/a11y';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Subject, merge, of } from 'rxjs';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { filter, take } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to access the data that was passed in to a bottom sheet. */\nconst MAT_BOTTOM_SHEET_DATA = new InjectionToken('MatBottomSheetData');\n/**\n * Configuration used when opening a bottom sheet.\n */\nclass MatBottomSheetConfig {\n  constructor() {\n    /** Data being injected into the child component. */\n    this.data = null;\n    /** Whether the bottom sheet has a backdrop. */\n    this.hasBackdrop = true;\n    /** Whether the user can use escape or clicking outside to close the bottom sheet. */\n    this.disableClose = false;\n    /** Aria label to assign to the bottom sheet element. */\n    this.ariaLabel = null;\n    /**\n     * Whether the bottom sheet should close when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     */\n    this.closeOnNavigation = true;\n    // Note that this is disabled by default, because while the a11y recommendations are to focus\n    // the first focusable element, doing so prevents screen readers from reading out the\n    // rest of the bottom sheet content.\n    /** Whether the bottom sheet should focus the first focusable element on open. */\n    this.autoFocus = false;\n    /**\n     * Whether the bottom sheet should restore focus to the\n     * previously-focused element, after it's closed.\n     */\n    this.restoreFocus = true;\n  }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Animations used by the Material bottom sheet. */\nconst matBottomSheetAnimations = {\n  /** Animation that shows and hides a bottom sheet. */\n  bottomSheetState: trigger('state', [state('void, hidden', style({\n    transform: 'translateY(100%)'\n  })), state('visible', style({\n    transform: 'translateY(0%)'\n  })), transition('visible => void, visible => hidden', animate(`${AnimationDurations.COMPLEX} ${AnimationCurves.ACCELERATION_CURVE}`)), transition('void => visible', animate(`${AnimationDurations.EXITING} ${AnimationCurves.DECELERATION_CURVE}`))])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(crisbeto): consolidate some logic between this, MatDialog and MatSnackBar\n/**\n * Internal component that wraps user-provided bottom sheet content.\n * @docs-private\n */\nclass MatBottomSheetContainer extends BasePortalOutlet {\n  constructor(_elementRef, _changeDetectorRef, _focusTrapFactory, breakpointObserver, document, /** The bottom sheet configuration. */\n  bottomSheetConfig) {\n    super();\n    this._elementRef = _elementRef;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._focusTrapFactory = _focusTrapFactory;\n    this.bottomSheetConfig = bottomSheetConfig;\n    /** The state of the bottom sheet animations. */\n    this._animationState = 'void';\n    /** Emits whenever the state of the animation changes. */\n    this._animationStateChanged = new EventEmitter();\n    /** Element that was focused before the bottom sheet was opened. */\n    this._elementFocusedBeforeOpened = null;\n    /**\n     * Attaches a DOM portal to the bottom sheet container.\n     * @deprecated To be turned into a method.\n     * @breaking-change 10.0.0\n     */\n    this.attachDomPortal = portal => {\n      this._validatePortalAttached();\n      this._setPanelClass();\n      this._savePreviouslyFocusedElement();\n      return this._portalOutlet.attachDomPortal(portal);\n    };\n    this._document = document;\n    this._breakpointSubscription = breakpointObserver.observe([Breakpoints.Medium, Breakpoints.Large, Breakpoints.XLarge]).subscribe(() => {\n      this._toggleClass('mat-bottom-sheet-container-medium', breakpointObserver.isMatched(Breakpoints.Medium));\n      this._toggleClass('mat-bottom-sheet-container-large', breakpointObserver.isMatched(Breakpoints.Large));\n      this._toggleClass('mat-bottom-sheet-container-xlarge', breakpointObserver.isMatched(Breakpoints.XLarge));\n    });\n  }\n  /** Attach a component portal as content to this bottom sheet container. */\n  attachComponentPortal(portal) {\n    this._validatePortalAttached();\n    this._setPanelClass();\n    this._savePreviouslyFocusedElement();\n    return this._portalOutlet.attachComponentPortal(portal);\n  }\n  /** Attach a template portal as content to this bottom sheet container. */\n  attachTemplatePortal(portal) {\n    this._validatePortalAttached();\n    this._setPanelClass();\n    this._savePreviouslyFocusedElement();\n    return this._portalOutlet.attachTemplatePortal(portal);\n  }\n  /** Begin animation of bottom sheet entrance into view. */\n  enter() {\n    if (!this._destroyed) {\n      this._animationState = 'visible';\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n  /** Begin animation of the bottom sheet exiting from view. */\n  exit() {\n    if (!this._destroyed) {\n      this._animationState = 'hidden';\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  ngOnDestroy() {\n    this._breakpointSubscription.unsubscribe();\n    this._destroyed = true;\n  }\n  _onAnimationDone(event) {\n    if (event.toState === 'hidden') {\n      this._restoreFocus();\n    } else if (event.toState === 'visible') {\n      this._trapFocus();\n    }\n    this._animationStateChanged.emit(event);\n  }\n  _onAnimationStart(event) {\n    this._animationStateChanged.emit(event);\n  }\n  _toggleClass(cssClass, add) {\n    const classList = this._elementRef.nativeElement.classList;\n    add ? classList.add(cssClass) : classList.remove(cssClass);\n  }\n  _validatePortalAttached() {\n    if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('Attempting to attach bottom sheet content after content is already attached');\n    }\n  }\n  _setPanelClass() {\n    const element = this._elementRef.nativeElement;\n    const panelClass = this.bottomSheetConfig.panelClass;\n    if (Array.isArray(panelClass)) {\n      // Note that we can't use a spread here, because IE doesn't support multiple arguments.\n      panelClass.forEach(cssClass => element.classList.add(cssClass));\n    } else if (panelClass) {\n      element.classList.add(panelClass);\n    }\n  }\n  /** Moves the focus inside the focus trap. */\n  _trapFocus() {\n    const element = this._elementRef.nativeElement;\n    if (!this._focusTrap) {\n      this._focusTrap = this._focusTrapFactory.create(element);\n    }\n    if (this.bottomSheetConfig.autoFocus) {\n      this._focusTrap.focusInitialElementWhenReady();\n    } else {\n      const activeElement = _getFocusedElementPierceShadowDom();\n      // Otherwise ensure that focus is on the container. It's possible that a different\n      // component tried to move focus while the open animation was running. See:\n      // https://github.com/angular/components/issues/16215. Note that we only want to do this\n      // if the focus isn't inside the bottom sheet already, because it's possible that the\n      // consumer turned off `autoFocus` in order to move focus themselves.\n      if (activeElement !== element && !element.contains(activeElement)) {\n        element.focus();\n      }\n    }\n  }\n  /** Restores focus to the element that was focused before the bottom sheet was opened. */\n  _restoreFocus() {\n    const toFocus = this._elementFocusedBeforeOpened;\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\n    if (this.bottomSheetConfig.restoreFocus && toFocus && typeof toFocus.focus === 'function') {\n      const activeElement = _getFocusedElementPierceShadowDom();\n      const element = this._elementRef.nativeElement;\n      // Make sure that focus is still inside the bottom sheet or is on the body (usually because a\n      // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n      // the consumer moved it themselves before the animation was done, in which case we shouldn't\n      // do anything.\n      if (!activeElement || activeElement === this._document.body || activeElement === element || element.contains(activeElement)) {\n        toFocus.focus();\n      }\n    }\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n    }\n  }\n  /** Saves a reference to the element that was focused before the bottom sheet was opened. */\n  _savePreviouslyFocusedElement() {\n    this._elementFocusedBeforeOpened = _getFocusedElementPierceShadowDom();\n    // The `focus` method isn't available during server-side rendering.\n    if (this._elementRef.nativeElement.focus) {\n      Promise.resolve().then(() => this._elementRef.nativeElement.focus());\n    }\n  }\n}\nMatBottomSheetContainer.decorators = [{\n  type: Component,\n  args: [{\n    selector: 'mat-bottom-sheet-container',\n    template: \"<ng-template cdkPortalOutlet></ng-template>\\r\\n\",\n    // In Ivy embedded views will be change detected from their declaration place, rather than where\n    // they were stamped out. This means that we can't have the bottom sheet container be OnPush,\n    // because it might cause the sheets that were opened from a template not to be out of date.\n    // tslint:disable-next-line:validate-decorators\n    changeDetection: ChangeDetectionStrategy.Default,\n    encapsulation: ViewEncapsulation.None,\n    animations: [matBottomSheetAnimations.bottomSheetState],\n    host: {\n      'class': 'mat-bottom-sheet-container',\n      'tabindex': '-1',\n      'role': 'dialog',\n      'aria-modal': 'true',\n      '[attr.aria-label]': 'bottomSheetConfig?.ariaLabel',\n      '[@state]': '_animationState',\n      '(@state.start)': '_onAnimationStart($event)',\n      '(@state.done)': '_onAnimationDone($event)'\n    },\n    styles: [\".mat-bottom-sheet-container{padding:8px 16px;min-width:100vw;box-sizing:border-box;display:block;outline:0;max-height:80vh;overflow:auto}.cdk-high-contrast-active .mat-bottom-sheet-container{outline:1px solid}.mat-bottom-sheet-container-xlarge,.mat-bottom-sheet-container-large,.mat-bottom-sheet-container-medium{border-top-left-radius:4px;border-top-right-radius:4px}.mat-bottom-sheet-container-medium{min-width:384px;max-width:calc(100vw - 128px)}.mat-bottom-sheet-container-large{min-width:512px;max-width:calc(100vw - 256px)}.mat-bottom-sheet-container-xlarge{min-width:576px;max-width:calc(100vw - 384px)}\\n\"]\n  }]\n}];\nMatBottomSheetContainer.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: FocusTrapFactory\n}, {\n  type: BreakpointObserver\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}, {\n  type: MatBottomSheetConfig\n}];\nMatBottomSheetContainer.propDecorators = {\n  _portalOutlet: [{\n    type: ViewChild,\n    args: [CdkPortalOutlet, {\n      static: true\n    }]\n  }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatBottomSheetModule {}\nMatBottomSheetModule.decorators = [{\n  type: NgModule,\n  args: [{\n    imports: [OverlayModule, MatCommonModule, PortalModule],\n    exports: [MatBottomSheetContainer, MatCommonModule],\n    declarations: [MatBottomSheetContainer],\n    entryComponents: [MatBottomSheetContainer]\n  }]\n}];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to a bottom sheet dispatched from the bottom sheet service.\n */\nclass MatBottomSheetRef {\n  constructor(containerInstance, _overlayRef) {\n    this._overlayRef = _overlayRef;\n    /** Subject for notifying the user that the bottom sheet has been dismissed. */\n    this._afterDismissed = new Subject();\n    /** Subject for notifying the user that the bottom sheet has opened and appeared. */\n    this._afterOpened = new Subject();\n    this.containerInstance = containerInstance;\n    this.disableClose = containerInstance.bottomSheetConfig.disableClose;\n    // Emit when opening animation completes\n    containerInstance._animationStateChanged.pipe(filter(event => event.phaseName === 'done' && event.toState === 'visible'), take(1)).subscribe(() => {\n      this._afterOpened.next();\n      this._afterOpened.complete();\n    });\n    // Dispose overlay when closing animation is complete\n    containerInstance._animationStateChanged.pipe(filter(event => event.phaseName === 'done' && event.toState === 'hidden'), take(1)).subscribe(() => {\n      clearTimeout(this._closeFallbackTimeout);\n      _overlayRef.dispose();\n    });\n    _overlayRef.detachments().pipe(take(1)).subscribe(() => {\n      this._afterDismissed.next(this._result);\n      this._afterDismissed.complete();\n    });\n    merge(_overlayRef.backdropClick(), _overlayRef.keydownEvents().pipe(filter(event => event.keyCode === ESCAPE))).subscribe(event => {\n      if (!this.disableClose && (event.type !== 'keydown' || !hasModifierKey(event))) {\n        event.preventDefault();\n        this.dismiss();\n      }\n    });\n  }\n  /**\n   * Dismisses the bottom sheet.\n   * @param result Data to be passed back to the bottom sheet opener.\n   */\n  dismiss(result) {\n    if (!this._afterDismissed.closed) {\n      // Transition the backdrop in parallel to the bottom sheet.\n      this.containerInstance._animationStateChanged.pipe(filter(event => event.phaseName === 'start'), take(1)).subscribe(event => {\n        // The logic that disposes of the overlay depends on the exit animation completing, however\n        // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n        // timeout which will clean everything up if the animation hasn't fired within the specified\n        // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n        // vast majority of cases the timeout will have been cleared before it has fired.\n        this._closeFallbackTimeout = setTimeout(() => {\n          this._overlayRef.dispose();\n        }, event.totalTime + 100);\n        this._overlayRef.detachBackdrop();\n      });\n      this._result = result;\n      this.containerInstance.exit();\n    }\n  }\n  /** Gets an observable that is notified when the bottom sheet is finished closing. */\n  afterDismissed() {\n    return this._afterDismissed;\n  }\n  /** Gets an observable that is notified when the bottom sheet has opened and appeared. */\n  afterOpened() {\n    return this._afterOpened;\n  }\n  /**\n   * Gets an observable that emits when the overlay's backdrop has been clicked.\n   */\n  backdropClick() {\n    return this._overlayRef.backdropClick();\n  }\n  /**\n   * Gets an observable that emits when keydown events are targeted on the overlay.\n   */\n  keydownEvents() {\n    return this._overlayRef.keydownEvents();\n  }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to specify default bottom sheet options. */\nconst MAT_BOTTOM_SHEET_DEFAULT_OPTIONS = new InjectionToken('mat-bottom-sheet-default-options');\n/**\n * Service to trigger Material Design bottom sheets.\n */\nclass MatBottomSheet {\n  constructor(_overlay, _injector, _parentBottomSheet, _defaultOptions) {\n    this._overlay = _overlay;\n    this._injector = _injector;\n    this._parentBottomSheet = _parentBottomSheet;\n    this._defaultOptions = _defaultOptions;\n    this._bottomSheetRefAtThisLevel = null;\n  }\n  /** Reference to the currently opened bottom sheet. */\n  get _openedBottomSheetRef() {\n    const parent = this._parentBottomSheet;\n    return parent ? parent._openedBottomSheetRef : this._bottomSheetRefAtThisLevel;\n  }\n  set _openedBottomSheetRef(value) {\n    if (this._parentBottomSheet) {\n      this._parentBottomSheet._openedBottomSheetRef = value;\n    } else {\n      this._bottomSheetRefAtThisLevel = value;\n    }\n  }\n  open(componentOrTemplateRef, config) {\n    const _config = _applyConfigDefaults(this._defaultOptions || new MatBottomSheetConfig(), config);\n    const overlayRef = this._createOverlay(_config);\n    const container = this._attachContainer(overlayRef, _config);\n    const ref = new MatBottomSheetRef(container, overlayRef);\n    if (componentOrTemplateRef instanceof TemplateRef) {\n      container.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null, {\n        $implicit: _config.data,\n        bottomSheetRef: ref\n      }));\n    } else {\n      const portal = new ComponentPortal(componentOrTemplateRef, undefined, this._createInjector(_config, ref));\n      const contentRef = container.attachComponentPortal(portal);\n      ref.instance = contentRef.instance;\n    }\n    // When the bottom sheet is dismissed, clear the reference to it.\n    ref.afterDismissed().subscribe(() => {\n      // Clear the bottom sheet ref if it hasn't already been replaced by a newer one.\n      if (this._openedBottomSheetRef == ref) {\n        this._openedBottomSheetRef = null;\n      }\n    });\n    if (this._openedBottomSheetRef) {\n      // If a bottom sheet is already in view, dismiss it and enter the\n      // new bottom sheet after exit animation is complete.\n      this._openedBottomSheetRef.afterDismissed().subscribe(() => ref.containerInstance.enter());\n      this._openedBottomSheetRef.dismiss();\n    } else {\n      // If no bottom sheet is in view, enter the new bottom sheet.\n      ref.containerInstance.enter();\n    }\n    this._openedBottomSheetRef = ref;\n    return ref;\n  }\n  /**\n   * Dismisses the currently-visible bottom sheet.\n   * @param result Data to pass to the bottom sheet instance.\n   */\n  dismiss(result) {\n    if (this._openedBottomSheetRef) {\n      this._openedBottomSheetRef.dismiss(result);\n    }\n  }\n  ngOnDestroy() {\n    if (this._bottomSheetRefAtThisLevel) {\n      this._bottomSheetRefAtThisLevel.dismiss();\n    }\n  }\n  /**\n   * Attaches the bottom sheet container component to the overlay.\n   */\n  _attachContainer(overlayRef, config) {\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n    const injector = Injector.create({\n      parent: userInjector || this._injector,\n      providers: [{\n        provide: MatBottomSheetConfig,\n        useValue: config\n      }]\n    });\n    const containerPortal = new ComponentPortal(MatBottomSheetContainer, config.viewContainerRef, injector);\n    const containerRef = overlayRef.attach(containerPortal);\n    return containerRef.instance;\n  }\n  /**\n   * Creates a new overlay and places it in the correct location.\n   * @param config The user-specified bottom sheet config.\n   */\n  _createOverlay(config) {\n    const overlayConfig = new OverlayConfig({\n      direction: config.direction,\n      hasBackdrop: config.hasBackdrop,\n      disposeOnNavigation: config.closeOnNavigation,\n      maxWidth: '100%',\n      scrollStrategy: config.scrollStrategy || this._overlay.scrollStrategies.block(),\n      positionStrategy: this._overlay.position().global().centerHorizontally().bottom('0')\n    });\n    if (config.backdropClass) {\n      overlayConfig.backdropClass = config.backdropClass;\n    }\n    return this._overlay.create(overlayConfig);\n  }\n  /**\n   * Creates an injector to be used inside of a bottom sheet component.\n   * @param config Config that was used to create the bottom sheet.\n   * @param bottomSheetRef Reference to the bottom sheet.\n   */\n  _createInjector(config, bottomSheetRef) {\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n    const providers = [{\n      provide: MatBottomSheetRef,\n      useValue: bottomSheetRef\n    }, {\n      provide: MAT_BOTTOM_SHEET_DATA,\n      useValue: config.data\n    }];\n    if (config.direction && (!userInjector || !userInjector.get(Directionality, null))) {\n      providers.push({\n        provide: Directionality,\n        useValue: {\n          value: config.direction,\n          change: of()\n        }\n      });\n    }\n    return Injector.create({\n      parent: userInjector || this._injector,\n      providers\n    });\n  }\n}\nMatBottomSheet.ɵprov = i0.ɵɵdefineInjectable({\n  factory: function MatBottomSheet_Factory() {\n    return new MatBottomSheet(i0.ɵɵinject(i1.Overlay), i0.ɵɵinject(i0.INJECTOR), i0.ɵɵinject(MatBottomSheet, 12), i0.ɵɵinject(MAT_BOTTOM_SHEET_DEFAULT_OPTIONS, 8));\n  },\n  token: MatBottomSheet,\n  providedIn: MatBottomSheetModule\n});\nMatBottomSheet.decorators = [{\n  type: Injectable,\n  args: [{\n    providedIn: MatBottomSheetModule\n  }]\n}];\nMatBottomSheet.ctorParameters = () => [{\n  type: Overlay\n}, {\n  type: Injector\n}, {\n  type: MatBottomSheet,\n  decorators: [{\n    type: Optional\n  }, {\n    type: SkipSelf\n  }]\n}, {\n  type: MatBottomSheetConfig,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_BOTTOM_SHEET_DEFAULT_OPTIONS]\n  }]\n}];\n/**\n * Applies default options to the bottom sheet config.\n * @param defaults Object containing the default values to which to fall back.\n * @param config The configuration to which the defaults will be applied.\n * @returns The new configuration object with defaults applied.\n */\nfunction _applyConfigDefaults(defaults, config) {\n  return Object.assign(Object.assign({}, defaults), config);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_BOTTOM_SHEET_DATA, MAT_BOTTOM_SHEET_DEFAULT_OPTIONS, MatBottomSheet, MatBottomSheetConfig, MatBottomSheetContainer, MatBottomSheetModule, MatBottomSheetRef, matBottomSheetAnimations };","map":{"version":3,"names":["i1","OverlayModule","OverlayConfig","Overlay","BasePortalOutlet","CdkPortalOutlet","PortalModule","TemplatePortal","ComponentPortal","i0","InjectionToken","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","ElementRef","ChangeDetectorRef","Optional","Inject","ViewChild","NgModule","TemplateRef","Injector","Injectable","SkipSelf","AnimationDurations","AnimationCurves","MatCommonModule","Breakpoints","BreakpointObserver","trigger","state","style","transition","animate","DOCUMENT","FocusTrapFactory","_getFocusedElementPierceShadowDom","Directionality","Subject","merge","of","ESCAPE","hasModifierKey","filter","take","MAT_BOTTOM_SHEET_DATA","MatBottomSheetConfig","constructor","data","hasBackdrop","disableClose","ariaLabel","closeOnNavigation","autoFocus","restoreFocus","matBottomSheetAnimations","bottomSheetState","transform","COMPLEX","ACCELERATION_CURVE","EXITING","DECELERATION_CURVE","MatBottomSheetContainer","_elementRef","_changeDetectorRef","_focusTrapFactory","breakpointObserver","document","bottomSheetConfig","_animationState","_animationStateChanged","_elementFocusedBeforeOpened","attachDomPortal","portal","_validatePortalAttached","_setPanelClass","_savePreviouslyFocusedElement","_portalOutlet","_document","_breakpointSubscription","observe","Medium","Large","XLarge","subscribe","_toggleClass","isMatched","attachComponentPortal","attachTemplatePortal","enter","_destroyed","detectChanges","exit","markForCheck","ngOnDestroy","unsubscribe","_onAnimationDone","event","toState","_restoreFocus","_trapFocus","emit","_onAnimationStart","cssClass","add","classList","nativeElement","remove","hasAttached","ngDevMode","Error","element","panelClass","Array","isArray","forEach","_focusTrap","create","focusInitialElementWhenReady","activeElement","contains","focus","toFocus","body","destroy","Promise","resolve","then","decorators","type","args","selector","template","changeDetection","Default","encapsulation","None","animations","host","styles","ctorParameters","undefined","propDecorators","static","MatBottomSheetModule","imports","exports","declarations","entryComponents","MatBottomSheetRef","containerInstance","_overlayRef","_afterDismissed","_afterOpened","pipe","phaseName","next","complete","clearTimeout","_closeFallbackTimeout","dispose","detachments","_result","backdropClick","keydownEvents","keyCode","preventDefault","dismiss","result","closed","setTimeout","totalTime","detachBackdrop","afterDismissed","afterOpened","MAT_BOTTOM_SHEET_DEFAULT_OPTIONS","MatBottomSheet","_overlay","_injector","_parentBottomSheet","_defaultOptions","_bottomSheetRefAtThisLevel","_openedBottomSheetRef","parent","value","open","componentOrTemplateRef","config","_config","_applyConfigDefaults","overlayRef","_createOverlay","container","_attachContainer","ref","$implicit","bottomSheetRef","_createInjector","contentRef","instance","userInjector","viewContainerRef","injector","providers","provide","useValue","containerPortal","containerRef","attach","overlayConfig","direction","disposeOnNavigation","maxWidth","scrollStrategy","scrollStrategies","block","positionStrategy","position","global","centerHorizontally","bottom","backdropClass","get","push","change","ɵprov","ɵɵdefineInjectable","factory","MatBottomSheet_Factory","ɵɵinject","INJECTOR","token","providedIn","defaults","Object","assign"],"sources":["D:/alodelivery test/node_modules/@angular/material/fesm2015/bottom-sheet.js"],"sourcesContent":["import * as i1 from '@angular/cdk/overlay';\nimport { OverlayModule, OverlayConfig, Overlay } from '@angular/cdk/overlay';\nimport { BasePortalOutlet, CdkPortalOutlet, PortalModule, TemplatePortal, ComponentPortal } from '@angular/cdk/portal';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, ChangeDetectorRef, Optional, Inject, ViewChild, NgModule, TemplateRef, Injector, Injectable, SkipSelf } from '@angular/core';\nimport { AnimationDurations, AnimationCurves, MatCommonModule } from '@angular/material/core';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { DOCUMENT } from '@angular/common';\nimport { FocusTrapFactory } from '@angular/cdk/a11y';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Subject, merge, of } from 'rxjs';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { filter, take } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to access the data that was passed in to a bottom sheet. */\nconst MAT_BOTTOM_SHEET_DATA = new InjectionToken('MatBottomSheetData');\n/**\n * Configuration used when opening a bottom sheet.\n */\nclass MatBottomSheetConfig {\n    constructor() {\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** Whether the bottom sheet has a backdrop. */\n        this.hasBackdrop = true;\n        /** Whether the user can use escape or clicking outside to close the bottom sheet. */\n        this.disableClose = false;\n        /** Aria label to assign to the bottom sheet element. */\n        this.ariaLabel = null;\n        /**\n         * Whether the bottom sheet should close when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.closeOnNavigation = true;\n        // Note that this is disabled by default, because while the a11y recommendations are to focus\n        // the first focusable element, doing so prevents screen readers from reading out the\n        // rest of the bottom sheet content.\n        /** Whether the bottom sheet should focus the first focusable element on open. */\n        this.autoFocus = false;\n        /**\n         * Whether the bottom sheet should restore focus to the\n         * previously-focused element, after it's closed.\n         */\n        this.restoreFocus = true;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Animations used by the Material bottom sheet. */\nconst matBottomSheetAnimations = {\n    /** Animation that shows and hides a bottom sheet. */\n    bottomSheetState: trigger('state', [\n        state('void, hidden', style({ transform: 'translateY(100%)' })),\n        state('visible', style({ transform: 'translateY(0%)' })),\n        transition('visible => void, visible => hidden', animate(`${AnimationDurations.COMPLEX} ${AnimationCurves.ACCELERATION_CURVE}`)),\n        transition('void => visible', animate(`${AnimationDurations.EXITING} ${AnimationCurves.DECELERATION_CURVE}`)),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(crisbeto): consolidate some logic between this, MatDialog and MatSnackBar\n/**\n * Internal component that wraps user-provided bottom sheet content.\n * @docs-private\n */\nclass MatBottomSheetContainer extends BasePortalOutlet {\n    constructor(_elementRef, _changeDetectorRef, _focusTrapFactory, breakpointObserver, document, \n    /** The bottom sheet configuration. */\n    bottomSheetConfig) {\n        super();\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this.bottomSheetConfig = bottomSheetConfig;\n        /** The state of the bottom sheet animations. */\n        this._animationState = 'void';\n        /** Emits whenever the state of the animation changes. */\n        this._animationStateChanged = new EventEmitter();\n        /** Element that was focused before the bottom sheet was opened. */\n        this._elementFocusedBeforeOpened = null;\n        /**\n         * Attaches a DOM portal to the bottom sheet container.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            this._validatePortalAttached();\n            this._setPanelClass();\n            this._savePreviouslyFocusedElement();\n            return this._portalOutlet.attachDomPortal(portal);\n        };\n        this._document = document;\n        this._breakpointSubscription = breakpointObserver\n            .observe([Breakpoints.Medium, Breakpoints.Large, Breakpoints.XLarge])\n            .subscribe(() => {\n            this._toggleClass('mat-bottom-sheet-container-medium', breakpointObserver.isMatched(Breakpoints.Medium));\n            this._toggleClass('mat-bottom-sheet-container-large', breakpointObserver.isMatched(Breakpoints.Large));\n            this._toggleClass('mat-bottom-sheet-container-xlarge', breakpointObserver.isMatched(Breakpoints.XLarge));\n        });\n    }\n    /** Attach a component portal as content to this bottom sheet container. */\n    attachComponentPortal(portal) {\n        this._validatePortalAttached();\n        this._setPanelClass();\n        this._savePreviouslyFocusedElement();\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /** Attach a template portal as content to this bottom sheet container. */\n    attachTemplatePortal(portal) {\n        this._validatePortalAttached();\n        this._setPanelClass();\n        this._savePreviouslyFocusedElement();\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /** Begin animation of bottom sheet entrance into view. */\n    enter() {\n        if (!this._destroyed) {\n            this._animationState = 'visible';\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /** Begin animation of the bottom sheet exiting from view. */\n    exit() {\n        if (!this._destroyed) {\n            this._animationState = 'hidden';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._breakpointSubscription.unsubscribe();\n        this._destroyed = true;\n    }\n    _onAnimationDone(event) {\n        if (event.toState === 'hidden') {\n            this._restoreFocus();\n        }\n        else if (event.toState === 'visible') {\n            this._trapFocus();\n        }\n        this._animationStateChanged.emit(event);\n    }\n    _onAnimationStart(event) {\n        this._animationStateChanged.emit(event);\n    }\n    _toggleClass(cssClass, add) {\n        const classList = this._elementRef.nativeElement.classList;\n        add ? classList.add(cssClass) : classList.remove(cssClass);\n    }\n    _validatePortalAttached() {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Attempting to attach bottom sheet content after content is already attached');\n        }\n    }\n    _setPanelClass() {\n        const element = this._elementRef.nativeElement;\n        const panelClass = this.bottomSheetConfig.panelClass;\n        if (Array.isArray(panelClass)) {\n            // Note that we can't use a spread here, because IE doesn't support multiple arguments.\n            panelClass.forEach(cssClass => element.classList.add(cssClass));\n        }\n        else if (panelClass) {\n            element.classList.add(panelClass);\n        }\n    }\n    /** Moves the focus inside the focus trap. */\n    _trapFocus() {\n        const element = this._elementRef.nativeElement;\n        if (!this._focusTrap) {\n            this._focusTrap = this._focusTrapFactory.create(element);\n        }\n        if (this.bottomSheetConfig.autoFocus) {\n            this._focusTrap.focusInitialElementWhenReady();\n        }\n        else {\n            const activeElement = _getFocusedElementPierceShadowDom();\n            // Otherwise ensure that focus is on the container. It's possible that a different\n            // component tried to move focus while the open animation was running. See:\n            // https://github.com/angular/components/issues/16215. Note that we only want to do this\n            // if the focus isn't inside the bottom sheet already, because it's possible that the\n            // consumer turned off `autoFocus` in order to move focus themselves.\n            if (activeElement !== element && !element.contains(activeElement)) {\n                element.focus();\n            }\n        }\n    }\n    /** Restores focus to the element that was focused before the bottom sheet was opened. */\n    _restoreFocus() {\n        const toFocus = this._elementFocusedBeforeOpened;\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this.bottomSheetConfig.restoreFocus && toFocus && typeof toFocus.focus === 'function') {\n            const activeElement = _getFocusedElementPierceShadowDom();\n            const element = this._elementRef.nativeElement;\n            // Make sure that focus is still inside the bottom sheet or is on the body (usually because a\n            // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n            // the consumer moved it themselves before the animation was done, in which case we shouldn't\n            // do anything.\n            if (!activeElement || activeElement === this._document.body || activeElement === element ||\n                element.contains(activeElement)) {\n                toFocus.focus();\n            }\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /** Saves a reference to the element that was focused before the bottom sheet was opened. */\n    _savePreviouslyFocusedElement() {\n        this._elementFocusedBeforeOpened = _getFocusedElementPierceShadowDom();\n        // The `focus` method isn't available during server-side rendering.\n        if (this._elementRef.nativeElement.focus) {\n            Promise.resolve().then(() => this._elementRef.nativeElement.focus());\n        }\n    }\n}\nMatBottomSheetContainer.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-bottom-sheet-container',\n                template: \"<ng-template cdkPortalOutlet></ng-template>\\r\\n\",\n                // In Ivy embedded views will be change detected from their declaration place, rather than where\n                // they were stamped out. This means that we can't have the bottom sheet container be OnPush,\n                // because it might cause the sheets that were opened from a template not to be out of date.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                animations: [matBottomSheetAnimations.bottomSheetState],\n                host: {\n                    'class': 'mat-bottom-sheet-container',\n                    'tabindex': '-1',\n                    'role': 'dialog',\n                    'aria-modal': 'true',\n                    '[attr.aria-label]': 'bottomSheetConfig?.ariaLabel',\n                    '[@state]': '_animationState',\n                    '(@state.start)': '_onAnimationStart($event)',\n                    '(@state.done)': '_onAnimationDone($event)'\n                },\n                styles: [\".mat-bottom-sheet-container{padding:8px 16px;min-width:100vw;box-sizing:border-box;display:block;outline:0;max-height:80vh;overflow:auto}.cdk-high-contrast-active .mat-bottom-sheet-container{outline:1px solid}.mat-bottom-sheet-container-xlarge,.mat-bottom-sheet-container-large,.mat-bottom-sheet-container-medium{border-top-left-radius:4px;border-top-right-radius:4px}.mat-bottom-sheet-container-medium{min-width:384px;max-width:calc(100vw - 128px)}.mat-bottom-sheet-container-large{min-width:512px;max-width:calc(100vw - 256px)}.mat-bottom-sheet-container-xlarge{min-width:576px;max-width:calc(100vw - 384px)}\\n\"]\n            },] }\n];\nMatBottomSheetContainer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusTrapFactory },\n    { type: BreakpointObserver },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatBottomSheetConfig }\n];\nMatBottomSheetContainer.propDecorators = {\n    _portalOutlet: [{ type: ViewChild, args: [CdkPortalOutlet, { static: true },] }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatBottomSheetModule {\n}\nMatBottomSheetModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    OverlayModule,\n                    MatCommonModule,\n                    PortalModule,\n                ],\n                exports: [MatBottomSheetContainer, MatCommonModule],\n                declarations: [MatBottomSheetContainer],\n                entryComponents: [MatBottomSheetContainer],\n            },] }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to a bottom sheet dispatched from the bottom sheet service.\n */\nclass MatBottomSheetRef {\n    constructor(containerInstance, _overlayRef) {\n        this._overlayRef = _overlayRef;\n        /** Subject for notifying the user that the bottom sheet has been dismissed. */\n        this._afterDismissed = new Subject();\n        /** Subject for notifying the user that the bottom sheet has opened and appeared. */\n        this._afterOpened = new Subject();\n        this.containerInstance = containerInstance;\n        this.disableClose = containerInstance.bottomSheetConfig.disableClose;\n        // Emit when opening animation completes\n        containerInstance._animationStateChanged.pipe(filter(event => event.phaseName === 'done' && event.toState === 'visible'), take(1))\n            .subscribe(() => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        });\n        // Dispose overlay when closing animation is complete\n        containerInstance._animationStateChanged\n            .pipe(filter(event => event.phaseName === 'done' && event.toState === 'hidden'), take(1))\n            .subscribe(() => {\n            clearTimeout(this._closeFallbackTimeout);\n            _overlayRef.dispose();\n        });\n        _overlayRef.detachments().pipe(take(1)).subscribe(() => {\n            this._afterDismissed.next(this._result);\n            this._afterDismissed.complete();\n        });\n        merge(_overlayRef.backdropClick(), _overlayRef.keydownEvents().pipe(filter(event => event.keyCode === ESCAPE))).subscribe(event => {\n            if (!this.disableClose &&\n                (event.type !== 'keydown' || !hasModifierKey(event))) {\n                event.preventDefault();\n                this.dismiss();\n            }\n        });\n    }\n    /**\n     * Dismisses the bottom sheet.\n     * @param result Data to be passed back to the bottom sheet opener.\n     */\n    dismiss(result) {\n        if (!this._afterDismissed.closed) {\n            // Transition the backdrop in parallel to the bottom sheet.\n            this.containerInstance._animationStateChanged.pipe(filter(event => event.phaseName === 'start'), take(1)).subscribe(event => {\n                // The logic that disposes of the overlay depends on the exit animation completing, however\n                // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n                // timeout which will clean everything up if the animation hasn't fired within the specified\n                // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n                // vast majority of cases the timeout will have been cleared before it has fired.\n                this._closeFallbackTimeout = setTimeout(() => {\n                    this._overlayRef.dispose();\n                }, event.totalTime + 100);\n                this._overlayRef.detachBackdrop();\n            });\n            this._result = result;\n            this.containerInstance.exit();\n        }\n    }\n    /** Gets an observable that is notified when the bottom sheet is finished closing. */\n    afterDismissed() {\n        return this._afterDismissed;\n    }\n    /** Gets an observable that is notified when the bottom sheet has opened and appeared. */\n    afterOpened() {\n        return this._afterOpened;\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     */\n    backdropClick() {\n        return this._overlayRef.backdropClick();\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     */\n    keydownEvents() {\n        return this._overlayRef.keydownEvents();\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to specify default bottom sheet options. */\nconst MAT_BOTTOM_SHEET_DEFAULT_OPTIONS = new InjectionToken('mat-bottom-sheet-default-options');\n/**\n * Service to trigger Material Design bottom sheets.\n */\nclass MatBottomSheet {\n    constructor(_overlay, _injector, _parentBottomSheet, _defaultOptions) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._parentBottomSheet = _parentBottomSheet;\n        this._defaultOptions = _defaultOptions;\n        this._bottomSheetRefAtThisLevel = null;\n    }\n    /** Reference to the currently opened bottom sheet. */\n    get _openedBottomSheetRef() {\n        const parent = this._parentBottomSheet;\n        return parent ? parent._openedBottomSheetRef : this._bottomSheetRefAtThisLevel;\n    }\n    set _openedBottomSheetRef(value) {\n        if (this._parentBottomSheet) {\n            this._parentBottomSheet._openedBottomSheetRef = value;\n        }\n        else {\n            this._bottomSheetRefAtThisLevel = value;\n        }\n    }\n    open(componentOrTemplateRef, config) {\n        const _config = _applyConfigDefaults(this._defaultOptions || new MatBottomSheetConfig(), config);\n        const overlayRef = this._createOverlay(_config);\n        const container = this._attachContainer(overlayRef, _config);\n        const ref = new MatBottomSheetRef(container, overlayRef);\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            container.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null, {\n                $implicit: _config.data,\n                bottomSheetRef: ref\n            }));\n        }\n        else {\n            const portal = new ComponentPortal(componentOrTemplateRef, undefined, this._createInjector(_config, ref));\n            const contentRef = container.attachComponentPortal(portal);\n            ref.instance = contentRef.instance;\n        }\n        // When the bottom sheet is dismissed, clear the reference to it.\n        ref.afterDismissed().subscribe(() => {\n            // Clear the bottom sheet ref if it hasn't already been replaced by a newer one.\n            if (this._openedBottomSheetRef == ref) {\n                this._openedBottomSheetRef = null;\n            }\n        });\n        if (this._openedBottomSheetRef) {\n            // If a bottom sheet is already in view, dismiss it and enter the\n            // new bottom sheet after exit animation is complete.\n            this._openedBottomSheetRef.afterDismissed().subscribe(() => ref.containerInstance.enter());\n            this._openedBottomSheetRef.dismiss();\n        }\n        else {\n            // If no bottom sheet is in view, enter the new bottom sheet.\n            ref.containerInstance.enter();\n        }\n        this._openedBottomSheetRef = ref;\n        return ref;\n    }\n    /**\n     * Dismisses the currently-visible bottom sheet.\n     * @param result Data to pass to the bottom sheet instance.\n     */\n    dismiss(result) {\n        if (this._openedBottomSheetRef) {\n            this._openedBottomSheetRef.dismiss(result);\n        }\n    }\n    ngOnDestroy() {\n        if (this._bottomSheetRefAtThisLevel) {\n            this._bottomSheetRefAtThisLevel.dismiss();\n        }\n    }\n    /**\n     * Attaches the bottom sheet container component to the overlay.\n     */\n    _attachContainer(overlayRef, config) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatBottomSheetConfig, useValue: config }]\n        });\n        const containerPortal = new ComponentPortal(MatBottomSheetContainer, config.viewContainerRef, injector);\n        const containerRef = overlayRef.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param config The user-specified bottom sheet config.\n     */\n    _createOverlay(config) {\n        const overlayConfig = new OverlayConfig({\n            direction: config.direction,\n            hasBackdrop: config.hasBackdrop,\n            disposeOnNavigation: config.closeOnNavigation,\n            maxWidth: '100%',\n            scrollStrategy: config.scrollStrategy || this._overlay.scrollStrategies.block(),\n            positionStrategy: this._overlay.position().global().centerHorizontally().bottom('0')\n        });\n        if (config.backdropClass) {\n            overlayConfig.backdropClass = config.backdropClass;\n        }\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an injector to be used inside of a bottom sheet component.\n     * @param config Config that was used to create the bottom sheet.\n     * @param bottomSheetRef Reference to the bottom sheet.\n     */\n    _createInjector(config, bottomSheetRef) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const providers = [\n            { provide: MatBottomSheetRef, useValue: bottomSheetRef },\n            { provide: MAT_BOTTOM_SHEET_DATA, useValue: config.data }\n        ];\n        if (config.direction &&\n            (!userInjector || !userInjector.get(Directionality, null))) {\n            providers.push({\n                provide: Directionality,\n                useValue: { value: config.direction, change: of() }\n            });\n        }\n        return Injector.create({ parent: userInjector || this._injector, providers });\n    }\n}\nMatBottomSheet.ɵprov = i0.ɵɵdefineInjectable({ factory: function MatBottomSheet_Factory() { return new MatBottomSheet(i0.ɵɵinject(i1.Overlay), i0.ɵɵinject(i0.INJECTOR), i0.ɵɵinject(MatBottomSheet, 12), i0.ɵɵinject(MAT_BOTTOM_SHEET_DEFAULT_OPTIONS, 8)); }, token: MatBottomSheet, providedIn: MatBottomSheetModule });\nMatBottomSheet.decorators = [\n    { type: Injectable, args: [{ providedIn: MatBottomSheetModule },] }\n];\nMatBottomSheet.ctorParameters = () => [\n    { type: Overlay },\n    { type: Injector },\n    { type: MatBottomSheet, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: MatBottomSheetConfig, decorators: [{ type: Optional }, { type: Inject, args: [MAT_BOTTOM_SHEET_DEFAULT_OPTIONS,] }] }\n];\n/**\n * Applies default options to the bottom sheet config.\n * @param defaults Object containing the default values to which to fall back.\n * @param config The configuration to which the defaults will be applied.\n * @returns The new configuration object with defaults applied.\n */\nfunction _applyConfigDefaults(defaults, config) {\n    return Object.assign(Object.assign({}, defaults), config);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_BOTTOM_SHEET_DATA, MAT_BOTTOM_SHEET_DEFAULT_OPTIONS, MatBottomSheet, MatBottomSheetConfig, MatBottomSheetContainer, MatBottomSheetModule, MatBottomSheetRef, matBottomSheetAnimations };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}